[
  {
    "FragmentId": "1",
    "FragmentName": null,
    "FragmentDisplayName": "Building a Pass-Through Query in Access 97",
    "SortOrdinal": null,
    "ItemChar": "<h1>Building a Pass-Through Query in Access 97</h1>\r\n<p align=\"left\">\r\n    This is a short, step-by-step description of creating a Pass-Through Query in Access 97. A Pass-Through Query is an Access 97 stored object that is designed with the SQL of the Database Management System that Access links to via the <strong>File &gt; Get External Tables &gt; Link Tables…</strong> command. This SQL “passes through” the Access platform and communicates directly with the DBMS. For example, if you are linking to Oracle you can use PL/SQL in Access to execute <em>one and only one</em> <code>SELECT</code> statement—the same statement used in a product like SQL*Plus.\r\n</p>\r\n<p align=\"left\">\r\n    For detailed information about Pass-Through queries please choose <strong>Help &gt; Contents and Index &gt; Index</strong> and enter “pass-through” in box 1. This is what your dialog may look like:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/Help.gif\" width=\"434\" height=\"432\" />\r\n</p>\r\n<p align=\"left\">\r\n    Click on the <strong>Display</strong> button to read the help file(s).\r\n</p>\r\n\r\n<h2>Getting Ready to Design the Pass-Through Query</h2>\r\n<p align=\"left\">\r\n    In the Database Window, click on the Queries tab. Your window may look like this:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/Queries.gif\" width=\"522\" height=\"351\" />\r\n</p>\r\n<p align=\"left\">\r\n    Click on the <strong>New</strong> button or type <strong>Alt-N.</strong>\r\n</p>\r\n<p align=\"left\">\r\n    When the New Query dialog appears, select Design View and click <strong>OK.</strong> This is the New Query window:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/NewQuery.gif\" width=\"351\" height=\"222\" />\r\n</p>\r\n<p align=\"left\">\r\n    The Show Table window will pop up next. Click the <strong>Close</strong> button to begin our “pass through.” After you close the Show Table window your workspace should look similar to this:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/SelectQry.gif\" width=\"576\" height=\"391\" />\r\n</p>\r\n<p align=\"left\">\r\n    Choose <strong>Query &gt; SQL Specific &gt; Pass-Through</strong> from the Main Menu. Please note that the menu bar in these pictures is on your right-hand side. The default Office installation places this bar on the top of your window.\r\n</p>\r\n<p align=\"left\">\r\n    When your window looks something like the following you are ready to enter “pass-through” SQL:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/PassThroughQry.gif\" width=\"594\" height=\"332\" />\r\n</p>\r\n\r\n<h2>Creating and Managing a Pass-Through Query</h2>\r\n<p align=\"left\">\r\n    Now we are ready to create a Pass-Through query. In the case of Oracle 7.x we have PL/SQL:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/PLSQL.gif\" width=\"524\" height=\"328\" />\r\n</p>\r\n<p align=\"left\">\r\n    Choose <strong>File &gt; Save</strong> (or type <strong>Ctrl+s</strong>) to save this object in the Access database.\r\n</p>\r\n<p align=\"left\">\r\n    Choose <strong>View &gt; Datasheet View</strong> to run this <code>SELECT</code> query. Before you see any data this ODBC dialog should appear:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/DSN.gif\" width=\"449\" height=\"392\" />\r\n</p>\r\n<p align=\"left\">\r\n    In this example the entry <strong>smtprod</strong> will be used to connect to the Oracle database. Clicking on <strong>OK</strong> will bring up a second dialog prompting for user name and password. When connection is successful, the display should look like this:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/smtprod.gif\" width=\"524\" height=\"328\" />\r\n</p>\r\n<p align=\"left\">\r\n    Now that we have a successful connection, let’s try to get some real data. <strong>Select View &gt; SQL View</strong> to change the SQL to this:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/SQLView.gif\" width=\"524\" height=\"328\" />\r\n</p>\r\n<p align=\"left\">\r\n    Save the query and return to Datasheet View:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/Datasheet.gif\" width=\"524\" height=\"328\" />\r\n</p>\r\n\r\n<h2>“Advanced” Topics</h2>\r\n<p align=\"left\">\r\n    <strong>SQL syntax problems.</strong> In truth, Access 97 may have problems with the SQL Syntax of the native DBMS. In the case of Oracle, one must distinguish between PL/SQL and SQL*Plus commands. In the latter case, these commands do not work in Access Pass-Through queries. Namely, the DESCRIBE command does not seem to work passing through Access.\r\n</p>\r\n<p align=\"left\">\r\n    <strong>Access appears “frozen” while running the query.</strong> Access may take a large time to complete complex queries. While running, Access may report “Not Responding” in the Task Manager <em>and</em> 0% CPU utilization. The recommendation here is to wait and see what happens or kill the Access process and build a “simpler” query.\r\n</p>\r\n<p align=\"left\">\r\n    <strong>Saving the ODBC connection string with the query.</strong> It is possible to save the ODBC connection string in Access. Doing this will prevent the ODBC dialog from popping up every time the Datasheet View command is executed. By accessing the query properties, this string can be built. However, it is not recommended to save remote DBMS passwords in Access 97. Moreover, using this technique with Oracle databases does not yield successful results.\r\n</p>\r\n",
    "ItemText": "<h1>Building a Pass-Through Query in Access 97</h1>\r\n<p align=\"left\">\r\n    This is a short, step-by-step description of creating a Pass-Through Query in Access 97. A Pass-Through Query is an Access 97 stored object that is designed with the SQL of the Database Management System that Access links to via the <strong>File &gt; Get External Tables &gt; Link Tables…</strong> command. This SQL “passes through” the Access platform and communicates directly with the DBMS. For example, if you are linking to Oracle you can use PL/SQL in Access to execute <em>one and only one</em> <code>SELECT</code> statement—the same statement used in a product like SQL*Plus.\r\n</p>\r\n<p align=\"left\">\r\n    For detailed information about Pass-Through queries please choose <strong>Help &gt; Contents and Index &gt; Index</strong> and enter “pass-through” in box 1. This is what your dialog may look like:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/Help.gif\" width=\"434\" height=\"432\" />\r\n</p>\r\n<p align=\"left\">\r\n    Click on the <strong>Display</strong> button to read the help file(s).\r\n</p>\r\n\r\n<h2>Getting Ready to Design the Pass-Through Query</h2>\r\n<p align=\"left\">\r\n    In the Database Window, click on the Queries tab. Your window may look like this:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/Queries.gif\" width=\"522\" height=\"351\" />\r\n</p>\r\n<p align=\"left\">\r\n    Click on the <strong>New</strong> button or type <strong>Alt-N.</strong>\r\n</p>\r\n<p align=\"left\">\r\n    When the New Query dialog appears, select Design View and click <strong>OK.</strong> This is the New Query window:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/NewQuery.gif\" width=\"351\" height=\"222\" />\r\n</p>\r\n<p align=\"left\">\r\n    The Show Table window will pop up next. Click the <strong>Close</strong> button to begin our “pass through.” After you close the Show Table window your workspace should look similar to this:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/SelectQry.gif\" width=\"576\" height=\"391\" />\r\n</p>\r\n<p align=\"left\">\r\n    Choose <strong>Query &gt; SQL Specific &gt; Pass-Through</strong> from the Main Menu. Please note that the menu bar in these pictures is on your right-hand side. The default Office installation places this bar on the top of your window.\r\n</p>\r\n<p align=\"left\">\r\n    When your window looks something like the following you are ready to enter “pass-through” SQL:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/PassThroughQry.gif\" width=\"594\" height=\"332\" />\r\n</p>\r\n\r\n<h2>Creating and Managing a Pass-Through Query</h2>\r\n<p align=\"left\">\r\n    Now we are ready to create a Pass-Through query. In the case of Oracle 7.x we have PL/SQL:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/PLSQL.gif\" width=\"524\" height=\"328\" />\r\n</p>\r\n<p align=\"left\">\r\n    Choose <strong>File &gt; Save</strong> (or type <strong>Ctrl+s</strong>) to save this object in the Access database.\r\n</p>\r\n<p align=\"left\">\r\n    Choose <strong>View &gt; Datasheet View</strong> to run this <code>SELECT</code> query. Before you see any data this ODBC dialog should appear:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/DSN.gif\" width=\"449\" height=\"392\" />\r\n</p>\r\n<p align=\"left\">\r\n    In this example the entry <strong>smtprod</strong> will be used to connect to the Oracle database. Clicking on <strong>OK</strong> will bring up a second dialog prompting for user name and password. When connection is successful, the display should look like this:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/smtprod.gif\" width=\"524\" height=\"328\" />\r\n</p>\r\n<p align=\"left\">\r\n    Now that we have a successful connection, let’s try to get some real data. <strong>Select View &gt; SQL View</strong> to change the SQL to this:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/SQLView.gif\" width=\"524\" height=\"328\" />\r\n</p>\r\n<p align=\"left\">\r\n    Save the query and return to Datasheet View:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"\" src=\"http://songhaysystem.com/bitmaps/ACC97PassThroughQueries/Datasheet.gif\" width=\"524\" height=\"328\" />\r\n</p>\r\n\r\n<h2>“Advanced” Topics</h2>\r\n<p align=\"left\">\r\n    <strong>SQL syntax problems.</strong> In truth, Access 97 may have problems with the SQL Syntax of the native DBMS. In the case of Oracle, one must distinguish between PL/SQL and SQL*Plus commands. In the latter case, these commands do not work in Access Pass-Through queries. Namely, the DESCRIBE command does not seem to work passing through Access.\r\n</p>\r\n<p align=\"left\">\r\n    <strong>Access appears “frozen” while running the query.</strong> Access may take a large time to complete complex queries. While running, Access may report “Not Responding” in the Task Manager <em>and</em> 0% CPU utilization. The recommendation here is to wait and see what happens or kill the Access process and build a “simpler” query.\r\n</p>\r\n<p align=\"left\">\r\n    <strong>Saving the ODBC connection string with the query.</strong> It is possible to save the ODBC connection string in Access. Doing this will prevent the ODBC dialog from popping up every time the Datasheet View command is executed. By accessing the query properties, this string can be built. However, it is not recommended to save remote DBMS passwords in Access 97. Moreover, using this technique with Oracle databases does not yield successful results.\r\n</p>\r\n",
    "CreateDate": "1999-01-10T20:47:49.0000000",
    "EndDate": null,
    "ModificationDate": "2003-03-01T12:54:18.9200000",
    "DocumentId": "1",
    "PrevFragmentId": "-1",
    "NextFragmentId": "-1",
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "2",
    "FragmentName": null,
    "FragmentDisplayName": "Clean HTML for Word 2000/2002",
    "SortOrdinal": null,
    "ItemChar": "<h1>Clean HTML for Word 2000/2002</h1>\r\n<p align=\"left\">\r\n    Clean HTML is the Microsoft Word Template that creates “Clean” HTML equivalents of the contents of Word 2000/2002 files. This template translates <a href=\"http://www.w3.org/\" title=\"This text appears in IE 4.x Proprietary title attributes\" target=\"_top\">W3C-compliant HTML</a> strings out of Microsoft Word 2000/2002 documents.<a href=\"#note1\"><sup>1</sup></a> These HTML strings, created from highlighted portions or entire Word documents, can then be copied and pasted into other data applications using the Windows Clipboard—or saved to a text file. Simultaneously, Clean HTML translates a large number of typographic symbols (like curly quotes “” or the em dash —) and “extended” Latin characters into the appropriate HTML entity. Clean HTML takes advantage of the rich user interface of Microsoft Word 2000/2002 without sacrificing vendor-independent standards. Clean HTML also writes HTML 4.0 text files that can automatically link to external CSS and script files.\r\n</p>\r\n\r\n<h2>Clean HTML Known Issues</h2>\r\n<p align=\"left\">\r\n    The following table summarizes the changes made to the Clean HTML template file and the “known issues.” Microsoft Word VBA Projects do not have versioning features by default. It follows that the summarizing table below marks updates by date:\r\n</p>\r\n<table align=\"center\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_1_clnHTMLdoc\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_1_clnHTMLdoc\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_1_1_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Date</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_1_1_2_clnHTMLdoc\" valign=\"top\">\r\n<strong>Description</strong>\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_2_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_2_1_clnHTMLdoc\" valign=\"top\">\r\n9/10/04\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_2_2_clnHTMLdoc\" valign=\"top\">\r\nUpdated the code to reflect locale-specific, built-in Style names for international versions of Word.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_3_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_3_1_clnHTMLdoc\" valign=\"top\">\r\n9/7/04\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_3_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nClean HTML <em>will</em> work correctly in Office Word 2003 but the Clean HTML template has to be loaded with every editing session after a security warning prompt.\r\n</p>\r\n<p>\r\n<em>Promise:</em> A future version of this product will be based on .NET, its security technology, to avoid this issue (among others). Spending upwards of $400US on Authenticode stuff is out of the question!\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_4_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_4_1_clnHTMLdoc\" valign=\"top\">\r\n2/24/2003\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_4_2_clnHTMLdoc\" valign=\"top\">\r\nThe way Clean HTML handles Word tables has been completely revised and is documented below.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_5_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_5_1_clnHTMLdoc\" valign=\"top\">\r\n2/24/2003\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_5_2_clnHTMLdoc\" valign=\"top\">\r\nImproved support for Clean HTML Character Styles in combination with Paragraph Styles added. Support for the Word 2002 <strong>Target Frame…</strong> entry added to Hyperlink translation.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_6_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_6_1_clnHTMLdoc\" valign=\"top\">\r\n8/29/2002\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_6_2_clnHTMLdoc\" valign=\"top\">\r\nHaving multiple document windows open in Word 2002 may cause CleanHTML to disappear behind an open window. Flipping through windows using <code>Alt + Tab</code> helps.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_7_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_7_1_clnHTMLdoc\" valign=\"top\">\r\n8/29/2002\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_7_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nCurrently CleanHTML ignores Bookmarks. This implies that headers (e.g. a paragraph of style <strong>Header 2</strong>) will not be translated if it is being used as a Bookmark.\r\n</p>\r\n<p>\r\n<em>Note:</em> Pasting HTML into a Microsoft Word file may cause Bookmarks to appear—even if <strong>Match Destination Formatting</strong> is used in Word 2002 and above.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_8_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_8_1_clnHTMLdoc\" valign=\"top\">\r\n7/11/2002\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_8_2_clnHTMLdoc\" valign=\"top\">\r\nFixed problems with <strong>List Bullet</strong> and <strong>List Number</strong> styles.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_9_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_9_1_clnHTMLdoc\" valign=\"top\">\r\n7/11/2002\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_9_2_clnHTMLdoc\" valign=\"top\">\r\nFixed various problems associated with the first character of the document being formatted.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_10_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_10_1_clnHTMLdoc\" valign=\"top\">\r\n7/11/2002\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_10_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\n<span style=\"text-decoration:line-through\">Had fatal problems with international versions of Microsoft Word that are not based on the English language. Clean HTML is not known to run correctly with international versions of Microsoft Word.</span>\r\n</p>\r\n<p>\r\n<strong>NOTE:</strong> We believe this problem is corrected. See 9/10/04 above.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_11_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_11_1_clnHTMLdoc\" valign=\"top\">\r\n7/11/2002\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_11_2_clnHTMLdoc\" valign=\"top\">\r\n“Hidden” characters are now shown during Clean HTML translation to prevent problems associated with Word 2002.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_12_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_12_1_clnHTMLdoc\" valign=\"top\">\r\n1/20/2002\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_12_2_clnHTMLdoc\" valign=\"top\">\r\nThe ability to save Clean HTML text files to disk was added.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_13_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_13_1_clnHTMLdoc\" valign=\"top\">\r\n1/20/2002\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_13_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nClean HTML is unable to translate paragraphs highlighted within a table.\r\n</p>\r\n<p>\r\n<em>Workaround:</em> copy and paste the text into a new document without the table and run Clean HTML.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_14_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_14_1_clnHTMLdoc\" valign=\"top\">\r\n1/20/2002\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_14_2_clnHTMLdoc\" valign=\"top\">\r\nClean HTML moves through Footnote characters very, very slowly.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h2>Clean HTML Installation</h2>\r\n<p align=\"left\">\r\n    Because of the awesome negative impact of “macro viruses,” Clean HTML will not deploy itself automatically after running some kind of setup program. Installation of Clean HTML must be done manually by copying <code>Clean HTML.dot</code> to a Word 2000/2002 Startup folder and loading it with the <strong>Templates and Add-Ins…</strong> command under the Word 2000/2002 <strong>Tools</strong> menu.<a href=\"#note2\"><sup>2</sup></a> The <strong>Templates and Add-Ins…</strong> dialog shown below should summarize the installation of Clean HTML:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"Install Clean HTML.dot in your StartUp folder.\" src=\"http://songhaysystem.com/bitmaps/WD2KHTMLConversion/CleanHTMLInstall.gif\" width=\"333\" height=\"327\" />\r\n</p>\r\n<p align=\"left\">\r\n    After Clean HTML has been properly installed, it can be run from the <strong>Tools &gt; Macro &gt; Macros…</strong> dialog:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"Run Clean HTML from this dialog.\" src=\"http://songhaysystem.com/bitmaps/WD2KHTMLConversion/CleanHTMLMacro.gif\" width=\"453\" height=\"326\" />\r\n</p>\r\n<p align=\"left\">\r\n    Or, if you are familiar with the customizing features of Word 2000/2002, you can assign Clean HTML to a button and place this button on one of the Tool Bars. You can <a href=\"http://techrepublic.com.com/5100-6329-1060039.html\" title=\"How to create macro buttons in Excel and Word\">set up a button</a> that looks like this:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"Press this button or enter Alt + c to run Clean HTML\" src=\"http://songhaysystem.com/bitmaps/WD2KHTMLConversion/CleanHTMLButton.gif\" width=\"262\" height=\"75\" />\r\n</p>\r\n<p align=\"left\">\r\n    This means that you can run Clean HTML by pressing the button or typing <strong>Alt + c</strong>.\r\n</p>\r\n\r\n<h2>Clean HTML Functionality</h2>\r\n<p align=\"left\">\r\n    Clean HTML processes a Word 2000/2002 document with two logical loops. The first loop moves through the Collection of Paragraphs in a Word document. Within each Paragraph, the second loop moves through each Word.<a href=\"#note3\"><sup>3</sup></a> Additionally, there is a command to wrap the Clean HTML in document-level elements (including customizable <code>meta</code> elements) and save to an external file. Each loop looks for certain conditions to determine what to translate to HTML. Let’s call the first loop the <em>Paragraph Loop</em>—and the second loop the <em>Word Loop.</em> Let’s specify what each loop does:\r\n</p>\r\n\r\n<h2>Paragraph Loop</h2>\r\n<table align=\"center\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_2_clnHTMLdoc\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_1_clnHTMLdoc\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_2_1_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Condition</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_2_1_2_clnHTMLdoc\" valign=\"top\">\r\n<strong>Response</strong>\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_2_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_2_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Code Block.</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_2_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nSend this paragraph to the Word Loop (see below). Place the output of this loop in a <code>pre</code> element.\r\n</p>\r\n<p>\r\nThis is a custom Style created for Clean HTML.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_3_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_3_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Hidden Block.</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_3_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nClean HTML ignores this paragraph.\r\n</p>\r\n<p>\r\nThis is a custom Style created for Clean HTML.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_4_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_4_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>HTML Block.</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_4_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirectly translate the text in this paragraph as HTML.\r\n</p>\r\n<p>\r\nThis is a custom Style created for Clean HTML.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_5_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_5_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>List Bullet.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_5_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>li</code> elements. If it is the first paragraph of this style, prefix an opening <code>ul</code> element. Suffix the last paragraph with a closing <code>ul</code> element.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_6_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_6_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>List Number.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_6_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>li</code> elements. If it is the first paragraph of this style, prefix an opening <code>ol</code> element. Suffix the last paragraph with a closing <code>ol</code> element.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_7_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_7_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Normal.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_7_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>p</code> elements.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_8_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_8_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Style Block.</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_8_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nSend this paragraph to the Word Loop (see below). <em>Do not</em> wrap the output of this loop in <code>p</code> elements.\r\n</p>\r\n<p>\r\nThis style allows Word 2000/2002 paragraphs to be wrapped in customized HTML written in the Style <strong>HTML Block.</strong>\r\n</p>\r\n<p>\r\nThis is a custom Style created for Clean HTML.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_9_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_9_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Heading 1.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_9_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>h1</code> elements.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_10_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_10_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Heading 2.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_10_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>h2</code> elements.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_11_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_11_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Heading 3.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_11_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>h3</code> elements.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_12_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_12_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Heading 4.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_12_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>h4</code> elements.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_13_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_13_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Heading 5.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_13_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>h5</code> elements.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_14_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_14_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Heading 6.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_14_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>h6</code> elements. Additional headings are ignored.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_15_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_15_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph consisting of one in-line Shape.\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_15_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nTranslate to an HTML block containing one <code>img</code> element.\r\n</p>\r\n<p>\r\nIf the in-line Shape is not connected to an external file, the <code>src</code> attribute is determined by reading a URI in the <strong>Alternative text</strong> box under the <strong>Format Image…&gt;Web</strong> tab. If Alternative Text is specified then we have a pipe-delimited list of the form <code>&lt;uri&gt;|&lt;alt attribute&gt;</code>.\r\n</p>\r\n<p>\r\nFailing this, the formatting stops and an alert message displays.\r\n</p>\r\n<p>\r\nThe <code>width</code> and <code>height</code> attributes of the <code>img</code> element are calculated with the following formulae:\r\n</p>\r\n<pre>\r\n<code>VBA.Round(.Width / 0.75, 0)</code>\r\n</pre>\r\n<p>\r\nand\r\n</p>\r\n<pre>\r\n<code>VBA.Round(.Height / 0.75, 0)</code>\r\n</pre>\r\n<p>\r\nwhere <code>0.75</code> is a conversion factor to pixels from the units used by the Shape.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_16_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_16_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph inside of a Table.\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_16_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nIf this paragraph is the first cell of the table then it is translated to a temporary marker of the form <code>&lt;table</code><em><code>n</code></em><code>&gt;</code> where <em><code>n</code></em> starts at 1 and counts up to the number of “top-level” tables in the document.<a href=\"#note4\"><sup>4</sup></a>\r\n</p>\r\n<p>\r\nAt the end of the Paragraph Loop these temporary tags are replaced with the ordered Collection of tables in the word document.\r\n</p>\r\n<p>\r\nThe first row of a table is translated to <code>th</code> elements. As of this writing, <em>vertically</em> merged rows are not supported by Microsoft Word VBA (see below for more details).\r\n</p>\r\n<p>\r\nThe <code>table</code> element has the following attributes:\r\n</p>\r\n<pre>\r\n<code>&lt;table\r\n    align=&quot;&lt;left&gt;|&lt;center&gt;|&lt;right&gt;&quot;\r\n    class=&quot;cleanHTMLTable&quot;\r\n    id=&quot;cleanHTMLTable_</code><em><code>n</code></em><code>_</code><em><code>CSS_ID</code></em><code>&quot;&gt;</code>\r\n</pre>\r\n<p>\r\nwhere <em><code>n</code></em> corresponds to the index of the table in the Word Tables Collection; <code>CSS_ID</code> is an optional custom file property used to uniquely identify the table among tables translated out of different Word documents (see “Formatting Tables with CSS Level 2” below).\r\n</p>\r\n<p>\r\nThe <code>align</code> attribute of the <code>table</code> element is determined by the setting under <strong>Table Properties…&gt; Table &gt; Alignment</strong>. To prevent the table from floating next to subsequent block elements, <code>&lt;br clear=&quot;all&quot;&gt;</code> is appended at the end of the table.\r\n</p>\r\n<p>\r\nThe <code>tr</code> opening element has the following attributes:\r\n</p>\r\n<pre>\r\n<code>&lt;tr\r\n    class=&quot;cleanHTMLTableRow&quot;\r\n    id=&quot;cleanHTMLTableRow_</code><em><code>n</code></em><code>_</code><em><code>r</code></em><code>_</code><em><code>CSS_ID</code></em><code>&quot;&gt;</code>\r\n</pre>\r\n<p>\r\nwhere <em><code>n</code></em> corresponds to the index of the table in the Word Tables Collection and <em><code>r</code></em> is the respective <code>Index</code> property of the Word Row object of the Table; <code>CSS_ID</code> is an optional custom file property used to uniquely identify the table among tables translated out of different documents (see “Formatting Tables with CSS Level 2” below).\r\n</p>\r\n<p>\r\nThe <code>th</code> or <code>td</code> opening element has the following attributes:\r\n</p>\r\n<pre>\r\n<code>&lt;th\r\n    align=&quot;&lt;center&gt;|&lt;left&gt;|&lt;right&gt;&quot;\r\n    class=&quot;cleanHTMLTableHeader&quot;\r\n    colspan=&quot;</code><em><code>n</code></em><code>&quot;\r\n    id=&quot;cleanHTMLTableHeader_</code><em><code>n</code></em><code>_</code><em><code>r</code></em><code>_</code><em><code>c</code></em><code>_</code><em><code>CSS_ID</code></em><code>&quot;\r\n    valign=&quot;&lt;top&gt;|&lt;middle&gt;|&lt;bottom&gt;&quot;&gt;</code>\r\n</pre>\r\n<p>\r\nor\r\n</p>\r\n<pre>\r\n<code>&lt;td\r\n    align=&quot;&lt;center&gt;|&lt;left&gt;|&lt;right&gt;&quot;\r\n    class=&quot;cleanHTMLTableHeader&quot;\r\n    colspan=&quot;</code><em><code>n</code></em><code>&quot;\r\n    id=&quot;cleanHTMLTableData_</code><em><code>n</code></em><code>_</code><em><code>r</code></em><code>_</code><em><code>c</code></em><code>_</code><em><code>CSS_ID</code></em><code>&quot;\r\n    valign=&quot;&lt;top&gt;|&lt;middle&gt;|&lt;bottom&gt;&quot;&gt;</code>\r\n</pre>\r\n<p>\r\nwhere the <code>align</code> attribute is either center, left or right (justified paragraphs are not supported by Clean HTML until hyphenation is supported in the “mainstream” web browsers). <em><code>n</code></em> for <code>colspan</code> is only equal to maximum number of columns in the table (a number greater than one). This is illustrated below in “Tables with Horizontally Merged Cells.”\r\n</p>\r\n<p>\r\n<em><code>n</code></em> for the <code>id</code> attribute corresponds to the index of the table in the Word Tables Collection; <em><code>r</code></em> is the respective <code>Index</code> property of the Word Row object of the Table; <em><code>c</code></em> is the respective <code>ColumnIndex</code> property of the Word Cell object; <code>CSS_ID</code> is an optional custom file property used to uniquely identify the table among tables translated out of different documents (see “Formatting Tables with CSS Level 2” below).\r\n</p>\r\n<p>\r\nThe <code>valign</code> attribute is determined by the setting under <strong>Table Properties…&gt; Cell &gt; Vertical alignment</strong>.\r\n</p>\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h3>Formatting Tables with CSS Level 2</h3>\r\n<p align=\"left\">\r\n    Clean HTML table formatting depends almost entirely on <a href=\"http://www.w3.org/TR/REC-CSS2/\">CSS Level 2</a> and its support in “mainstream” browsers. As of the revision date of this document, the support for CSS Level 2 is satisfactory—especially for <a href=\"http://www.ncdesign.org/html/s041table.htm\">the formatting of HTML tables</a>. This dependency allows Clean HTML the highest level of flexibility. Clean HTML assigns a unique ID to each table, each row and even each cell on the HTML page. By using <a href=\"http://www.w3.org/TR/REC-CSS1\">ID selectors</a> (from <a href=\"http://www.w3.org/TR/REC-CSS1\">CSS Level 1</a>), a Cascading style sheet can reach any table element including the table itself.\r\n</p>\r\n<p align=\"left\">\r\n    Tables translated to Clean HTML from different Word documents can still be uniquely identified by using the <code>CSS_ID</code> custom file property discussed below under “Translation of Word 2000/2002 File Properties into Clean HTML.”\r\n</p>\r\n<p align=\"left\">\r\n    The following style block below is one of the simplest designs for HTML tables:\r\n</p>\r\n<pre>\r\n<code>&lt;style&gt;&lt;!--\r\n    .cleanHTMLTable{\r\n        border:solid 1px #000000;\r\n        border-collapse:collapse;\r\n    }\r\n    .cleanHTMLTableHeader,.cleanHTMLTableData{\r\n        border:solid 1px #000000;\r\n    }\r\n //--&gt;\r\n&lt;/style&gt;</code>\r\n</pre>\r\n<p align=\"left\">\r\n    Most importantly, the <code>border-collapse</code> property is the key to making an HTML table “look like” an HTML table rendered without Cascading Style Sheets. More advanced table formatting techniques are discussed in detail at <a href=\"http://www.w3.org/TR/REC-CSS2/tables.html\">W3.org</a>.\r\n</p>\r\n\r\n<h3>Tables with Horizontally Merged Cells</h3>\r\n<p align=\"left\">\r\n    The following table should translate into Clean HTML and produce the expected results:\r\n</p>\r\n<table align=\"center\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_3_clnHTMLdoc\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_3_1_clnHTMLdoc\">\r\n    <th align=\"center\" colspan=\"4\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_3_1_1_clnHTMLdoc\" valign=\"top\">\r\n\r\n<h4>A Word Table with Horizontally Merged Cells</h4>\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_3_2_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_2_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Cell One</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_2_2_clnHTMLdoc\" valign=\"top\">\r\n<strong>Cell Two</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_2_3_clnHTMLdoc\" valign=\"top\">\r\n<strong>Cell Three</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_2_4_clnHTMLdoc\" valign=\"top\">\r\n<strong>Cell Four</strong>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_3_3_clnHTMLdoc\">\r\n    <td align=\"left\" colspan=\"4\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_3_1_clnHTMLdoc\" valign=\"top\">\r\nAs of this writing, Clean HTML only supports horizontally merged cells across all columns of the table.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h2>Word Loop</h2>\r\n<table align=\"center\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_4_clnHTMLdoc\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_1_clnHTMLdoc\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_4_1_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Condition</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_4_1_2_clnHTMLdoc\" valign=\"top\">\r\n<strong>Response</strong>\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_2_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_2_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters formatted as Bold.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_2_2_clnHTMLdoc\" valign=\"top\">\r\nTranslate to <code>strong</code> elements. This translation will not take place for paragraphs with heading styles (e.g. <strong>Heading 1</strong>).\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_3_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_3_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters formatted as Italic.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_3_2_clnHTMLdoc\" valign=\"top\">\r\nTranslate to <code>em</code> elements. This translation will not take place for paragraphs with heading styles (e.g. <strong>Heading 1</strong>).\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_4_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_4_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters formatted as Underline (or any of the other underline character formats—e.g.: Double Underline).\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_4_2_clnHTMLdoc\" valign=\"top\">\r\nTranslate to <code>span</code> elements with <code>style</code> attribute. (<code>u </code>elements have been deprecated in HTML 4.0.)\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_5_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_5_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters formatted as Strikethrough (e.g.: <span style=\"text-decoration:line-through\">strikethrough</span>).\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_5_2_clnHTMLdoc\" valign=\"top\">\r\nTranslate to <code>span</code> elements with <code>style</code> attribute. (<code>strike </code>elements have been deprecated in HTML 4.0.)\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_6_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_6_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters with Style <strong>Code Block.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_6_2_clnHTMLdoc\" valign=\"top\">\r\nTranslate to <code>code</code> elements. Note that this is a paragraph-level Word style.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_7_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_7_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters with Style <strong>Code Line.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_7_2_clnHTMLdoc\" valign=\"top\">\r\nTranslate to <code>code</code> elements.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_8_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_8_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters with Style <strong>Footnote Reference.</strong> Word automatically creates this Style when Footnotes are inserted.\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_8_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nTranslate to <code>a</code> elements pointing to named anchors (“HTML endnotes”) programmatically appended to the end of the Clean HTML.\r\n</p>\r\n<p>\r\nNative Word 2000/2002 Endnotes are ignored.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_9_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_9_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters with Style <strong>Hyperlink.</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_9_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nTranslate to <code>a</code> elements with the <strong>Screen Tip…</strong> entry placed in the <code>alt</code> attribute and the Word 2002 <strong>Target Frame…</strong> entry placed in the <code>target</code> attribute.\r\n</p>\r\n<p>\r\nWord Bookmark locations is not supported.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_10_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_10_1_clnHTMLdoc\" valign=\"top\">\r\nThe Line Break character.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_10_2_clnHTMLdoc\" valign=\"top\">\r\nIf this character is found in a paragraph of style <strong>Code Block,</strong> translate to carriage return and line feed characters; otherwise translate to the <code>&lt;br&gt;</code> element.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_11_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_11_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters generated by a Field object.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_11_2_clnHTMLdoc\" valign=\"top\">\r\nTranslate according to the rules of the current Style names aforementioned. Warning: only fields that produce results (e.g. formulas generating string values) have been tested with Clean HTML.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_12_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_12_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters within Bookmarks.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_12_2_clnHTMLdoc\" valign=\"top\">\r\nBookmarks are ignored by Clean HTML.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_13_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_13_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters within Comments.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_13_2_clnHTMLdoc\" valign=\"top\">\r\nComments are ignored by Clean HTML.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h3>HTML Entities</h3>\r\n<p align=\"left\">\r\n    The Word Loop looks for “special characters” to translate into HTML entities. The following table summarizes the characters supported by Clean HTML:\r\n</p>\r\n<table align=\"center\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_5_clnHTMLdoc\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_1_clnHTMLdoc\">\r\n    <th align=\"center\" colspan=\"5\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_5_1_1_clnHTMLdoc\" valign=\"top\">\r\n\r\n<h4>Character Codes Translated into Clean HTML</h4>\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_2_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_2_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>0–63</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_2_2_clnHTMLdoc\" valign=\"top\">\r\n<strong>128–159</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_2_3_clnHTMLdoc\" valign=\"top\">\r\n<strong>160–191</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_2_4_clnHTMLdoc\" valign=\"top\">\r\n<strong>192–223</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_2_5_clnHTMLdoc\" valign=\"top\">\r\n<strong>224–255</strong>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_3_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_3_1_clnHTMLdoc\" valign=\"top\">\r\n&quot;\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_3_2_clnHTMLdoc\" valign=\"top\">\r\n€\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_3_3_clnHTMLdoc\" valign=\"top\">\r\n¡\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_3_4_clnHTMLdoc\" valign=\"top\">\r\nÀ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_3_5_clnHTMLdoc\" valign=\"top\">\r\nÀ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_4_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_4_1_clnHTMLdoc\" valign=\"top\">\r\n&amp;\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_4_2_clnHTMLdoc\" valign=\"top\">\r\nƒ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_4_3_clnHTMLdoc\" valign=\"top\">\r\n¢\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_4_4_clnHTMLdoc\" valign=\"top\">\r\nÁ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_4_5_clnHTMLdoc\" valign=\"top\">\r\nÁ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_5_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_5_1_clnHTMLdoc\" valign=\"top\">\r\n&lt;\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_5_2_clnHTMLdoc\" valign=\"top\">\r\n„\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_5_3_clnHTMLdoc\" valign=\"top\">\r\n£\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_5_4_clnHTMLdoc\" valign=\"top\">\r\nÂ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_5_5_clnHTMLdoc\" valign=\"top\">\r\nÂ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_6_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_6_1_clnHTMLdoc\" valign=\"top\">\r\n&gt;\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_6_2_clnHTMLdoc\" valign=\"top\">\r\n…\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_6_3_clnHTMLdoc\" valign=\"top\">\r\n¤\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_6_4_clnHTMLdoc\" valign=\"top\">\r\nÃ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_6_5_clnHTMLdoc\" valign=\"top\">\r\nÃ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_7_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_7_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_7_2_clnHTMLdoc\" valign=\"top\">\r\n†\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_7_3_clnHTMLdoc\" valign=\"top\">\r\n¥\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_7_4_clnHTMLdoc\" valign=\"top\">\r\nÄ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_7_5_clnHTMLdoc\" valign=\"top\">\r\nÄ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_8_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_8_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_8_2_clnHTMLdoc\" valign=\"top\">\r\n‡\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_8_3_clnHTMLdoc\" valign=\"top\">\r\n¦\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_8_4_clnHTMLdoc\" valign=\"top\">\r\nÅ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_8_5_clnHTMLdoc\" valign=\"top\">\r\nÅ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_9_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_9_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_9_2_clnHTMLdoc\" valign=\"top\">\r\nˆ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_9_3_clnHTMLdoc\" valign=\"top\">\r\n§\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_9_4_clnHTMLdoc\" valign=\"top\">\r\nÆ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_9_5_clnHTMLdoc\" valign=\"top\">\r\nÆ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_10_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_10_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_10_2_clnHTMLdoc\" valign=\"top\">\r\n‰\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_10_3_clnHTMLdoc\" valign=\"top\">\r\n¨\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_10_4_clnHTMLdoc\" valign=\"top\">\r\nÏ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_10_5_clnHTMLdoc\" valign=\"top\">\r\nÇ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_11_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_11_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_11_2_clnHTMLdoc\" valign=\"top\">\r\nŠ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_11_3_clnHTMLdoc\" valign=\"top\">\r\n©\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_11_4_clnHTMLdoc\" valign=\"top\">\r\nÈ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_11_5_clnHTMLdoc\" valign=\"top\">\r\nÈ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_12_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_12_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_12_2_clnHTMLdoc\" valign=\"top\">\r\n‹\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_12_3_clnHTMLdoc\" valign=\"top\">\r\nª\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_12_4_clnHTMLdoc\" valign=\"top\">\r\nÉ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_12_5_clnHTMLdoc\" valign=\"top\">\r\nÉ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_13_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_13_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_13_2_clnHTMLdoc\" valign=\"top\">\r\nŒ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_13_3_clnHTMLdoc\" valign=\"top\">\r\n«\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_13_4_clnHTMLdoc\" valign=\"top\">\r\nÊ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_13_5_clnHTMLdoc\" valign=\"top\">\r\nÊ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_14_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_14_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_14_2_clnHTMLdoc\" valign=\"top\">\r\n‘\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_14_3_clnHTMLdoc\" valign=\"top\">\r\n¬\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_14_4_clnHTMLdoc\" valign=\"top\">\r\nË\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_14_5_clnHTMLdoc\" valign=\"top\">\r\nË\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_15_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_15_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_15_2_clnHTMLdoc\" valign=\"top\">\r\n’\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_15_3_clnHTMLdoc\" valign=\"top\">\r\n®\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_15_4_clnHTMLdoc\" valign=\"top\">\r\nÌ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_15_5_clnHTMLdoc\" valign=\"top\">\r\nÌ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_16_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_16_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_16_2_clnHTMLdoc\" valign=\"top\">\r\n“\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_16_3_clnHTMLdoc\" valign=\"top\">\r\n¯\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_16_4_clnHTMLdoc\" valign=\"top\">\r\nÍ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_16_5_clnHTMLdoc\" valign=\"top\">\r\nÍ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_17_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_17_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_17_2_clnHTMLdoc\" valign=\"top\">\r\n”\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_17_3_clnHTMLdoc\" valign=\"top\">\r\n°\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_17_4_clnHTMLdoc\" valign=\"top\">\r\nÎ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_17_5_clnHTMLdoc\" valign=\"top\">\r\nÎ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_18_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_18_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_18_2_clnHTMLdoc\" valign=\"top\">\r\n•\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_18_3_clnHTMLdoc\" valign=\"top\">\r\n±\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_18_4_clnHTMLdoc\" valign=\"top\">\r\nÏ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_18_5_clnHTMLdoc\" valign=\"top\">\r\nÏ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_19_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_19_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_19_2_clnHTMLdoc\" valign=\"top\">\r\n–\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_19_3_clnHTMLdoc\" valign=\"top\">\r\n²\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_19_4_clnHTMLdoc\" valign=\"top\">\r\nÐ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_19_5_clnHTMLdoc\" valign=\"top\">\r\nÐ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_20_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_20_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_20_2_clnHTMLdoc\" valign=\"top\">\r\n—\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_20_3_clnHTMLdoc\" valign=\"top\">\r\n³\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_20_4_clnHTMLdoc\" valign=\"top\">\r\nÑ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_20_5_clnHTMLdoc\" valign=\"top\">\r\nÑ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_21_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_21_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_21_2_clnHTMLdoc\" valign=\"top\">\r\n˜\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_21_3_clnHTMLdoc\" valign=\"top\">\r\n´\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_21_4_clnHTMLdoc\" valign=\"top\">\r\nÚ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_21_5_clnHTMLdoc\" valign=\"top\">\r\nÒ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_22_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_22_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_22_2_clnHTMLdoc\" valign=\"top\">\r\n™\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_22_3_clnHTMLdoc\" valign=\"top\">\r\nµ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_22_4_clnHTMLdoc\" valign=\"top\">\r\nÓ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_22_5_clnHTMLdoc\" valign=\"top\">\r\nÓ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_23_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_23_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_23_2_clnHTMLdoc\" valign=\"top\">\r\nš\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_23_3_clnHTMLdoc\" valign=\"top\">\r\n¶\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_23_4_clnHTMLdoc\" valign=\"top\">\r\nÔ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_23_5_clnHTMLdoc\" valign=\"top\">\r\nÔ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_24_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_24_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_24_2_clnHTMLdoc\" valign=\"top\">\r\n›\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_24_3_clnHTMLdoc\" valign=\"top\">\r\n·\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_24_4_clnHTMLdoc\" valign=\"top\">\r\nÕ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_24_5_clnHTMLdoc\" valign=\"top\">\r\nÕ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_25_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_25_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_25_2_clnHTMLdoc\" valign=\"top\">\r\nœ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_25_3_clnHTMLdoc\" valign=\"top\">\r\n¸\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_25_4_clnHTMLdoc\" valign=\"top\">\r\nÖ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_25_5_clnHTMLdoc\" valign=\"top\">\r\nÖ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_26_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_26_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_26_2_clnHTMLdoc\" valign=\"top\">\r\nŸ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_26_3_clnHTMLdoc\" valign=\"top\">\r\n¹\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_26_4_clnHTMLdoc\" valign=\"top\">\r\n×\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_26_5_clnHTMLdoc\" valign=\"top\">\r\n÷\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_27_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_27_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_27_2_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_27_3_clnHTMLdoc\" valign=\"top\">\r\nº\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_27_4_clnHTMLdoc\" valign=\"top\">\r\nØ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_27_5_clnHTMLdoc\" valign=\"top\">\r\nØ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_28_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_28_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_28_2_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_28_3_clnHTMLdoc\" valign=\"top\">\r\n»\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_28_4_clnHTMLdoc\" valign=\"top\">\r\nÙ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_28_5_clnHTMLdoc\" valign=\"top\">\r\nÙ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_29_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_29_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_29_2_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_29_3_clnHTMLdoc\" valign=\"top\">\r\n¼\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_29_4_clnHTMLdoc\" valign=\"top\">\r\nÚ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_29_5_clnHTMLdoc\" valign=\"top\">\r\nÚ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_30_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_30_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_30_2_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_30_3_clnHTMLdoc\" valign=\"top\">\r\n½\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_30_4_clnHTMLdoc\" valign=\"top\">\r\nÛ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_30_5_clnHTMLdoc\" valign=\"top\">\r\nÛ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_31_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_31_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_31_2_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_31_3_clnHTMLdoc\" valign=\"top\">\r\n¾\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_31_4_clnHTMLdoc\" valign=\"top\">\r\nÜ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_31_5_clnHTMLdoc\" valign=\"top\">\r\nÜ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_32_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_32_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_32_2_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_32_3_clnHTMLdoc\" valign=\"top\">\r\n¿\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_32_4_clnHTMLdoc\" valign=\"top\">\r\nÝ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_32_5_clnHTMLdoc\" valign=\"top\">\r\nÝ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_33_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_33_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_33_2_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_33_3_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_33_4_clnHTMLdoc\" valign=\"top\">\r\nÞ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_33_5_clnHTMLdoc\" valign=\"top\">\r\nÞ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_34_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_34_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_34_2_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_34_3_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_34_4_clnHTMLdoc\" valign=\"top\">\r\nß\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_34_5_clnHTMLdoc\" valign=\"top\">\r\nŸ\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h2>Pictures</h2>\r\n<p align=\"left\">\r\n    Here’s a “picture paragraph” of Clean HTML output:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"This is how an alt attribute is included for this picture.\" src=\"http://songhaysystem.com/bitmaps/WD2KHTMLConversion/CleanHTMLOutput.gif\" width=\"423\" height=\"430\" />\r\n</p>\r\n<p align=\"left\">\r\n    Its original linking information, paragraph alignment and <strong>Alternative text</strong> settings are translated into Clean HTML. As of this writing, Hyperlink information assigned to objects other than Range objects is ignored. The next picture paragraph shows the <strong>Alternative text</strong> settings:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"Alternative text settings\" src=\"http://songhaysystem.com/bitmaps/WD2KHTMLConversion/CleanHTMLAltText.gif\" width=\"417\" height=\"380\" />\r\n</p>\r\n\r\n<h2>Saving Clean HTML to a Text File</h2>\r\n<p align=\"left\">\r\n    The Clean HTML output window shows the <strong>Save</strong> button. This command saves a text file of Clean HTML adding “document-level” tags according to the following rules:\r\n</p>\r\n<table align=\"center\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_6_clnHTMLdoc\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_6_1_clnHTMLdoc\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_6_1_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Rule</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_6_1_2_clnHTMLdoc\" valign=\"top\">\r\n<strong>Remarks</strong>\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_6_2_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_6_2_1_clnHTMLdoc\" valign=\"top\">\r\nThe file will be written in Unicode text format.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_6_2_2_clnHTMLdoc\" valign=\"top\">\r\nAny information suggesting that the Unicode format has a negative impact on a system is currently beyond the scope of this document.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_6_3_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_6_3_1_clnHTMLdoc\" valign=\"top\">\r\nThe HTML will be level 4.0 transitional.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_6_3_2_clnHTMLdoc\" valign=\"top\">\r\nThis is denoted by the <code>DOCTYPE</code> declaration.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_6_4_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_6_4_1_clnHTMLdoc\" valign=\"top\">\r\nWord 2000/2002 File Properties are translated into <code>meta</code> and <code>base</code> elements.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_6_4_2_clnHTMLdoc\" valign=\"top\">\r\nWord 2000/2002 has both “built-in” file properties and Custom File Properties. Both of these property types are found in the <strong>Properties</strong> dialog under the <strong>File</strong> menu (see below for more details).\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_6_5_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_6_5_1_clnHTMLdoc\" valign=\"top\">\r\nClean HTML recognizes Custom File Properties that create references to external style sheets and script files.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_6_5_2_clnHTMLdoc\" valign=\"top\">\r\nSome of these Properties are undocumented (see below for more details).\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h3>Translation of Word 2000/2002 File Properties into Clean HTML</h3>\r\n<p align=\"left\">\r\n    The dialog tabs shown below show a portion of the built-in and custom file properties:\r\n</p>\r\n<div align=\"center\">\r\n<table\r\n    border=\"0\"\r\n    cellpadding=\"3\"\r\n    cellspacing=\"0\">\r\n<tr>\r\n    <td>\r\n<img alt=\"Word 2000/2002 Built-in Properties\" border=\"0\" src=\"http://songhaysystem.com/bitmaps/WD2KHTMLConversion/CleanHTMLProperties.gif\" width=\"355\" height=\"449\" />\r\n    </td>\r\n    <td align=\"right\">\r\n<img alt=\"Word 2000/2002 Custom Properties\" border=\"0\" src=\"http://songhaysystem.com/bitmaps/WD2KHTMLConversion/CleanHTMLCustomProperties.gif\" width=\"355\" height=\"449\" />\r\n    </td>\r\n</tr>\r\n</table>\r\n</div>\r\n<p align=\"left\">\r\n    The table below summarizes the translation of these properties into Clean HTML elements:\r\n</p>\r\n<table align=\"center\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_7_clnHTMLdoc\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_1_clnHTMLdoc\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_7_1_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Word Property</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_7_1_2_clnHTMLdoc\" valign=\"top\">\r\n<strong>Clean HTML Element</strong>\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_2_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_2_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>General &gt; Created</strong><br />\r\n<strong>General &gt; Modified</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_2_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nEach are directly translated into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta\r\n    name=&quot;date created&quot;\r\n    content=&quot;5/16/2001 6:58:00 PM&quot;&gt;\r\n&lt;meta\r\n    name=&quot;date modified&quot;\r\n    content=&quot;1/20/2002 9:34:00 PM&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_3_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_3_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Title</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_3_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirect translation into the text within <code>table</code> elements:\r\n</p>\r\n<pre>\r\n<code>&lt;title&gt;Clean HTML&lt;/title&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_4_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_4_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Subject</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_4_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirect translation into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta\r\n    name=&quot;subject&quot;\r\n    content=&quot;W3C Compliant HTML\r\nfrom Word 2000/2002&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_5_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_5_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Author</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_5_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nIf a pipe-delimiter is not found then translate into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta\r\n    name=&quot;author&quot;\r\n    content=&quot;Bryan D. Wilhite&quot;&gt;</code>\r\n</pre>\r\n<p>\r\nIf a pipe-delimiter is found then assume that the text is a delimited string of form <code>author|email</code> and add a reply-to meta element making two <code>meta</code> elements:\r\n</p>\r\n<pre>\r\n<code>&lt;meta\r\n    name=&quot;author&quot;\r\n    content=&quot;Bryan D. Wilhite&quot;&gt;\r\n&lt;meta\r\n    name=&quot;reply-to&quot;\r\n    content=&quot;rasx@kintespace.com&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_6_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_6_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Manager</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_6_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirect translation into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta name=&quot;manager&quot; content=&quot;None&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_7_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_7_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Company</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_7_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirect translation into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta\r\n    name=&quot;company&quot;\r\n    content=&quot;Songhay System&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_8_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_8_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Category</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_8_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirect translation into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta\r\n    name=&quot;category&quot;\r\n    content=&quot;Utilities&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_9_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_9_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Keywords</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_9_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirect translation into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta\r\n    name=&quot;keywords&quot;\r\n    content=&quot;HTML, Word 2000/2002,\r\nW3C, Clean HTML for Word 2000/2002,\r\nSonghay System&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_10_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_10_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Comments</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_10_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirect translation into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta\r\n    name=&quot;description&quot;\r\n    content=&quot;These Summary attributes\r\nshould appear in the meta tags of the\r\nHTML document.&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_11_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_11_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Hyperlink base</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_11_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirect translation into one <code>base</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;base\r\n    href=&quot;http://www.kintespace.com&quot;\r\n    target=&quot;_self&quot; &gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_12_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_12_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Custom &gt; Name &gt;</strong> <code>[name]</code><br />\r\n<strong>Custom &gt; Value &gt; </strong><code>[value]</code>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_12_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nThese default, custom name-value pairs are scanned by Clean HTML and each pair directly translates into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta name=&quot;[name]&quot; content=&quot;[value]&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_13_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_13_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Custom &gt; Name &gt; CSS</strong><br />\r\n<strong>Custom &gt; Value &gt; </strong><code>[URI]</code>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_13_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nThis is a special name-value pair that Clean HTML translates into a <code>link</code> element that refers to an external style sheet:\r\n</p>\r\n<pre>\r\n<code>&lt;link\r\n    rel=&quot;stylesheet&quot;\r\n    type=&quot;text/css&quot;\r\n    href=&quot;[URI]&quot;&gt;</code>\r\n</pre>\r\n<p>\r\nSpecifically, based on the example in the image above, we have:\r\n</p>\r\n<pre>\r\n<code>&lt;link\r\n    rel=&quot;stylesheet&quot;\r\n    type=&quot;text/css&quot;\r\n    href=&quot;../../../root.css&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_14_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_14_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Custom &gt; Name &gt; CSS_ID</strong><br />\r\n<strong>Custom &gt; Value &gt; </strong><code>[string]</code>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_14_2_clnHTMLdoc\" valign=\"top\">\r\nThis is a special name-value pair that Clean HTML translates into uniquely identifying the <code>id</code> attribute of <code>table</code> elements, <code>tr</code> elements, <code>th</code> elements and <code>td</code> elements.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h2>Flippant Remarks, Tips and Tricks</h2>\r\n<p align=\"left\">\r\n    The idea behind Clean HTML is <em>not</em> to produce HTML that emulates the formatting of Office documents. That’s Microsoft’s job. Office XP subscribers may see some improvements on Microsoft’s previous attempts to produce useful HTML documents. In addition to product interoperability, we also need a <em>clean</em> HTML representation of the contents of Word documents to interact with systems based on vendor agnostic standards.\r\n</p>\r\n<p align=\"left\">\r\n    The elements in Clean HTML are in lowercase. However, as of this writing, Clean HTML does not produce XHTML or HTML streams to be inserted into well-formed XML documents.\r\n</p>\r\n<p align=\"left\">\r\n    As of this writing, Clean HTML does not explicitly support <a href=\"http://www.w3.org/TR/html4/\">HTML 4.01</a>. This W3C specification is known as a “subversion” of HTML 4.0. Many of the popular browsers (like Mozilla) reads the 4.01 <code>DOCTYPE</code> and cause display “problems.” These problems may actually be the browser switching off <a href=\"http://www.htmlhelp.com/tools/validator/doctype.html\">“quirks mode”</a> and actually showing the HTML according to standards. More Clean HTML research in this area will be needed!\r\n</p>\r\n<p align=\"left\">\r\n    The specifications in this document imply that Clean HTML works best with relatively “simple” documents. A “simple” document would only have the default Word Styles (like <strong>Normal</strong> and <strong>Heading 1</strong>) plus the styles from Clean HTML. When a Word Document has a table of contents, columns, comments, text boxes, multiple versions, customized styles, form fields, etc., Clean HTML may not work properly or produce unexpected results.\r\n</p>\r\n<p align=\"left\">\r\n    Clean HTML will not produce well-formed HTML from Word Range objects containing characters with “multiple formatting.” For example, a word formatted with Bold, Italic and Underline will produce poorly formed HTML. In terms of both traditional typography and Clean HTML processing, using multiple formatting is not recommended. However, the following table summarizes some workarounds:\r\n</p>\r\n<table align=\"center\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_8_clnHTMLdoc\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_8_1_clnHTMLdoc\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_8_1_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Word Formatting</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_8_1_2_clnHTMLdoc\" valign=\"top\">\r\n<strong>Clean HTML</strong>\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_8_2_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_8_2_1_clnHTMLdoc\" valign=\"top\">\r\n<code>&lt;em&gt;</code><a href=\"http://www.amazon.com/exec/obidos/ISBN=2880462797/thekintespacec00A/\" title=\"Buy this book at Amazon.com\">Experimental Typography (Working With Computer Type , No 4)</a><code>&lt;/em&gt;</code>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_8_2_2_clnHTMLdoc\" valign=\"top\">\r\n<em><a href=\"http://www.amazon.com/exec/obidos/ISBN=2880462797/thekintespacec00A/\" title=\"Buy this book at Amazon.com\">Experimental Typography (Working With Computer Type , No 4)</a></em>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_8_3_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_8_3_1_clnHTMLdoc\" valign=\"top\">\r\n<code>&lt;em&gt;&lt;strong&gt;</code>bold-italic<code>&lt;/strong&gt;&lt;/em&gt;</code>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_8_3_2_clnHTMLdoc\" valign=\"top\">\r\n<em><strong>bold-italic</strong></em>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_8_4_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_8_4_1_clnHTMLdoc\" valign=\"top\">\r\n\r\n<h3>Heading <code>&lt;em&gt;</code>Three<code>&lt;/em&gt;</code></h3>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_8_4_2_clnHTMLdoc\" valign=\"top\">\r\n\r\n<h3>Heading <em>Three</em></h3>\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n<p align=\"left\">\r\n    Future enhancements to Clean HTML should include XHTML support. As of this writing, Clean HTML has been extensively tested on Word 2000. For obvious historical reasons, Clean HTML has not been tested extensively on Word XP (or Word 2002). A digital signature for Clean HTML will be forthcoming with increased sales of Clean HTML. For Clean HTML news, registration information, bug reports, etc., <a href=\"mailto:rasx@kintespace.com\">please mail.</a>\r\n</p>\r\n<p align=\"left\">\r\n    Clean HTML is for that happy few who need to separate their lengthy prose from its visual HTML presentation. Such people enjoyed writing a good essay in Microsoft Word but did not enjoy how Microsoft decided to “help” publish that essay to the Internet. Now, with Clean HTML, we can still use Word and feel little more secure that our word processing documents can move to the Internet very quickly, with links, endnotes, images and typographically correct characters—all under a standard Web-Consortium format, open to as many browsers as possible.\r\n</p>\r\n<p align=\"left\">\r\n    This document is rendered entirely via Clean HTML. Please support standards-enabling software and <a href=\"http://store.esellerate.net/s.asp?s=STR291982498\" title=\"Buy Clean HTML\">purchase Clean HTML today.</a>\r\n</p>\r\n\r\n<h2>Endnotes</h2>\r\n<p><small><a name=\"note1\"><sup>1</sup></a> Clean HTML is not compatible with any other version of Microsoft Word (past or future). Clean HTML was only tested in Microsoft Windows installations capable of running Microsoft Office.</small></p>\r\n\r\n<p><small><a name=\"note2\"><sup>2</sup></a> This manual procedure will also verify that you have enough security permissions to use Clean HTML without related errors.</small></p>\r\n\r\n<p><small><a name=\"note3\"><sup>3</sup></a> Actually it loops through each character in each paragraph. Interestingly, there is no “Word” object in the Word VBA Object model. There is a Words Collection where each Item returns a Range Object. It turns out that the Range Object is as important to Word VBA as the Recordset Object is for Access VBA (or ADO).</small></p>\r\n\r\n<p><small><a name=\"note4\"><sup>4</sup></a> “Top-level” implies that Word’s nested tables are not supported as of this writing.</small></p>\r\n",
    "ItemText": "<h1>Clean HTML for Word 2000/2002</h1>\r\n<p align=\"left\">\r\n    Clean HTML is the Microsoft Word Template that creates “Clean” HTML equivalents of the contents of Word 2000/2002 files. This template translates <a href=\"http://www.w3.org/\" title=\"This text appears in IE 4.x Proprietary title attributes\" target=\"_top\">W3C-compliant HTML</a> strings out of Microsoft Word 2000/2002 documents.<a href=\"#note1\"><sup>1</sup></a> These HTML strings, created from highlighted portions or entire Word documents, can then be copied and pasted into other data applications using the Windows Clipboard—or saved to a text file. Simultaneously, Clean HTML translates a large number of typographic symbols (like curly quotes “” or the em dash —) and “extended” Latin characters into the appropriate HTML entity. Clean HTML takes advantage of the rich user interface of Microsoft Word 2000/2002 without sacrificing vendor-independent standards. Clean HTML also writes HTML 4.0 text files that can automatically link to external CSS and script files.\r\n</p>\r\n\r\n<h2>Clean HTML Known Issues</h2>\r\n<p align=\"left\">\r\n    The following table summarizes the changes made to the Clean HTML template file and the “known issues.” Microsoft Word VBA Projects do not have versioning features by default. It follows that the summarizing table below marks updates by date:\r\n</p>\r\n<table align=\"center\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_1_clnHTMLdoc\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_1_clnHTMLdoc\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_1_1_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Date</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_1_1_2_clnHTMLdoc\" valign=\"top\">\r\n<strong>Description</strong>\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_2_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_2_1_clnHTMLdoc\" valign=\"top\">\r\n9/10/04\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_2_2_clnHTMLdoc\" valign=\"top\">\r\nUpdated the code to reflect locale-specific, built-in Style names for international versions of Word.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_3_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_3_1_clnHTMLdoc\" valign=\"top\">\r\n9/7/04\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_3_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nClean HTML <em>will</em> work correctly in Office Word 2003 but the Clean HTML template has to be loaded with every editing session after a security warning prompt.\r\n</p>\r\n<p>\r\n<em>Promise:</em> A future version of this product will be based on .NET, its security technology, to avoid this issue (among others). Spending upwards of $400US on Authenticode stuff is out of the question!\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_4_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_4_1_clnHTMLdoc\" valign=\"top\">\r\n2/24/2003\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_4_2_clnHTMLdoc\" valign=\"top\">\r\nThe way Clean HTML handles Word tables has been completely revised and is documented below.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_5_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_5_1_clnHTMLdoc\" valign=\"top\">\r\n2/24/2003\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_5_2_clnHTMLdoc\" valign=\"top\">\r\nImproved support for Clean HTML Character Styles in combination with Paragraph Styles added. Support for the Word 2002 <strong>Target Frame…</strong> entry added to Hyperlink translation.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_6_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_6_1_clnHTMLdoc\" valign=\"top\">\r\n8/29/2002\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_6_2_clnHTMLdoc\" valign=\"top\">\r\nHaving multiple document windows open in Word 2002 may cause CleanHTML to disappear behind an open window. Flipping through windows using <code>Alt + Tab</code> helps.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_7_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_7_1_clnHTMLdoc\" valign=\"top\">\r\n8/29/2002\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_7_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nCurrently CleanHTML ignores Bookmarks. This implies that headers (e.g. a paragraph of style <strong>Header 2</strong>) will not be translated if it is being used as a Bookmark.\r\n</p>\r\n<p>\r\n<em>Note:</em> Pasting HTML into a Microsoft Word file may cause Bookmarks to appear—even if <strong>Match Destination Formatting</strong> is used in Word 2002 and above.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_8_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_8_1_clnHTMLdoc\" valign=\"top\">\r\n7/11/2002\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_8_2_clnHTMLdoc\" valign=\"top\">\r\nFixed problems with <strong>List Bullet</strong> and <strong>List Number</strong> styles.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_9_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_9_1_clnHTMLdoc\" valign=\"top\">\r\n7/11/2002\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_9_2_clnHTMLdoc\" valign=\"top\">\r\nFixed various problems associated with the first character of the document being formatted.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_10_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_10_1_clnHTMLdoc\" valign=\"top\">\r\n7/11/2002\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_10_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\n<span style=\"text-decoration:line-through\">Had fatal problems with international versions of Microsoft Word that are not based on the English language. Clean HTML is not known to run correctly with international versions of Microsoft Word.</span>\r\n</p>\r\n<p>\r\n<strong>NOTE:</strong> We believe this problem is corrected. See 9/10/04 above.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_11_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_11_1_clnHTMLdoc\" valign=\"top\">\r\n7/11/2002\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_11_2_clnHTMLdoc\" valign=\"top\">\r\n“Hidden” characters are now shown during Clean HTML translation to prevent problems associated with Word 2002.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_12_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_12_1_clnHTMLdoc\" valign=\"top\">\r\n1/20/2002\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_12_2_clnHTMLdoc\" valign=\"top\">\r\nThe ability to save Clean HTML text files to disk was added.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_13_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_13_1_clnHTMLdoc\" valign=\"top\">\r\n1/20/2002\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_13_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nClean HTML is unable to translate paragraphs highlighted within a table.\r\n</p>\r\n<p>\r\n<em>Workaround:</em> copy and paste the text into a new document without the table and run Clean HTML.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_14_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_14_1_clnHTMLdoc\" valign=\"top\">\r\n1/20/2002\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_14_2_clnHTMLdoc\" valign=\"top\">\r\nClean HTML moves through Footnote characters very, very slowly.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h2>Clean HTML Installation</h2>\r\n<p align=\"left\">\r\n    Because of the awesome negative impact of “macro viruses,” Clean HTML will not deploy itself automatically after running some kind of setup program. Installation of Clean HTML must be done manually by copying <code>Clean HTML.dot</code> to a Word 2000/2002 Startup folder and loading it with the <strong>Templates and Add-Ins…</strong> command under the Word 2000/2002 <strong>Tools</strong> menu.<a href=\"#note2\"><sup>2</sup></a> The <strong>Templates and Add-Ins…</strong> dialog shown below should summarize the installation of Clean HTML:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"Install Clean HTML.dot in your StartUp folder.\" src=\"http://songhaysystem.com/bitmaps/WD2KHTMLConversion/CleanHTMLInstall.gif\" width=\"333\" height=\"327\" />\r\n</p>\r\n<p align=\"left\">\r\n    After Clean HTML has been properly installed, it can be run from the <strong>Tools &gt; Macro &gt; Macros…</strong> dialog:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"Run Clean HTML from this dialog.\" src=\"http://songhaysystem.com/bitmaps/WD2KHTMLConversion/CleanHTMLMacro.gif\" width=\"453\" height=\"326\" />\r\n</p>\r\n<p align=\"left\">\r\n    Or, if you are familiar with the customizing features of Word 2000/2002, you can assign Clean HTML to a button and place this button on one of the Tool Bars. You can <a href=\"http://techrepublic.com.com/5100-6329-1060039.html\" title=\"How to create macro buttons in Excel and Word\">set up a button</a> that looks like this:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"Press this button or enter Alt + c to run Clean HTML\" src=\"http://songhaysystem.com/bitmaps/WD2KHTMLConversion/CleanHTMLButton.gif\" width=\"262\" height=\"75\" />\r\n</p>\r\n<p align=\"left\">\r\n    This means that you can run Clean HTML by pressing the button or typing <strong>Alt + c</strong>.\r\n</p>\r\n\r\n<h2>Clean HTML Functionality</h2>\r\n<p align=\"left\">\r\n    Clean HTML processes a Word 2000/2002 document with two logical loops. The first loop moves through the Collection of Paragraphs in a Word document. Within each Paragraph, the second loop moves through each Word.<a href=\"#note3\"><sup>3</sup></a> Additionally, there is a command to wrap the Clean HTML in document-level elements (including customizable <code>meta</code> elements) and save to an external file. Each loop looks for certain conditions to determine what to translate to HTML. Let’s call the first loop the <em>Paragraph Loop</em>—and the second loop the <em>Word Loop.</em> Let’s specify what each loop does:\r\n</p>\r\n\r\n<h2>Paragraph Loop</h2>\r\n<table align=\"center\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_2_clnHTMLdoc\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_1_clnHTMLdoc\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_2_1_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Condition</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_2_1_2_clnHTMLdoc\" valign=\"top\">\r\n<strong>Response</strong>\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_2_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_2_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Code Block.</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_2_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nSend this paragraph to the Word Loop (see below). Place the output of this loop in a <code>pre</code> element.\r\n</p>\r\n<p>\r\nThis is a custom Style created for Clean HTML.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_3_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_3_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Hidden Block.</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_3_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nClean HTML ignores this paragraph.\r\n</p>\r\n<p>\r\nThis is a custom Style created for Clean HTML.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_4_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_4_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>HTML Block.</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_4_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirectly translate the text in this paragraph as HTML.\r\n</p>\r\n<p>\r\nThis is a custom Style created for Clean HTML.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_5_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_5_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>List Bullet.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_5_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>li</code> elements. If it is the first paragraph of this style, prefix an opening <code>ul</code> element. Suffix the last paragraph with a closing <code>ul</code> element.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_6_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_6_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>List Number.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_6_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>li</code> elements. If it is the first paragraph of this style, prefix an opening <code>ol</code> element. Suffix the last paragraph with a closing <code>ol</code> element.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_7_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_7_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Normal.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_7_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>p</code> elements.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_8_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_8_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Style Block.</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_8_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nSend this paragraph to the Word Loop (see below). <em>Do not</em> wrap the output of this loop in <code>p</code> elements.\r\n</p>\r\n<p>\r\nThis style allows Word 2000/2002 paragraphs to be wrapped in customized HTML written in the Style <strong>HTML Block.</strong>\r\n</p>\r\n<p>\r\nThis is a custom Style created for Clean HTML.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_9_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_9_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Heading 1.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_9_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>h1</code> elements.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_10_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_10_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Heading 2.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_10_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>h2</code> elements.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_11_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_11_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Heading 3.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_11_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>h3</code> elements.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_12_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_12_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Heading 4.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_12_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>h4</code> elements.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_13_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_13_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Heading 5.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_13_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>h5</code> elements.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_14_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_14_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph with Style <strong>Heading 6.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_14_2_clnHTMLdoc\" valign=\"top\">\r\nSend this paragraph to the Word Loop (see below). Wrap the output of this loop in <code>h6</code> elements. Additional headings are ignored.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_15_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_15_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph consisting of one in-line Shape.\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_15_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nTranslate to an HTML block containing one <code>img</code> element.\r\n</p>\r\n<p>\r\nIf the in-line Shape is not connected to an external file, the <code>src</code> attribute is determined by reading a URI in the <strong>Alternative text</strong> box under the <strong>Format Image…&gt;Web</strong> tab. If Alternative Text is specified then we have a pipe-delimited list of the form <code>&lt;uri&gt;|&lt;alt attribute&gt;</code>.\r\n</p>\r\n<p>\r\nFailing this, the formatting stops and an alert message displays.\r\n</p>\r\n<p>\r\nThe <code>width</code> and <code>height</code> attributes of the <code>img</code> element are calculated with the following formulae:\r\n</p>\r\n<pre>\r\n<code>VBA.Round(.Width / 0.75, 0)</code>\r\n</pre>\r\n<p>\r\nand\r\n</p>\r\n<pre>\r\n<code>VBA.Round(.Height / 0.75, 0)</code>\r\n</pre>\r\n<p>\r\nwhere <code>0.75</code> is a conversion factor to pixels from the units used by the Shape.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_16_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_16_1_clnHTMLdoc\" valign=\"top\">\r\nA paragraph inside of a Table.\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_16_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nIf this paragraph is the first cell of the table then it is translated to a temporary marker of the form <code>&lt;table</code><em><code>n</code></em><code>&gt;</code> where <em><code>n</code></em> starts at 1 and counts up to the number of “top-level” tables in the document.<a href=\"#note4\"><sup>4</sup></a>\r\n</p>\r\n<p>\r\nAt the end of the Paragraph Loop these temporary tags are replaced with the ordered Collection of tables in the word document.\r\n</p>\r\n<p>\r\nThe first row of a table is translated to <code>th</code> elements. As of this writing, <em>vertically</em> merged rows are not supported by Microsoft Word VBA (see below for more details).\r\n</p>\r\n<p>\r\nThe <code>table</code> element has the following attributes:\r\n</p>\r\n<pre>\r\n<code>&lt;table\r\n    align=&quot;&lt;left&gt;|&lt;center&gt;|&lt;right&gt;&quot;\r\n    class=&quot;cleanHTMLTable&quot;\r\n    id=&quot;cleanHTMLTable_</code><em><code>n</code></em><code>_</code><em><code>CSS_ID</code></em><code>&quot;&gt;</code>\r\n</pre>\r\n<p>\r\nwhere <em><code>n</code></em> corresponds to the index of the table in the Word Tables Collection; <code>CSS_ID</code> is an optional custom file property used to uniquely identify the table among tables translated out of different Word documents (see “Formatting Tables with CSS Level 2” below).\r\n</p>\r\n<p>\r\nThe <code>align</code> attribute of the <code>table</code> element is determined by the setting under <strong>Table Properties…&gt; Table &gt; Alignment</strong>. To prevent the table from floating next to subsequent block elements, <code>&lt;br clear=&quot;all&quot;&gt;</code> is appended at the end of the table.\r\n</p>\r\n<p>\r\nThe <code>tr</code> opening element has the following attributes:\r\n</p>\r\n<pre>\r\n<code>&lt;tr\r\n    class=&quot;cleanHTMLTableRow&quot;\r\n    id=&quot;cleanHTMLTableRow_</code><em><code>n</code></em><code>_</code><em><code>r</code></em><code>_</code><em><code>CSS_ID</code></em><code>&quot;&gt;</code>\r\n</pre>\r\n<p>\r\nwhere <em><code>n</code></em> corresponds to the index of the table in the Word Tables Collection and <em><code>r</code></em> is the respective <code>Index</code> property of the Word Row object of the Table; <code>CSS_ID</code> is an optional custom file property used to uniquely identify the table among tables translated out of different documents (see “Formatting Tables with CSS Level 2” below).\r\n</p>\r\n<p>\r\nThe <code>th</code> or <code>td</code> opening element has the following attributes:\r\n</p>\r\n<pre>\r\n<code>&lt;th\r\n    align=&quot;&lt;center&gt;|&lt;left&gt;|&lt;right&gt;&quot;\r\n    class=&quot;cleanHTMLTableHeader&quot;\r\n    colspan=&quot;</code><em><code>n</code></em><code>&quot;\r\n    id=&quot;cleanHTMLTableHeader_</code><em><code>n</code></em><code>_</code><em><code>r</code></em><code>_</code><em><code>c</code></em><code>_</code><em><code>CSS_ID</code></em><code>&quot;\r\n    valign=&quot;&lt;top&gt;|&lt;middle&gt;|&lt;bottom&gt;&quot;&gt;</code>\r\n</pre>\r\n<p>\r\nor\r\n</p>\r\n<pre>\r\n<code>&lt;td\r\n    align=&quot;&lt;center&gt;|&lt;left&gt;|&lt;right&gt;&quot;\r\n    class=&quot;cleanHTMLTableHeader&quot;\r\n    colspan=&quot;</code><em><code>n</code></em><code>&quot;\r\n    id=&quot;cleanHTMLTableData_</code><em><code>n</code></em><code>_</code><em><code>r</code></em><code>_</code><em><code>c</code></em><code>_</code><em><code>CSS_ID</code></em><code>&quot;\r\n    valign=&quot;&lt;top&gt;|&lt;middle&gt;|&lt;bottom&gt;&quot;&gt;</code>\r\n</pre>\r\n<p>\r\nwhere the <code>align</code> attribute is either center, left or right (justified paragraphs are not supported by Clean HTML until hyphenation is supported in the “mainstream” web browsers). <em><code>n</code></em> for <code>colspan</code> is only equal to maximum number of columns in the table (a number greater than one). This is illustrated below in “Tables with Horizontally Merged Cells.”\r\n</p>\r\n<p>\r\n<em><code>n</code></em> for the <code>id</code> attribute corresponds to the index of the table in the Word Tables Collection; <em><code>r</code></em> is the respective <code>Index</code> property of the Word Row object of the Table; <em><code>c</code></em> is the respective <code>ColumnIndex</code> property of the Word Cell object; <code>CSS_ID</code> is an optional custom file property used to uniquely identify the table among tables translated out of different documents (see “Formatting Tables with CSS Level 2” below).\r\n</p>\r\n<p>\r\nThe <code>valign</code> attribute is determined by the setting under <strong>Table Properties…&gt; Cell &gt; Vertical alignment</strong>.\r\n</p>\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h3>Formatting Tables with CSS Level 2</h3>\r\n<p align=\"left\">\r\n    Clean HTML table formatting depends almost entirely on <a href=\"http://www.w3.org/TR/REC-CSS2/\">CSS Level 2</a> and its support in “mainstream” browsers. As of the revision date of this document, the support for CSS Level 2 is satisfactory—especially for <a href=\"http://www.ncdesign.org/html/s041table.htm\">the formatting of HTML tables</a>. This dependency allows Clean HTML the highest level of flexibility. Clean HTML assigns a unique ID to each table, each row and even each cell on the HTML page. By using <a href=\"http://www.w3.org/TR/REC-CSS1\">ID selectors</a> (from <a href=\"http://www.w3.org/TR/REC-CSS1\">CSS Level 1</a>), a Cascading style sheet can reach any table element including the table itself.\r\n</p>\r\n<p align=\"left\">\r\n    Tables translated to Clean HTML from different Word documents can still be uniquely identified by using the <code>CSS_ID</code> custom file property discussed below under “Translation of Word 2000/2002 File Properties into Clean HTML.”\r\n</p>\r\n<p align=\"left\">\r\n    The following style block below is one of the simplest designs for HTML tables:\r\n</p>\r\n<pre>\r\n<code>&lt;style&gt;&lt;!--\r\n    .cleanHTMLTable{\r\n        border:solid 1px #000000;\r\n        border-collapse:collapse;\r\n    }\r\n    .cleanHTMLTableHeader,.cleanHTMLTableData{\r\n        border:solid 1px #000000;\r\n    }\r\n //--&gt;\r\n&lt;/style&gt;</code>\r\n</pre>\r\n<p align=\"left\">\r\n    Most importantly, the <code>border-collapse</code> property is the key to making an HTML table “look like” an HTML table rendered without Cascading Style Sheets. More advanced table formatting techniques are discussed in detail at <a href=\"http://www.w3.org/TR/REC-CSS2/tables.html\">W3.org</a>.\r\n</p>\r\n\r\n<h3>Tables with Horizontally Merged Cells</h3>\r\n<p align=\"left\">\r\n    The following table should translate into Clean HTML and produce the expected results:\r\n</p>\r\n<table align=\"center\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_3_clnHTMLdoc\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_3_1_clnHTMLdoc\">\r\n    <th align=\"center\" colspan=\"4\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_3_1_1_clnHTMLdoc\" valign=\"top\">\r\n\r\n<h4>A Word Table with Horizontally Merged Cells</h4>\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_3_2_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_2_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Cell One</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_2_2_clnHTMLdoc\" valign=\"top\">\r\n<strong>Cell Two</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_2_3_clnHTMLdoc\" valign=\"top\">\r\n<strong>Cell Three</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_2_4_clnHTMLdoc\" valign=\"top\">\r\n<strong>Cell Four</strong>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_3_3_clnHTMLdoc\">\r\n    <td align=\"left\" colspan=\"4\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_3_1_clnHTMLdoc\" valign=\"top\">\r\nAs of this writing, Clean HTML only supports horizontally merged cells across all columns of the table.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h2>Word Loop</h2>\r\n<table align=\"center\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_4_clnHTMLdoc\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_1_clnHTMLdoc\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_4_1_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Condition</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_4_1_2_clnHTMLdoc\" valign=\"top\">\r\n<strong>Response</strong>\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_2_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_2_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters formatted as Bold.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_2_2_clnHTMLdoc\" valign=\"top\">\r\nTranslate to <code>strong</code> elements. This translation will not take place for paragraphs with heading styles (e.g. <strong>Heading 1</strong>).\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_3_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_3_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters formatted as Italic.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_3_2_clnHTMLdoc\" valign=\"top\">\r\nTranslate to <code>em</code> elements. This translation will not take place for paragraphs with heading styles (e.g. <strong>Heading 1</strong>).\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_4_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_4_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters formatted as Underline (or any of the other underline character formats—e.g.: Double Underline).\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_4_2_clnHTMLdoc\" valign=\"top\">\r\nTranslate to <code>span</code> elements with <code>style</code> attribute. (<code>u </code>elements have been deprecated in HTML 4.0.)\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_5_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_5_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters formatted as Strikethrough (e.g.: <span style=\"text-decoration:line-through\">strikethrough</span>).\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_5_2_clnHTMLdoc\" valign=\"top\">\r\nTranslate to <code>span</code> elements with <code>style</code> attribute. (<code>strike </code>elements have been deprecated in HTML 4.0.)\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_6_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_6_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters with Style <strong>Code Block.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_6_2_clnHTMLdoc\" valign=\"top\">\r\nTranslate to <code>code</code> elements. Note that this is a paragraph-level Word style.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_7_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_7_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters with Style <strong>Code Line.</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_7_2_clnHTMLdoc\" valign=\"top\">\r\nTranslate to <code>code</code> elements.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_8_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_8_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters with Style <strong>Footnote Reference.</strong> Word automatically creates this Style when Footnotes are inserted.\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_8_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nTranslate to <code>a</code> elements pointing to named anchors (“HTML endnotes”) programmatically appended to the end of the Clean HTML.\r\n</p>\r\n<p>\r\nNative Word 2000/2002 Endnotes are ignored.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_9_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_9_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters with Style <strong>Hyperlink.</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_9_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nTranslate to <code>a</code> elements with the <strong>Screen Tip…</strong> entry placed in the <code>alt</code> attribute and the Word 2002 <strong>Target Frame…</strong> entry placed in the <code>target</code> attribute.\r\n</p>\r\n<p>\r\nWord Bookmark locations is not supported.\r\n</p>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_10_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_10_1_clnHTMLdoc\" valign=\"top\">\r\nThe Line Break character.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_10_2_clnHTMLdoc\" valign=\"top\">\r\nIf this character is found in a paragraph of style <strong>Code Block,</strong> translate to carriage return and line feed characters; otherwise translate to the <code>&lt;br&gt;</code> element.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_11_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_11_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters generated by a Field object.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_11_2_clnHTMLdoc\" valign=\"top\">\r\nTranslate according to the rules of the current Style names aforementioned. Warning: only fields that produce results (e.g. formulas generating string values) have been tested with Clean HTML.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_12_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_12_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters within Bookmarks.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_12_2_clnHTMLdoc\" valign=\"top\">\r\nBookmarks are ignored by Clean HTML.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_13_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_13_1_clnHTMLdoc\" valign=\"top\">\r\nCharacters within Comments.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_13_2_clnHTMLdoc\" valign=\"top\">\r\nComments are ignored by Clean HTML.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h3>HTML Entities</h3>\r\n<p align=\"left\">\r\n    The Word Loop looks for “special characters” to translate into HTML entities. The following table summarizes the characters supported by Clean HTML:\r\n</p>\r\n<table align=\"center\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_5_clnHTMLdoc\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_1_clnHTMLdoc\">\r\n    <th align=\"center\" colspan=\"5\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_5_1_1_clnHTMLdoc\" valign=\"top\">\r\n\r\n<h4>Character Codes Translated into Clean HTML</h4>\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_2_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_2_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>0–63</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_2_2_clnHTMLdoc\" valign=\"top\">\r\n<strong>128–159</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_2_3_clnHTMLdoc\" valign=\"top\">\r\n<strong>160–191</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_2_4_clnHTMLdoc\" valign=\"top\">\r\n<strong>192–223</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_2_5_clnHTMLdoc\" valign=\"top\">\r\n<strong>224–255</strong>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_3_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_3_1_clnHTMLdoc\" valign=\"top\">\r\n&quot;\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_3_2_clnHTMLdoc\" valign=\"top\">\r\n€\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_3_3_clnHTMLdoc\" valign=\"top\">\r\n¡\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_3_4_clnHTMLdoc\" valign=\"top\">\r\nÀ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_3_5_clnHTMLdoc\" valign=\"top\">\r\nÀ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_4_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_4_1_clnHTMLdoc\" valign=\"top\">\r\n&amp;\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_4_2_clnHTMLdoc\" valign=\"top\">\r\nƒ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_4_3_clnHTMLdoc\" valign=\"top\">\r\n¢\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_4_4_clnHTMLdoc\" valign=\"top\">\r\nÁ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_4_5_clnHTMLdoc\" valign=\"top\">\r\nÁ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_5_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_5_1_clnHTMLdoc\" valign=\"top\">\r\n&lt;\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_5_2_clnHTMLdoc\" valign=\"top\">\r\n„\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_5_3_clnHTMLdoc\" valign=\"top\">\r\n£\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_5_4_clnHTMLdoc\" valign=\"top\">\r\nÂ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_5_5_clnHTMLdoc\" valign=\"top\">\r\nÂ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_6_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_6_1_clnHTMLdoc\" valign=\"top\">\r\n&gt;\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_6_2_clnHTMLdoc\" valign=\"top\">\r\n…\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_6_3_clnHTMLdoc\" valign=\"top\">\r\n¤\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_6_4_clnHTMLdoc\" valign=\"top\">\r\nÃ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_6_5_clnHTMLdoc\" valign=\"top\">\r\nÃ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_7_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_7_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_7_2_clnHTMLdoc\" valign=\"top\">\r\n†\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_7_3_clnHTMLdoc\" valign=\"top\">\r\n¥\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_7_4_clnHTMLdoc\" valign=\"top\">\r\nÄ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_7_5_clnHTMLdoc\" valign=\"top\">\r\nÄ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_8_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_8_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_8_2_clnHTMLdoc\" valign=\"top\">\r\n‡\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_8_3_clnHTMLdoc\" valign=\"top\">\r\n¦\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_8_4_clnHTMLdoc\" valign=\"top\">\r\nÅ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_8_5_clnHTMLdoc\" valign=\"top\">\r\nÅ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_9_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_9_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_9_2_clnHTMLdoc\" valign=\"top\">\r\nˆ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_9_3_clnHTMLdoc\" valign=\"top\">\r\n§\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_9_4_clnHTMLdoc\" valign=\"top\">\r\nÆ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_9_5_clnHTMLdoc\" valign=\"top\">\r\nÆ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_10_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_10_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_10_2_clnHTMLdoc\" valign=\"top\">\r\n‰\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_10_3_clnHTMLdoc\" valign=\"top\">\r\n¨\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_10_4_clnHTMLdoc\" valign=\"top\">\r\nÏ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_10_5_clnHTMLdoc\" valign=\"top\">\r\nÇ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_11_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_11_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_11_2_clnHTMLdoc\" valign=\"top\">\r\nŠ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_11_3_clnHTMLdoc\" valign=\"top\">\r\n©\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_11_4_clnHTMLdoc\" valign=\"top\">\r\nÈ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_11_5_clnHTMLdoc\" valign=\"top\">\r\nÈ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_12_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_12_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_12_2_clnHTMLdoc\" valign=\"top\">\r\n‹\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_12_3_clnHTMLdoc\" valign=\"top\">\r\nª\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_12_4_clnHTMLdoc\" valign=\"top\">\r\nÉ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_12_5_clnHTMLdoc\" valign=\"top\">\r\nÉ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_13_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_13_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_13_2_clnHTMLdoc\" valign=\"top\">\r\nŒ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_13_3_clnHTMLdoc\" valign=\"top\">\r\n«\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_13_4_clnHTMLdoc\" valign=\"top\">\r\nÊ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_13_5_clnHTMLdoc\" valign=\"top\">\r\nÊ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_14_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_14_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_14_2_clnHTMLdoc\" valign=\"top\">\r\n‘\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_14_3_clnHTMLdoc\" valign=\"top\">\r\n¬\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_14_4_clnHTMLdoc\" valign=\"top\">\r\nË\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_14_5_clnHTMLdoc\" valign=\"top\">\r\nË\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_15_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_15_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_15_2_clnHTMLdoc\" valign=\"top\">\r\n’\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_15_3_clnHTMLdoc\" valign=\"top\">\r\n®\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_15_4_clnHTMLdoc\" valign=\"top\">\r\nÌ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_15_5_clnHTMLdoc\" valign=\"top\">\r\nÌ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_16_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_16_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_16_2_clnHTMLdoc\" valign=\"top\">\r\n“\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_16_3_clnHTMLdoc\" valign=\"top\">\r\n¯\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_16_4_clnHTMLdoc\" valign=\"top\">\r\nÍ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_16_5_clnHTMLdoc\" valign=\"top\">\r\nÍ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_17_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_17_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_17_2_clnHTMLdoc\" valign=\"top\">\r\n”\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_17_3_clnHTMLdoc\" valign=\"top\">\r\n°\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_17_4_clnHTMLdoc\" valign=\"top\">\r\nÎ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_17_5_clnHTMLdoc\" valign=\"top\">\r\nÎ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_18_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_18_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_18_2_clnHTMLdoc\" valign=\"top\">\r\n•\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_18_3_clnHTMLdoc\" valign=\"top\">\r\n±\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_18_4_clnHTMLdoc\" valign=\"top\">\r\nÏ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_18_5_clnHTMLdoc\" valign=\"top\">\r\nÏ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_19_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_19_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_19_2_clnHTMLdoc\" valign=\"top\">\r\n–\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_19_3_clnHTMLdoc\" valign=\"top\">\r\n²\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_19_4_clnHTMLdoc\" valign=\"top\">\r\nÐ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_19_5_clnHTMLdoc\" valign=\"top\">\r\nÐ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_20_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_20_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_20_2_clnHTMLdoc\" valign=\"top\">\r\n—\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_20_3_clnHTMLdoc\" valign=\"top\">\r\n³\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_20_4_clnHTMLdoc\" valign=\"top\">\r\nÑ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_20_5_clnHTMLdoc\" valign=\"top\">\r\nÑ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_21_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_21_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_21_2_clnHTMLdoc\" valign=\"top\">\r\n˜\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_21_3_clnHTMLdoc\" valign=\"top\">\r\n´\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_21_4_clnHTMLdoc\" valign=\"top\">\r\nÚ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_21_5_clnHTMLdoc\" valign=\"top\">\r\nÒ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_22_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_22_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_22_2_clnHTMLdoc\" valign=\"top\">\r\n™\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_22_3_clnHTMLdoc\" valign=\"top\">\r\nµ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_22_4_clnHTMLdoc\" valign=\"top\">\r\nÓ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_22_5_clnHTMLdoc\" valign=\"top\">\r\nÓ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_23_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_23_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_23_2_clnHTMLdoc\" valign=\"top\">\r\nš\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_23_3_clnHTMLdoc\" valign=\"top\">\r\n¶\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_23_4_clnHTMLdoc\" valign=\"top\">\r\nÔ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_23_5_clnHTMLdoc\" valign=\"top\">\r\nÔ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_24_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_24_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_24_2_clnHTMLdoc\" valign=\"top\">\r\n›\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_24_3_clnHTMLdoc\" valign=\"top\">\r\n·\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_24_4_clnHTMLdoc\" valign=\"top\">\r\nÕ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_24_5_clnHTMLdoc\" valign=\"top\">\r\nÕ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_25_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_25_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_25_2_clnHTMLdoc\" valign=\"top\">\r\nœ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_25_3_clnHTMLdoc\" valign=\"top\">\r\n¸\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_25_4_clnHTMLdoc\" valign=\"top\">\r\nÖ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_25_5_clnHTMLdoc\" valign=\"top\">\r\nÖ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_26_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_26_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_26_2_clnHTMLdoc\" valign=\"top\">\r\nŸ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_26_3_clnHTMLdoc\" valign=\"top\">\r\n¹\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_26_4_clnHTMLdoc\" valign=\"top\">\r\n×\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_26_5_clnHTMLdoc\" valign=\"top\">\r\n÷\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_27_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_27_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_27_2_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_27_3_clnHTMLdoc\" valign=\"top\">\r\nº\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_27_4_clnHTMLdoc\" valign=\"top\">\r\nØ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_27_5_clnHTMLdoc\" valign=\"top\">\r\nØ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_28_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_28_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_28_2_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_28_3_clnHTMLdoc\" valign=\"top\">\r\n»\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_28_4_clnHTMLdoc\" valign=\"top\">\r\nÙ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_28_5_clnHTMLdoc\" valign=\"top\">\r\nÙ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_29_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_29_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_29_2_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_29_3_clnHTMLdoc\" valign=\"top\">\r\n¼\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_29_4_clnHTMLdoc\" valign=\"top\">\r\nÚ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_29_5_clnHTMLdoc\" valign=\"top\">\r\nÚ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_30_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_30_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_30_2_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_30_3_clnHTMLdoc\" valign=\"top\">\r\n½\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_30_4_clnHTMLdoc\" valign=\"top\">\r\nÛ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_30_5_clnHTMLdoc\" valign=\"top\">\r\nÛ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_31_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_31_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_31_2_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_31_3_clnHTMLdoc\" valign=\"top\">\r\n¾\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_31_4_clnHTMLdoc\" valign=\"top\">\r\nÜ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_31_5_clnHTMLdoc\" valign=\"top\">\r\nÜ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_32_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_32_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_32_2_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_32_3_clnHTMLdoc\" valign=\"top\">\r\n¿\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_32_4_clnHTMLdoc\" valign=\"top\">\r\nÝ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_32_5_clnHTMLdoc\" valign=\"top\">\r\nÝ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_33_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_33_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_33_2_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_33_3_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_33_4_clnHTMLdoc\" valign=\"top\">\r\nÞ\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_33_5_clnHTMLdoc\" valign=\"top\">\r\nÞ\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_34_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_34_1_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_34_2_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_34_3_clnHTMLdoc\" valign=\"top\">\r\n \r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_34_4_clnHTMLdoc\" valign=\"top\">\r\nß\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_34_5_clnHTMLdoc\" valign=\"top\">\r\nŸ\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h2>Pictures</h2>\r\n<p align=\"left\">\r\n    Here’s a “picture paragraph” of Clean HTML output:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"This is how an alt attribute is included for this picture.\" src=\"http://songhaysystem.com/bitmaps/WD2KHTMLConversion/CleanHTMLOutput.gif\" width=\"423\" height=\"430\" />\r\n</p>\r\n<p align=\"left\">\r\n    Its original linking information, paragraph alignment and <strong>Alternative text</strong> settings are translated into Clean HTML. As of this writing, Hyperlink information assigned to objects other than Range objects is ignored. The next picture paragraph shows the <strong>Alternative text</strong> settings:\r\n</p>\r\n<p align=\"center\">\r\n    <img alt=\"Alternative text settings\" src=\"http://songhaysystem.com/bitmaps/WD2KHTMLConversion/CleanHTMLAltText.gif\" width=\"417\" height=\"380\" />\r\n</p>\r\n\r\n<h2>Saving Clean HTML to a Text File</h2>\r\n<p align=\"left\">\r\n    The Clean HTML output window shows the <strong>Save</strong> button. This command saves a text file of Clean HTML adding “document-level” tags according to the following rules:\r\n</p>\r\n<table align=\"center\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_6_clnHTMLdoc\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_6_1_clnHTMLdoc\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_6_1_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Rule</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_6_1_2_clnHTMLdoc\" valign=\"top\">\r\n<strong>Remarks</strong>\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_6_2_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_6_2_1_clnHTMLdoc\" valign=\"top\">\r\nThe file will be written in Unicode text format.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_6_2_2_clnHTMLdoc\" valign=\"top\">\r\nAny information suggesting that the Unicode format has a negative impact on a system is currently beyond the scope of this document.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_6_3_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_6_3_1_clnHTMLdoc\" valign=\"top\">\r\nThe HTML will be level 4.0 transitional.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_6_3_2_clnHTMLdoc\" valign=\"top\">\r\nThis is denoted by the <code>DOCTYPE</code> declaration.\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_6_4_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_6_4_1_clnHTMLdoc\" valign=\"top\">\r\nWord 2000/2002 File Properties are translated into <code>meta</code> and <code>base</code> elements.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_6_4_2_clnHTMLdoc\" valign=\"top\">\r\nWord 2000/2002 has both “built-in” file properties and Custom File Properties. Both of these property types are found in the <strong>Properties</strong> dialog under the <strong>File</strong> menu (see below for more details).\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_6_5_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_6_5_1_clnHTMLdoc\" valign=\"top\">\r\nClean HTML recognizes Custom File Properties that create references to external style sheets and script files.\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_6_5_2_clnHTMLdoc\" valign=\"top\">\r\nSome of these Properties are undocumented (see below for more details).\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h3>Translation of Word 2000/2002 File Properties into Clean HTML</h3>\r\n<p align=\"left\">\r\n    The dialog tabs shown below show a portion of the built-in and custom file properties:\r\n</p>\r\n<div align=\"center\">\r\n<table\r\n    border=\"0\"\r\n    cellpadding=\"3\"\r\n    cellspacing=\"0\">\r\n<tr>\r\n    <td>\r\n<img alt=\"Word 2000/2002 Built-in Properties\" border=\"0\" src=\"http://songhaysystem.com/bitmaps/WD2KHTMLConversion/CleanHTMLProperties.gif\" width=\"355\" height=\"449\" />\r\n    </td>\r\n    <td align=\"right\">\r\n<img alt=\"Word 2000/2002 Custom Properties\" border=\"0\" src=\"http://songhaysystem.com/bitmaps/WD2KHTMLConversion/CleanHTMLCustomProperties.gif\" width=\"355\" height=\"449\" />\r\n    </td>\r\n</tr>\r\n</table>\r\n</div>\r\n<p align=\"left\">\r\n    The table below summarizes the translation of these properties into Clean HTML elements:\r\n</p>\r\n<table align=\"center\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_7_clnHTMLdoc\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_1_clnHTMLdoc\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_7_1_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Word Property</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_7_1_2_clnHTMLdoc\" valign=\"top\">\r\n<strong>Clean HTML Element</strong>\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_2_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_2_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>General &gt; Created</strong><br />\r\n<strong>General &gt; Modified</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_2_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nEach are directly translated into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta\r\n    name=&quot;date created&quot;\r\n    content=&quot;5/16/2001 6:58:00 PM&quot;&gt;\r\n&lt;meta\r\n    name=&quot;date modified&quot;\r\n    content=&quot;1/20/2002 9:34:00 PM&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_3_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_3_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Title</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_3_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirect translation into the text within <code>table</code> elements:\r\n</p>\r\n<pre>\r\n<code>&lt;title&gt;Clean HTML&lt;/title&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_4_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_4_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Subject</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_4_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirect translation into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta\r\n    name=&quot;subject&quot;\r\n    content=&quot;W3C Compliant HTML\r\nfrom Word 2000/2002&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_5_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_5_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Author</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_5_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nIf a pipe-delimiter is not found then translate into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta\r\n    name=&quot;author&quot;\r\n    content=&quot;Bryan D. Wilhite&quot;&gt;</code>\r\n</pre>\r\n<p>\r\nIf a pipe-delimiter is found then assume that the text is a delimited string of form <code>author|email</code> and add a reply-to meta element making two <code>meta</code> elements:\r\n</p>\r\n<pre>\r\n<code>&lt;meta\r\n    name=&quot;author&quot;\r\n    content=&quot;Bryan D. Wilhite&quot;&gt;\r\n&lt;meta\r\n    name=&quot;reply-to&quot;\r\n    content=&quot;rasx@kintespace.com&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_6_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_6_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Manager</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_6_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirect translation into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta name=&quot;manager&quot; content=&quot;None&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_7_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_7_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Company</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_7_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirect translation into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta\r\n    name=&quot;company&quot;\r\n    content=&quot;Songhay System&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_8_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_8_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Category</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_8_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirect translation into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta\r\n    name=&quot;category&quot;\r\n    content=&quot;Utilities&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_9_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_9_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Keywords</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_9_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirect translation into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta\r\n    name=&quot;keywords&quot;\r\n    content=&quot;HTML, Word 2000/2002,\r\nW3C, Clean HTML for Word 2000/2002,\r\nSonghay System&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_10_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_10_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Comments</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_10_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirect translation into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta\r\n    name=&quot;description&quot;\r\n    content=&quot;These Summary attributes\r\nshould appear in the meta tags of the\r\nHTML document.&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_11_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_11_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Summary &gt; Hyperlink base</strong>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_11_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nDirect translation into one <code>base</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;base\r\n    href=&quot;http://www.kintespace.com&quot;\r\n    target=&quot;_self&quot; &gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_12_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_12_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Custom &gt; Name &gt;</strong> <code>[name]</code><br />\r\n<strong>Custom &gt; Value &gt; </strong><code>[value]</code>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_12_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nThese default, custom name-value pairs are scanned by Clean HTML and each pair directly translates into one <code>meta</code> element:\r\n</p>\r\n<pre>\r\n<code>&lt;meta name=&quot;[name]&quot; content=&quot;[value]&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_13_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_13_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Custom &gt; Name &gt; CSS</strong><br />\r\n<strong>Custom &gt; Value &gt; </strong><code>[URI]</code>\r\n    </td>\r\n    <td class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_13_2_clnHTMLdoc\" valign=\"top\">\r\n<p>\r\nThis is a special name-value pair that Clean HTML translates into a <code>link</code> element that refers to an external style sheet:\r\n</p>\r\n<pre>\r\n<code>&lt;link\r\n    rel=&quot;stylesheet&quot;\r\n    type=&quot;text/css&quot;\r\n    href=&quot;[URI]&quot;&gt;</code>\r\n</pre>\r\n<p>\r\nSpecifically, based on the example in the image above, we have:\r\n</p>\r\n<pre>\r\n<code>&lt;link\r\n    rel=&quot;stylesheet&quot;\r\n    type=&quot;text/css&quot;\r\n    href=&quot;../../../root.css&quot;&gt;</code>\r\n</pre>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_7_14_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_14_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Custom &gt; Name &gt; CSS_ID</strong><br />\r\n<strong>Custom &gt; Value &gt; </strong><code>[string]</code>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_7_14_2_clnHTMLdoc\" valign=\"top\">\r\nThis is a special name-value pair that Clean HTML translates into uniquely identifying the <code>id</code> attribute of <code>table</code> elements, <code>tr</code> elements, <code>th</code> elements and <code>td</code> elements.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h2>Flippant Remarks, Tips and Tricks</h2>\r\n<p align=\"left\">\r\n    The idea behind Clean HTML is <em>not</em> to produce HTML that emulates the formatting of Office documents. That’s Microsoft’s job. Office XP subscribers may see some improvements on Microsoft’s previous attempts to produce useful HTML documents. In addition to product interoperability, we also need a <em>clean</em> HTML representation of the contents of Word documents to interact with systems based on vendor agnostic standards.\r\n</p>\r\n<p align=\"left\">\r\n    The elements in Clean HTML are in lowercase. However, as of this writing, Clean HTML does not produce XHTML or HTML streams to be inserted into well-formed XML documents.\r\n</p>\r\n<p align=\"left\">\r\n    As of this writing, Clean HTML does not explicitly support <a href=\"http://www.w3.org/TR/html4/\">HTML 4.01</a>. This W3C specification is known as a “subversion” of HTML 4.0. Many of the popular browsers (like Mozilla) reads the 4.01 <code>DOCTYPE</code> and cause display “problems.” These problems may actually be the browser switching off <a href=\"http://www.htmlhelp.com/tools/validator/doctype.html\">“quirks mode”</a> and actually showing the HTML according to standards. More Clean HTML research in this area will be needed!\r\n</p>\r\n<p align=\"left\">\r\n    The specifications in this document imply that Clean HTML works best with relatively “simple” documents. A “simple” document would only have the default Word Styles (like <strong>Normal</strong> and <strong>Heading 1</strong>) plus the styles from Clean HTML. When a Word Document has a table of contents, columns, comments, text boxes, multiple versions, customized styles, form fields, etc., Clean HTML may not work properly or produce unexpected results.\r\n</p>\r\n<p align=\"left\">\r\n    Clean HTML will not produce well-formed HTML from Word Range objects containing characters with “multiple formatting.” For example, a word formatted with Bold, Italic and Underline will produce poorly formed HTML. In terms of both traditional typography and Clean HTML processing, using multiple formatting is not recommended. However, the following table summarizes some workarounds:\r\n</p>\r\n<table align=\"center\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_8_clnHTMLdoc\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_8_1_clnHTMLdoc\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_8_1_1_clnHTMLdoc\" valign=\"top\">\r\n<strong>Word Formatting</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_8_1_2_clnHTMLdoc\" valign=\"top\">\r\n<strong>Clean HTML</strong>\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_8_2_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_8_2_1_clnHTMLdoc\" valign=\"top\">\r\n<code>&lt;em&gt;</code><a href=\"http://www.amazon.com/exec/obidos/ISBN=2880462797/thekintespacec00A/\" title=\"Buy this book at Amazon.com\">Experimental Typography (Working With Computer Type , No 4)</a><code>&lt;/em&gt;</code>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_8_2_2_clnHTMLdoc\" valign=\"top\">\r\n<em><a href=\"http://www.amazon.com/exec/obidos/ISBN=2880462797/thekintespacec00A/\" title=\"Buy this book at Amazon.com\">Experimental Typography (Working With Computer Type , No 4)</a></em>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_8_3_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_8_3_1_clnHTMLdoc\" valign=\"top\">\r\n<code>&lt;em&gt;&lt;strong&gt;</code>bold-italic<code>&lt;/strong&gt;&lt;/em&gt;</code>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_8_3_2_clnHTMLdoc\" valign=\"top\">\r\n<em><strong>bold-italic</strong></em>\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_8_4_clnHTMLdoc\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_8_4_1_clnHTMLdoc\" valign=\"top\">\r\n\r\n<h3>Heading <code>&lt;em&gt;</code>Three<code>&lt;/em&gt;</code></h3>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_8_4_2_clnHTMLdoc\" valign=\"top\">\r\n\r\n<h3>Heading <em>Three</em></h3>\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n<p align=\"left\">\r\n    Future enhancements to Clean HTML should include XHTML support. As of this writing, Clean HTML has been extensively tested on Word 2000. For obvious historical reasons, Clean HTML has not been tested extensively on Word XP (or Word 2002). A digital signature for Clean HTML will be forthcoming with increased sales of Clean HTML. For Clean HTML news, registration information, bug reports, etc., <a href=\"mailto:rasx@kintespace.com\">please mail.</a>\r\n</p>\r\n<p align=\"left\">\r\n    Clean HTML is for that happy few who need to separate their lengthy prose from its visual HTML presentation. Such people enjoyed writing a good essay in Microsoft Word but did not enjoy how Microsoft decided to “help” publish that essay to the Internet. Now, with Clean HTML, we can still use Word and feel little more secure that our word processing documents can move to the Internet very quickly, with links, endnotes, images and typographically correct characters—all under a standard Web-Consortium format, open to as many browsers as possible.\r\n</p>\r\n<p align=\"left\">\r\n    This document is rendered entirely via Clean HTML. Please support standards-enabling software and <a href=\"http://store.esellerate.net/s.asp?s=STR291982498\" title=\"Buy Clean HTML\">purchase Clean HTML today.</a>\r\n</p>\r\n\r\n<h2>Endnotes</h2>\r\n<p><small><a name=\"note1\"><sup>1</sup></a> Clean HTML is not compatible with any other version of Microsoft Word (past or future). Clean HTML was only tested in Microsoft Windows installations capable of running Microsoft Office.</small></p>\r\n\r\n<p><small><a name=\"note2\"><sup>2</sup></a> This manual procedure will also verify that you have enough security permissions to use Clean HTML without related errors.</small></p>\r\n\r\n<p><small><a name=\"note3\"><sup>3</sup></a> Actually it loops through each character in each paragraph. Interestingly, there is no “Word” object in the Word VBA Object model. There is a Words Collection where each Item returns a Range Object. It turns out that the Range Object is as important to Word VBA as the Recordset Object is for Access VBA (or ADO).</small></p>\r\n\r\n<p><small><a name=\"note4\"><sup>4</sup></a> “Top-level” implies that Word’s nested tables are not supported as of this writing.</small></p>\r\n",
    "CreateDate": "1999-01-10T20:47:49.0000000",
    "EndDate": null,
    "ModificationDate": "2004-09-10T16:53:21.3630000",
    "DocumentId": "2",
    "PrevFragmentId": "-1",
    "NextFragmentId": "-1",
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "3",
    "FragmentName": "name?",
    "FragmentDisplayName": "Developing a Customized COM Object for ADO",
    "SortOrdinal": null,
    "ItemChar": "<h1>Developing a Customized COM Object for ADO</h1><p>The motivation behind building a COM object for ADO (which is already a COM object) is to generalize and package all of the routines and objects involving ADO that are useful in my solutions. In Chapter One of the <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ado270/htm/mdmscadoprogrammersguide.asp\" shape=\"rect\">ADO Programmer’s Guide</a>, Microsoft writes, “ADO is designed to provide developers with a powerful, logical object model for programmatically accessing, editing and updating a wide variety of data sources through OLE DB system interfaces.” Where we see “wide variety” suggesting that ADO is <em>extremely</em> general. My solutions require a finite number of generic routines that are a subset of the total number of features ADO provides. The routines are:</p><ul><li>Connecting to Microsoft Jet 3.x/4.x engines, ODBC-compatible sources (DSN-less), Oracle DBMS, SQL Server DBMS, Sybase DBMS and data sources specified by Microsoft Data Link files (UDL files). When connecting to SQL Server 7.x, I want to take advantage of the new security features of SQL 7 on Windows NT.</li><li>Executing <em>ad hoc</em> SQL (or “dynamic” SQL).</li><li>Executing stored procedures.</li><li>Returning data sets to a “business object” accessing the ADODB library and a client (or user interface).</li><li>Trapping/Reporting data-related errors.</li></ul><p>The remainder of this document will list and describe the properties and methods of this object, explore a few real world cases where this object is implemented, and look toward future enhancements.</p><h2>ADO Services</h2><p>The file name is <code>rasxADO.dll</code>, containing the Class <code>ADOServices</code>.</p><table class=\"docTable\"><tr><th colspan=\"2\" rowspan=\"1\">Public Properties of <code>ADOServices</code></th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Connection</code></td><td colspan=\"1\" rowspan=\"1\">Get an <code>ADODB.Connection</code> object. This property is read only.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ErrorText</code></td><td colspan=\"1\" rowspan=\"1\">Get both the VBA error and the Collection of ADO error numbers and descriptions. This property is read only.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>RecordsAffected</code></td><td colspan=\"1\" rowspan=\"1\">Get the number of data records affected by procedures/SQL executed by this Object. Usually this value is <code>-1</code> since it is poorly supported by the OLE DB providers used by this Class. (See <code>StoredProcCmd()</code> below.) This property is read only.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>SessionLog</code></td><td colspan=\"1\" rowspan=\"1\">Get verbose descriptions of ADO connection/disconnection attempts, procedure/SQL execution and Class initialization/termination. Recommended for debugging purposes. This property is read only.</td></tr></table><table class=\"docTable\"><tr><th colspan=\"2\" rowspan=\"1\">Public Methods of <code>ADOServices</code></th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ClientRst()</code></td><td colspan=\"1\" rowspan=\"1\">Returns a disconnected, ADO Recordset (<code>CursorType:=adOpenStatic</code> and <code>LockType:=adLockBatchOptimistic</code>), optimized for “fat-client” grid controls like those for VB 6 x forms. This method is also used to access ADO Recordset methods like <code>MoveFirst()</code> and <code>MovePrevious()</code>, and properties like <code>Recordcount</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>CloseRecordset()</code></td><td colspan=\"1\" rowspan=\"1\">Closes the specified Recordset object and sets the object to <code>Nothing</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>CnnCmd()</code></td><td colspan=\"1\" rowspan=\"1\">Executes dynamic SQL commands against the <code>ADODB.Connection</code> object.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>CnnRst()</code></td><td colspan=\"1\" rowspan=\"1\">Executes dynamic SQL projections against the <code>ADODB.Connection</code> object and returns a read-only, forward-only ADO Recordset.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Connect()</code></td><td colspan=\"1\" rowspan=\"1\">Returns a Boolean value indicating success/failure while attempting to set the <code>Connection</code> property of this Class. This method must be used before any other methods in this Class.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Disconnect()</code></td><td colspan=\"1\" rowspan=\"1\">Closes the ADO connection object.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>StoredProcCmd()</code></td><td colspan=\"1\" rowspan=\"1\">Executes a stored procedure against the <code>ADODB.Command</code> object.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>StoredProcRst()</code></td><td colspan=\"1\" rowspan=\"1\">Executes a stored procedure against the <code>ADODB.Command</code> object and returns a read-only, forward-only ADO Recordset.</td></tr></table><h2>Remarks</h2><p><em>The arguments for</em><code>ClientRst()</code><em>,</em><code>CnnCmd()</code><em>, and</em><code>CnnRst()</code><em> are identical</em>. The following table summarizes:</p><table class=\"docTable\"><tr><th colspan=\"2\" rowspan=\"1\">Arguments of <code>ClientRst()</code>, <code>CnnCmd()</code>, and <code>CnnRst()</code></th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Source</code></td><td colspan=\"1\" rowspan=\"1\">Required. String literal. By value. Valid SQL for the DBMS. SQL strings with parameters contain question marks (<code>?</code>).</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Options</code></td><td colspan=\"1\" rowspan=\"1\">Required. <code>ADODB.CommandTypeEnum</code>. By value. As of this writing, <code>adCmdStoredProc</code> is not supported by these methods: <code>ClientRst()</code>, <code>CnnCmd()</code>, and <code>CnnRst()</code>. Only <code>adCmdText</code> has been extensively tested.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>SQLPrms</code></td><td colspan=\"1\" rowspan=\"1\">Optional. Variant. By value. This value can be an array or delimited string literal corresponding to the parameters required by <code>Source</code>. The string literal must be delimited by <code>vbNullChar</code> characters.</td></tr></table><p>Two of the arguments for <code>Connect()</code> has its own Enumerated Constants. The following table summarizes:</p><table class=\"docTable\"><tr><th colspan=\"2\" rowspan=\"1\">Arguments of <code>Connect()</code></th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>DataSrc</code></td><td colspan=\"1\" rowspan=\"1\">Required. String literal. By value. When <code>DataSrcType</code> is not set to <code>adUDL</code> then this contains the server name of the data source. When <code>DataSrcType:=adUDL</code> then this contains the path to the <a href=\"http://msdn.microsoft.com/library/en-us/dnima00/html/ima0086.asp\" shape=\"rect\">Microsoft Data Link</a> file.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>DataSrcType</code></td><td colspan=\"1\" rowspan=\"1\"><p>Required. <code>rasxADO.EnumDataSrcType</code>. By value. Specifies the types of data sources recognized by the Class. The Class contains the appropriate ADO connection string for each type.</p><p>The Enumerated Constants for this class are:</p><pre xml:space=\"preserve\">adJetOLEDB = 0&amp;\nadJet4OLEDB = 1&amp;\nadODBCOLEDB = 2&amp;\nadOracleOLEDB = 3&amp;\nadSQL7OLEDB = 4&amp;\nadSybaseOLEDB = 5&amp;\nadUDL = 6&amp;\n</pre><p>When this class is used in ASP-based solutions these constants should be specified in an Include File.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ConnectType</code></td><td colspan=\"1\" rowspan=\"1\"><p>Required. <code>rasxADO.EnumConnectOption</code>. By value. Specifies the connection behavior of the ADO connection object.</p><p>The Enumerated Constants for this class are:</p><pre xml:space=\"preserve\">adConnectAsynchronous = 16&amp;\nadConnectSynchronous = -1&amp;\n</pre><p>The value <code>adConnectAsynchronous</code> is frequently used in “fat” or “rich” client Solutions where Controls can report on the status of ADO connecting in real time (via <code>SessionLog</code> and <code>ErrorText</code> properties). When this class is used in ASP-based solutions these constants should be specified in an Include File.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Catalog</code></td><td colspan=\"1\" rowspan=\"1\">Optional. String literal. By value. Usually specifies the name of the database.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>UserName</code></td><td colspan=\"1\" rowspan=\"1\">Optional. String literal. By value. Usually specifies the name of the database user with permission to access the data.<sup>*</sup></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Password</code></td><td colspan=\"1\" rowspan=\"1\">Optional. String literal. By value. Usually specifies the password of the database user with permission to access the data.<sup>*</sup></td></tr></table><p><sup>*</sup>By omitting the <code>UserName</code> and <code>Password</code> when calling <code>Connect()</code> for SQL Server 7.x (or MSDE 1.x) on Windows NT/2000, <code>ADOServices</code> will use the NT/2000 login credentials to attempt to connect to the database server.</p><p><em>The arguments for</em><code>StoredProcCmd(</code>)<em>, and</em><code>StoredProcRst()</code><em> are identical.</em> The following table summarizes:</p><table class=\"docTable\"><tr><th colspan=\"2\" rowspan=\"1\">Arguments of <code>StoredProcCmd()</code>, and <code>StoredProcRst()</code></th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>StoredProcName</code></td><td colspan=\"1\" rowspan=\"1\">Required. String literal. By value. Contains the name of the stored procedure of the DBMS supported by this Class.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Params</code></td><td colspan=\"1\" rowspan=\"1\"><p>Optional. String literal. By reference. This value can be an array or delimited string literal corresponding to the parameters required by <code>StoredProcName</code>. The string literal must be delimited by <code>vbNullChar</code> characters.</p><p>When <code>Has2DparamArray:=True</code> parameters passed as a two-dimensional parameter array can be updated <em>after</em> execution. For example, in Microsoft remote data management systems parameters modified by the <code>OUTPUT</code> keyword will be updated.</p><p>The 2D parameter array has the following form:</p><pre xml:space=\"preserve\"><param’ name>, <row 0>\n<param’ value>, <row 0>\n<param’ name>, <row 1>\n<param’ value>, <row 1>\n</pre><p>etc.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Has2DparamArray</code></td><td colspan=\"1\" rowspan=\"1\">Optional. Boolean. By value. Indicates if <code>Params</code> contains a two-dimensional array. See <code>Params</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>TimeOut</code></td><td colspan=\"1\" rowspan=\"1\">Optional. Number. By value. The number of seconds to set the <code>CommandTimeout</code> property of the ADO Command object. By default it is set to 30 seconds.</td></tr></table><h2>Example Implementations</h2><p>The function <code>basGetKeyString()</code> is used to retrieve string literals from a remote database. These miscellaneous strings are stored in a single table with columns <code>name</code>, <code>caption</code> and <code>string</code>. This function attempts to eliminate the need to “hard-code” strings into a code Module that is “globally” accessible. This function calls the stored procedure <code>GetKeyString</code>:</p><pre xml:space=\"preserve\">Private Function basGetKeyString(ByVal KeyName As String, _\n    Optional ByVal ColumnName = \"string\") As String\n\n    Dim objADO As rasxADO.ADOServices\n    Dim objRst As ADODB.Recordset\n    \n    On Error GoTo basGetKeyString_Err\n    \n    basGetKeyString = vbNullString\n    \n    Set objADO = VBA.CreateObject(\"rasxADO.ADOServices\")\n    \n    If objADO.Connect(dbSERVER, adSQL7OLEDB, _\n        adConnectSynchronous, dbCATALOG, dbUSER) Then _\n        Set objRst = objADO.StoredProcRst(\"GetKeyString\", KeyName)\n        If objRst.BOF And objRst.EOF Then\n            'Recordset with 0 rows.\n            Call Me.basAppInfoMsg(\"KeyName \"\"\" _\n            &amp; KeyName &amp; \"\"\" returns no records.\")\n        Else\n            basGetKeyString = objRst.Fields(ColumnName) &amp; vbNullString\n        End If\n    Else\n        GoTo basGetKeyString_Err\n    End If\n\nbasGetKeyString_Exit:\n    Call objADO.CloseRecordset(objRst)\n    objADO.Disconnect\n    Set objADO = Nothing\n    Exit Function\n\nbasGetKeyString_Err:\n    If (VBA.Err.Number <> 0) Or (objADO.Connection.Errors.Count > 0) Then\n        Call Me.basDataErrMsg(objADO, \"basGetKeyString()\")\n        If (VBA.Err.Number <> 0) Then\n            Resume basGetKeyString_Exit\n        Else\n            GoTo basGetKeyString_Exit\n        End If\n    End If\nEnd Function\n</pre><p>The subroutine <code>basFavoritesScan()</code> is one of three functions used to generate an HTML page out the Internet Explorer Favorites stored on a local machine. This function illustrates the use of two-dimensional parameter passed to the stored procedure <code>NewFavorite</code>:</p><pre xml:space=\"preserve\">Private Sub basFavoritesScan(ByRef objADO As rasxADO.ADOServices, _\n    Optional ByVal Directory = \"\\\")\n\n    Dim objFolders As Scripting.Folders\n    Dim objFolder As Scripting.Folder\n    Dim objFiles As Scripting.Files\n    Dim objFile As Scripting.File\n    \n    Dim lngFolderCount As Long\n\n    Dim varParameters(0 To 1, 0 To 1) As Variant\n    'To be a two-dimensional array of form:\n    '   <param' name>, <row 0>\n    '   <param' value>, <row 0>\n    '   <param' name>, <row 1>\n    '   <param' value>, <row 1>\n    'etc.\n    \n    'For readability:\n    varParameters(0, 0) = \"@path\"\n    varParameters(1, 0) = vbNullString\n    \n    varParameters(0, 1) = \"@url\"\n    varParameters(1, 1) = vbNullString\n    \n    On Error GoTo basFavoritesScan_Err\n    \n    p_strInFile = basGetKeyString(\"path_root_favorites\") &amp; Directory\n    Set objFolders = p_objFileSys.GetFolder(p_strInFile).SubFolders\n    \n    'Initialize Progress Bar.\n    Call basProgress(0, 0, objFolders.Count): p_lngStatusCount = 0\n    \n    For Each objFolder In objFolders\n    \n        varParameters(1, 0) = Directory &amp; objFolder.Name\n        varParameters(1, 1) = \"Directory\"\n        If Not(objADO.StoredProcCmd(\"NewFavorite\", varParameters, True)) _\n        Then GoTo basFavoritesScan_Err\n        \n        Set objFiles = objFolder.Files\n        For Each objFile In objFiles\n            varParameters(1, 0) = Directory _\n                &amp; objFolder.Name &amp; \"\\\" &amp; objFile.Name\n            varParameters(1, 1) = \"File\"\n            If Not(objADO.StoredProcCmd(\"NewFavorite\", _\n                varParameters, True)) _\n            Then GoTo basFavoritesScan_Err\n        Next\n        \n        'Mark progress.\n        p_lngStatusCount = p_lngStatusCount + 1\n        Call basProgress(p_lngStatusCount)\n    \n    Next\n    \n    'Terminate Progress Bar.\n    Call basProgress(0): p_lngStatusCount = 0\n\nbasFavoritesScan_Exit:\n    Exit Sub\n\nbasFavoritesScan_Err:\n    If (VBA.Err.Number <> 0) Or (p_objADO.Connection.Errors.Count > 0) Then\n        Call Me.basDataErrMsg(p_objADO, \"basFavorites()\")\n        If (VBA.Err.Number <> 0) Then\n            Resume basFavoritesScan_Exit\n        Else\n            GoTo basFavoritesScan_Exit\n        End If\n    End If\nEnd Sub\n</pre><h2>Future Enhancements and Free Samples</h2><p>The functionality of this COM object is directly related to the needs of the Solutions that inspired its creation. It follows that these proposed future enhancements primarily anticipate future demands that may be. What “may be” could be:</p><p><strong>Recognizing ADOX.</strong> The Microsoft Access 2000 Project File (.ADP) is certainly using ADOX to support the UI. It is possible that one can “outgrow” what Microsoft is already offering through its use of ADOX in Access 2000. It may be prudent to prepare for that day. <a href=\"http://msdn.microsoft.com/library/en-us/ado270/htm/admscadoxfundamentals.asp\" shape=\"rect\">Chapter 15</a> of the <em>ADO Programmer’s Guide,</em> “ADOX Fundamentals” is a good start.</p><p><strong>Recognizing ADO MD.</strong> Support for multidimensional data providers via ADO appears to be limited to OLE DB providers to Microsoft systems. However, exploring the issue for a few minutes can’t hurt. Mike Gunderloy’s <em><a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnsmart00/html/sa00a1.asp\" shape=\"rect\">Advanced Data Shaping</a></em> article for Smart Access get right into the thick of it.</p><p><strong>Recognizing XML.</strong> Paul Enfield’s <em><a href=\"http://msdn.microsoft.com/library/periodic/period00/earlyrend.htm\" shape=\"rect\">Using Server-Side XSL for Early Rendering: Generating Frequently Accessed Data-Driven Web Pages in Advance</a></em> seems to take ADO out of picture when he shows us an XML world. However, ADO 2.6 can be used to <a href=\"http://support.microsoft.com/support/kb/articles/Q271/7/72.ASP\" shape=\"rect\">open XML files into an ADO Recordset</a> and can even remind me of a <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dninvb00/html/ADORecordset.asp\" shape=\"rect\">really clunky in-memory database.</a> The most compelling treatment of this subject comes from Don Box, his <em><a href=\"http://msdn.microsoft.com/msdnmag/issues/0700/com/\" shape=\"rect\">Using ADO to Create XML-based Recordsets</a></em>, which had me seriously considering using the ADO schema.<a href=\"#endnote1\" title=\"Endnote 1\" shape=\"rect\"><sup>1</sup></a></p><p><strong>Recognizing ADO.NET.</strong> Having seen the simplified object model in ADO.NET it is possible that my class will not be needed in .NET projects. This remains to be <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpconoverviewofadonet.asp\" shape=\"rect\">seen</a>.</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Download</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><a href=\"samples/ADOCustomObject/rasxADO.zip\" shape=\"rect\">rasxADO.zip</a></td><td colspan=\"1\" rowspan=\"1\">Compiled DLL and associated library files.</td></tr></table><div class=\"endnotes_block\"><h1>Endnotes</h1><p><a name=\"endnote1\" shape=\"rect\"><sup>1</sup></a> The main thing that stopped me in my tracks was the amount of security permissions I would have to give the anonymous access account of IIS in order to persist ADO XML files. The problem is that the file can’t be saved twice: my code would have to delete the file first before saving a new one from memory. Not good. Curiously, the “save method” of the MSXML 4.x DOM object does not have this problem.</p></div>",
    "ItemText": "<h1>Developing a Customized COM Object for ADO</h1><p>The motivation behind building a COM object for ADO (which is already a COM object) is to generalize and package all of the routines and objects involving ADO that are useful in my solutions. In Chapter One of the <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ado270/htm/mdmscadoprogrammersguide.asp\" shape=\"rect\">ADO Programmer’s Guide</a>, Microsoft writes, “ADO is designed to provide developers with a powerful, logical object model for programmatically accessing, editing and updating a wide variety of data sources through OLE DB system interfaces.” Where we see “wide variety” suggesting that ADO is <em>extremely</em> general. My solutions require a finite number of generic routines that are a subset of the total number of features ADO provides. The routines are:</p><ul><li>Connecting to Microsoft Jet 3.x/4.x engines, ODBC-compatible sources (DSN-less), Oracle DBMS, SQL Server DBMS, Sybase DBMS and data sources specified by Microsoft Data Link files (UDL files). When connecting to SQL Server 7.x, I want to take advantage of the new security features of SQL 7 on Windows NT.</li><li>Executing <em>ad hoc</em> SQL (or “dynamic” SQL).</li><li>Executing stored procedures.</li><li>Returning data sets to a “business object” accessing the ADODB library and a client (or user interface).</li><li>Trapping/Reporting data-related errors.</li></ul><p>The remainder of this document will list and describe the properties and methods of this object, explore a few real world cases where this object is implemented, and look toward future enhancements.</p><h2>ADO Services</h2><p>The file name is <code>rasxADO.dll</code>, containing the Class <code>ADOServices</code>.</p><table class=\"docTable\"><tr><th colspan=\"2\" rowspan=\"1\">Public Properties of <code>ADOServices</code></th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Connection</code></td><td colspan=\"1\" rowspan=\"1\">Get an <code>ADODB.Connection</code> object. This property is read only.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ErrorText</code></td><td colspan=\"1\" rowspan=\"1\">Get both the VBA error and the Collection of ADO error numbers and descriptions. This property is read only.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>RecordsAffected</code></td><td colspan=\"1\" rowspan=\"1\">Get the number of data records affected by procedures/SQL executed by this Object. Usually this value is <code>-1</code> since it is poorly supported by the OLE DB providers used by this Class. (See <code>StoredProcCmd()</code> below.) This property is read only.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>SessionLog</code></td><td colspan=\"1\" rowspan=\"1\">Get verbose descriptions of ADO connection/disconnection attempts, procedure/SQL execution and Class initialization/termination. Recommended for debugging purposes. This property is read only.</td></tr></table><table class=\"docTable\"><tr><th colspan=\"2\" rowspan=\"1\">Public Methods of <code>ADOServices</code></th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ClientRst()</code></td><td colspan=\"1\" rowspan=\"1\">Returns a disconnected, ADO Recordset (<code>CursorType:=adOpenStatic</code> and <code>LockType:=adLockBatchOptimistic</code>), optimized for “fat-client” grid controls like those for VB 6 x forms. This method is also used to access ADO Recordset methods like <code>MoveFirst()</code> and <code>MovePrevious()</code>, and properties like <code>Recordcount</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>CloseRecordset()</code></td><td colspan=\"1\" rowspan=\"1\">Closes the specified Recordset object and sets the object to <code>Nothing</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>CnnCmd()</code></td><td colspan=\"1\" rowspan=\"1\">Executes dynamic SQL commands against the <code>ADODB.Connection</code> object.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>CnnRst()</code></td><td colspan=\"1\" rowspan=\"1\">Executes dynamic SQL projections against the <code>ADODB.Connection</code> object and returns a read-only, forward-only ADO Recordset.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Connect()</code></td><td colspan=\"1\" rowspan=\"1\">Returns a Boolean value indicating success/failure while attempting to set the <code>Connection</code> property of this Class. This method must be used before any other methods in this Class.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Disconnect()</code></td><td colspan=\"1\" rowspan=\"1\">Closes the ADO connection object.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>StoredProcCmd()</code></td><td colspan=\"1\" rowspan=\"1\">Executes a stored procedure against the <code>ADODB.Command</code> object.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>StoredProcRst()</code></td><td colspan=\"1\" rowspan=\"1\">Executes a stored procedure against the <code>ADODB.Command</code> object and returns a read-only, forward-only ADO Recordset.</td></tr></table><h2>Remarks</h2><p><em>The arguments for</em><code>ClientRst()</code><em>,</em><code>CnnCmd()</code><em>, and</em><code>CnnRst()</code><em> are identical</em>. The following table summarizes:</p><table class=\"docTable\"><tr><th colspan=\"2\" rowspan=\"1\">Arguments of <code>ClientRst()</code>, <code>CnnCmd()</code>, and <code>CnnRst()</code></th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Source</code></td><td colspan=\"1\" rowspan=\"1\">Required. String literal. By value. Valid SQL for the DBMS. SQL strings with parameters contain question marks (<code>?</code>).</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Options</code></td><td colspan=\"1\" rowspan=\"1\">Required. <code>ADODB.CommandTypeEnum</code>. By value. As of this writing, <code>adCmdStoredProc</code> is not supported by these methods: <code>ClientRst()</code>, <code>CnnCmd()</code>, and <code>CnnRst()</code>. Only <code>adCmdText</code> has been extensively tested.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>SQLPrms</code></td><td colspan=\"1\" rowspan=\"1\">Optional. Variant. By value. This value can be an array or delimited string literal corresponding to the parameters required by <code>Source</code>. The string literal must be delimited by <code>vbNullChar</code> characters.</td></tr></table><p>Two of the arguments for <code>Connect()</code> has its own Enumerated Constants. The following table summarizes:</p><table class=\"docTable\"><tr><th colspan=\"2\" rowspan=\"1\">Arguments of <code>Connect()</code></th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>DataSrc</code></td><td colspan=\"1\" rowspan=\"1\">Required. String literal. By value. When <code>DataSrcType</code> is not set to <code>adUDL</code> then this contains the server name of the data source. When <code>DataSrcType:=adUDL</code> then this contains the path to the <a href=\"http://msdn.microsoft.com/library/en-us/dnima00/html/ima0086.asp\" shape=\"rect\">Microsoft Data Link</a> file.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>DataSrcType</code></td><td colspan=\"1\" rowspan=\"1\"><p>Required. <code>rasxADO.EnumDataSrcType</code>. By value. Specifies the types of data sources recognized by the Class. The Class contains the appropriate ADO connection string for each type.</p><p>The Enumerated Constants for this class are:</p><pre xml:space=\"preserve\">adJetOLEDB = 0&amp;\nadJet4OLEDB = 1&amp;\nadODBCOLEDB = 2&amp;\nadOracleOLEDB = 3&amp;\nadSQL7OLEDB = 4&amp;\nadSybaseOLEDB = 5&amp;\nadUDL = 6&amp;\n</pre><p>When this class is used in ASP-based solutions these constants should be specified in an Include File.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ConnectType</code></td><td colspan=\"1\" rowspan=\"1\"><p>Required. <code>rasxADO.EnumConnectOption</code>. By value. Specifies the connection behavior of the ADO connection object.</p><p>The Enumerated Constants for this class are:</p><pre xml:space=\"preserve\">adConnectAsynchronous = 16&amp;\nadConnectSynchronous = -1&amp;\n</pre><p>The value <code>adConnectAsynchronous</code> is frequently used in “fat” or “rich” client Solutions where Controls can report on the status of ADO connecting in real time (via <code>SessionLog</code> and <code>ErrorText</code> properties). When this class is used in ASP-based solutions these constants should be specified in an Include File.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Catalog</code></td><td colspan=\"1\" rowspan=\"1\">Optional. String literal. By value. Usually specifies the name of the database.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>UserName</code></td><td colspan=\"1\" rowspan=\"1\">Optional. String literal. By value. Usually specifies the name of the database user with permission to access the data.<sup>*</sup></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Password</code></td><td colspan=\"1\" rowspan=\"1\">Optional. String literal. By value. Usually specifies the password of the database user with permission to access the data.<sup>*</sup></td></tr></table><p><sup>*</sup>By omitting the <code>UserName</code> and <code>Password</code> when calling <code>Connect()</code> for SQL Server 7.x (or MSDE 1.x) on Windows NT/2000, <code>ADOServices</code> will use the NT/2000 login credentials to attempt to connect to the database server.</p><p><em>The arguments for</em><code>StoredProcCmd(</code>)<em>, and</em><code>StoredProcRst()</code><em> are identical.</em> The following table summarizes:</p><table class=\"docTable\"><tr><th colspan=\"2\" rowspan=\"1\">Arguments of <code>StoredProcCmd()</code>, and <code>StoredProcRst()</code></th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>StoredProcName</code></td><td colspan=\"1\" rowspan=\"1\">Required. String literal. By value. Contains the name of the stored procedure of the DBMS supported by this Class.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Params</code></td><td colspan=\"1\" rowspan=\"1\"><p>Optional. String literal. By reference. This value can be an array or delimited string literal corresponding to the parameters required by <code>StoredProcName</code>. The string literal must be delimited by <code>vbNullChar</code> characters.</p><p>When <code>Has2DparamArray:=True</code> parameters passed as a two-dimensional parameter array can be updated <em>after</em> execution. For example, in Microsoft remote data management systems parameters modified by the <code>OUTPUT</code> keyword will be updated.</p><p>The 2D parameter array has the following form:</p><pre xml:space=\"preserve\"><param’ name>, <row 0>\n<param’ value>, <row 0>\n<param’ name>, <row 1>\n<param’ value>, <row 1>\n</pre><p>etc.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Has2DparamArray</code></td><td colspan=\"1\" rowspan=\"1\">Optional. Boolean. By value. Indicates if <code>Params</code> contains a two-dimensional array. See <code>Params</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>TimeOut</code></td><td colspan=\"1\" rowspan=\"1\">Optional. Number. By value. The number of seconds to set the <code>CommandTimeout</code> property of the ADO Command object. By default it is set to 30 seconds.</td></tr></table><h2>Example Implementations</h2><p>The function <code>basGetKeyString()</code> is used to retrieve string literals from a remote database. These miscellaneous strings are stored in a single table with columns <code>name</code>, <code>caption</code> and <code>string</code>. This function attempts to eliminate the need to “hard-code” strings into a code Module that is “globally” accessible. This function calls the stored procedure <code>GetKeyString</code>:</p><pre xml:space=\"preserve\">Private Function basGetKeyString(ByVal KeyName As String, _\n    Optional ByVal ColumnName = \"string\") As String\n\n    Dim objADO As rasxADO.ADOServices\n    Dim objRst As ADODB.Recordset\n    \n    On Error GoTo basGetKeyString_Err\n    \n    basGetKeyString = vbNullString\n    \n    Set objADO = VBA.CreateObject(\"rasxADO.ADOServices\")\n    \n    If objADO.Connect(dbSERVER, adSQL7OLEDB, _\n        adConnectSynchronous, dbCATALOG, dbUSER) Then _\n        Set objRst = objADO.StoredProcRst(\"GetKeyString\", KeyName)\n        If objRst.BOF And objRst.EOF Then\n            'Recordset with 0 rows.\n            Call Me.basAppInfoMsg(\"KeyName \"\"\" _\n            &amp; KeyName &amp; \"\"\" returns no records.\")\n        Else\n            basGetKeyString = objRst.Fields(ColumnName) &amp; vbNullString\n        End If\n    Else\n        GoTo basGetKeyString_Err\n    End If\n\nbasGetKeyString_Exit:\n    Call objADO.CloseRecordset(objRst)\n    objADO.Disconnect\n    Set objADO = Nothing\n    Exit Function\n\nbasGetKeyString_Err:\n    If (VBA.Err.Number <> 0) Or (objADO.Connection.Errors.Count > 0) Then\n        Call Me.basDataErrMsg(objADO, \"basGetKeyString()\")\n        If (VBA.Err.Number <> 0) Then\n            Resume basGetKeyString_Exit\n        Else\n            GoTo basGetKeyString_Exit\n        End If\n    End If\nEnd Function\n</pre><p>The subroutine <code>basFavoritesScan()</code> is one of three functions used to generate an HTML page out the Internet Explorer Favorites stored on a local machine. This function illustrates the use of two-dimensional parameter passed to the stored procedure <code>NewFavorite</code>:</p><pre xml:space=\"preserve\">Private Sub basFavoritesScan(ByRef objADO As rasxADO.ADOServices, _\n    Optional ByVal Directory = \"\\\")\n\n    Dim objFolders As Scripting.Folders\n    Dim objFolder As Scripting.Folder\n    Dim objFiles As Scripting.Files\n    Dim objFile As Scripting.File\n    \n    Dim lngFolderCount As Long\n\n    Dim varParameters(0 To 1, 0 To 1) As Variant\n    'To be a two-dimensional array of form:\n    '   <param' name>, <row 0>\n    '   <param' value>, <row 0>\n    '   <param' name>, <row 1>\n    '   <param' value>, <row 1>\n    'etc.\n    \n    'For readability:\n    varParameters(0, 0) = \"@path\"\n    varParameters(1, 0) = vbNullString\n    \n    varParameters(0, 1) = \"@url\"\n    varParameters(1, 1) = vbNullString\n    \n    On Error GoTo basFavoritesScan_Err\n    \n    p_strInFile = basGetKeyString(\"path_root_favorites\") &amp; Directory\n    Set objFolders = p_objFileSys.GetFolder(p_strInFile).SubFolders\n    \n    'Initialize Progress Bar.\n    Call basProgress(0, 0, objFolders.Count): p_lngStatusCount = 0\n    \n    For Each objFolder In objFolders\n    \n        varParameters(1, 0) = Directory &amp; objFolder.Name\n        varParameters(1, 1) = \"Directory\"\n        If Not(objADO.StoredProcCmd(\"NewFavorite\", varParameters, True)) _\n        Then GoTo basFavoritesScan_Err\n        \n        Set objFiles = objFolder.Files\n        For Each objFile In objFiles\n            varParameters(1, 0) = Directory _\n                &amp; objFolder.Name &amp; \"\\\" &amp; objFile.Name\n            varParameters(1, 1) = \"File\"\n            If Not(objADO.StoredProcCmd(\"NewFavorite\", _\n                varParameters, True)) _\n            Then GoTo basFavoritesScan_Err\n        Next\n        \n        'Mark progress.\n        p_lngStatusCount = p_lngStatusCount + 1\n        Call basProgress(p_lngStatusCount)\n    \n    Next\n    \n    'Terminate Progress Bar.\n    Call basProgress(0): p_lngStatusCount = 0\n\nbasFavoritesScan_Exit:\n    Exit Sub\n\nbasFavoritesScan_Err:\n    If (VBA.Err.Number <> 0) Or (p_objADO.Connection.Errors.Count > 0) Then\n        Call Me.basDataErrMsg(p_objADO, \"basFavorites()\")\n        If (VBA.Err.Number <> 0) Then\n            Resume basFavoritesScan_Exit\n        Else\n            GoTo basFavoritesScan_Exit\n        End If\n    End If\nEnd Sub\n</pre><h2>Future Enhancements and Free Samples</h2><p>The functionality of this COM object is directly related to the needs of the Solutions that inspired its creation. It follows that these proposed future enhancements primarily anticipate future demands that may be. What “may be” could be:</p><p><strong>Recognizing ADOX.</strong> The Microsoft Access 2000 Project File (.ADP) is certainly using ADOX to support the UI. It is possible that one can “outgrow” what Microsoft is already offering through its use of ADOX in Access 2000. It may be prudent to prepare for that day. <a href=\"http://msdn.microsoft.com/library/en-us/ado270/htm/admscadoxfundamentals.asp\" shape=\"rect\">Chapter 15</a> of the <em>ADO Programmer’s Guide,</em> “ADOX Fundamentals” is a good start.</p><p><strong>Recognizing ADO MD.</strong> Support for multidimensional data providers via ADO appears to be limited to OLE DB providers to Microsoft systems. However, exploring the issue for a few minutes can’t hurt. Mike Gunderloy’s <em><a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnsmart00/html/sa00a1.asp\" shape=\"rect\">Advanced Data Shaping</a></em> article for Smart Access get right into the thick of it.</p><p><strong>Recognizing XML.</strong> Paul Enfield’s <em><a href=\"http://msdn.microsoft.com/library/periodic/period00/earlyrend.htm\" shape=\"rect\">Using Server-Side XSL for Early Rendering: Generating Frequently Accessed Data-Driven Web Pages in Advance</a></em> seems to take ADO out of picture when he shows us an XML world. However, ADO 2.6 can be used to <a href=\"http://support.microsoft.com/support/kb/articles/Q271/7/72.ASP\" shape=\"rect\">open XML files into an ADO Recordset</a> and can even remind me of a <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dninvb00/html/ADORecordset.asp\" shape=\"rect\">really clunky in-memory database.</a> The most compelling treatment of this subject comes from Don Box, his <em><a href=\"http://msdn.microsoft.com/msdnmag/issues/0700/com/\" shape=\"rect\">Using ADO to Create XML-based Recordsets</a></em>, which had me seriously considering using the ADO schema.<a href=\"#endnote1\" title=\"Endnote 1\" shape=\"rect\"><sup>1</sup></a></p><p><strong>Recognizing ADO.NET.</strong> Having seen the simplified object model in ADO.NET it is possible that my class will not be needed in .NET projects. This remains to be <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpconoverviewofadonet.asp\" shape=\"rect\">seen</a>.</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Download</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><a href=\"samples/ADOCustomObject/rasxADO.zip\" shape=\"rect\">rasxADO.zip</a></td><td colspan=\"1\" rowspan=\"1\">Compiled DLL and associated library files.</td></tr></table><div class=\"endnotes_block\"><h1>Endnotes</h1><p><a name=\"endnote1\" shape=\"rect\"><sup>1</sup></a> The main thing that stopped me in my tracks was the amount of security permissions I would have to give the anonymous access account of IIS in order to persist ADO XML files. The problem is that the file can’t be saved twice: my code would have to delete the file first before saving a new one from memory. Not good. Curiously, the “save method” of the MSXML 4.x DOM object does not have this problem.</p></div>",
    "CreateDate": "1999-01-10T20:47:00.0000000",
    "EndDate": null,
    "ModificationDate": "2009-06-29T11:46:00.0000000",
    "DocumentId": "3",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4",
    "FragmentName": null,
    "FragmentDisplayName": "Using a Generic, Stateless VBScript Object to Display Data in a Tabular Format",
    "SortOrdinal": null,
    "ItemChar": "<h1>Using a Generic, Stateless VBScript Object to Display Data in a Tabular Format</h1><p>In <em><a href=\"http://www.microsoft.com/mind/1199/classes/classes.htm\" shape=\"rect\">Using Classes with VBScript 5.0</a></em>, Eric Lippert writes, “Encapsulation and classes are not new concepts, but developers using VBScript have long gone without.” Since the Songhay System technology plan has been tied to Microsoft products since Access 2.0, I can ruefully detail what its ASP-based enterprise has “gone without”:</p><ul><li>An Intra/Internet-based equivalent of the Access Report that is simple, generic, scaleable and portable.</li><li>An Intra/Internet-based “equivalent” of the Access Form view that is simple, generic, scaleable and portable.</li><li>An Intra/Internet-based “equivalent” of the Access Datasheet view that is simple, generic, scaleable and portable.</li></ul><p>Anyone with basic ASP skills can easily find a solution to the Access Report and Form problems (if we relax our requirements for a solution that is generic, scaleable and portable). The last problem, however, takes some doing.</p><h2>The Datasheet Problem</h2><p>The opinion here is that the first two problems depend on the solution to the Datasheet Problem. Both the Report and Form problems are less generic than the Datasheet problem. In a scenario that is somewhat friendly to a generic solution, the user wants to search for data and get back a search result. The user would like to browse through the search results and edit them if need be. In the terms written here, this means Form-Datasheet-Form: the user searches with a form, gets back a search result in a Datasheet and handles the data in another form.</p><p>This implies that everything depends on the solution to the Datasheet problem. The solution must respond to these user demands:</p><ul><li>I want to search for my own data like I search for information on the Internet.</li><li>I want to create, edit and delete my data from a web browser.</li><li>I want my data validated in a web browser like forms in Access.</li></ul><p>And the solution must solve these developer problems:</p><ul><li>How can we develop a browser-based Datasheet that is not “hard-coded” to a particular set of data?</li><li>How do we prevent the user from bringing back “too much” data?</li><li>How do we link the search results to an “editing facility” (a form) without hard-coding this link?</li><li>How can we make all of this as reusable as possible so we can use code for this solution in other projects?</li></ul><p>All of these demands and problems have been grossly simplified and limited to protect the innocent. However, I think we have enough to go on for quite a few pages of text!</p><h2>Researching the Datasheet Problem</h2><p>In <em><a href=\"http://www.microsoft.com/mind/1298/ado/ado.htm\" shape=\"rect\">Ad Hoc Web Reporting with ADO 2.0</a></em>, Johnny Papa and Charles Caison developed (way back in 1998) an excellent solution to this Datasheet problem. But unfortunately they write, “What makes this even faster is that we only query the database once. That’s right, we create the ADO recordset once, and store it in an ASP Session variable.” By storing the ADO Recordset in a Session variable they are not satisfying my need for a scalable solution.</p><p>Randall Kindig’s <em><a href=\"http://msdn.microsoft.com/msdnmag/issues/0700/datagrid/default.aspx\" shape=\"rect\">Building a Custom Data Grid: Performing Ad Hoc Web Reporting with a VBScript 5.0 Class Object</a></em>, basically gives me the solution to my Datasheet problem in a hot, Seattle coffee cup. But even in July of 2000 we still find him writing, “Since the recordset has been saved in a Session object, however, returning to the list causes the grid to simply pull up the saved recordset.”</p><p>In my struggle to find a stateless solution, I ran across the Microsoft Knowledge Base article Q202125 (<em><a href=\"http://support.microsoft.com/support/kb/articles/Q202/1/25.ASP\" shape=\"rect\">HOWTO: Page Through a Recordset from ASP</a></em>). This article reminds us that ADO Recordsets have the <code>PageSize</code>, <code>PageCount</code>, and <code>AbsolutePage</code> properties. This information addresses the need to be scaleable: to not use the Session variable!</p><h2>Solution to the Datasheet Problem</h2><p>Based on the aforementioned research, the solution to the Datasheet problem has two components: a reusable, portable, generic class called <code>clsHTMLTable</code> and an ASP page that “hosts” the class. The hosting ASP page would be “hard coded” to the specific solution but it is still worth mentioning here to illustrate how <code>clsHTMLTable</code> can be implemented. Before we do that, let’s examine <code>clsHTMLTable</code>:</p><table class=\"docTable\"><tr><th colspan=\"2\" rowspan=\"1\">Properties of <code>clsHTMLTable</code></th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Recordset</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set a disconnected, ADO Recordset (<code>CursorType:=adOpenStatic</code> and <code>LockType:=adLockBatchOptimistic</code>). The OLEDB provider must support the <code>Recordcount</code>, <code>PageSize</code>, <code>PageCount</code>, and <code>AbsolutePage</code> properties and the <code>MoveFirst</code> method of the ADODB library.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>URI</code></td><td colspan=\"1\" rowspan=\"1\"><p>Get/Set a String literal that is an absolute or relative Uniform Resource Indicator. An instance of the class will render this URI in HTML using the first column of the ADO Recordset to form IIS QueryString objects.</p><p>For example, if URI is set to <code>./MyDataTable.asp</code> then the first column of the HTML table rendered by an instance of the class will contain:</p><pre xml:space=\"preserve\">&amp;lt;A HREF=\"./MyDataTable.asp?Get=CUST001\"&amp;gt;One Co.&amp;lt;/A&amp;gt;\r\n&amp;lt;A HREF=\"./MyDataTable.asp?Get=CUST002\"&amp;gt;Two Co.&amp;lt;/A&amp;gt;\r\n&amp;lt;A HREF=\"./MyDataTable.asp?Get=CUST003\"&amp;gt;3 Co.&amp;lt;/A&amp;gt;\r\n…\r\n</pre><p>Where <code>Get=CUST001</code> is in the first column of the Recordset and <code>One Co.</code> is in the second.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Width</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the WIDTH attribute of the TABLE tag. This is a String literal. By default it is set to <code>512</code>. To set percentage values use double quotes. For example, to set 100% use <code>\"\"100%\"\"</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Border</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the BORDER attribute of the TABLE tag. This is a number. By default it is set to <code>0</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Padding</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the PADDING attribute of the TABLE tag. This is a number. By default it is set to <code>0</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Spacing</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the SPACING attribute of the TABLE tag. This is a number. By default it is set to <code>0</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>RowHeadStyle</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the STYLE attribute of the TH tags. This is a String literal. By default it is set to <code>\"STYLE=\"\"background: #FFFFFF none no-repeat scroll 0% 0%;\"\"\"</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Row1Style</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the STYLE attribute of the TD tags in odd-number rows. This is a String literal. By default it is set to <code>\"STYLE=\"\"background: #FFFFFF none no-repeat scroll 0% 0%;\"\"\"</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Row2Style</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the STYLE attribute of the TD tags in even-number rows. This is a String literal. By default it is set to <code>\"STYLE=\"\"background: #FFFFFF none no-repeat scroll 0% 0%;\"\"\"</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ColumnsArray</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set an array of numbers. These numbers specify the column numbers that are used by the Recordset object to render the HTML table. Use this property if you have no control over the DBMS generating the ADO Recordset. By default it is set to <code>vbNullString</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>FirstColAlignment</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the ALIGN attribute of the TD tags rendering the first column of the HTML table. This is a String literal. By default it is set to <code>left</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>FirstColHeadAlignment</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the ALIGN attribute of the TH tags rendering the first column heading of the HTML table. This is a String literal. By default it is set to <code>center</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>FirstColWidth</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the WIDTH attribute of the tags rendering the first column heading of the HTML table. This is a String literal. By default it is set to <code>0</code> (disabled).</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>AbsolutePage</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the <code>AbsolutePage</code> property of the Recordset contained in an instance of the class. This is a number. By default it is set to <code>1</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Pageable</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set a Boolean value that determines if the Recordset will be “pageable”. When this is set to <code>False</code> the entire recordset is rendered in HTML.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>PageCount</code></td><td colspan=\"1\" rowspan=\"1\">Get the <code>PageCount</code> property of the Recordset contained in an instance of the class. This is a number. This property is read only.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>PageSize</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the <code>PageSize</code> property of the Recordset contained in an instance of the class. This is a number. By default it is set to <code>10</code>.</td></tr></table><p><table class=\"docTable\"><tr><th colspan=\"2\" rowspan=\"1\">Methods of <code>clsHTMLTable</code></th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Class_Initialize()</code></td><td colspan=\"1\" rowspan=\"1\">Sets default values for Private members.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Class_Terminate()</code></td><td colspan=\"1\" rowspan=\"1\">Kills the Recordset contained in an instance of the class.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>GetTable()</code></td><td colspan=\"1\" rowspan=\"1\">This function returns an HTML TABLE block based on a “pageable” ADO Recordset object. The ColumnsArray property is used to “cherry pick” only the columns needed from the Recordset. When a URI is present, Column 0 of the Recordset is used as a QueryString and is not rendered in HTML.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>GetFlipTable()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns an HTML TABLE block based on a “pageable” ADO Recordset object. When a URI is present, Column 1 of the Recordset is used as a QueryString Item and is not rendered in HTML.</p><p>The recordset is flipped such that the leftmost column (Column 0) becomes the column headings. This is a clockwise motion.</p></td></tr></table><h2>This Solution Is Simple</h2><p>Here is a code sample:</p><pre xml:space=\"preserve\">&amp;#039;Get table.\r\nSet objHTMLTable = New clsHTMLTable\r\nSet objHTMLTable.Recordset = objADOrst\r\nvHTML = objHTMLTable.GetTable\r\nResponse.Write vHTML\r\nSet objHTMLTable = Nothing\r\nobjADOrst.Close\r\nSet objADO = Nothing\r\n</pre><p>I hope this helps.</p><h2>This Solution Is Generic</h2><p>The design of the class should address this issue. Also note that the class depends heavily on CSS and W3C-compliant HTML. (The Songhay System DTD at the moment is HTML 4.0 Transitional.)</p><h2>This Solution Is Scaleable</h2><p>By making sure that this solution is stateless, we have ensured that it is scaleable. My only concerns are any performance issues surrounding how ADO creates a Recordset with its <code>AbsolutePage</code> property set. I think that ADO retrieves the records first and then applies the <code>AbsolutePage</code> property. This may mean performance problems during very large queries. I would defer to the tools in the DBMS to solve this problem (specifically stored procedures).</p><h2>This Solution Is Portable</h2><p>Now that I have expressed this historically Microsoft solution as a Class, it is portable. I don’t just mean that it can be translated into a COM object via Visual Basic. I am really concerned about leaving the Microsoft platform altogether—and taking my tools with me. I am talking about what Microsoft may consider unthinkable: translating VB Classes into, say, Java Classes! Gasp!</p><p>In this specific case, when shopping for a new platform to run my enterprise, this new technology must implement the equivalent of the <code>Recordset</code> object and the ability to page through its dataset. Additionally, the new web server will have to have something like the IIS <code>QueryString</code> object. (Of course the new platform must have its rendition of a Class!) These are the only vendor-specific dependencies I can find at the moment. By trying hard to not just make the code generic but to also make the code as platform independent as possible I make the solution portable.</p><p>By the way, using ASP <a href=\"http://msdn.microsoft.com/msdnmag/issues/1000/visualprog/default.aspx\" shape=\"rect\">server-side controls</a> (from ASP+ and the new .NET framework) in my solutions would make them extremely platform dependent.</p><h2>The Hosting ASP Page and It’s Web</h2><p>We have seen the star of the show,<code> clsHTMLTable</code>, now it’s time to explore its implementation. The table below lists the files of a simple application that handles data from Songhay System’s <a href=\"http://www.kintespace.com/kb\" shape=\"rect\">Funky Knowledge Base</a>:</p><table class=\"docTable\"><tr><th colspan=\"2\" rowspan=\"1\">Data Access Solution for The Funky Knowledge Base</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>default.asp</code></td><td colspan=\"1\" rowspan=\"1\"><p>This is the root web file of the solution. This file displays a form. The form gathers the information needed to search The Funky Knowledge Base. It passes this information to <code>dataTable.asp</code>.</p><p>This file is designed to scale up and host additional search forms.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>dataServices.asp</code></td><td colspan=\"1\" rowspan=\"1\"><p>This is an include file that is “Hard Coded” to the DBMS used by The Funky Knowledge Base. In an effort to keep <code>dataTable.asp</code> relatively generic, <code>dataServices.asp</code> contains the names of the stored procedures to pass to <code>dataTable.asp</code> based on the URI passed<code> dataTable.asp</code> to from <code>default.asp</code>.</p><p>This file is designed to scale up and serve additional search forms built in to <code>default.asp</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>dataTable.asp</code></td><td colspan=\"1\" rowspan=\"1\"><p>This file needs SQL parameters and a URI in order to run to completion. It drives a stored procedure to search for data based on a finite set of unknowns. A successful run renders the columns projected by the stored procedure in an HTML table. (The formatting for this table is “hard-coded” into this file.)</p><p>The HTML page contains a form that recursively submits back to <code>dataTable.asp</code> in order to “page” through the stored procedure recordset.</p><p>This file is designed to scale up and serve additional data entry/edit forms built like <code>dataKB.asp</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>dataKB.asp</code></td><td colspan=\"1\" rowspan=\"1\"><p>This page is accessed from the URIs in <code>dataTable.asp</code>. This page means to replicate the Access data entry/edit form as much as possible.</p><p>By reading the <code>QueryString</code> coming from <code>dataTable.asp</code> and recursively from <code>dataKB.asp</code>, it determines if the request is for a Get, Set, New or Delete operation and behaves accordingly.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>root.css</code></td><td colspan=\"1\" rowspan=\"1\">CSS style sheet.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>root.js</code></td><td colspan=\"1\" rowspan=\"1\"><p>External JavaScript file that handles platform-neutral data binding and form validation.</p><p>This file is designed to scale up and serve additional data entry/edit forms built like <code>dataKB.asp</code>.</p></td></tr></table><p>This is what The Funky KB “search form” looks like:</p><p><img src=\"http://songhaysystem.com/bitmaps/VBSDataTabularFormat/DataSearch.gif\" alt=\"The Funky KB Search Form\" width=\"686\" height=\"248\" /></p><p>This is what some search results look like:</p><p><img src=\"http://songhaysystem.com/bitmaps/VBSDataTabularFormat/TabularData.gif\" alt=\"Search Results\" width=\"670\" height=\"772\" /></p><p>Finally, we have the form:</p><p><img src=\"http://songhaysystem.com/bitmaps/VBSDataTabularFormat/DataForm.gif\" alt=\"A Data Form\" width=\"701\" height=\"534\" /></p><h2>Future Enhancements</h2><p>One major feature missing from my current build is the ability to sort by column on the fly. I personally do not have much call for it. I would rather have the user specify a sort during the initial search. The research material mentioned in this article supply quite enough information needed to implement this requirement.</p><p>Another major “user-friendly” feature missing is handling of pattern matching. Currently, wildcard searches depend on the user’s knowledge of the pattern matching characters of the DBMS. What is friendlier is to add Exact Phrase, Starts with, Ends with and/or Contains options in the initial search screen.</p><p>Finally, to address the performance issue, more research into implementing the Item “Initial Fetch Size” in the Properties Collection of the Recordset object and the use of <code>adAsyncFetchNonBlocking</code>, is needed. These features may not work with all OLEDB Providers under ADO. Moreover, once these features are in use, via a supporting Provider, there are miscellaneous limitations that must be addressed. For example Kindig writes, “Asynchronous fetches can obviously only be used with client-side cursors. However, they can really make it seem to the user as if data retrieval is happening faster. They can page through records and even click on hyperlinked fields without having to wait for all records to download. The downside is that if the records are to be sorted, the command will not complete until all records are downloaded.”</p>",
    "ItemText": "<h1>Using a Generic, Stateless VBScript Object to Display Data in a Tabular Format</h1><p>In <em><a href=\"http://www.microsoft.com/mind/1199/classes/classes.htm\" shape=\"rect\">Using Classes with VBScript 5.0</a></em>, Eric Lippert writes, “Encapsulation and classes are not new concepts, but developers using VBScript have long gone without.” Since the Songhay System technology plan has been tied to Microsoft products since Access 2.0, I can ruefully detail what its ASP-based enterprise has “gone without”:</p><ul><li>An Intra/Internet-based equivalent of the Access Report that is simple, generic, scaleable and portable.</li><li>An Intra/Internet-based “equivalent” of the Access Form view that is simple, generic, scaleable and portable.</li><li>An Intra/Internet-based “equivalent” of the Access Datasheet view that is simple, generic, scaleable and portable.</li></ul><p>Anyone with basic ASP skills can easily find a solution to the Access Report and Form problems (if we relax our requirements for a solution that is generic, scaleable and portable). The last problem, however, takes some doing.</p><h2>The Datasheet Problem</h2><p>The opinion here is that the first two problems depend on the solution to the Datasheet Problem. Both the Report and Form problems are less generic than the Datasheet problem. In a scenario that is somewhat friendly to a generic solution, the user wants to search for data and get back a search result. The user would like to browse through the search results and edit them if need be. In the terms written here, this means Form-Datasheet-Form: the user searches with a form, gets back a search result in a Datasheet and handles the data in another form.</p><p>This implies that everything depends on the solution to the Datasheet problem. The solution must respond to these user demands:</p><ul><li>I want to search for my own data like I search for information on the Internet.</li><li>I want to create, edit and delete my data from a web browser.</li><li>I want my data validated in a web browser like forms in Access.</li></ul><p>And the solution must solve these developer problems:</p><ul><li>How can we develop a browser-based Datasheet that is not “hard-coded” to a particular set of data?</li><li>How do we prevent the user from bringing back “too much” data?</li><li>How do we link the search results to an “editing facility” (a form) without hard-coding this link?</li><li>How can we make all of this as reusable as possible so we can use code for this solution in other projects?</li></ul><p>All of these demands and problems have been grossly simplified and limited to protect the innocent. However, I think we have enough to go on for quite a few pages of text!</p><h2>Researching the Datasheet Problem</h2><p>In <em><a href=\"http://www.microsoft.com/mind/1298/ado/ado.htm\" shape=\"rect\">Ad Hoc Web Reporting with ADO 2.0</a></em>, Johnny Papa and Charles Caison developed (way back in 1998) an excellent solution to this Datasheet problem. But unfortunately they write, “What makes this even faster is that we only query the database once. That’s right, we create the ADO recordset once, and store it in an ASP Session variable.” By storing the ADO Recordset in a Session variable they are not satisfying my need for a scalable solution.</p><p>Randall Kindig’s <em><a href=\"http://msdn.microsoft.com/msdnmag/issues/0700/datagrid/default.aspx\" shape=\"rect\">Building a Custom Data Grid: Performing Ad Hoc Web Reporting with a VBScript 5.0 Class Object</a></em>, basically gives me the solution to my Datasheet problem in a hot, Seattle coffee cup. But even in July of 2000 we still find him writing, “Since the recordset has been saved in a Session object, however, returning to the list causes the grid to simply pull up the saved recordset.”</p><p>In my struggle to find a stateless solution, I ran across the Microsoft Knowledge Base article Q202125 (<em><a href=\"http://support.microsoft.com/support/kb/articles/Q202/1/25.ASP\" shape=\"rect\">HOWTO: Page Through a Recordset from ASP</a></em>). This article reminds us that ADO Recordsets have the <code>PageSize</code>, <code>PageCount</code>, and <code>AbsolutePage</code> properties. This information addresses the need to be scaleable: to not use the Session variable!</p><h2>Solution to the Datasheet Problem</h2><p>Based on the aforementioned research, the solution to the Datasheet problem has two components: a reusable, portable, generic class called <code>clsHTMLTable</code> and an ASP page that “hosts” the class. The hosting ASP page would be “hard coded” to the specific solution but it is still worth mentioning here to illustrate how <code>clsHTMLTable</code> can be implemented. Before we do that, let’s examine <code>clsHTMLTable</code>:</p><table class=\"docTable\"><tr><th colspan=\"2\" rowspan=\"1\">Properties of <code>clsHTMLTable</code></th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Recordset</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set a disconnected, ADO Recordset (<code>CursorType:=adOpenStatic</code> and <code>LockType:=adLockBatchOptimistic</code>). The OLEDB provider must support the <code>Recordcount</code>, <code>PageSize</code>, <code>PageCount</code>, and <code>AbsolutePage</code> properties and the <code>MoveFirst</code> method of the ADODB library.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>URI</code></td><td colspan=\"1\" rowspan=\"1\"><p>Get/Set a String literal that is an absolute or relative Uniform Resource Indicator. An instance of the class will render this URI in HTML using the first column of the ADO Recordset to form IIS QueryString objects.</p><p>For example, if URI is set to <code>./MyDataTable.asp</code> then the first column of the HTML table rendered by an instance of the class will contain:</p><pre xml:space=\"preserve\">&amp;lt;A HREF=\"./MyDataTable.asp?Get=CUST001\"&amp;gt;One Co.&amp;lt;/A&amp;gt;\r\n&amp;lt;A HREF=\"./MyDataTable.asp?Get=CUST002\"&amp;gt;Two Co.&amp;lt;/A&amp;gt;\r\n&amp;lt;A HREF=\"./MyDataTable.asp?Get=CUST003\"&amp;gt;3 Co.&amp;lt;/A&amp;gt;\r\n…\r\n</pre><p>Where <code>Get=CUST001</code> is in the first column of the Recordset and <code>One Co.</code> is in the second.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Width</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the WIDTH attribute of the TABLE tag. This is a String literal. By default it is set to <code>512</code>. To set percentage values use double quotes. For example, to set 100% use <code>\"\"100%\"\"</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Border</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the BORDER attribute of the TABLE tag. This is a number. By default it is set to <code>0</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Padding</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the PADDING attribute of the TABLE tag. This is a number. By default it is set to <code>0</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Spacing</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the SPACING attribute of the TABLE tag. This is a number. By default it is set to <code>0</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>RowHeadStyle</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the STYLE attribute of the TH tags. This is a String literal. By default it is set to <code>\"STYLE=\"\"background: #FFFFFF none no-repeat scroll 0% 0%;\"\"\"</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Row1Style</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the STYLE attribute of the TD tags in odd-number rows. This is a String literal. By default it is set to <code>\"STYLE=\"\"background: #FFFFFF none no-repeat scroll 0% 0%;\"\"\"</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Row2Style</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the STYLE attribute of the TD tags in even-number rows. This is a String literal. By default it is set to <code>\"STYLE=\"\"background: #FFFFFF none no-repeat scroll 0% 0%;\"\"\"</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ColumnsArray</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set an array of numbers. These numbers specify the column numbers that are used by the Recordset object to render the HTML table. Use this property if you have no control over the DBMS generating the ADO Recordset. By default it is set to <code>vbNullString</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>FirstColAlignment</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the ALIGN attribute of the TD tags rendering the first column of the HTML table. This is a String literal. By default it is set to <code>left</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>FirstColHeadAlignment</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the ALIGN attribute of the TH tags rendering the first column heading of the HTML table. This is a String literal. By default it is set to <code>center</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>FirstColWidth</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the WIDTH attribute of the tags rendering the first column heading of the HTML table. This is a String literal. By default it is set to <code>0</code> (disabled).</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>AbsolutePage</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the <code>AbsolutePage</code> property of the Recordset contained in an instance of the class. This is a number. By default it is set to <code>1</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Pageable</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set a Boolean value that determines if the Recordset will be “pageable”. When this is set to <code>False</code> the entire recordset is rendered in HTML.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>PageCount</code></td><td colspan=\"1\" rowspan=\"1\">Get the <code>PageCount</code> property of the Recordset contained in an instance of the class. This is a number. This property is read only.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>PageSize</code></td><td colspan=\"1\" rowspan=\"1\">Get/Set the <code>PageSize</code> property of the Recordset contained in an instance of the class. This is a number. By default it is set to <code>10</code>.</td></tr></table><p><table class=\"docTable\"><tr><th colspan=\"2\" rowspan=\"1\">Methods of <code>clsHTMLTable</code></th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Class_Initialize()</code></td><td colspan=\"1\" rowspan=\"1\">Sets default values for Private members.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Class_Terminate()</code></td><td colspan=\"1\" rowspan=\"1\">Kills the Recordset contained in an instance of the class.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>GetTable()</code></td><td colspan=\"1\" rowspan=\"1\">This function returns an HTML TABLE block based on a “pageable” ADO Recordset object. The ColumnsArray property is used to “cherry pick” only the columns needed from the Recordset. When a URI is present, Column 0 of the Recordset is used as a QueryString and is not rendered in HTML.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>GetFlipTable()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns an HTML TABLE block based on a “pageable” ADO Recordset object. When a URI is present, Column 1 of the Recordset is used as a QueryString Item and is not rendered in HTML.</p><p>The recordset is flipped such that the leftmost column (Column 0) becomes the column headings. This is a clockwise motion.</p></td></tr></table><h2>This Solution Is Simple</h2><p>Here is a code sample:</p><pre xml:space=\"preserve\">&amp;#039;Get table.\r\nSet objHTMLTable = New clsHTMLTable\r\nSet objHTMLTable.Recordset = objADOrst\r\nvHTML = objHTMLTable.GetTable\r\nResponse.Write vHTML\r\nSet objHTMLTable = Nothing\r\nobjADOrst.Close\r\nSet objADO = Nothing\r\n</pre><p>I hope this helps.</p><h2>This Solution Is Generic</h2><p>The design of the class should address this issue. Also note that the class depends heavily on CSS and W3C-compliant HTML. (The Songhay System DTD at the moment is HTML 4.0 Transitional.)</p><h2>This Solution Is Scaleable</h2><p>By making sure that this solution is stateless, we have ensured that it is scaleable. My only concerns are any performance issues surrounding how ADO creates a Recordset with its <code>AbsolutePage</code> property set. I think that ADO retrieves the records first and then applies the <code>AbsolutePage</code> property. This may mean performance problems during very large queries. I would defer to the tools in the DBMS to solve this problem (specifically stored procedures).</p><h2>This Solution Is Portable</h2><p>Now that I have expressed this historically Microsoft solution as a Class, it is portable. I don’t just mean that it can be translated into a COM object via Visual Basic. I am really concerned about leaving the Microsoft platform altogether—and taking my tools with me. I am talking about what Microsoft may consider unthinkable: translating VB Classes into, say, Java Classes! Gasp!</p><p>In this specific case, when shopping for a new platform to run my enterprise, this new technology must implement the equivalent of the <code>Recordset</code> object and the ability to page through its dataset. Additionally, the new web server will have to have something like the IIS <code>QueryString</code> object. (Of course the new platform must have its rendition of a Class!) These are the only vendor-specific dependencies I can find at the moment. By trying hard to not just make the code generic but to also make the code as platform independent as possible I make the solution portable.</p><p>By the way, using ASP <a href=\"http://msdn.microsoft.com/msdnmag/issues/1000/visualprog/default.aspx\" shape=\"rect\">server-side controls</a> (from ASP+ and the new .NET framework) in my solutions would make them extremely platform dependent.</p><h2>The Hosting ASP Page and It’s Web</h2><p>We have seen the star of the show,<code> clsHTMLTable</code>, now it’s time to explore its implementation. The table below lists the files of a simple application that handles data from Songhay System’s <a href=\"http://www.kintespace.com/kb\" shape=\"rect\">Funky Knowledge Base</a>:</p><table class=\"docTable\"><tr><th colspan=\"2\" rowspan=\"1\">Data Access Solution for The Funky Knowledge Base</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>default.asp</code></td><td colspan=\"1\" rowspan=\"1\"><p>This is the root web file of the solution. This file displays a form. The form gathers the information needed to search The Funky Knowledge Base. It passes this information to <code>dataTable.asp</code>.</p><p>This file is designed to scale up and host additional search forms.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>dataServices.asp</code></td><td colspan=\"1\" rowspan=\"1\"><p>This is an include file that is “Hard Coded” to the DBMS used by The Funky Knowledge Base. In an effort to keep <code>dataTable.asp</code> relatively generic, <code>dataServices.asp</code> contains the names of the stored procedures to pass to <code>dataTable.asp</code> based on the URI passed<code> dataTable.asp</code> to from <code>default.asp</code>.</p><p>This file is designed to scale up and serve additional search forms built in to <code>default.asp</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>dataTable.asp</code></td><td colspan=\"1\" rowspan=\"1\"><p>This file needs SQL parameters and a URI in order to run to completion. It drives a stored procedure to search for data based on a finite set of unknowns. A successful run renders the columns projected by the stored procedure in an HTML table. (The formatting for this table is “hard-coded” into this file.)</p><p>The HTML page contains a form that recursively submits back to <code>dataTable.asp</code> in order to “page” through the stored procedure recordset.</p><p>This file is designed to scale up and serve additional data entry/edit forms built like <code>dataKB.asp</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>dataKB.asp</code></td><td colspan=\"1\" rowspan=\"1\"><p>This page is accessed from the URIs in <code>dataTable.asp</code>. This page means to replicate the Access data entry/edit form as much as possible.</p><p>By reading the <code>QueryString</code> coming from <code>dataTable.asp</code> and recursively from <code>dataKB.asp</code>, it determines if the request is for a Get, Set, New or Delete operation and behaves accordingly.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>root.css</code></td><td colspan=\"1\" rowspan=\"1\">CSS style sheet.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>root.js</code></td><td colspan=\"1\" rowspan=\"1\"><p>External JavaScript file that handles platform-neutral data binding and form validation.</p><p>This file is designed to scale up and serve additional data entry/edit forms built like <code>dataKB.asp</code>.</p></td></tr></table><p>This is what The Funky KB “search form” looks like:</p><p><img src=\"http://songhaysystem.com/bitmaps/VBSDataTabularFormat/DataSearch.gif\" alt=\"The Funky KB Search Form\" width=\"686\" height=\"248\" /></p><p>This is what some search results look like:</p><p><img src=\"http://songhaysystem.com/bitmaps/VBSDataTabularFormat/TabularData.gif\" alt=\"Search Results\" width=\"670\" height=\"772\" /></p><p>Finally, we have the form:</p><p><img src=\"http://songhaysystem.com/bitmaps/VBSDataTabularFormat/DataForm.gif\" alt=\"A Data Form\" width=\"701\" height=\"534\" /></p><h2>Future Enhancements</h2><p>One major feature missing from my current build is the ability to sort by column on the fly. I personally do not have much call for it. I would rather have the user specify a sort during the initial search. The research material mentioned in this article supply quite enough information needed to implement this requirement.</p><p>Another major “user-friendly” feature missing is handling of pattern matching. Currently, wildcard searches depend on the user’s knowledge of the pattern matching characters of the DBMS. What is friendlier is to add Exact Phrase, Starts with, Ends with and/or Contains options in the initial search screen.</p><p>Finally, to address the performance issue, more research into implementing the Item “Initial Fetch Size” in the Properties Collection of the Recordset object and the use of <code>adAsyncFetchNonBlocking</code>, is needed. These features may not work with all OLEDB Providers under ADO. Moreover, once these features are in use, via a supporting Provider, there are miscellaneous limitations that must be addressed. For example Kindig writes, “Asynchronous fetches can obviously only be used with client-side cursors. However, they can really make it seem to the user as if data retrieval is happening faster. They can page through records and even click on hyperlinked fields without having to wait for all records to download. The downside is that if the records are to be sorted, the command will not complete until all records are downloaded.”</p>",
    "CreateDate": "1999-01-10T20:47:49.0000000",
    "EndDate": null,
    "ModificationDate": "2005-04-26T19:10:18.7330000",
    "DocumentId": "4",
    "PrevFragmentId": "-1",
    "NextFragmentId": "-1",
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5",
    "FragmentName": null,
    "FragmentDisplayName": "Using the HTML Conversion Features of Word 97",
    "SortOrdinal": null,
    "ItemChar": "        <H1>\r\n            <A NAME=\"_Toc502766770\">Using the HTML Conversion Features of Word 97</A>\r\n        </H1>\r\n        <P>\r\n            On my planet, there are two types of HTML conversion features in Word 97: the features that survive intact when the file is open and closed and the features that don’t. For Microsoft’s official treatment of this subject, please see KB article Q157086 (“WD97: Limitations of Converting from Word Format to HTML”).\r\n        </P>\r\n        <P>\r\n            This, by the way, is how Word 97 translates its “Simple” table of contents into HTML:\r\n        </P>\r\n        <DIV STYLE=\"font-size:14px; line-height:17px\">\r\n            <P>\r\n                Using the HTML Conversion Features of Word 97 <A HREF=\"#_Toc502766770\">*</A><BR />\r\n                The Wrong Way to Edit HTML in Word 97 <A HREF=\"#_Toc502766771\">*</A><BR />\r\n                The Right Way to Edit HTML in Word 97 <A HREF=\"#_Toc502766772\">*</A><BR />\r\n                Exporting Word Document Properties <A HREF=\"#_Toc502766773\">*</A><BR />\r\n                Parting Comments <A HREF=\"#_Toc502766774\">*</A><BR />\r\n                Endnotes <A HREF=\"#_Toc502766775\">*</A>\r\n            </P>\r\n        </DIV>\r\n        <P>\r\n            I suppose it can be useful. Perhaps it can be used to get around this document?\r\n        </P>\r\n        <H2 CLASS=\"padtop\">\r\n            <A NAME=\"_Toc502766771\">The “Wrong” Way to Edit HTML in Word 97</A>\r\n        </H2>\r\n        <P>\r\n            My unusual classification scheme of Word 97 HTML export features becomes reasonable when you start working on a native Word 97 file, save it as HTML, and continue to edit the file (while you edit the file you switch back and forth between HTML Source view and Online Layout view). These are the elements that will disappear if you edit for HTML in this manner:\r\n        </P>\r\n        <TABLE CELLSPACING=\"1\" CELLPADDING=\"9\" WIDTH=\"738\">\r\n            <TR>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P STYLE=\"text-align: center\">\r\n                        <STRONG>Word Feature</STRONG>\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <STRONG>Comments</STRONG>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Text marked with character style HTML Markup\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Once you switch to HTML Source view (or close and open the HTML file), the text designated as HTML will be converted to Word 97 HTML formatting. For example, the entity <CODE>&amp;#8220;</CODE> is converted to the generic <CODE>&amp;#quot;</CODE> entity.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Equation Editor objects\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Once you switch to HTML Source view (or close and open the HTML file), these are converted to GIF—forever. This applies all other OLE Objects.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Tables\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Only simple grid-like tables are translated faithfully. Background colors and merged cells do translate. TABLE tags are marked up with a fixed width while columns are in percentages.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Inserted Images\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        These images are converted to GIF (if not already JPEG). What is really cool is that it is possible to store the images and HTML in one “seed” Word 97 file.\r\n                    </P>\r\n                    <P>\r\n                        What is not cool is that images from previously exported HTML files are not removed and “pile up” over repeated saves.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Fields\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Once you switch to HTML Source view (or close and open the HTML file), these are converted to text.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Table of Contents\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        This translates into links to anchor tags based on H1 through H4 styles. There are some caveats (see below).\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Footnotes\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Headers and Footers are not translated at all.<A HREF=\"#Endnote01\"><SUP>1</SUP></A>\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n        </TABLE>\r\n        <H2 CLASS=\"padtop\">\r\n            <A NAME=\"_Toc502766772\">The “Right” Way to Edit HTML in Word 97</A>\r\n        </H2>\r\n        <P>\r\n            The most painless way to edit for HTML in Word 97 is to work in native Word 97 for as long as possible <EM>using the styles provided for HTML conversion.</EM> The way to get to these styles is to open a new HTML file using the template <STRONG>Blank Web Page</STRONG>:\r\n        </P>\r\n        <P>\r\n            <IMG src=\"http://songhaysystem.com/bitmaps/WD97HTMLConversion/Image6.gif\" WIDTH=\"578\" HEIGHT=\"366\" />\r\n        </P>\r\n        <P>\r\n            This template is available in the <A HREF=\"http://office.microsoft.com/downloaddetails/wd97au.htm\">Word 97 Web Documents Toolkit.</A>\r\n        </P>\r\n        <P>\r\n            Once this blank file open, select <STRONG>File &gt; Save As Word Document</STRONG> to start your editing session in native Word 97 format. You can verify success by looking at the list of styles under <STRONG>Format &gt; Style…:</STRONG>\r\n        </P>\r\n        <P>\r\n            <IMG src=\"http://songhaysystem.com/bitmaps/WD97HTMLConversion/Image7.gif\" WIDTH=\"459\" HEIGHT=\"375\" />\r\n        </P>\r\n        <P>\r\n            Well, now is a good time to show what the “source code” of the original Word 97 document looks like:\r\n        </P>\r\n        <P>\r\n            <IMG src=\"http://songhaysystem.com/bitmaps/WD97HTMLConversion/Image33.gif\" WIDTH=\"645\" HEIGHT=\"768\" />\r\n        </P>\r\n        <P>\r\n            Note that the document is showing all characters (the so-called “hidden” characters). The style HTML Markup is colored red and can only be seen when hidden characters are showing. You can also see that the table of contents field has its default, Word 97 formatting removed. This picture is a portrait of a struggle against the marketing forces behind closed source software. Hard work.\r\n        </P>\r\n        <H2 CLASS=\"padtop\">\r\n            <A NAME=\"_Toc502766773\">Exporting Word Document Properties</A>\r\n        </H2>\r\n        <P>\r\n            “Some” of the Properties specified by the <STRONG>File &gt; Properties</STRONG> command are translated into HTML <CODE>META</CODE> tags. For example, we can guess how the following Word Properties will translate:\r\n        </P>\r\n        <P>\r\n            <IMG src=\"http://songhaysystem.com/bitmaps/WD97HTMLConversion/Image31.gif\" WIDTH=\"484\" HEIGHT=\"558\" />\r\n        </P>\r\n        <P>\r\n            By the way, one of the Word Properties, shown above will not translate into a <CODE>META</CODE> tag. It will end up in a <CODE>TITLE</CODE> tag. It should be obvious which value that is. What is less obvious is how to get Word 97 to specify your own META information. This is done by editing the <STRONG>Custom</STRONG> tab:\r\n        </P>\r\n        <P>\r\n            <IMG src=\"http://songhaysystem.com/bitmaps/WD97HTMLConversion/Image32.gif\" WIDTH=\"484\" HEIGHT=\"558\" />\r\n        </P>\r\n        <P>\r\n            The Custom Name <CODE>UnknownHead_0_1_0</CODE> (and <CODE>UnknownHead_0_1_1</CODE>) is actually created by Word when it is <EM>importing</EM> a file with header information it does not understand. This can “force” Word to translate custom tags to the <CODE>HEAD</CODE> block during export.\r\n        </P>\r\n        <H2 CLASS=\"padtop\">\r\n            <A NAME=\"_Toc502766774\">Parting Comments</A>\r\n        </H2>\r\n        <P>\r\n            Hey, this is better than nothing! The main motivation for creating HTML from Word 97 is to take advantage of inline spell checking and VBA automation features. This technique is most effective on long documents with pictures (like this one).\r\n        </P>\r\n        <P>\r\n            Since I respect W3C DTDs, I need to build HTML with very little proprietary tags. The following table lists a few caveats:\r\n        </P>\r\n        <TABLE CELLSPACING=\"1\" CELLPADDING=\"9\" WIDTH=\"738\">\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P STYLE=\"text-align: center\">\r\n                        <STRONG>Word Feature</STRONG>\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <STRONG>Comments</STRONG>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <DL>\r\n                        <DT>\r\n                            Bullet lists\r\n                        </DT>\r\n                    </DL>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Sporadically, Word 97 decides to wrap each <CODE>LI</CODE> tag in its own <CODE>UL</CODE> tags.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Colored text\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        This feature translates into <CODE>FONT</CODE> tags. Yuck.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Character Styles\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Word 97 often translates Character Styles and Paragraph Styles in the wrong order. For example, the inline element <CODE>CODE</CODE> precedes the block-level <CODE>PRE</CODE> tags. This usually happens when the Character Style is specified at the end or the beginning of a paragraph.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Fonts\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        This feature translates into <CODE>FONT</CODE> tags. Yuck. It is better to keep body text in the Default Paragraph Font of Normal style.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Inserted Hyperlinks\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        All you get is the <CODE>HREF</CODE> attribute of the <CODE>A</CODE> tag. No <CODE>TARGET</CODE>, no <CODE>TITLE</CODE>.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Inserted Images\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        No control over <CODE>ALT</CODE> or <CODE>BORDER</CODE> attributes. Images are saved in the same directory as the file.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Paragraph Styles\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        The Preformatted Paragraph Style is exported as <CODE>PRE</CODE> tags filled with either unnecessary <CODE>BR</CODE> tags (translated from Word Line Break characters) or <CODE>P</CODE> tags (translated from Word Paragraph characters).\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Table of Contents\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        The anchor tags (<CODE>&lt;A&gt;&lt;/A&gt;</CODE>) may not nest correctly within the header tags.\r\n                    </P>\r\n                    <P>\r\n                        Check for hidden bookmarks under <STRONG>Insert &gt; Bookmark…</STRONG> as these end up as anchor tags.\r\n                    </P>\r\n                    <P>\r\n                        Make sure that Show page numbers is selected or no anchors will be inserted. Page numbers are converted to asterisks. That sucks.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Tables\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        The Word 97 HTML converter is unable to determine if a <CODE>TH</CODE> tag is required.\r\n                    </P>\r\n                    <P>\r\n                        Minimized <CODE>&lt;P&gt;</CODE> tags are used gratuitously in table cells with only one paragraph.\r\n                    </P>\r\n                    <P>\r\n                        Avoid the proprietary <CODE>BORDERCOLOR</CODE> attribute by leaving the default border color of tables at Auto. If you have to change it back to Auto, verify that <STRONG>Borders and Shading… &gt; Borders &gt; Setting:</STRONG> is <STRONG>All</STRONG>.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        The Comment Style\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        This translates into the mysterious <CODE>COMMENT</CODE> tag. It does not create HTML comments.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n        </TABLE>\r\n        <P>\r\n            By the way, this document was prepared for http service by:\r\n        </P>\r\n        <OL>\r\n            <LI>\r\n                Exporting as HTML from Word 97.\r\n            </LI>\r\n            <LI>\r\n                Opening in <A HREF=\"http://www.chami.com/html-kit/\">HTML-Kit</A>.\r\n            </LI>\r\n            <LI>\r\n                Adding a few <CODE>CLASS</CODE> attributes to make tags refer to the style sheet specified by tweaking Word 97 Custom Properties.\r\n            </LI>\r\n            <LI>\r\n                Running the <A HREF=\"http://www.w3.org/People/Raggett/tidy/\">HTML Tidy</A> Plug-in HTML-Kit. (May lead to a few Find/Replace operations.)\r\n            </LI>\r\n        </OL>\r\n        <P>\r\n            This file you are reading has been validated by HTML-Kit and produces 0 errors, 11 warnings and 5 “other” comments. Most of the warnings point at tag nesting problems with the endnote at the end of this document. I had to correct that problem by hand.\r\n        </P>\r\n        <P>\r\n            I am certain that there is a better way to get “clean” HTML from a robust word processor—and Word 2000 has very little to do with it!\r\n        </P>\r\n        <H2 CLASS=\"padtop\">\r\n            <A NAME=\"_Toc502766775\">Endnotes</A>\r\n        </H2>\r\n        <P>\r\n            <SMALL><A NAME=\"Endnote01\"><SUP>1</SUP></A>However, using inserted Hyperlinks and Bookmarks can be the HTML equivalent of footnotes—or, rather <EM>endnotes.</EM></SMALL>\r\n        </P>\r\n",
    "ItemText": "        <H1>\r\n            <A NAME=\"_Toc502766770\">Using the HTML Conversion Features of Word 97</A>\r\n        </H1>\r\n        <P>\r\n            On my planet, there are two types of HTML conversion features in Word 97: the features that survive intact when the file is open and closed and the features that don’t. For Microsoft’s official treatment of this subject, please see KB article Q157086 (“WD97: Limitations of Converting from Word Format to HTML”).\r\n        </P>\r\n        <P>\r\n            This, by the way, is how Word 97 translates its “Simple” table of contents into HTML:\r\n        </P>\r\n        <DIV STYLE=\"font-size:14px; line-height:17px\">\r\n            <P>\r\n                Using the HTML Conversion Features of Word 97 <A HREF=\"#_Toc502766770\">*</A><BR />\r\n                The Wrong Way to Edit HTML in Word 97 <A HREF=\"#_Toc502766771\">*</A><BR />\r\n                The Right Way to Edit HTML in Word 97 <A HREF=\"#_Toc502766772\">*</A><BR />\r\n                Exporting Word Document Properties <A HREF=\"#_Toc502766773\">*</A><BR />\r\n                Parting Comments <A HREF=\"#_Toc502766774\">*</A><BR />\r\n                Endnotes <A HREF=\"#_Toc502766775\">*</A>\r\n            </P>\r\n        </DIV>\r\n        <P>\r\n            I suppose it can be useful. Perhaps it can be used to get around this document?\r\n        </P>\r\n        <H2 CLASS=\"padtop\">\r\n            <A NAME=\"_Toc502766771\">The “Wrong” Way to Edit HTML in Word 97</A>\r\n        </H2>\r\n        <P>\r\n            My unusual classification scheme of Word 97 HTML export features becomes reasonable when you start working on a native Word 97 file, save it as HTML, and continue to edit the file (while you edit the file you switch back and forth between HTML Source view and Online Layout view). These are the elements that will disappear if you edit for HTML in this manner:\r\n        </P>\r\n        <TABLE CELLSPACING=\"1\" CELLPADDING=\"9\" WIDTH=\"738\">\r\n            <TR>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P STYLE=\"text-align: center\">\r\n                        <STRONG>Word Feature</STRONG>\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <STRONG>Comments</STRONG>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Text marked with character style HTML Markup\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Once you switch to HTML Source view (or close and open the HTML file), the text designated as HTML will be converted to Word 97 HTML formatting. For example, the entity <CODE>&amp;#8220;</CODE> is converted to the generic <CODE>&amp;#quot;</CODE> entity.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Equation Editor objects\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Once you switch to HTML Source view (or close and open the HTML file), these are converted to GIF—forever. This applies all other OLE Objects.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Tables\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Only simple grid-like tables are translated faithfully. Background colors and merged cells do translate. TABLE tags are marked up with a fixed width while columns are in percentages.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Inserted Images\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        These images are converted to GIF (if not already JPEG). What is really cool is that it is possible to store the images and HTML in one “seed” Word 97 file.\r\n                    </P>\r\n                    <P>\r\n                        What is not cool is that images from previously exported HTML files are not removed and “pile up” over repeated saves.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Fields\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Once you switch to HTML Source view (or close and open the HTML file), these are converted to text.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Table of Contents\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        This translates into links to anchor tags based on H1 through H4 styles. There are some caveats (see below).\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Footnotes\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"50%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Headers and Footers are not translated at all.<A HREF=\"#Endnote01\"><SUP>1</SUP></A>\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n        </TABLE>\r\n        <H2 CLASS=\"padtop\">\r\n            <A NAME=\"_Toc502766772\">The “Right” Way to Edit HTML in Word 97</A>\r\n        </H2>\r\n        <P>\r\n            The most painless way to edit for HTML in Word 97 is to work in native Word 97 for as long as possible <EM>using the styles provided for HTML conversion.</EM> The way to get to these styles is to open a new HTML file using the template <STRONG>Blank Web Page</STRONG>:\r\n        </P>\r\n        <P>\r\n            <IMG src=\"http://songhaysystem.com/bitmaps/WD97HTMLConversion/Image6.gif\" WIDTH=\"578\" HEIGHT=\"366\" />\r\n        </P>\r\n        <P>\r\n            This template is available in the <A HREF=\"http://office.microsoft.com/downloaddetails/wd97au.htm\">Word 97 Web Documents Toolkit.</A>\r\n        </P>\r\n        <P>\r\n            Once this blank file open, select <STRONG>File &gt; Save As Word Document</STRONG> to start your editing session in native Word 97 format. You can verify success by looking at the list of styles under <STRONG>Format &gt; Style…:</STRONG>\r\n        </P>\r\n        <P>\r\n            <IMG src=\"http://songhaysystem.com/bitmaps/WD97HTMLConversion/Image7.gif\" WIDTH=\"459\" HEIGHT=\"375\" />\r\n        </P>\r\n        <P>\r\n            Well, now is a good time to show what the “source code” of the original Word 97 document looks like:\r\n        </P>\r\n        <P>\r\n            <IMG src=\"http://songhaysystem.com/bitmaps/WD97HTMLConversion/Image33.gif\" WIDTH=\"645\" HEIGHT=\"768\" />\r\n        </P>\r\n        <P>\r\n            Note that the document is showing all characters (the so-called “hidden” characters). The style HTML Markup is colored red and can only be seen when hidden characters are showing. You can also see that the table of contents field has its default, Word 97 formatting removed. This picture is a portrait of a struggle against the marketing forces behind closed source software. Hard work.\r\n        </P>\r\n        <H2 CLASS=\"padtop\">\r\n            <A NAME=\"_Toc502766773\">Exporting Word Document Properties</A>\r\n        </H2>\r\n        <P>\r\n            “Some” of the Properties specified by the <STRONG>File &gt; Properties</STRONG> command are translated into HTML <CODE>META</CODE> tags. For example, we can guess how the following Word Properties will translate:\r\n        </P>\r\n        <P>\r\n            <IMG src=\"http://songhaysystem.com/bitmaps/WD97HTMLConversion/Image31.gif\" WIDTH=\"484\" HEIGHT=\"558\" />\r\n        </P>\r\n        <P>\r\n            By the way, one of the Word Properties, shown above will not translate into a <CODE>META</CODE> tag. It will end up in a <CODE>TITLE</CODE> tag. It should be obvious which value that is. What is less obvious is how to get Word 97 to specify your own META information. This is done by editing the <STRONG>Custom</STRONG> tab:\r\n        </P>\r\n        <P>\r\n            <IMG src=\"http://songhaysystem.com/bitmaps/WD97HTMLConversion/Image32.gif\" WIDTH=\"484\" HEIGHT=\"558\" />\r\n        </P>\r\n        <P>\r\n            The Custom Name <CODE>UnknownHead_0_1_0</CODE> (and <CODE>UnknownHead_0_1_1</CODE>) is actually created by Word when it is <EM>importing</EM> a file with header information it does not understand. This can “force” Word to translate custom tags to the <CODE>HEAD</CODE> block during export.\r\n        </P>\r\n        <H2 CLASS=\"padtop\">\r\n            <A NAME=\"_Toc502766774\">Parting Comments</A>\r\n        </H2>\r\n        <P>\r\n            Hey, this is better than nothing! The main motivation for creating HTML from Word 97 is to take advantage of inline spell checking and VBA automation features. This technique is most effective on long documents with pictures (like this one).\r\n        </P>\r\n        <P>\r\n            Since I respect W3C DTDs, I need to build HTML with very little proprietary tags. The following table lists a few caveats:\r\n        </P>\r\n        <TABLE CELLSPACING=\"1\" CELLPADDING=\"9\" WIDTH=\"738\">\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P STYLE=\"text-align: center\">\r\n                        <STRONG>Word Feature</STRONG>\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <STRONG>Comments</STRONG>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <DL>\r\n                        <DT>\r\n                            Bullet lists\r\n                        </DT>\r\n                    </DL>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Sporadically, Word 97 decides to wrap each <CODE>LI</CODE> tag in its own <CODE>UL</CODE> tags.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Colored text\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        This feature translates into <CODE>FONT</CODE> tags. Yuck.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Character Styles\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Word 97 often translates Character Styles and Paragraph Styles in the wrong order. For example, the inline element <CODE>CODE</CODE> precedes the block-level <CODE>PRE</CODE> tags. This usually happens when the Character Style is specified at the end or the beginning of a paragraph.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Fonts\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        This feature translates into <CODE>FONT</CODE> tags. Yuck. It is better to keep body text in the Default Paragraph Font of Normal style.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Inserted Hyperlinks\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        All you get is the <CODE>HREF</CODE> attribute of the <CODE>A</CODE> tag. No <CODE>TARGET</CODE>, no <CODE>TITLE</CODE>.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Inserted Images\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        No control over <CODE>ALT</CODE> or <CODE>BORDER</CODE> attributes. Images are saved in the same directory as the file.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Paragraph Styles\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        The Preformatted Paragraph Style is exported as <CODE>PRE</CODE> tags filled with either unnecessary <CODE>BR</CODE> tags (translated from Word Line Break characters) or <CODE>P</CODE> tags (translated from Word Paragraph characters).\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Table of Contents\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        The anchor tags (<CODE>&lt;A&gt;&lt;/A&gt;</CODE>) may not nest correctly within the header tags.\r\n                    </P>\r\n                    <P>\r\n                        Check for hidden bookmarks under <STRONG>Insert &gt; Bookmark…</STRONG> as these end up as anchor tags.\r\n                    </P>\r\n                    <P>\r\n                        Make sure that Show page numbers is selected or no anchors will be inserted. Page numbers are converted to asterisks. That sucks.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        Tables\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        The Word 97 HTML converter is unable to determine if a <CODE>TH</CODE> tag is required.\r\n                    </P>\r\n                    <P>\r\n                        Minimized <CODE>&lt;P&gt;</CODE> tags are used gratuitously in table cells with only one paragraph.\r\n                    </P>\r\n                    <P>\r\n                        Avoid the proprietary <CODE>BORDERCOLOR</CODE> attribute by leaving the default border color of tables at Auto. If you have to change it back to Auto, verify that <STRONG>Borders and Shading… &gt; Borders &gt; Setting:</STRONG> is <STRONG>All</STRONG>.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n            <TR>\r\n                <TD WIDTH=\"32%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        The Comment Style\r\n                    </P>\r\n                </TD>\r\n                <TD WIDTH=\"68%\" VALIGN=\"TOP\">\r\n                    <P>\r\n                        This translates into the mysterious <CODE>COMMENT</CODE> tag. It does not create HTML comments.\r\n                    </P>\r\n                </TD>\r\n            </TR>\r\n        </TABLE>\r\n        <P>\r\n            By the way, this document was prepared for http service by:\r\n        </P>\r\n        <OL>\r\n            <LI>\r\n                Exporting as HTML from Word 97.\r\n            </LI>\r\n            <LI>\r\n                Opening in <A HREF=\"http://www.chami.com/html-kit/\">HTML-Kit</A>.\r\n            </LI>\r\n            <LI>\r\n                Adding a few <CODE>CLASS</CODE> attributes to make tags refer to the style sheet specified by tweaking Word 97 Custom Properties.\r\n            </LI>\r\n            <LI>\r\n                Running the <A HREF=\"http://www.w3.org/People/Raggett/tidy/\">HTML Tidy</A> Plug-in HTML-Kit. (May lead to a few Find/Replace operations.)\r\n            </LI>\r\n        </OL>\r\n        <P>\r\n            This file you are reading has been validated by HTML-Kit and produces 0 errors, 11 warnings and 5 “other” comments. Most of the warnings point at tag nesting problems with the endnote at the end of this document. I had to correct that problem by hand.\r\n        </P>\r\n        <P>\r\n            I am certain that there is a better way to get “clean” HTML from a robust word processor—and Word 2000 has very little to do with it!\r\n        </P>\r\n        <H2 CLASS=\"padtop\">\r\n            <A NAME=\"_Toc502766775\">Endnotes</A>\r\n        </H2>\r\n        <P>\r\n            <SMALL><A NAME=\"Endnote01\"><SUP>1</SUP></A>However, using inserted Hyperlinks and Bookmarks can be the HTML equivalent of footnotes—or, rather <EM>endnotes.</EM></SMALL>\r\n        </P>\r\n",
    "CreateDate": "1999-01-10T20:47:49.0000000",
    "EndDate": null,
    "ModificationDate": "2002-10-21T17:56:07.7430000",
    "DocumentId": "5",
    "PrevFragmentId": "-1",
    "NextFragmentId": "-1",
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6",
    "FragmentName": "web_name",
    "FragmentDisplayName": "Songhay System",
    "SortOrdinal": null,
    "ItemChar": "Songhay System",
    "ItemText": null,
    "CreateDate": "2002-08-15T09:47:48.0000000",
    "EndDate": null,
    "ModificationDate": null,
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "7",
    "FragmentName": "web_domain",
    "FragmentDisplayName": "www.SonghaySystem.com",
    "SortOrdinal": null,
    "ItemChar": "SonghaySystem.com",
    "ItemText": null,
    "CreateDate": "2002-08-15T09:47:48.0000000",
    "EndDate": null,
    "ModificationDate": null,
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "8",
    "FragmentName": "web_timestamp",
    "FragmentDisplayName": "web timestamp",
    "SortOrdinal": null,
    "ItemChar": null,
    "ItemText": null,
    "CreateDate": "2002-08-20T10:09:40.0000000",
    "EndDate": null,
    "ModificationDate": "2002-08-15T09:47:48.0000000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "10",
    "FragmentName": "web_prose_kbcopyright@WordFile00",
    "FragmentDisplayName": "KB Copyright Notice",
    "SortOrdinal": null,
    "ItemChar": "<strong>Copyright© </strong>\n  <strong>2010</strong>\n  <strong> by Bryan D. Wilhite</strong> All rights reserved. No part of this material may be used or reproduced in any form or by any means, or stored in a database or retrieval system, without prior written permission of the publisher except in the case of brief quotations embodied in critical articles and reviews. Making copies of any part of this material for any purpose other than your own personal use is a violation of United States copyright laws.",
    "ItemText": null,
    "CreateDate": "1998-01-29T00:00:00.0000000",
    "EndDate": null,
    "ModificationDate": "2008-04-08T20:26:00.0000000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "11",
    "FragmentName": "web_prose_kbdisclaimer@WordFile00",
    "FragmentDisplayName": "KB Disclaimer",
    "SortOrdinal": null,
    "ItemChar": "The information provided by Bryan D. Wilhite at kintespace.com is provided “as is” without warranty of any kind. In no event shall Bryan D. Wilhite or any of his affiliates be liable for any damages whatsoever including, but not limited to, direct, indirect, incidental, consequential, loss of business profits or special damages due to material published by Bryan D. Wilhite or any of his affiliates.",
    "ItemText": null,
    "CreateDate": "1998-01-29T00:00:00.0000000",
    "EndDate": null,
    "ModificationDate": "2002-09-14T21:57:55.0000000",
    "DocumentId": "-1",
    "PrevFragmentId": "-1",
    "NextFragmentId": "-1",
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "12",
    "FragmentName": "web_prose_kbintro@WordFile00",
    "FragmentDisplayName": "KB Intro Prose",
    "SortOrdinal": null,
    "ItemChar": "<p>\r\nWelcome to The Funky Knowledge Base! This knowledge base is my personal notes on subjects of interest to me and is literally my business. I do not want to be as massive and complete as Microsoft, Adobe or Sybase. I am concentrating on those fine trivialities and vital details that are often buried under tons of useless stuff at our favorite corporate web sites. If this Funky Knowledge Base gets too big please let me know about the next funky thang out there that is short but sweet and searching for sutra. And please <a class=\"threadbg\" href=\"http://www.kintespace.com/kmail.html\">let me know</a> if there are any errors here; don’t hide the truth from me—I can take it!\r\n</p>",
    "ItemText": null,
    "CreateDate": "1998-01-29T00:00:00.0000000",
    "EndDate": null,
    "ModificationDate": "2002-08-15T09:47:47.0000000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "13",
    "FragmentName": "web_prose_KBNews@WordFile00",
    "FragmentDisplayName": "KB News",
    "SortOrdinal": null,
    "ItemChar": null,
    "ItemText": null,
    "CreateDate": "1998-01-29T00:00:00.0000000",
    "EndDate": null,
    "ModificationDate": "2002-08-15T09:47:47.0000000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "14",
    "FragmentName": null,
    "FragmentDisplayName": "Privacy Policy",
    "SortOrdinal": null,
    "ItemChar": "<h1>Privacy Policy</h1>\r\n<p align=\"left\">\r\n    We respect the privacy of all visitors to our website.<br />\r\n <br />\r\nWe do not sell, disclose, lease, rent or share any personal information including e-mail addresses.<br />\r\n <br />\r\nIn the event that we should ever utilize an Advertising Network that sets cookies, we would not receive or collect any of the information.<br />\r\n<br />\r\nOur Web server automatically receives anonymous “general usage data” which could include a record of which pages at our website visitors frequent the most. This information helps us determine which type of software and computing resources are most popular with our viewers and allows us to serve them better.<br />\r\n <br />\r\nThis website provides external links to other websites. We are not responsible and cannot control the content and security of other sites you visit once you leave our website.\r\n</p>\r\n",
    "ItemText": "<h1>Privacy Policy</h1>\r\n<p align=\"left\">\r\n    We respect the privacy of all visitors to our website.<br />\r\n <br />\r\nWe do not sell, disclose, lease, rent or share any personal information including e-mail addresses.<br />\r\n <br />\r\nIn the event that we should ever utilize an Advertising Network that sets cookies, we would not receive or collect any of the information.<br />\r\n<br />\r\nOur Web server automatically receives anonymous “general usage data” which could include a record of which pages at our website visitors frequent the most. This information helps us determine which type of software and computing resources are most popular with our viewers and allows us to serve them better.<br />\r\n <br />\r\nThis website provides external links to other websites. We are not responsible and cannot control the content and security of other sites you visit once you leave our website.\r\n</p>\r\n",
    "CreateDate": "2002-10-29T21:49:04.0000000",
    "EndDate": null,
    "ModificationDate": "2002-10-29T21:54:48.7870000",
    "DocumentId": "13",
    "PrevFragmentId": "-1",
    "NextFragmentId": "-1",
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "15",
    "FragmentName": null,
    "FragmentDisplayName": "Digital Compositing for NTSC Broadcast Segments with Sonic Found",
    "SortOrdinal": null,
    "ItemChar": "<h1>Digital Compositing for NTSC Broadcast Segments with Sonic Foundry Vegas Video 3.0</h1>\r\n<h2>Introduction</h2>\r\n<p>As the company name suggests, Sonic Foundry is known for their “sound” products, namely their well-respected <a href=\"http://www.sonicfoundry.com/products/NewShowProduct.asp?PID=668\">Sound Forge</a> digital audio editors and their innovative <a href=\"http://www.sonicfoundry.com/products/NewShowProduct.asp?PID=704\">ACID</a> digital audio sequencers. My personal investment in Sonic Foundry products rightfully started with these professional sound design tools. When I first heard of Vegas Video, I immediately thought of what the word “<a href=\"http://us.imdb.com/Title?0112641\">Vegas</a>” meant to me and quickly associated my feelings about this word with the product and overlooked the software for several months.</p>\r\n<p>Then <a href=\"http://freestylemega.com/\">R/Kain Blaze</a>, a Mac-based friend of mine, began pointing me to articles—like the one by <a href=\"http://www.digitalvideoediting.com/2001/12_dec/reviews/cw_vegasvid3.htm\">Charlie White</a> (digialvideoediting.com)—showing an unusual amount of respect for this Wintel-based product. When Charlie writes, “And, acing out Final Cut Pro 3 is Vegas Video 3’s ability to see what you’re really doing, previewing all your work through 1394 on an NTSC or PAL monitor in real time, something that’s not yet possible with Final Cut Pro 3 (more on that later) without hardware assistance…” I began to sit up and take notice and eventually invested in Vegas Video.</p>\r\n<p>I’ve recently had the opportunity to do digital compositing work on <a href=\"http://imdb.com/title/tt0350596/\">a feature-length documentary</a> about the life of the great theatre, television and screen actress <a href=\"http://us.imdb.com/Name?Richards,+Beah\">Beah Richards</a>. Vegas Video was <em>the</em> indispensable tool for my role in this production.</p>\r\n<h2>Challenges</h2>\r\n<p>\r\n  <a href=\"http://www.amazon.com/exec/obidos/ASIN/B0007V6IUS/thekintespacec00A/\">\r\n    <img alt=\"Buy this DVD at Amazon.com!\" border=\"0\" src=\"http://kintespace.com/bitmaps/blog_dogtown_dvd.jpg\" style=\"float:left;margin:16px;margin-top:0;\" /></a>Many professional filmmakers are discovering Sonic Foundry products and solutions. For example, the recent Sony Classics documentary film <a href=\"http://us.imdb.com/Title?0275309\"><em>Dogtown and Z Boys</em></a> depended heavily on Sonic Foundry <a href=\"http://www.sonicfoundry.com/news/ShowRelease.asp?ReleaseID=460\">frame-rate conversion and digital image transfer technologies</a>. However, I found myself, like many nascent Vegas Video users, contributing to a project already in production using more “mature” technology. In this case, I was supporting a Windows NT, non-linear editor—hard-wired to a <a href=\"http://en.wikipedia.org/wiki/Truevision_TGA\">Targa 2000</a> video card—that appeared to be related to <a href=\"http://en.wikipedia.org/wiki/Discreet_Logic\">Discreet Logic’s</a> edit*, descending from the legendary <a href=\"http://en.wikipedia.org/wiki/Intergraph_Corporation\">Intergraph TDZ</a> rigs from the late 1990s.</p>\r\n<p>\r\n  <em>First challenge.</em> The editor, Ms. <a href=\"http://us.imdb.com/Name?Amend,+Kate\">Kate Amend</a>, and the director of this project gave me written instructions (called “shot lists”) detailing the duration of the shot, identifying the media assets used in the shot, specifying transitions among these assets and inquiring about creating variations of a particular shot. We will see that Vegas video is able to translate these written words into its user interface, making a “living record” of their instructions saved in Vegas Project files (with the extension VEG).</p>\r\n<p>\r\n  <em>Second challenge.</em> The media assets required in the shots are mostly digitized photographs or scanned pages from books and magazines. This material comes in a variety of formats, like JPEG, TIFF and even GIF. All of this source material will be consolidated under one, still-image file format and issues of pixel aspect ratio—moving from the computer screen to the television screen (discussed below)—will be adequately addressed.</p>\r\n<p>\r\n  <em>Third challenge.</em> The Targa 2000 video card demands that all footage in the online system be rendered in its proprietary codec. Vegas Video with the help of the French company <a href=\"http://www.morgan-multimedia.com/\">Morgan Multimedia</a> will make meeting this challenge easy going. Additionally, this production has been focused on domestic broadcast television under the <a href=\"http://www.ntsc-tv.com/\">NTSC standard</a> here in the United States of America. This implies that all of my contributions to this project must comply with this standard. As we will see, this will not be a serious obstacle.</p>\r\n<h2>Solutions: The Vegas Video Project File</h2>\r\n<p>Sonic Foundry provides <a href=\"http://www.sonymediasoftware.com/support/trainingvids.asp?prod=vegas\" title=\"Now Under Sony Pictures Digital\">great introductory tutorials</a> about the Vegas Video interface (tutorials about previous versions are still relevant), so with that in mind let’s drill right down to the essentials for setting up a shot for NTSC broadcast. The following scenario is identical to what has happened while making the Beah Richards documentary: we have an item on our shot list specifying that we need a five-and-a-half second push in on an old portrait of a man in a suit. We know that every shot should have a one-second leader and trailer in addition to the specified duration. We also know the editor and director are looking for at least two variations of the shot.</p>\r\n<h3>Project Properties</h3>\r\n<p>The first step (after opening Vegas) is to edit the Project Properties—specifically the properties of the <strong>Video</strong> and <strong>Summary</strong> tabs. The <strong>Video</strong> tab is shown below. The <strong>Width:</strong>, <strong>Height:</strong>, <strong>Field order:</strong> and <strong>Pixel aspect ratio:</strong> properties have a direct effect on the Video Preview window:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Project Properties\" height=\"358\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasProjectPropertiesVideo.gif\" width=\"431\" /></p>\r\n<p>The dialog shows that the built-in template (or Preset), <code>NTSC Standard (720×486, 29.970 fps)</code>, has its <strong>Field order:</strong> property modified to <code>None (progressive scan)</code>. I am doing this because I will be previewing shots on an LCD screen instead of an external analog monitor as I’ll be compositing this shot with my Dell Inspiron 8100, a <em>portable</em> computer. (Recall, by the way, that <em>progressive</em> scanning refers to the top-to-bottom, left-to-right, line-by-line path of the electron gun of CRT computer monitors—opposed to the every-other-line scanning of <em>interlaced</em> television displays.) I found editing with a portable computer more convenient for the editor and director as I could bring my work to their facilities, having a near-zero impact on the established workflow.</p>\r\n<p>Clicking on the <strong>Apply</strong> button will change the Video Preview window. When undocked, it should look like picture below:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Blank Video Preview\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasBlankVideoPreview.gif\" /></p>\r\n<p>The dimensions of the Project (shown on the bottom of the Video Preview window) and those of the Preview are different. I have deliberately resized the Video Preview window to roughly half the size of the actual rendered media making previewing faster. Please make note of the buttons at the top of the Video Preview window—namely the <strong>Video Output FX…</strong> and <strong>Overlays</strong> buttons. These will come in handy later on (so understanding what they do will be a big help).</p>\r\n<p>Returning to Project Properties we quickly note that this shot will not need any audio (this is to be added later by other team members) so we don’t need to see the <strong>Audio</strong> tab. The Project Properties <strong>Ruler</strong> tab is set to <code>Time &amp; Frames</code> by default—we’ll go with this format and move on to the <strong>Summary</strong> tab:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Project Properties (Summary Tab)\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasProjectPropertiesSummary.gif\" /></p>\r\n<p>The Vegas Video manual states that Project Properties are mostly for “informational purposes.” We can see that the <strong>Summary</strong> tab stores most such information. The <strong>Comments:</strong> field saves the instructions from the editor and director directly in the file for future reference.</p>\r\n<h3>Specifying Duration</h3>\r\n<p>Based on the comments stored in the project, we know we need a shot with a five-and-a-half second duration (this is about 00:00:05.15 seconds and frames, based on 30 frames/second)—plus one second leading and one second trailing. By entering <code>Ctrl+g</code> or by double-clicking on the <strong>Cursor Position</strong> field at the lower right of the Timeline, we can make our first move to the one-second position on the Timeline and insert a Marker. The animations below show this two-part process:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Cursor Position\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasCursorPosition.gif\" style=\"margin:16px;\" /><img alt=\"Marker Insert\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasMarkerInsert.gif\" style=\"margin:16px;\" /></p>\r\n<p>Our second and third cursor position markers denote the actual shot length and the one-second trailer respectively. The picture below summarizes the duration specified in the shot list:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Markers\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasMarkerSummary.gif\" /></p>\r\n<p>Note that the second marker specifying shot duration is actually at position 00:00:06.15 seconds and frames on the timeline. It is possible to use the <strong>Set Time at Cursor</strong> command while the cursor is at zero and enter <em>negative</em> one second (-00:00:01.00) to offset the timeline “correctly” but this not necessary for our shot.</p>\r\n<h2>Solutions: Compositing Still Images in Vegas Video</h2>\r\n<p> Researchers for documentary projects often receive source material from people who have very little interest in professionally archiving photographs. In our scenario, we will use the sample image from the Adobe Photoshop 7.0 distribution called <code>Old Image.jpg</code> (shown at left, at half the size of the image actually used).</p>\r\n<p>This image is a perfect example of how documentary source material is not exactly in ideal condition. Additionally, this image is a <em>portrait</em> (more tall than wide), while our final NTSC format is <em>landscape</em> (more wide than tall). We will need to use the Vegas Event Pan/Crop tool to pan and scan this image (the Vegas Video online help does a great job explaining how this tool works).</p>\r\n<h3>Choosing the Right Still Image Format</h3>\r\n<p>The Vegas Video documentation showed a marked preference for the relatively new Portable Network Graphics (<a href=\"http://en.wikipedia.org/wiki/PNG\">PNG</a>) format. This is definitely the wise choice if alpha-channel transparency is desired in the source images for advanced compositing. However, I don’t have much call for 16-bit alpha channels—or even lossless compression. My need for Photoshop’s Adjustment Layers outweighs any further consideration of image formats other than its native format (type PSD). Fortunately, Vegas Video is able to detect and import Photoshop files (but Vegas does not, as yet, recognize Photoshop layers in ways similar to Adobe After Effects).</p>\r\n<p>With Photoshop’s Adjustment Layers I can apply Curves to the source image to adjust the brightness and contrast—nondestructively. By taking advantage of nondestructive editing of the source image I can make changes on the fly if the shot looks too light or too dark on the monitors of the editor’s NLE system. Simultaneously, some “destructive” editing can be done in Photoshop at my discretion: the Rubber Stamp Tool and/or the Healing Brush can be used to reduce the dust and scratches on the original digitized image.</p>\r\n<p>After a lively combination of nondestructive and destructive editing techniques—and with my trusty Wacom <a href=\"http://www.wacom.com/graphire/index.cfm\">tablet and stylus</a>—we can compare the original source image to the final Photoshop still:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Original Digitized Image\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/old_image.jpg\" style=\"margin:16px;\" /><img alt=\"Modified Image\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/new_image.jpg\" style=\"margin:16px;\" /></p>\r\n<h3>Creating a Video Event with a Still Image</h3>\r\n<p>The Vegas Video Explorer has our Photoshop file, <code>Old Image.psd</code>, selected. We can see that the Photoshop, PSD file type is registered as IrfanView (for “obvious” reasons for the Wintel-based lovers of <a href=\"http://www.irfanview.com/\">IrfanView</a>). Pay attention to the file sizes: the <code>Old Image.jpg</code> file has ballooned to 1.42 MB after adding a layer and being converted to Photoshop native format. I am willing to pay the price of cheap disk space for the sake of convenience!</p>\r\n<p align=\"center\">\r\n  <img alt=\"Vegas Explorer\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasExplorer.gif\" /></p>\r\n<p>By clicking and dragging the file to the Timeline window, we add this file to our current project creating a Video Event. Let’s snap our event in place to the third marker by dragging the right edge of the event. With the cursor over the event, we can see that the image looks stretched horizontally in the Video Preview window. Vegas Video imports still images using the aspect ratio of 1.0, the aspect ratio of the source media instead of the aspect ratio of the project. The image appears stretched wide on the progressive scan computer screen, but would look right on an external NTSC monitor. To compensate for this, right-click on the Video Preview Window and select <strong>Display Square Pixels</strong> (thanks goes to Software Design Engineer, Dennis Adams of Sonic Foundry for pointing this out to me):</p>\r\n<p align=\"center\">\r\n  <img alt=\"The keyframes\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasVideoPreview4.gif\" /></p>\r\n<p>By snapping the event to the third marker (at 00:00:07.15), we have a Video Event on the Timeline like the following:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Timeline\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasTimelineVersion1.gif\" /></p>\r\n<p>Notice that the Event track has a Track Name, “Version 1.” I entered this name knowing that we can use the Mute button to hide or show this track. Later we will see how we can use these features to store multiple versions of the same shot in one project file.</p>\r\n<h3>Event Pan/Crop</h3>\r\n<p>I have decided that track <code>Version 1</code> will push in on the portrait in full frame. This means using the <strong>Event Pan/Crop…</strong> tool which is available by clicking <strong>Event Pan/Crop…</strong> button directly on the Video Event, right-clicking the event and selecting <strong>Video Event Pan/Crop…</strong> from the context menu or by selecting the event and choosing <strong>Tools &gt; Video &gt; Video Event Pan/Crop…</strong>. I prefer setting the cursor to the “home” position on the Timeline (usually at the zero-second mark) and clicking on the <strong>Event Pan/Crop…</strong> button. This prevents the creation of unnecessary keyframes in the Event Pan/Crop window.</p>\r\n<p>Making sure that the <strong>Sync Cursor</strong> toggle button (at the lower left) is down in the Event Pan/Crop window, press <code>Alt+0</code> and use the <code>Ctrl</code> and left/right arrow keys to move to the first marker. If <strong>Sync Cursor</strong> is active then the position of the cursor in the Event Pan/Crop window will also move to the location of the first marker. Drag the default keyframe to this location. We should now have one keyframe placed in the Keyframe Controller (at the bottom of the Event Pan/Crop window) at position 00:00: 01.00 like the following:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Event Pan/Crop\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasEventPanCrop1.gif\" /></p>\r\n<p>Right-click on the image in the Event Pan/Crop window and select <strong>Match Output Aspect</strong>. This command crops the image according to the frame width and height specified in Project Properties:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Event Pan/Crop\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasEventPanCrop2.gif\" /></p>\r\n<p>The Video Preview window with the <strong>Safe Areas</strong> overlay activated shows what will appear on an NTSC-compatible monitor. Recall that the inner dashed rectangle is the title safe area while the outer rectangle is the action safe area:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Video Preview\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasVideoPreview1.gif\" /></p>\r\n<p>I’m pretty confident that this is not the shot the editor and director are looking for! We’ll need to work harder! Eventually two keyframes are set. The animation below, jumping between the first and second keyframes, summarizes:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Event Pan/Crop\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasEventPanCrop3.gif\" /></p>\r\n<p>The rate of tweening between the keyframes is <strong>Linear</strong> by default. To simulate more “natural” camera movement the interpolation of the first keyframe is set to <strong>Smooth</strong>. Interpolation is set by right-clicking on a keyframe and selecting an option from the context menu. The table below (from the Vegas Video manual) summarizes the options:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Interpolation Table\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasInterpolation.gif\" /></p>\r\n<p>With the Pan/Crop keyframes set, we can see the corresponding frames in the Video Preview window:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Safe Areas in Video Preview\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasVideoPreview2.gif\" /></p>\r\n<h3>“Broadcast-Safe” Colors</h3>\r\n<p>Many a web programmer was lectured about “web-safe” colors. We were encouraged to confine our indexed-color palette within a range that’s compatible with most browsers on most computer operating systems. A similar principle is behind “broadcast-safe” colors for NTSC television. On a computer-generated color scale of 0 to 255, where black is 0 and 255 is white, “NTSC black” would be 16 and “NTSC white” would be 235. In fact, computer monitors can generate up to 16 million colors while NTSC television displays about two million.</p>\r\n<p>It follows that footage generated by computer may have literally millions of colors that are “out of gamut” for broadcast television and should be filtered out before the final render. Vegas Video 3.0 ships with a plug-in called Sonic Foundry Broadcast Colors (or Broadcast Colors Filter). From the Plug-Ins window, I drag and drop this filter on the <strong>Video Output FX…</strong> button and take the most conservative route by selecting the <code>Maximum Bounds</code> Preset:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Broadcast Colors Filter\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasBroadcastColors.gif\" /></p>\r\n<p>By activating the <strong>Histogram – Luminance</strong> overlay in the Video Preview window, we can alternately enable and disable the Broadcast Colors Filter producing an effect like what is seen in the animation below:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Luminance and the Broadcast Colors Filter\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasLuminanceOverlay.gif\" /></p>\r\n<p>Clearly we are “chopping off” the edges of the gamut of colors. We won’t see the effects of this unless we are looking through an NTSC monitor (which, I remind you, <em>is</em> possible in Vegas).</p>\r\n<h3>\r\n  <img alt=\"Duplicating a Track\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasDuplicateTrack.gif\" style=\"float:right;margin:16px;margin-top:0;\" />Adding an Alternate Version of the Shot</h3>\r\n<p>It is temping to Render track <code>Version 1</code> to see exactly what’s going on. Yes, we can build a Dynamic RAM Preview or simply press Play to get something to look at in the Video Preview window but I have done hundreds of shots like this one so I’m confident enough to set up some “version 2” tracks.</p>\r\n<p>The version 1 track is very tight on the face—which is great for dramatic effect—but we lose the suit. We can’t really tell if this guy is really duded up or not! To up the ante, I want to see the face <em>and</em> the suit at the same time (no panning and scanning—only pushing). One way to achieve this effect is by taking advantage of Vegas Video’s Track Motion tool (among other great features). So let’s duplicate our first track by right-clicking its item in the Track List (shown at left) and name it <code>Version 2</code>. We also need to disable the first track by pressing its Mute button in the Track List. The picture below summarizes:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Timeline\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasVersion2Track.gif\" /></p>\r\n<p>In turn, duplicate track <code>Version 2</code>. Vegas Video automatically names this track <code>Copy of Version 2</code>. Rename this track to <code>Version 2 (Track Motion)</code> and open its Event Pan/Crop window. Remove its second keyframe at 00:00:07.15. At the first keyframe, right-click on the image in the Event Pan/Crop window and select <strong>Restore</strong>. The Event Pan/Crop window for track <code>Version 2 (Track Motion)</code> should look like the following:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Event Pan/Crop\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasEventPanCrop4.gif\" /></p>\r\n<p>Close this window. Drag the left edge of track <code>Version 2</code> to somewhere around 00:00:03.20 seconds and frames. Dragging the edges of this event will cause the Event Pan/Crop keyframes to change position so make sure that the first keyframe is positioned at 00:00:00.00 (in the Event Pan/Crop window Keyframe Controller—not the project Timeline) and the second keyframe rests at the third marker. The Event Pan/Crop window for track <code>Version 2</code> should look like the following:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Event Pan/Crop\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasEventPanCrop5.gif\" /></p>\r\n<p>The last thing we need to do for track <code>Version 2</code> is to set a fade-in using the default Fade Type. This is very easy to do in Vegas Video (by dragging the little blue triangle in upper left corner of the Event on the Timeline) and this feature really sets the product apart from its competitors. Finally, view the Text/Backgrounds window (type <code>Alt+9</code>), drag and drop the Gray solid color to an empty area at the bottom of the Timeline creating a new track. Name it <code>Version 2 (Solid)</code>. Now there should be a total of four tracks, where three tracks will be used in the second version of the shot:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Timeline\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasDuplicateTrack2.gif\" /></p>\r\n<p>Now we are ready to add Track Motion to the third track. Let’s move to the first marker in the Timeline and click on the <strong>Track Motion…</strong> button for the track <code>Version 2 (Track Motion)</code>. The Keyframe Controller for Track Motion has three levels for Position, Shadow and Glow. Check the <strong>Shadow</strong> level in the Keyframe Controller and move the Position keyframe to 00:00:01.00. Making sure that Position level has focus in the Keyframe Controller, rotate the frame about negative five degrees (<code>-5.0</code>) and resize such that the image fits in the title safe area of the Video Preview window. We should have a Track Motion window like the picture below:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Track Motion\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasTrackMotion.gif\" /></p>\r\n<p>The effect in the Video Preview window is shown below:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Video Preview\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasVideoPreview3.gif\" /></p>\r\n<p>Let’s add one more Track Motion position keyframe at the second marker in the Timeline where we resize the frame much larger than the dimensions at the first keyframe. This creates the effect of pushing in on the subject. This is the Track Motion window:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Track Motion\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasTrackMotion2.gif\" /></p>\r\n<p>We have completed the second version our shot. It’s far more complicated than the first version but here we are. I hope we didn’t lose anyone. Now we are ready to render!</p>\r\n<h2>Solutions: Video Hardware Emulation with Vegas Video and the Morgan LSI Codec</h2>\r\n<p>The <a href=\"http://www.pinnaclesys.com/support/products/info/default.asp?ProductID=332\">Targa 2000 line</a> is being discontinued by Pinnacle Systems and is widely considered venerable “legacy” technology. This certainly should have been a showstopper for me—literally. But a key member of the <em>Beah</em> production team, Bill Russell (who has, by the way, recently finalized production of his labor of love <a href=\"http://press.lostskeleton.com/\"><em>The Lost Skeleton of Cadavra</em></a>), led me in the right direction and I found myself at <a href=\"http://www.morgan-multimedia.com/\">morgan-multimedia.com</a>, purchasing their LSI M-JPEG Codec which allowed me to software-emulate the rendering functionality of the Targa 1000/2000 series hardware. The image below shows the properties/settings of the Morgan LSI Codec. This dialog is available from the Windows 2000 Video Codecs Properties dialog (discussed below) or from a convenient System Tray icon installed by the Morgan product itself.</p>\r\n<p align=\"center\">\r\n  <img alt=\"Morgan LSI Dialog\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/MorganLSIDialog.gif\" /></p>\r\n<p>After installing the Morgan LSI codec, I verified that my copy of Windows 2000 Professional recognized this new codec. In the Windows 2000 Device Manager, I selected <strong>Sound, video and game controllers &gt; Video Codecs</strong> and I saw the dialog below:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Windows 2000 Video Codecs Properties Dialog\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/Win2KVideoCodecs.gif\" /></p>\r\n<p>And, of course, we can see the properties/settings of the Morgan LSI Codec by right-clicking on Morgan Multimedia LSI M-JPEG Codec (shown in the list above) and selecting <strong>Properties &gt; General &gt; Settings…</strong>. Seeing this, I realized that Vegas Video (with the help of the Morgan Multimedia Codec) is effectively a video hardware emulator! Without this solution (or some other software-based solution) I would have had to pass on the project or find a used Targa 2000 card and build an entire system around it.</p>\r\n<h3>Rendering the Shots</h3>\r\n<p>Press the <strong>Solo</strong> button for track <code>Version 1</code> and select <strong>File &gt; Render As…</strong>. The dialog should be set like the settings shown:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Render As\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasRender.gif\" /></p>\r\n<p>Let’s review my Template for Targa 2000 emulation. Click on the <strong>Custom</strong> button and move to the <strong>Video</strong> tab:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Render As Custom Settings\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasRender2.gif\" /></p>\r\n<p>Bill Russell was a great help “reverse engineering” these settings. He discovered that disabling the <strong>Interleave every (seconds):</strong> and <strong>Create an OpenDML (AVI version 2.0) compatible file</strong> fields and setting <strong>Data rate (Kbytes/second):</strong> <code>1000</code>, was most compatible with the Targa2000. Disabling the <strong>Audio</strong> tab helped as well. Of course, the <strong>Project</strong> tab will show <strong>Video rendering quality:</strong> <code>Best</code> (which is the appropriate setting for down-sampling still images) and <strong>Motion blur type:</strong> <code>None</code>. Clicking <strong>OK</strong> in the Custom Settings dialog takes us back to the Render As dialog. Press the <strong>Save</strong> button and <code>VegasNTSC (Version 1).avi</code> will be written to disk.</p>\r\n<p>Press the <strong>Mute</strong> button for track <code>Version 1</code> and select <strong>File &gt; Render As…</strong>. Enter <code>VegasNTSC (Version 2) </code>for the file name and press <strong>Save</strong>. That’s it.</p>\r\n<h2>Flippant Remarks and Free Samples</h2>\r\n<p>The techniques discussed in this article are direct descendants of the inspiration given to me by the classic American hymn <a href=\"http://www.amazon.com/exec/obidos/ASIN/B000068UY9/thekintespacec00A/\" title=\"Buy this movie at Amazon.com\"><em>The Civil War</em></a> by Ken Burns. Almost all of <em>The Civil War</em> is camera moves over still images. Now with Vegas Video we don’t need a several-thousand-dollar camera and an extremely steady hand. The “special effects” we have explored can adequately replicate what a “real” camera can do—and go beyond…</p>\r\n<table id=\"CleanXhtmlTable_ECAAAAA3\">\r\n  <tr>\r\n    <td><strong>Download</strong></td>\r\n    <td><strong>Description</strong></td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <a href=\"http://songhaysystem.com/samples/VegasNTSC/VegasNTSC.zip\">VegasNTSC.zip</a>\r\n    </td>\r\n    <td>Vegas Video project files and Media Pool assets.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <a href=\"http://songhaysystem.com/samples/VegasNTSC/VegasNTSC(Version1).mov\">VegasNTSC(Version1).mov</a>\r\n    </td>\r\n    <td>Version one of the shot. This file requires <a href=\"http://www.apple.com/quicktime/\">Apple QuickTime</a>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <a href=\"http://songhaysystem.com/samples/VegasNTSC/VegasNTSC(Version2).mov\">VegasNTSC(Version2).mov</a>\r\n    </td>\r\n    <td>Version two of the shot. This file requires <a href=\"http://www.apple.com/quicktime/\">Apple QuickTime</a>.</td>\r\n  </tr>\r\n</table>",
    "ItemText": "<h1>Digital Compositing for NTSC Broadcast Segments with Sonic Foundry Vegas Video 3.0</h1>\r\n<h2>Introduction</h2>\r\n<p>As the company name suggests, Sonic Foundry is known for their “sound” products, namely their well-respected <a href=\"http://www.sonicfoundry.com/products/NewShowProduct.asp?PID=668\">Sound Forge</a> digital audio editors and their innovative <a href=\"http://www.sonicfoundry.com/products/NewShowProduct.asp?PID=704\">ACID</a> digital audio sequencers. My personal investment in Sonic Foundry products rightfully started with these professional sound design tools. When I first heard of Vegas Video, I immediately thought of what the word “<a href=\"http://us.imdb.com/Title?0112641\">Vegas</a>” meant to me and quickly associated my feelings about this word with the product and overlooked the software for several months.</p>\r\n<p>Then <a href=\"http://freestylemega.com/\">R/Kain Blaze</a>, a Mac-based friend of mine, began pointing me to articles—like the one by <a href=\"http://www.digitalvideoediting.com/2001/12_dec/reviews/cw_vegasvid3.htm\">Charlie White</a> (digialvideoediting.com)—showing an unusual amount of respect for this Wintel-based product. When Charlie writes, “And, acing out Final Cut Pro 3 is Vegas Video 3’s ability to see what you’re really doing, previewing all your work through 1394 on an NTSC or PAL monitor in real time, something that’s not yet possible with Final Cut Pro 3 (more on that later) without hardware assistance…” I began to sit up and take notice and eventually invested in Vegas Video.</p>\r\n<p>I’ve recently had the opportunity to do digital compositing work on <a href=\"http://imdb.com/title/tt0350596/\">a feature-length documentary</a> about the life of the great theatre, television and screen actress <a href=\"http://us.imdb.com/Name?Richards,+Beah\">Beah Richards</a>. Vegas Video was <em>the</em> indispensable tool for my role in this production.</p>\r\n<h2>Challenges</h2>\r\n<p>\r\n  <a href=\"http://www.amazon.com/exec/obidos/ASIN/B0007V6IUS/thekintespacec00A/\">\r\n    <img alt=\"Buy this DVD at Amazon.com!\" border=\"0\" src=\"http://kintespace.com/bitmaps/blog_dogtown_dvd.jpg\" style=\"float:left;margin:16px;margin-top:0;\" /></a>Many professional filmmakers are discovering Sonic Foundry products and solutions. For example, the recent Sony Classics documentary film <a href=\"http://us.imdb.com/Title?0275309\"><em>Dogtown and Z Boys</em></a> depended heavily on Sonic Foundry <a href=\"http://www.sonicfoundry.com/news/ShowRelease.asp?ReleaseID=460\">frame-rate conversion and digital image transfer technologies</a>. However, I found myself, like many nascent Vegas Video users, contributing to a project already in production using more “mature” technology. In this case, I was supporting a Windows NT, non-linear editor—hard-wired to a <a href=\"http://en.wikipedia.org/wiki/Truevision_TGA\">Targa 2000</a> video card—that appeared to be related to <a href=\"http://en.wikipedia.org/wiki/Discreet_Logic\">Discreet Logic’s</a> edit*, descending from the legendary <a href=\"http://en.wikipedia.org/wiki/Intergraph_Corporation\">Intergraph TDZ</a> rigs from the late 1990s.</p>\r\n<p>\r\n  <em>First challenge.</em> The editor, Ms. <a href=\"http://us.imdb.com/Name?Amend,+Kate\">Kate Amend</a>, and the director of this project gave me written instructions (called “shot lists”) detailing the duration of the shot, identifying the media assets used in the shot, specifying transitions among these assets and inquiring about creating variations of a particular shot. We will see that Vegas video is able to translate these written words into its user interface, making a “living record” of their instructions saved in Vegas Project files (with the extension VEG).</p>\r\n<p>\r\n  <em>Second challenge.</em> The media assets required in the shots are mostly digitized photographs or scanned pages from books and magazines. This material comes in a variety of formats, like JPEG, TIFF and even GIF. All of this source material will be consolidated under one, still-image file format and issues of pixel aspect ratio—moving from the computer screen to the television screen (discussed below)—will be adequately addressed.</p>\r\n<p>\r\n  <em>Third challenge.</em> The Targa 2000 video card demands that all footage in the online system be rendered in its proprietary codec. Vegas Video with the help of the French company <a href=\"http://www.morgan-multimedia.com/\">Morgan Multimedia</a> will make meeting this challenge easy going. Additionally, this production has been focused on domestic broadcast television under the <a href=\"http://www.ntsc-tv.com/\">NTSC standard</a> here in the United States of America. This implies that all of my contributions to this project must comply with this standard. As we will see, this will not be a serious obstacle.</p>\r\n<h2>Solutions: The Vegas Video Project File</h2>\r\n<p>Sonic Foundry provides <a href=\"http://www.sonymediasoftware.com/support/trainingvids.asp?prod=vegas\" title=\"Now Under Sony Pictures Digital\">great introductory tutorials</a> about the Vegas Video interface (tutorials about previous versions are still relevant), so with that in mind let’s drill right down to the essentials for setting up a shot for NTSC broadcast. The following scenario is identical to what has happened while making the Beah Richards documentary: we have an item on our shot list specifying that we need a five-and-a-half second push in on an old portrait of a man in a suit. We know that every shot should have a one-second leader and trailer in addition to the specified duration. We also know the editor and director are looking for at least two variations of the shot.</p>\r\n<h3>Project Properties</h3>\r\n<p>The first step (after opening Vegas) is to edit the Project Properties—specifically the properties of the <strong>Video</strong> and <strong>Summary</strong> tabs. The <strong>Video</strong> tab is shown below. The <strong>Width:</strong>, <strong>Height:</strong>, <strong>Field order:</strong> and <strong>Pixel aspect ratio:</strong> properties have a direct effect on the Video Preview window:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Project Properties\" height=\"358\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasProjectPropertiesVideo.gif\" width=\"431\" /></p>\r\n<p>The dialog shows that the built-in template (or Preset), <code>NTSC Standard (720×486, 29.970 fps)</code>, has its <strong>Field order:</strong> property modified to <code>None (progressive scan)</code>. I am doing this because I will be previewing shots on an LCD screen instead of an external analog monitor as I’ll be compositing this shot with my Dell Inspiron 8100, a <em>portable</em> computer. (Recall, by the way, that <em>progressive</em> scanning refers to the top-to-bottom, left-to-right, line-by-line path of the electron gun of CRT computer monitors—opposed to the every-other-line scanning of <em>interlaced</em> television displays.) I found editing with a portable computer more convenient for the editor and director as I could bring my work to their facilities, having a near-zero impact on the established workflow.</p>\r\n<p>Clicking on the <strong>Apply</strong> button will change the Video Preview window. When undocked, it should look like picture below:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Blank Video Preview\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasBlankVideoPreview.gif\" /></p>\r\n<p>The dimensions of the Project (shown on the bottom of the Video Preview window) and those of the Preview are different. I have deliberately resized the Video Preview window to roughly half the size of the actual rendered media making previewing faster. Please make note of the buttons at the top of the Video Preview window—namely the <strong>Video Output FX…</strong> and <strong>Overlays</strong> buttons. These will come in handy later on (so understanding what they do will be a big help).</p>\r\n<p>Returning to Project Properties we quickly note that this shot will not need any audio (this is to be added later by other team members) so we don’t need to see the <strong>Audio</strong> tab. The Project Properties <strong>Ruler</strong> tab is set to <code>Time &amp; Frames</code> by default—we’ll go with this format and move on to the <strong>Summary</strong> tab:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Project Properties (Summary Tab)\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasProjectPropertiesSummary.gif\" /></p>\r\n<p>The Vegas Video manual states that Project Properties are mostly for “informational purposes.” We can see that the <strong>Summary</strong> tab stores most such information. The <strong>Comments:</strong> field saves the instructions from the editor and director directly in the file for future reference.</p>\r\n<h3>Specifying Duration</h3>\r\n<p>Based on the comments stored in the project, we know we need a shot with a five-and-a-half second duration (this is about 00:00:05.15 seconds and frames, based on 30 frames/second)—plus one second leading and one second trailing. By entering <code>Ctrl+g</code> or by double-clicking on the <strong>Cursor Position</strong> field at the lower right of the Timeline, we can make our first move to the one-second position on the Timeline and insert a Marker. The animations below show this two-part process:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Cursor Position\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasCursorPosition.gif\" style=\"margin:16px;\" /><img alt=\"Marker Insert\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasMarkerInsert.gif\" style=\"margin:16px;\" /></p>\r\n<p>Our second and third cursor position markers denote the actual shot length and the one-second trailer respectively. The picture below summarizes the duration specified in the shot list:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Markers\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasMarkerSummary.gif\" /></p>\r\n<p>Note that the second marker specifying shot duration is actually at position 00:00:06.15 seconds and frames on the timeline. It is possible to use the <strong>Set Time at Cursor</strong> command while the cursor is at zero and enter <em>negative</em> one second (-00:00:01.00) to offset the timeline “correctly” but this not necessary for our shot.</p>\r\n<h2>Solutions: Compositing Still Images in Vegas Video</h2>\r\n<p> Researchers for documentary projects often receive source material from people who have very little interest in professionally archiving photographs. In our scenario, we will use the sample image from the Adobe Photoshop 7.0 distribution called <code>Old Image.jpg</code> (shown at left, at half the size of the image actually used).</p>\r\n<p>This image is a perfect example of how documentary source material is not exactly in ideal condition. Additionally, this image is a <em>portrait</em> (more tall than wide), while our final NTSC format is <em>landscape</em> (more wide than tall). We will need to use the Vegas Event Pan/Crop tool to pan and scan this image (the Vegas Video online help does a great job explaining how this tool works).</p>\r\n<h3>Choosing the Right Still Image Format</h3>\r\n<p>The Vegas Video documentation showed a marked preference for the relatively new Portable Network Graphics (<a href=\"http://en.wikipedia.org/wiki/PNG\">PNG</a>) format. This is definitely the wise choice if alpha-channel transparency is desired in the source images for advanced compositing. However, I don’t have much call for 16-bit alpha channels—or even lossless compression. My need for Photoshop’s Adjustment Layers outweighs any further consideration of image formats other than its native format (type PSD). Fortunately, Vegas Video is able to detect and import Photoshop files (but Vegas does not, as yet, recognize Photoshop layers in ways similar to Adobe After Effects).</p>\r\n<p>With Photoshop’s Adjustment Layers I can apply Curves to the source image to adjust the brightness and contrast—nondestructively. By taking advantage of nondestructive editing of the source image I can make changes on the fly if the shot looks too light or too dark on the monitors of the editor’s NLE system. Simultaneously, some “destructive” editing can be done in Photoshop at my discretion: the Rubber Stamp Tool and/or the Healing Brush can be used to reduce the dust and scratches on the original digitized image.</p>\r\n<p>After a lively combination of nondestructive and destructive editing techniques—and with my trusty Wacom <a href=\"http://www.wacom.com/graphire/index.cfm\">tablet and stylus</a>—we can compare the original source image to the final Photoshop still:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Original Digitized Image\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/old_image.jpg\" style=\"margin:16px;\" /><img alt=\"Modified Image\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/new_image.jpg\" style=\"margin:16px;\" /></p>\r\n<h3>Creating a Video Event with a Still Image</h3>\r\n<p>The Vegas Video Explorer has our Photoshop file, <code>Old Image.psd</code>, selected. We can see that the Photoshop, PSD file type is registered as IrfanView (for “obvious” reasons for the Wintel-based lovers of <a href=\"http://www.irfanview.com/\">IrfanView</a>). Pay attention to the file sizes: the <code>Old Image.jpg</code> file has ballooned to 1.42 MB after adding a layer and being converted to Photoshop native format. I am willing to pay the price of cheap disk space for the sake of convenience!</p>\r\n<p align=\"center\">\r\n  <img alt=\"Vegas Explorer\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasExplorer.gif\" /></p>\r\n<p>By clicking and dragging the file to the Timeline window, we add this file to our current project creating a Video Event. Let’s snap our event in place to the third marker by dragging the right edge of the event. With the cursor over the event, we can see that the image looks stretched horizontally in the Video Preview window. Vegas Video imports still images using the aspect ratio of 1.0, the aspect ratio of the source media instead of the aspect ratio of the project. The image appears stretched wide on the progressive scan computer screen, but would look right on an external NTSC monitor. To compensate for this, right-click on the Video Preview Window and select <strong>Display Square Pixels</strong> (thanks goes to Software Design Engineer, Dennis Adams of Sonic Foundry for pointing this out to me):</p>\r\n<p align=\"center\">\r\n  <img alt=\"The keyframes\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasVideoPreview4.gif\" /></p>\r\n<p>By snapping the event to the third marker (at 00:00:07.15), we have a Video Event on the Timeline like the following:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Timeline\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasTimelineVersion1.gif\" /></p>\r\n<p>Notice that the Event track has a Track Name, “Version 1.” I entered this name knowing that we can use the Mute button to hide or show this track. Later we will see how we can use these features to store multiple versions of the same shot in one project file.</p>\r\n<h3>Event Pan/Crop</h3>\r\n<p>I have decided that track <code>Version 1</code> will push in on the portrait in full frame. This means using the <strong>Event Pan/Crop…</strong> tool which is available by clicking <strong>Event Pan/Crop…</strong> button directly on the Video Event, right-clicking the event and selecting <strong>Video Event Pan/Crop…</strong> from the context menu or by selecting the event and choosing <strong>Tools &gt; Video &gt; Video Event Pan/Crop…</strong>. I prefer setting the cursor to the “home” position on the Timeline (usually at the zero-second mark) and clicking on the <strong>Event Pan/Crop…</strong> button. This prevents the creation of unnecessary keyframes in the Event Pan/Crop window.</p>\r\n<p>Making sure that the <strong>Sync Cursor</strong> toggle button (at the lower left) is down in the Event Pan/Crop window, press <code>Alt+0</code> and use the <code>Ctrl</code> and left/right arrow keys to move to the first marker. If <strong>Sync Cursor</strong> is active then the position of the cursor in the Event Pan/Crop window will also move to the location of the first marker. Drag the default keyframe to this location. We should now have one keyframe placed in the Keyframe Controller (at the bottom of the Event Pan/Crop window) at position 00:00: 01.00 like the following:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Event Pan/Crop\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasEventPanCrop1.gif\" /></p>\r\n<p>Right-click on the image in the Event Pan/Crop window and select <strong>Match Output Aspect</strong>. This command crops the image according to the frame width and height specified in Project Properties:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Event Pan/Crop\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasEventPanCrop2.gif\" /></p>\r\n<p>The Video Preview window with the <strong>Safe Areas</strong> overlay activated shows what will appear on an NTSC-compatible monitor. Recall that the inner dashed rectangle is the title safe area while the outer rectangle is the action safe area:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Video Preview\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasVideoPreview1.gif\" /></p>\r\n<p>I’m pretty confident that this is not the shot the editor and director are looking for! We’ll need to work harder! Eventually two keyframes are set. The animation below, jumping between the first and second keyframes, summarizes:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Event Pan/Crop\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasEventPanCrop3.gif\" /></p>\r\n<p>The rate of tweening between the keyframes is <strong>Linear</strong> by default. To simulate more “natural” camera movement the interpolation of the first keyframe is set to <strong>Smooth</strong>. Interpolation is set by right-clicking on a keyframe and selecting an option from the context menu. The table below (from the Vegas Video manual) summarizes the options:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Interpolation Table\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasInterpolation.gif\" /></p>\r\n<p>With the Pan/Crop keyframes set, we can see the corresponding frames in the Video Preview window:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Safe Areas in Video Preview\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasVideoPreview2.gif\" /></p>\r\n<h3>“Broadcast-Safe” Colors</h3>\r\n<p>Many a web programmer was lectured about “web-safe” colors. We were encouraged to confine our indexed-color palette within a range that’s compatible with most browsers on most computer operating systems. A similar principle is behind “broadcast-safe” colors for NTSC television. On a computer-generated color scale of 0 to 255, where black is 0 and 255 is white, “NTSC black” would be 16 and “NTSC white” would be 235. In fact, computer monitors can generate up to 16 million colors while NTSC television displays about two million.</p>\r\n<p>It follows that footage generated by computer may have literally millions of colors that are “out of gamut” for broadcast television and should be filtered out before the final render. Vegas Video 3.0 ships with a plug-in called Sonic Foundry Broadcast Colors (or Broadcast Colors Filter). From the Plug-Ins window, I drag and drop this filter on the <strong>Video Output FX…</strong> button and take the most conservative route by selecting the <code>Maximum Bounds</code> Preset:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Broadcast Colors Filter\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasBroadcastColors.gif\" /></p>\r\n<p>By activating the <strong>Histogram – Luminance</strong> overlay in the Video Preview window, we can alternately enable and disable the Broadcast Colors Filter producing an effect like what is seen in the animation below:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Luminance and the Broadcast Colors Filter\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasLuminanceOverlay.gif\" /></p>\r\n<p>Clearly we are “chopping off” the edges of the gamut of colors. We won’t see the effects of this unless we are looking through an NTSC monitor (which, I remind you, <em>is</em> possible in Vegas).</p>\r\n<h3>\r\n  <img alt=\"Duplicating a Track\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasDuplicateTrack.gif\" style=\"float:right;margin:16px;margin-top:0;\" />Adding an Alternate Version of the Shot</h3>\r\n<p>It is temping to Render track <code>Version 1</code> to see exactly what’s going on. Yes, we can build a Dynamic RAM Preview or simply press Play to get something to look at in the Video Preview window but I have done hundreds of shots like this one so I’m confident enough to set up some “version 2” tracks.</p>\r\n<p>The version 1 track is very tight on the face—which is great for dramatic effect—but we lose the suit. We can’t really tell if this guy is really duded up or not! To up the ante, I want to see the face <em>and</em> the suit at the same time (no panning and scanning—only pushing). One way to achieve this effect is by taking advantage of Vegas Video’s Track Motion tool (among other great features). So let’s duplicate our first track by right-clicking its item in the Track List (shown at left) and name it <code>Version 2</code>. We also need to disable the first track by pressing its Mute button in the Track List. The picture below summarizes:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Timeline\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasVersion2Track.gif\" /></p>\r\n<p>In turn, duplicate track <code>Version 2</code>. Vegas Video automatically names this track <code>Copy of Version 2</code>. Rename this track to <code>Version 2 (Track Motion)</code> and open its Event Pan/Crop window. Remove its second keyframe at 00:00:07.15. At the first keyframe, right-click on the image in the Event Pan/Crop window and select <strong>Restore</strong>. The Event Pan/Crop window for track <code>Version 2 (Track Motion)</code> should look like the following:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Event Pan/Crop\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasEventPanCrop4.gif\" /></p>\r\n<p>Close this window. Drag the left edge of track <code>Version 2</code> to somewhere around 00:00:03.20 seconds and frames. Dragging the edges of this event will cause the Event Pan/Crop keyframes to change position so make sure that the first keyframe is positioned at 00:00:00.00 (in the Event Pan/Crop window Keyframe Controller—not the project Timeline) and the second keyframe rests at the third marker. The Event Pan/Crop window for track <code>Version 2</code> should look like the following:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Event Pan/Crop\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasEventPanCrop5.gif\" /></p>\r\n<p>The last thing we need to do for track <code>Version 2</code> is to set a fade-in using the default Fade Type. This is very easy to do in Vegas Video (by dragging the little blue triangle in upper left corner of the Event on the Timeline) and this feature really sets the product apart from its competitors. Finally, view the Text/Backgrounds window (type <code>Alt+9</code>), drag and drop the Gray solid color to an empty area at the bottom of the Timeline creating a new track. Name it <code>Version 2 (Solid)</code>. Now there should be a total of four tracks, where three tracks will be used in the second version of the shot:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Timeline\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasDuplicateTrack2.gif\" /></p>\r\n<p>Now we are ready to add Track Motion to the third track. Let’s move to the first marker in the Timeline and click on the <strong>Track Motion…</strong> button for the track <code>Version 2 (Track Motion)</code>. The Keyframe Controller for Track Motion has three levels for Position, Shadow and Glow. Check the <strong>Shadow</strong> level in the Keyframe Controller and move the Position keyframe to 00:00:01.00. Making sure that Position level has focus in the Keyframe Controller, rotate the frame about negative five degrees (<code>-5.0</code>) and resize such that the image fits in the title safe area of the Video Preview window. We should have a Track Motion window like the picture below:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Track Motion\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasTrackMotion.gif\" /></p>\r\n<p>The effect in the Video Preview window is shown below:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Video Preview\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasVideoPreview3.gif\" /></p>\r\n<p>Let’s add one more Track Motion position keyframe at the second marker in the Timeline where we resize the frame much larger than the dimensions at the first keyframe. This creates the effect of pushing in on the subject. This is the Track Motion window:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Track Motion\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasTrackMotion2.gif\" /></p>\r\n<p>We have completed the second version our shot. It’s far more complicated than the first version but here we are. I hope we didn’t lose anyone. Now we are ready to render!</p>\r\n<h2>Solutions: Video Hardware Emulation with Vegas Video and the Morgan LSI Codec</h2>\r\n<p>The <a href=\"http://www.pinnaclesys.com/support/products/info/default.asp?ProductID=332\">Targa 2000 line</a> is being discontinued by Pinnacle Systems and is widely considered venerable “legacy” technology. This certainly should have been a showstopper for me—literally. But a key member of the <em>Beah</em> production team, Bill Russell (who has, by the way, recently finalized production of his labor of love <a href=\"http://press.lostskeleton.com/\"><em>The Lost Skeleton of Cadavra</em></a>), led me in the right direction and I found myself at <a href=\"http://www.morgan-multimedia.com/\">morgan-multimedia.com</a>, purchasing their LSI M-JPEG Codec which allowed me to software-emulate the rendering functionality of the Targa 1000/2000 series hardware. The image below shows the properties/settings of the Morgan LSI Codec. This dialog is available from the Windows 2000 Video Codecs Properties dialog (discussed below) or from a convenient System Tray icon installed by the Morgan product itself.</p>\r\n<p align=\"center\">\r\n  <img alt=\"Morgan LSI Dialog\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/MorganLSIDialog.gif\" /></p>\r\n<p>After installing the Morgan LSI codec, I verified that my copy of Windows 2000 Professional recognized this new codec. In the Windows 2000 Device Manager, I selected <strong>Sound, video and game controllers &gt; Video Codecs</strong> and I saw the dialog below:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Windows 2000 Video Codecs Properties Dialog\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/Win2KVideoCodecs.gif\" /></p>\r\n<p>And, of course, we can see the properties/settings of the Morgan LSI Codec by right-clicking on Morgan Multimedia LSI M-JPEG Codec (shown in the list above) and selecting <strong>Properties &gt; General &gt; Settings…</strong>. Seeing this, I realized that Vegas Video (with the help of the Morgan Multimedia Codec) is effectively a video hardware emulator! Without this solution (or some other software-based solution) I would have had to pass on the project or find a used Targa 2000 card and build an entire system around it.</p>\r\n<h3>Rendering the Shots</h3>\r\n<p>Press the <strong>Solo</strong> button for track <code>Version 1</code> and select <strong>File &gt; Render As…</strong>. The dialog should be set like the settings shown:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Render As\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasRender.gif\" /></p>\r\n<p>Let’s review my Template for Targa 2000 emulation. Click on the <strong>Custom</strong> button and move to the <strong>Video</strong> tab:</p>\r\n<p align=\"center\">\r\n  <img alt=\"Render As Custom Settings\" src=\"http://songhaysystem.com/bitmaps/VegasNTSC/VegasRender2.gif\" /></p>\r\n<p>Bill Russell was a great help “reverse engineering” these settings. He discovered that disabling the <strong>Interleave every (seconds):</strong> and <strong>Create an OpenDML (AVI version 2.0) compatible file</strong> fields and setting <strong>Data rate (Kbytes/second):</strong> <code>1000</code>, was most compatible with the Targa2000. Disabling the <strong>Audio</strong> tab helped as well. Of course, the <strong>Project</strong> tab will show <strong>Video rendering quality:</strong> <code>Best</code> (which is the appropriate setting for down-sampling still images) and <strong>Motion blur type:</strong> <code>None</code>. Clicking <strong>OK</strong> in the Custom Settings dialog takes us back to the Render As dialog. Press the <strong>Save</strong> button and <code>VegasNTSC (Version 1).avi</code> will be written to disk.</p>\r\n<p>Press the <strong>Mute</strong> button for track <code>Version 1</code> and select <strong>File &gt; Render As…</strong>. Enter <code>VegasNTSC (Version 2) </code>for the file name and press <strong>Save</strong>. That’s it.</p>\r\n<h2>Flippant Remarks and Free Samples</h2>\r\n<p>The techniques discussed in this article are direct descendants of the inspiration given to me by the classic American hymn <a href=\"http://www.amazon.com/exec/obidos/ASIN/B000068UY9/thekintespacec00A/\" title=\"Buy this movie at Amazon.com\"><em>The Civil War</em></a> by Ken Burns. Almost all of <em>The Civil War</em> is camera moves over still images. Now with Vegas Video we don’t need a several-thousand-dollar camera and an extremely steady hand. The “special effects” we have explored can adequately replicate what a “real” camera can do—and go beyond…</p>\r\n<table id=\"CleanXhtmlTable_ECAAAAA3\">\r\n  <tr>\r\n    <td><strong>Download</strong></td>\r\n    <td><strong>Description</strong></td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <a href=\"http://songhaysystem.com/samples/VegasNTSC/VegasNTSC.zip\">VegasNTSC.zip</a>\r\n    </td>\r\n    <td>Vegas Video project files and Media Pool assets.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <a href=\"http://songhaysystem.com/samples/VegasNTSC/VegasNTSC(Version1).mov\">VegasNTSC(Version1).mov</a>\r\n    </td>\r\n    <td>Version one of the shot. This file requires <a href=\"http://www.apple.com/quicktime/\">Apple QuickTime</a>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <a href=\"http://songhaysystem.com/samples/VegasNTSC/VegasNTSC(Version2).mov\">VegasNTSC(Version2).mov</a>\r\n    </td>\r\n    <td>Version two of the shot. This file requires <a href=\"http://www.apple.com/quicktime/\">Apple QuickTime</a>.</td>\r\n  </tr>\r\n</table>",
    "CreateDate": "2002-11-11T19:03:34.0000000",
    "EndDate": null,
    "ModificationDate": "2006-04-06T13:52:00.0000000",
    "DocumentId": "14",
    "PrevFragmentId": "-1",
    "NextFragmentId": "-1",
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "16",
    "FragmentName": null,
    "FragmentDisplayName": "Songhay System Web Sites",
    "SortOrdinal": null,
    "ItemChar": "\r\n<h1>Songhay System Web Sites</h1>\r\n\r\n<h2>Tuesday, June 29, 2004</h2>\r\n<p align=\"left\">\r\n    In the heyday of HTML slinging, I was deeply involved in the corporate world of Information Technology. I had no real interest in being a freelance web designer because I knew, from building my first web site, <a href=\"http://www.kintespace.com/\">kintespace.com</a>, that maintaining the data surrounding all those pretty graphics is quite a chore. I am not a love-them-and-leave-them kind of guy: I want to be able to provide my clients with something they can maintain themselves. Failing that, I want the client to have at least entry-level HTML and/or XML experience to maintain the web-based solution—because a <em>real</em> web site is never finished, it is only abandoned.\r\n</p>\r\n<p align=\"left\">\r\n    Things have changed for the better since 1998, when <a href=\"http://www.kintespace.com/\">kintespace.com</a> was first designed and launched. <a href=\"http://www.php.net/\">PHP</a> and <a href=\"http://www.mysql.com/\">mySQL</a> make it possible to have live databases supporting the web site for “free” (due to the open source nature of these tools). This new development is typified by the Songhay System 2002 web projects (including this web site). <a href=\"http://www.macromedia.com/devnet/mx/flash/\">Macromedia Flash MX</a> finally provides <a href=\"http://songhaysystem.com/document.php?cmd=getDocCode&amp;get=flashMXkit\">serious data-centric solutions</a> as well as visual design tools and these developments are starting to enhance Songhay System web sites—starting with <a href=\"http://megafunk.com/\">megafunk.com</a> and more webs to come.\r\n</p>\r\n\r\n<h2>CAAM.ca.gov</h2>\r\n\r\n<h3>Project Start Date: 2003</h3>\r\n<table border=\"0\" cellpadding=\"16\" cellspacing=\"0\" width=\"100%\">\r\n<tr valign=\"top\">\r\n    <td>\r\n<img border=\"0\" src=\"http://songhaysystem.com/bitmaps/SonghayWebs/CAAM.ca.gov.jpg\" width=\"320\" height=\"270\" />\r\n<br /><br />\r\n<img border=\"0\" src=\"http://songhaysystem.com/bitmaps/SonghayWebs/CAAM.ca.gov2.jpg\" width=\"320\" height=\"331\" />\r\n    </td>\r\n    <td>\r\n\r\nThis site is the official web site of the California African American museum. It is based on “classic” ASP from the 1990s (due to <a href=\"http://www.teale.ca.gov/\">the state-run service</a> hosting the web site) and runs on a budget-conscious Access MDB file (again, due to technological limitations imposed by state officials). The data is edited offline with our custom SQL-Server-based web data editor, which writes an Access MDB file to disk via DTS. After the MDB file is compacted, it is uploaded to the live site. This cleanly separates the data management from the visual design as much as possible, allowing any museum data-entry people to maintain the site.<br />\r\n<br />\r\nCertain visual elements (such as the “splash” image on the home page) can be updated on the fly by uploading images to selected directories. The ASP code can load the images from these directories randomly, making the site as lively as the museum staff wants.<br />\r\n<br />\r\nThe CAAM logo was designed under the auspices of the CAAM board of directors. The Songhay System visual design of the web site intends to be a “seamless” extension of this logo design. This is another way to reduce cost by not requiring the web designer to develop the look and feel of the company web site from scratch—a logo that might have been created for some envelopes can be repurposed for the Internet and other digital media.\r\n    </td>\r\n</tr>\r\n</table>\r\n<table align=\"left\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_1\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_1\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_1_1_1\" valign=\"top\">\r\n<strong>Graphic Design, ASP Coding and Database Design</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_1_1_2\" valign=\"top\">\r\nBryan Wilhite, Songhay System\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_2\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_2_1\" valign=\"top\">\r\n<strong>Graphic Design and Information Design</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_2_2\" valign=\"top\">\r\nCAAM Staff\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_3\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_3_1\" valign=\"top\">\r\n<strong>Status</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_3_2\" valign=\"top\">\r\nAs of this writing, the Songhay System design has been removed due to state budget cuts. The site has been marked “under construction” with our anonymous tax dollars.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h2><a href=\"http://freestylemega.com/\">FreeStyleMega.com</a></h2>\r\n\r\n<h3>Project Start Date: 1999</h3>\r\n<table border=\"0\" cellpadding=\"16\" cellspacing=\"0\" width=\"100%\">\r\n<tr valign=\"top\">\r\n    <td>\r\n<img border=\"0\" src=\"http://songhaysystem.com/bitmaps/SonghayWebs/freestylemega.com.jpg\" width=\"320\" height=\"232\" />\r\n    </td>\r\n    <td>\r\n\r\nThis site serves as a “portal” for all things R/Kain Blaze that can be digitized. Currently what is featured here is his professional work in DVD production, print publishing and filmmaking.\r\n    </td>\r\n</tr>\r\n</table>\r\n<table align=\"left\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_2\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_1\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_2_1_1\" valign=\"top\">\r\n<strong>Graphic Design and HTML Coding</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_2_1_2\" valign=\"top\">\r\nBryan Wilhite, Songhay System\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_2\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_2_1\" valign=\"top\">\r\n<strong>Information Design</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_2_2\" valign=\"top\">\r\nR/Kain Blaze, F/M2 Publications\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_3\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_3_1\" valign=\"top\">\r\n<strong>Status</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_3_2\" valign=\"top\">\r\nAs of this writing, the original Songhay System design has been slightly altered by the client and the site is live.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h2><a href=\"http://kintespace.com/\">kintespace.com</a></h2>\r\n\r\n<h3>Project Start Date: 1998</h3>\r\n<table border=\"0\" cellpadding=\"16\" cellspacing=\"0\" width=\"100%\">\r\n<tr valign=\"top\">\r\n    <td>\r\n<img border=\"0\" src=\"http://songhaysystem.com/bitmaps/SonghayWebs/kintespace.com.gif\" width=\"320\" height=\"515\" />\r\n    </td>\r\n    <td>\r\n\r\nThis site is my “first love” in the world of the Web. To keep costs down, it is maintained by an offline database. It follows that this site is based on the publish-dynamic-serve-static model.<br />\r\n<br />\r\nI am certain that many professionals look down on this model as they fail to understand that this site is 95% database driven—<em>offline.</em> The data behind the site is maintained via a private (offline) web server connected to a database. What is seen live is merely a snapshot of the database.<br />\r\n<br />\r\nBy having static pages, the site is not too intimately tied to the ISP hosting the site. Static pages (files) are easier to move around than databases and scripts. This is a “poor man’s way” of setting up a site in a professional manner.<br />\r\n<br />\r\nThe visual design of this site changes frequently. Look for the “design diaries” on the <a href=\"http://kintespace.com/index_time.html\">space time page</a> chronicling the inspiration and exasperation behind these designs.\r\n    </td>\r\n</tr>\r\n</table>\r\n<table align=\"left\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_3\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_3_1\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_3_1_1\" valign=\"top\">\r\n<strong>Graphic Design, HTML Coding and Database Design</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_3_1_2\" valign=\"top\">\r\nBryan Wilhite, Songhay System\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_3_2\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_2_1\" valign=\"top\">\r\n<strong>Information Design</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_2_2\" valign=\"top\">\r\nBryan Wilhite, Songhay System\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_3_3\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_3_1\" valign=\"top\">\r\n<strong>Status</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_3_2\" valign=\"top\">\r\nAs of this writing, the Songhay System design is in place and the site is live.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h2><a href=\"http://megafunk.com/\">mEgaFunK.com</a></h2>\r\n\r\n<h3>Project Start Date: 2002</h3>\r\n<table border=\"0\" cellpadding=\"16\" cellspacing=\"0\" width=\"100%\">\r\n<tr valign=\"top\">\r\n    <td>\r\n<img border=\"0\" src=\"http://songhaysystem.com/bitmaps/SonghayWebs/megafunk.com.jpg\" width=\"320\" height=\"250\" />\r\n<br /><br />\r\n<img border=\"0\" src=\"http://songhaysystem.com/bitmaps/SonghayWebs/megafunk.com2.jpg\" width=\"320\" height=\"275\" />\r\n    </td>\r\n    <td>\r\n\r\nThis web site marks the second collaboration between Songhay System and F/M2 Publications but is the first to be built on PHP. There is a <a href=\"http://www.richardavedon.com/\">Richard Avedon</a> whiteness about the visual design meant to let the original photography playfully jump out at the viewer.<br />\r\n<br />\r\nOur <a href=\"http://songhaysystem.com/document.php?cmd=getDocCode&amp;get=flashMXkit\">Flash MX Toolkit</a> was put to good use in the new <a href=\"http://megafunk.com/index.php?cmd=browse&amp;flash=on\">MegaFunk Gallery</a> featuring the photography of R/Kain Blaze. This Flash solution is data-centric such that the gallery section can be maintained by the photographer—not the web programmer. All he has to do is edit an XML file, create JPEG images and upload to the web server. This is quite an accomplishment in view of the “traditional” use of Flash which far more static and sealed off from all but the expensive web programmer—or the even more expensive web designer. This old-school way of building Flash sites often leaves them abandoned.<br />\r\n<br />\r\nIn addition to the sumptuous photography, this site features musicians <a href=\"http://afrofraktal.megafunk.com/\">Muata25</a> and <a href=\"http://rasx.megafunk.com/\">rasx</a>.\r\n    </td>\r\n</tr>\r\n</table>\r\n<table align=\"left\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_4\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_1\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_4_1_1\" valign=\"top\">\r\n<strong>Graphic Design and PHP Coding</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_4_1_2\" valign=\"top\">\r\nBryan Wilhite, Songhay System\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_2\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_2_1\" valign=\"top\">\r\n<strong>Information Design and Original Photography</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_2_2\" valign=\"top\">\r\nR/Kain Blaze, F/M2 Publications\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_3\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_3_1\" valign=\"top\">\r\n<strong>Status</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_3_2\" valign=\"top\">\r\nAs of this writing, the Songhay System design is in place and the site is live.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h2><a href=\"http://songhaysystem.com/\">songhaysystem.com</a></h2>\r\n\r\n<h3>Project Start Date: 2002</h3>\r\n<table border=\"0\" cellpadding=\"16\" cellspacing=\"0\" width=\"100%\">\r\n<tr valign=\"top\">\r\n    <td>\r\n<img border=\"0\" src=\"http://songhaysystem.com/bitmaps/SonghayWebs/songhaysystem.com.jpg\" width=\"320\" height=\"603\" />\r\n    </td>\r\n    <td>\r\n\r\nThis is the official company web site featuring in-depth articles about the enterprise data solutions and digital media production constantly being perfected in stone tribal moves.<br />\r\n<br />\r\nThe entire web site is driven by a live mySQL database and PHP.\r\n    </td>\r\n</tr>\r\n</table>\r\n<table align=\"left\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_5\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_1\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_5_1_1\" valign=\"top\">\r\n<strong>Graphic Design, PHP Coding and Database Design</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_5_1_2\" valign=\"top\">\r\nBryan Wilhite, Songhay System\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_2\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_2_1\" valign=\"top\">\r\n<strong>Information Design</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_2_2\" valign=\"top\">\r\nBryan Wilhite, Songhay System\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_3\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_3_1\" valign=\"top\">\r\n<strong>Status</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_3_2\" valign=\"top\">\r\nAs of this writing, the Songhay System design is in place and the site is live.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n <br /><br />\r\n",
    "ItemText": "\r\n<h1>Songhay System Web Sites</h1>\r\n\r\n<h2>Tuesday, June 29, 2004</h2>\r\n<p align=\"left\">\r\n    In the heyday of HTML slinging, I was deeply involved in the corporate world of Information Technology. I had no real interest in being a freelance web designer because I knew, from building my first web site, <a href=\"http://www.kintespace.com/\">kintespace.com</a>, that maintaining the data surrounding all those pretty graphics is quite a chore. I am not a love-them-and-leave-them kind of guy: I want to be able to provide my clients with something they can maintain themselves. Failing that, I want the client to have at least entry-level HTML and/or XML experience to maintain the web-based solution—because a <em>real</em> web site is never finished, it is only abandoned.\r\n</p>\r\n<p align=\"left\">\r\n    Things have changed for the better since 1998, when <a href=\"http://www.kintespace.com/\">kintespace.com</a> was first designed and launched. <a href=\"http://www.php.net/\">PHP</a> and <a href=\"http://www.mysql.com/\">mySQL</a> make it possible to have live databases supporting the web site for “free” (due to the open source nature of these tools). This new development is typified by the Songhay System 2002 web projects (including this web site). <a href=\"http://www.macromedia.com/devnet/mx/flash/\">Macromedia Flash MX</a> finally provides <a href=\"http://songhaysystem.com/document.php?cmd=getDocCode&amp;get=flashMXkit\">serious data-centric solutions</a> as well as visual design tools and these developments are starting to enhance Songhay System web sites—starting with <a href=\"http://megafunk.com/\">megafunk.com</a> and more webs to come.\r\n</p>\r\n\r\n<h2>CAAM.ca.gov</h2>\r\n\r\n<h3>Project Start Date: 2003</h3>\r\n<table border=\"0\" cellpadding=\"16\" cellspacing=\"0\" width=\"100%\">\r\n<tr valign=\"top\">\r\n    <td>\r\n<img border=\"0\" src=\"http://songhaysystem.com/bitmaps/SonghayWebs/CAAM.ca.gov.jpg\" width=\"320\" height=\"270\" />\r\n<br /><br />\r\n<img border=\"0\" src=\"http://songhaysystem.com/bitmaps/SonghayWebs/CAAM.ca.gov2.jpg\" width=\"320\" height=\"331\" />\r\n    </td>\r\n    <td>\r\n\r\nThis site is the official web site of the California African American museum. It is based on “classic” ASP from the 1990s (due to <a href=\"http://www.teale.ca.gov/\">the state-run service</a> hosting the web site) and runs on a budget-conscious Access MDB file (again, due to technological limitations imposed by state officials). The data is edited offline with our custom SQL-Server-based web data editor, which writes an Access MDB file to disk via DTS. After the MDB file is compacted, it is uploaded to the live site. This cleanly separates the data management from the visual design as much as possible, allowing any museum data-entry people to maintain the site.<br />\r\n<br />\r\nCertain visual elements (such as the “splash” image on the home page) can be updated on the fly by uploading images to selected directories. The ASP code can load the images from these directories randomly, making the site as lively as the museum staff wants.<br />\r\n<br />\r\nThe CAAM logo was designed under the auspices of the CAAM board of directors. The Songhay System visual design of the web site intends to be a “seamless” extension of this logo design. This is another way to reduce cost by not requiring the web designer to develop the look and feel of the company web site from scratch—a logo that might have been created for some envelopes can be repurposed for the Internet and other digital media.\r\n    </td>\r\n</tr>\r\n</table>\r\n<table align=\"left\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_1\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_1\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_1_1_1\" valign=\"top\">\r\n<strong>Graphic Design, ASP Coding and Database Design</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_1_1_2\" valign=\"top\">\r\nBryan Wilhite, Songhay System\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_2\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_2_1\" valign=\"top\">\r\n<strong>Graphic Design and Information Design</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_2_2\" valign=\"top\">\r\nCAAM Staff\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_1_3\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_3_1\" valign=\"top\">\r\n<strong>Status</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_1_3_2\" valign=\"top\">\r\nAs of this writing, the Songhay System design has been removed due to state budget cuts. The site has been marked “under construction” with our anonymous tax dollars.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h2><a href=\"http://freestylemega.com/\">FreeStyleMega.com</a></h2>\r\n\r\n<h3>Project Start Date: 1999</h3>\r\n<table border=\"0\" cellpadding=\"16\" cellspacing=\"0\" width=\"100%\">\r\n<tr valign=\"top\">\r\n    <td>\r\n<img border=\"0\" src=\"http://songhaysystem.com/bitmaps/SonghayWebs/freestylemega.com.jpg\" width=\"320\" height=\"232\" />\r\n    </td>\r\n    <td>\r\n\r\nThis site serves as a “portal” for all things R/Kain Blaze that can be digitized. Currently what is featured here is his professional work in DVD production, print publishing and filmmaking.\r\n    </td>\r\n</tr>\r\n</table>\r\n<table align=\"left\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_2\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_1\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_2_1_1\" valign=\"top\">\r\n<strong>Graphic Design and HTML Coding</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_2_1_2\" valign=\"top\">\r\nBryan Wilhite, Songhay System\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_2\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_2_1\" valign=\"top\">\r\n<strong>Information Design</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_2_2\" valign=\"top\">\r\nR/Kain Blaze, F/M2 Publications\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_2_3\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_3_1\" valign=\"top\">\r\n<strong>Status</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_2_3_2\" valign=\"top\">\r\nAs of this writing, the original Songhay System design has been slightly altered by the client and the site is live.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h2><a href=\"http://kintespace.com/\">kintespace.com</a></h2>\r\n\r\n<h3>Project Start Date: 1998</h3>\r\n<table border=\"0\" cellpadding=\"16\" cellspacing=\"0\" width=\"100%\">\r\n<tr valign=\"top\">\r\n    <td>\r\n<img border=\"0\" src=\"http://songhaysystem.com/bitmaps/SonghayWebs/kintespace.com.gif\" width=\"320\" height=\"515\" />\r\n    </td>\r\n    <td>\r\n\r\nThis site is my “first love” in the world of the Web. To keep costs down, it is maintained by an offline database. It follows that this site is based on the publish-dynamic-serve-static model.<br />\r\n<br />\r\nI am certain that many professionals look down on this model as they fail to understand that this site is 95% database driven—<em>offline.</em> The data behind the site is maintained via a private (offline) web server connected to a database. What is seen live is merely a snapshot of the database.<br />\r\n<br />\r\nBy having static pages, the site is not too intimately tied to the ISP hosting the site. Static pages (files) are easier to move around than databases and scripts. This is a “poor man’s way” of setting up a site in a professional manner.<br />\r\n<br />\r\nThe visual design of this site changes frequently. Look for the “design diaries” on the <a href=\"http://kintespace.com/index_time.html\">space time page</a> chronicling the inspiration and exasperation behind these designs.\r\n    </td>\r\n</tr>\r\n</table>\r\n<table align=\"left\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_3\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_3_1\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_3_1_1\" valign=\"top\">\r\n<strong>Graphic Design, HTML Coding and Database Design</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_3_1_2\" valign=\"top\">\r\nBryan Wilhite, Songhay System\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_3_2\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_2_1\" valign=\"top\">\r\n<strong>Information Design</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_2_2\" valign=\"top\">\r\nBryan Wilhite, Songhay System\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_3_3\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_3_1\" valign=\"top\">\r\n<strong>Status</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_3_3_2\" valign=\"top\">\r\nAs of this writing, the Songhay System design is in place and the site is live.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h2><a href=\"http://megafunk.com/\">mEgaFunK.com</a></h2>\r\n\r\n<h3>Project Start Date: 2002</h3>\r\n<table border=\"0\" cellpadding=\"16\" cellspacing=\"0\" width=\"100%\">\r\n<tr valign=\"top\">\r\n    <td>\r\n<img border=\"0\" src=\"http://songhaysystem.com/bitmaps/SonghayWebs/megafunk.com.jpg\" width=\"320\" height=\"250\" />\r\n<br /><br />\r\n<img border=\"0\" src=\"http://songhaysystem.com/bitmaps/SonghayWebs/megafunk.com2.jpg\" width=\"320\" height=\"275\" />\r\n    </td>\r\n    <td>\r\n\r\nThis web site marks the second collaboration between Songhay System and F/M2 Publications but is the first to be built on PHP. There is a <a href=\"http://www.richardavedon.com/\">Richard Avedon</a> whiteness about the visual design meant to let the original photography playfully jump out at the viewer.<br />\r\n<br />\r\nOur <a href=\"http://songhaysystem.com/document.php?cmd=getDocCode&amp;get=flashMXkit\">Flash MX Toolkit</a> was put to good use in the new <a href=\"http://megafunk.com/index.php?cmd=browse&amp;flash=on\">MegaFunk Gallery</a> featuring the photography of R/Kain Blaze. This Flash solution is data-centric such that the gallery section can be maintained by the photographer—not the web programmer. All he has to do is edit an XML file, create JPEG images and upload to the web server. This is quite an accomplishment in view of the “traditional” use of Flash which far more static and sealed off from all but the expensive web programmer—or the even more expensive web designer. This old-school way of building Flash sites often leaves them abandoned.<br />\r\n<br />\r\nIn addition to the sumptuous photography, this site features musicians <a href=\"http://afrofraktal.megafunk.com/\">Muata25</a> and <a href=\"http://rasx.megafunk.com/\">rasx</a>.\r\n    </td>\r\n</tr>\r\n</table>\r\n<table align=\"left\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_4\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_1\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_4_1_1\" valign=\"top\">\r\n<strong>Graphic Design and PHP Coding</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_4_1_2\" valign=\"top\">\r\nBryan Wilhite, Songhay System\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_2\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_2_1\" valign=\"top\">\r\n<strong>Information Design and Original Photography</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_2_2\" valign=\"top\">\r\nR/Kain Blaze, F/M2 Publications\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_4_3\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_3_1\" valign=\"top\">\r\n<strong>Status</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_4_3_2\" valign=\"top\">\r\nAs of this writing, the Songhay System design is in place and the site is live.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n\r\n<h2><a href=\"http://songhaysystem.com/\">songhaysystem.com</a></h2>\r\n\r\n<h3>Project Start Date: 2002</h3>\r\n<table border=\"0\" cellpadding=\"16\" cellspacing=\"0\" width=\"100%\">\r\n<tr valign=\"top\">\r\n    <td>\r\n<img border=\"0\" src=\"http://songhaysystem.com/bitmaps/SonghayWebs/songhaysystem.com.jpg\" width=\"320\" height=\"603\" />\r\n    </td>\r\n    <td>\r\n\r\nThis is the official company web site featuring in-depth articles about the enterprise data solutions and digital media production constantly being perfected in stone tribal moves.<br />\r\n<br />\r\nThe entire web site is driven by a live mySQL database and PHP.\r\n    </td>\r\n</tr>\r\n</table>\r\n<table align=\"left\" class=\"cleanHTMLTable\" id=\"cleanHTMLTable_5\">\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_1\">\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_5_1_1\" valign=\"top\">\r\n<strong>Graphic Design, PHP Coding and Database Design</strong>\r\n    </th>\r\n    <th align=\"left\" class=\"cleanHTMLTableHeader\" id=\"cleanHTMLTableHeader_5_1_2\" valign=\"top\">\r\nBryan Wilhite, Songhay System\r\n    </th>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_2\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_2_1\" valign=\"top\">\r\n<strong>Information Design</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_2_2\" valign=\"top\">\r\nBryan Wilhite, Songhay System\r\n    </td>\r\n</tr>\r\n<tr class=\"cleanHTMLTableRow\" id=\"cleanHTMLRow_5_3\">\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_3_1\" valign=\"top\">\r\n<strong>Status</strong>\r\n    </td>\r\n    <td align=\"left\" class=\"cleanHTMLTableData\" id=\"cleanHTMLTableData_5_3_2\" valign=\"top\">\r\nAs of this writing, the Songhay System design is in place and the site is live.\r\n    </td>\r\n</tr>\r\n</table>\r\n<br clear=\"all\" />\r\n\r\n <br /><br />\r\n",
    "CreateDate": "2002-11-22T10:15:52.0000000",
    "EndDate": null,
    "ModificationDate": "2004-06-29T21:03:10.2000000",
    "DocumentId": "18",
    "PrevFragmentId": "-1",
    "NextFragmentId": "-1",
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "17",
    "FragmentName": null,
    "FragmentDisplayName": "Translating between PHP and ASP",
    "SortOrdinal": null,
    "ItemChar": "<h1>Translating between ASP and PHP</h1><p>This discussion is confined to all versions of Internet Information Server hosting Active Server Pages (ASPs) up to version 5 (just before ASP.NET) and PHP 4.1.0 (specifically referring to the new <a href=\"http://www.php.net/manual/en/printwn/language.variables.predefined.php\" shape=\"rect\">autoglobals</a>). Flippantly speaking, of course, ASP is all about creating objects to access their respective properties and methods while PHP is largely about calling functions—many, many functions—or accessing a predefined variable.</p><p>The table below summarizes common ASP object methods/properties and the equivalent PHP function or predefined variable:</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">ASP Method/Property</th><th colspan=\"1\" rowspan=\"1\">PHP Function Or Predefined Variable</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Request.Cookies.Item(vKeyName)</code></td><td colspan=\"1\" rowspan=\"1\"><code>$_COOKIE[$keyName];</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Request.Form.Item(vKeyName)</code></td><td colspan=\"1\" rowspan=\"1\"><code>$_POST[$keyName];</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Request.QueryString.Item(vKeyName)</code></td><td colspan=\"1\" rowspan=\"1\"><code>$_GET[$keyName];</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Request.ServerVariables.Item(\"SERVER_NAME\")</code></td><td colspan=\"1\" rowspan=\"1\"><code>$_SERVER[&amp;#039;SERVER_NAME&amp;#039;];</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Response.Cookies.Item(vKeyName) = vCookieValue</code></td><td colspan=\"1\" rowspan=\"1\"><code>setcookie($keyName, $cookieValue);</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Response.Redirect(vURI)</code></td><td colspan=\"1\" rowspan=\"1\"><p><code>header(\"Location:\" . $URI);</code></p><p>where <code>$URI</code> contains an absolute or relative URI. Recall that absolute URIs are preferred unless we use this workaround:</p><pre xml:space=\"preserve\">header(\"Location:\r\nhttp://\" . $_SERVER[&amp;#039;HTTP_HOST&amp;#039;]\r\n. dirname($_SERVER[&amp;#039;PHP_SELF&amp;#039;])\r\n. \"/\" . $relative_url);\r\n</pre></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Response.Write(vURI)</code></td><td colspan=\"1\" rowspan=\"1\"><p><code>echo $URI;</code></p><p><code>print $URI;</code></p><p><code>printf($URI);</code></p><p><code>print_r($URI);</code></p><p><code>sprintf($URI);</code></p><p>The absence of parenthesis for <code>echo</code> and <code>print</code> reminds us that these “functions” are actually language constructs (what Microsoft calls <em>statements</em>).</p><p><code>echo</code> can output one or more strings in a comma-delimited list of arguments so <code>print</code> is actually the closest equivalent to the <code>Write</code> method of the <code>Response</code> object.</p><p>The other PHP functions listed here for the sake of completion are far more powerful and complex than what we expect from ASP.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p><code>Server.CreatObject(vProgID)</code></p><p>VBScript example:</p><pre xml:space=\"preserve\">Set objCNN = Server.CreatObject(\"ADODB.Connection\")\r\nResponse.Write(objCNN.Version)\r\n</pre></td><td colspan=\"1\" rowspan=\"1\"><p><code>$objCNN = new COM(\"ADODB.Connection\");echo $objCNN-&amp;gt;Version;</code></p><p>This function is not <a href=\"http://www.php.net/manual/en/class.com.php\" shape=\"rect\">documented</a> as being in all versions of PHP but part of the <a href=\"http://www.cvshome.org/\" shape=\"rect\">Concurrent Versions System</a>. The assumption here is that this function may be in the win32 build of PHP but not others.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Server.HTMLEncode(vStr)</code></td><td colspan=\"1\" rowspan=\"1\"><p><code>htmlspecialchars($str);</code></p><p>A more powerful (and “typographically correct”) function is <code>htmlentities()</code>. Conversely, the <code>strip_tags()</code> function promises to undo the encoding, removing both HTML and PHP tags.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Server.MapPath(vStr)</code></td><td colspan=\"1\" rowspan=\"1\"><code>realpath($str);</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Server.ScriptTimeout(60)</code></td><td colspan=\"1\" rowspan=\"1\"><code>set_time_limit(60);</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Server.URLEncode(vURI)</code></td><td colspan=\"1\" rowspan=\"1\"><p><code>urlencode($URI);</code></p><p>Conversely, the <code>urldecode()</code> function removes the encoding.</p><p>These functions encodes according to the <code>application/x-www-form-urlencoded</code> media type (the same format submitted by HTML forms).</p><p>PHP supports the <a href=\"http://www.ietf.org/rfc/rfc1738.txt\" shape=\"rect\">RFC1738</a> standard through the <code>rawurlencode()</code> and <code>rawurldecode()</code> functions.</p></td></tr></table><h2>Buffering</h2><p>PHP has over a half-dozen <a href=\"http://www.php.net/manual/en/ref.outcontrol.php\" shape=\"rect\">“ob” functions</a>, referring to the output buffer. This increased functionality allows PHP to distinguish between destroying the output buffer and simply erasing it (among other things). However, the following table centers upon direct translation:</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">ASP</th><th colspan=\"1\" rowspan=\"1\">PHP</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Response.Buffer = True</code></td><td colspan=\"1\" rowspan=\"1\"><code>ob_start();</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Response.Flush</code></td><td colspan=\"1\" rowspan=\"1\"><code>ob_end_flush();</code></td></tr></table><h2>Server-Side Includes</h2><p>Unlike the ASP <em>directive</em>, the PHP <em>functions</em> governing server-side includes allows both absolute and relative paths to included files. There are four PHP functions used to include files: <code>include()</code>, <code>include_once()</code>, <code>require()</code> and <code>require_once()</code>. These functions depend on the configuration directive <code>include_path</code> being set to resolve relative paths (so we can see a directive behind these functions).</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">ASP</th><th colspan=\"1\" rowspan=\"1\">PHP</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>&amp;lt;!--#include file=\"./foo.asp\"--&amp;gt;</code></td><td colspan=\"1\" rowspan=\"1\"><p><code>require(&amp;#039;./foo.asp&amp;#039;);</code></p><p>The <code>require()</code> function translates directly from ASP due to the fatal errors it generates when it fails to find files, while the <code>include()</code> function only generates warnings.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>&amp;lt;!--#include virtual=\"./inc/foo.asp\"--&amp;gt;</code></td><td colspan=\"1\" rowspan=\"1\"><p><code>require(&amp;#039;inc/foo.asp&amp;#039;);</code></p><p>Note that the relative path here does not have leading dots or slashes. This is because of the dependency on the <code>include_path</code> directive.</p><p>The <code>include_path</code> directive would contain an absolute path leading to the <code>inc</code> folder in its list of paths. If this is not the case then an absolute path must be used:</p><p><code>require(&amp;#039;c:/web/inc/foo.asp&amp;#039;);</code></p><p>This example uses Windows paths.</p></td></tr></table><h2>Session State</h2><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">ASP</th><th colspan=\"1\" rowspan=\"1\">PHP</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>&amp;lt;%@ ENABLESESSIONSSTATE=True %&amp;gt;</code></td><td colspan=\"1\" rowspan=\"1\"><code>session_start();</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Session.Abandon</code></td><td colspan=\"1\" rowspan=\"1\"><code>session_destroy();</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Session.Contents.Item(vKeyName)</code></td><td colspan=\"1\" rowspan=\"1\"><code>$_SESSION[$keyName];</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Session.Contents.Remove(vKeyName)</code></td><td colspan=\"1\" rowspan=\"1\"><code>unset($_SESSION[$keyName]);</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Session.Contents.RemoveAll</code></td><td colspan=\"1\" rowspan=\"1\"><p><code>session_unset();</code></p><p>Or</p><p><code>$_SESSION = array();</code></p></td></tr></table><h2>Error Handling</h2><p>PHP 4.x allows setting the level of error reporting, raising errors and specifying an error handling function. There is even an <a href=\"http://www.php.net/manual/en/printwn/language.operators.errorcontrol.php\" shape=\"rect\">error control operator</a> <code>@</code>. <a href=\"http://www.php.net/manual/en/ref.errorfunc.php\" shape=\"rect\">These features</a> do not directly relate to ASP—especially VBScript ASP. The <code>try…catch…finally</code> statement of JScript and the <code>Error Resume Next</code> statement of VBScript both suggest the existence of an exception object or an error object, respectively. These ASP error objects hold error numbers and descriptions. There are no such things in PHP.</p>",
    "ItemText": "<h1>Translating between ASP and PHP</h1><p>This discussion is confined to all versions of Internet Information Server hosting Active Server Pages (ASPs) up to version 5 (just before ASP.NET) and PHP 4.1.0 (specifically referring to the new <a href=\"http://www.php.net/manual/en/printwn/language.variables.predefined.php\" shape=\"rect\">autoglobals</a>). Flippantly speaking, of course, ASP is all about creating objects to access their respective properties and methods while PHP is largely about calling functions—many, many functions—or accessing a predefined variable.</p><p>The table below summarizes common ASP object methods/properties and the equivalent PHP function or predefined variable:</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">ASP Method/Property</th><th colspan=\"1\" rowspan=\"1\">PHP Function Or Predefined Variable</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Request.Cookies.Item(vKeyName)</code></td><td colspan=\"1\" rowspan=\"1\"><code>$_COOKIE[$keyName];</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Request.Form.Item(vKeyName)</code></td><td colspan=\"1\" rowspan=\"1\"><code>$_POST[$keyName];</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Request.QueryString.Item(vKeyName)</code></td><td colspan=\"1\" rowspan=\"1\"><code>$_GET[$keyName];</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Request.ServerVariables.Item(\"SERVER_NAME\")</code></td><td colspan=\"1\" rowspan=\"1\"><code>$_SERVER[&amp;#039;SERVER_NAME&amp;#039;];</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Response.Cookies.Item(vKeyName) = vCookieValue</code></td><td colspan=\"1\" rowspan=\"1\"><code>setcookie($keyName, $cookieValue);</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Response.Redirect(vURI)</code></td><td colspan=\"1\" rowspan=\"1\"><p><code>header(\"Location:\" . $URI);</code></p><p>where <code>$URI</code> contains an absolute or relative URI. Recall that absolute URIs are preferred unless we use this workaround:</p><pre xml:space=\"preserve\">header(\"Location:\r\nhttp://\" . $_SERVER[&amp;#039;HTTP_HOST&amp;#039;]\r\n. dirname($_SERVER[&amp;#039;PHP_SELF&amp;#039;])\r\n. \"/\" . $relative_url);\r\n</pre></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Response.Write(vURI)</code></td><td colspan=\"1\" rowspan=\"1\"><p><code>echo $URI;</code></p><p><code>print $URI;</code></p><p><code>printf($URI);</code></p><p><code>print_r($URI);</code></p><p><code>sprintf($URI);</code></p><p>The absence of parenthesis for <code>echo</code> and <code>print</code> reminds us that these “functions” are actually language constructs (what Microsoft calls <em>statements</em>).</p><p><code>echo</code> can output one or more strings in a comma-delimited list of arguments so <code>print</code> is actually the closest equivalent to the <code>Write</code> method of the <code>Response</code> object.</p><p>The other PHP functions listed here for the sake of completion are far more powerful and complex than what we expect from ASP.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p><code>Server.CreatObject(vProgID)</code></p><p>VBScript example:</p><pre xml:space=\"preserve\">Set objCNN = Server.CreatObject(\"ADODB.Connection\")\r\nResponse.Write(objCNN.Version)\r\n</pre></td><td colspan=\"1\" rowspan=\"1\"><p><code>$objCNN = new COM(\"ADODB.Connection\");echo $objCNN-&amp;gt;Version;</code></p><p>This function is not <a href=\"http://www.php.net/manual/en/class.com.php\" shape=\"rect\">documented</a> as being in all versions of PHP but part of the <a href=\"http://www.cvshome.org/\" shape=\"rect\">Concurrent Versions System</a>. The assumption here is that this function may be in the win32 build of PHP but not others.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Server.HTMLEncode(vStr)</code></td><td colspan=\"1\" rowspan=\"1\"><p><code>htmlspecialchars($str);</code></p><p>A more powerful (and “typographically correct”) function is <code>htmlentities()</code>. Conversely, the <code>strip_tags()</code> function promises to undo the encoding, removing both HTML and PHP tags.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Server.MapPath(vStr)</code></td><td colspan=\"1\" rowspan=\"1\"><code>realpath($str);</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Server.ScriptTimeout(60)</code></td><td colspan=\"1\" rowspan=\"1\"><code>set_time_limit(60);</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Server.URLEncode(vURI)</code></td><td colspan=\"1\" rowspan=\"1\"><p><code>urlencode($URI);</code></p><p>Conversely, the <code>urldecode()</code> function removes the encoding.</p><p>These functions encodes according to the <code>application/x-www-form-urlencoded</code> media type (the same format submitted by HTML forms).</p><p>PHP supports the <a href=\"http://www.ietf.org/rfc/rfc1738.txt\" shape=\"rect\">RFC1738</a> standard through the <code>rawurlencode()</code> and <code>rawurldecode()</code> functions.</p></td></tr></table><h2>Buffering</h2><p>PHP has over a half-dozen <a href=\"http://www.php.net/manual/en/ref.outcontrol.php\" shape=\"rect\">“ob” functions</a>, referring to the output buffer. This increased functionality allows PHP to distinguish between destroying the output buffer and simply erasing it (among other things). However, the following table centers upon direct translation:</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">ASP</th><th colspan=\"1\" rowspan=\"1\">PHP</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Response.Buffer = True</code></td><td colspan=\"1\" rowspan=\"1\"><code>ob_start();</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Response.Flush</code></td><td colspan=\"1\" rowspan=\"1\"><code>ob_end_flush();</code></td></tr></table><h2>Server-Side Includes</h2><p>Unlike the ASP <em>directive</em>, the PHP <em>functions</em> governing server-side includes allows both absolute and relative paths to included files. There are four PHP functions used to include files: <code>include()</code>, <code>include_once()</code>, <code>require()</code> and <code>require_once()</code>. These functions depend on the configuration directive <code>include_path</code> being set to resolve relative paths (so we can see a directive behind these functions).</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">ASP</th><th colspan=\"1\" rowspan=\"1\">PHP</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>&amp;lt;!--#include file=\"./foo.asp\"--&amp;gt;</code></td><td colspan=\"1\" rowspan=\"1\"><p><code>require(&amp;#039;./foo.asp&amp;#039;);</code></p><p>The <code>require()</code> function translates directly from ASP due to the fatal errors it generates when it fails to find files, while the <code>include()</code> function only generates warnings.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>&amp;lt;!--#include virtual=\"./inc/foo.asp\"--&amp;gt;</code></td><td colspan=\"1\" rowspan=\"1\"><p><code>require(&amp;#039;inc/foo.asp&amp;#039;);</code></p><p>Note that the relative path here does not have leading dots or slashes. This is because of the dependency on the <code>include_path</code> directive.</p><p>The <code>include_path</code> directive would contain an absolute path leading to the <code>inc</code> folder in its list of paths. If this is not the case then an absolute path must be used:</p><p><code>require(&amp;#039;c:/web/inc/foo.asp&amp;#039;);</code></p><p>This example uses Windows paths.</p></td></tr></table><h2>Session State</h2><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">ASP</th><th colspan=\"1\" rowspan=\"1\">PHP</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>&amp;lt;%@ ENABLESESSIONSSTATE=True %&amp;gt;</code></td><td colspan=\"1\" rowspan=\"1\"><code>session_start();</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Session.Abandon</code></td><td colspan=\"1\" rowspan=\"1\"><code>session_destroy();</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Session.Contents.Item(vKeyName)</code></td><td colspan=\"1\" rowspan=\"1\"><code>$_SESSION[$keyName];</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Session.Contents.Remove(vKeyName)</code></td><td colspan=\"1\" rowspan=\"1\"><code>unset($_SESSION[$keyName]);</code></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Session.Contents.RemoveAll</code></td><td colspan=\"1\" rowspan=\"1\"><p><code>session_unset();</code></p><p>Or</p><p><code>$_SESSION = array();</code></p></td></tr></table><h2>Error Handling</h2><p>PHP 4.x allows setting the level of error reporting, raising errors and specifying an error handling function. There is even an <a href=\"http://www.php.net/manual/en/printwn/language.operators.errorcontrol.php\" shape=\"rect\">error control operator</a> <code>@</code>. <a href=\"http://www.php.net/manual/en/ref.errorfunc.php\" shape=\"rect\">These features</a> do not directly relate to ASP—especially VBScript ASP. The <code>try…catch…finally</code> statement of JScript and the <code>Error Resume Next</code> statement of VBScript both suggest the existence of an exception object or an error object, respectively. These ASP error objects hold error numbers and descriptions. There are no such things in PHP.</p>",
    "CreateDate": "2002-11-26T08:30:05.0000000",
    "EndDate": null,
    "ModificationDate": "2005-04-26T19:08:20.7670000",
    "DocumentId": "19",
    "PrevFragmentId": "-1",
    "NextFragmentId": "-1",
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "18",
    "FragmentName": null,
    "FragmentDisplayName": "Songhay System Flash MX Toolkit",
    "SortOrdinal": null,
    "ItemChar": "<h1>Songhay System Flash MX Toolkit</h1>\n<p>After over five years, the Songhay System Flash MX Toolkit is retired. Work is being done to release a similar ‘kit’ for Adobe Flex. Subscribe to <a href=\"http://songhaysystem.com/rss\">our news feed</a> for future updates!</p>",
    "ItemText": null,
    "CreateDate": "2003-03-25T12:53:00.0000000",
    "EndDate": null,
    "ModificationDate": "2008-04-08T20:31:11.4830000",
    "DocumentId": "21",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "19",
    "FragmentName": "web_cmd",
    "FragmentDisplayName": "Browse Local Web",
    "SortOrdinal": null,
    "ItemChar": "web_cmd_browse",
    "ItemText": null,
    "CreateDate": "2003-03-27T09:43:50.0000000",
    "EndDate": null,
    "ModificationDate": null,
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "20",
    "FragmentName": "web_cmd",
    "FragmentDisplayName": "Create New Segment",
    "SortOrdinal": null,
    "ItemChar": "./dataSeg.asp?New",
    "ItemText": null,
    "CreateDate": "2003-03-27T09:43:50.0000000",
    "EndDate": null,
    "ModificationDate": null,
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "21",
    "FragmentName": "web_cmd",
    "FragmentDisplayName": "Create New Document",
    "SortOrdinal": null,
    "ItemChar": "./dataDoc.asp?New",
    "ItemText": null,
    "CreateDate": "2003-03-27T09:43:50.0000000",
    "EndDate": null,
    "ModificationDate": null,
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "22",
    "FragmentName": "web_cmd",
    "FragmentDisplayName": "Create New Fragment",
    "SortOrdinal": null,
    "ItemChar": "./dataFrag.asp?New",
    "ItemText": null,
    "CreateDate": "2003-03-27T09:43:50.0000000",
    "EndDate": null,
    "ModificationDate": null,
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "25",
    "FragmentName": "web_cmd",
    "FragmentDisplayName": "View Web Tree",
    "SortOrdinal": null,
    "ItemChar": "./",
    "ItemText": null,
    "CreateDate": "2003-03-27T09:43:50.0000000",
    "EndDate": null,
    "ModificationDate": null,
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "26",
    "FragmentName": null,
    "FragmentDisplayName": "Songhay “ASP Classic” Core",
    "SortOrdinal": null,
    "ItemChar": "<h1>Songhay “ASP Classic” Core</h1><p>This document summarizes the core include files required by our ASP web sites. This core is regarded as mature and stable and should require little modification. This is good news in view of the establishment of Microsoft’s new ASP.NET technology. Ideally, these words mark our formal departure from the “classic” ASP world, allowing research in .NET technology to go forward on a firm foundation.</p><p> The image at left shows the core ASP in the Visual Studio.NET Solution Explorer. We have three folders:</p><ul><li>The root <code>&#092;inc</code> folder, containing constants.</li><li>The <code>&#092;inc&#092;classes</code> folder, containing VBScript and PHP classes.</li><li>The <code>&#092;inc&#092;routines</code> folder, containing frequently-used, generic VBScript routines and generic, client-side JavaScript.</li></ul><p>The root folder (<code>&#092;inc</code>) is usually at the root of the web site and is called by a <code>#include virtual</code> directive.</p><h2>Why VBScript?</h2><p>A small but vociferous minority has innocently posed the question, “Why use VBScript on the server side instead of JScript?” The question usually comes from a person who was not brought up on a healthy diet of calorie-rich Microsoft products. This kit is designed with a large population of Visual Basic and VBA programmers in mind. Back in the late 1990s, when this kit was first starting out, these folks were the blokes claiming “ASP/IIS” experience in the resumes. So, in an effort to play well with others, VBScript was selected to make sure that the majority could hit the ground running.</p><h2>The Root <code>&#092;inc</code> Folder</h2><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">File Name</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ADOVBS.asp</code></td><td colspan=\"1\" rowspan=\"1\">Constants used with Microsoft’s ActiveX Data Objects (ADO). This file shipped with IIS (under a different file name).</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>CDOVBS.asp</code></td><td colspan=\"1\" rowspan=\"1\">Constants used with Microsoft’s Collaboration Data Objects for New Technology Services (CDONTS). For us everyday folk this file was needed when you wanted to use ASP to send an email. The contents of this file is also directly from Microsoft.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>rasxADO.asp</code></td><td colspan=\"1\" rowspan=\"1\">Constants used with our customized COM object used to streamline ADO calls. This object is discussed in detail in “<a href=\"http://songhaysystem.com/document.php?cmd=getDoc&amp;get=3\" shape=\"rect\">Developing a Customized COM Object for ADO</a>.” By the year 2000, this file and its associated COM object was not used anymore in lieu of the <code>ADO.asp</code> VBScript class file discussed below.</td></tr></table><h2>The <code>&#092;inc&#092;classes&#092;ADO.asp</code> File</h2><p>This file contains the VBScript class, <code>clsADO</code>, which was translated from the ActiveX object discussed in “<a href=\"http://songhaysystem.com/document.php?cmd=getDoc&amp;get=3\" shape=\"rect\">Developing a Customized COM Object for ADO</a>.”</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Property/Method</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Connection</code></td><td colspan=\"1\" rowspan=\"1\">Gets the ADO Connection object associated with the instantiated object of this class.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>DataErrText</code></td><td colspan=\"1\" rowspan=\"1\">Gets the errors collected by the private <code>basDataErrMsg()</code> method.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>RecordsAffected</code></td><td colspan=\"1\" rowspan=\"1\">Gets the records affected by the last command run against the ADO Command object via <code>CnnCmd()</code> or <code>StoredProcCmd()</code> (if this feature is supported by the OLEDB Provider).</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>HasRecords</code></td><td colspan=\"1\" rowspan=\"1\">Gets the Boolean after the test for whether an ADO Recordset object contains records.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Connect()</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets the Boolean after the test for connecting to the data source with the following arguments:</p><p><code>DataSrc</code>—the name of the data source (usually the NETBIOS name of the database server).</p><p><code>DataSrcType</code>—specifies the OLEDB providers supported by this class: <code>adJetOLEDB</code>, <code>adJet4OLEDB</code>, <code>adODBCOLEDB</code>, <code>adOracleOLEDB</code>, <code>adMSSQLOLEDB</code>, <code>adSybaseOLEDB</code> and <code>adUDL</code>.</p><p><code>ConnectType</code>—Specifies the connection behavior of the ADO connection object. Because this is used in ASP, this value should always be set to <code>adConnectSynchronous</code>.</p><p><code>Catalog</code>—Specifies the name of the database for most OLEDB providers.</p><p><code>UserName</code>—Specifies the name of the database user with permission to access the data.</p><p><code>Password</code>—Specifies the password of the database user with permission to access the data.</p><p><em>TIP:</em> By omitting the <code>UserName</code> and <code>Password</code> when calling <code>Connect()</code> for SQL Server 7.x (or MSDE 1.x) on Windows NT/2000, this class will use the NT/2000 login credentials to attempt to connect to the database server.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>CnnCmd()</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets the Boolean after the test for successfully executing dynamic SQL commands against the <code>ADODB.Connection</code> object with the arguments:</p><p><code>Source</code>—Valid SQL for the DBMS. SQL strings with parameters should contain question marks (<code>?</code>).</p><p><code>Options</code>—An <code>ADODB.CommandTypeEnum</code>. Only <code>adCmdText</code> has been extensively tested.</p><p><code>SQLPrms</code>—This optional value can be an array or delimited string literal corresponding to the parameters required by <code>Source</code>. The string literal must be delimited by <code>vbNullChar</code> characters.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>CnnRst()</code></td><td colspan=\"1\" rowspan=\"1\"><p>Executes dynamic SQL projections against the <code>ADODB.Connection</code> object and returns a read-only, forward-only ADO Recordset.</p><p>This method has the same arguments as <code>CnnCmd()</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ClientRst()</code></td><td colspan=\"1\" rowspan=\"1\"><p>Returns a disconnected, ADO Recordset (<code>CursorType:=adOpenStatic</code> and <code>LockType:=adLockBatchOptimistic</code>). This method is used to access ADO Recordset methods like <code>MoveFirst()</code> and <code>MovePrevious()</code>, and properties like <code>Recordcount</code>.</p><p>This method has the same arguments as <code>CnnCmd()</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>StoredProcCmd()</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets the Boolean after the test for successfully executing a stored procedure against the <code>ADODB.Command</code> object with the following arguments:</p><p><code>StoredProcName</code>—Contains the name of the stored procedure of the DBMS supported by this Class.</p><p><code>Params</code>—This value can be an array or delimited string literal corresponding to the parameters required by <code>StoredProcName</code>. The string literal must be delimited by <code>vbNullChar</code> characters.</p><p><em>NOTE:</em> This value is passed by reference (<code>ByRef</code>) for stored procedure parameters that return values.</p><p>When <code>Has2DparamArray:=True</code> parameters passed as a two-dimensional parameter array can be updated <em>after</em> execution. For example, in Microsoft remote data management systems parameters modified by the <code>OUTPUT</code> keyword will be updated.</p><p>The 2D parameter array has the following form:</p><pre xml:space=\"preserve\">&lt;param’ name&gt;, &lt;row 0&gt;\r\n&lt;param’ value&gt;, &lt;row 0&gt;\r\n&lt;param’ name&gt;, &lt;row 1&gt;\r\n&lt;param’ value&gt;, &lt;row 1&gt;\r\n</pre><p>etc.</p><p><code>Has2DparamArray</code>—Indicates if <code>Params</code> contains a two-dimensional array. See <code>Params</code>.</p><p><code>TimeOut</code>—The number of seconds to set the <code>CommandTimeout</code> property of the ADO Command object. By default, it is set to 30 seconds.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>StoredProcRst()</code></td><td colspan=\"1\" rowspan=\"1\"><p>Executes a stored procedure against the <code>ADODB.Command</code> object and returns a read-only, forward-only ADO Recordset.</p><p>This method has the same arguments as <code>StoredProcCmd()</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>CloseRecordset()</code></td><td colspan=\"1\" rowspan=\"1\"><p>Closes the specified recordset object and sets the object to <code>Nothing</code> with the following argument:</p><p><code>RecSet</code>—The reference to the recordset object.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Disconnect()</code></td><td colspan=\"1\" rowspan=\"1\">Closes the ADO connection object.</td></tr></table><h2>The <code>&#092;inc&#092;classes&#092;FileSystem.asp</code> File</h2><p>This file contains the VBScript class, <code>clsFileSystem</code>, which handles routine calls to the file system via the <code>Scripting.FileSystemObject</code> and, because these calls are from ASP, the <code>MSWC.PermissionChecker</code> (referred to as the <a href=\"http://www.microsoft.com/windows2000/en/advanced/iis/default.asp?url=/WINDOWS2000/en/advanced/iis/htm/asp/comp3hf8.htm\" shape=\"rect\">Permission Checker Component</a> in the Windows 2000 Advanced Server documentation). This is a VBScript class (instead of a stateless set of routines) because, like <code>clsADO</code>, it is convenient to “open a connection” to a folder and “query” it several times at runtime.</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Property/Method</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ErrMsg</code></td><td colspan=\"1\" rowspan=\"1\">Gets any trappable VBScript error messages.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>FSO</code></td><td colspan=\"1\" rowspan=\"1\">Gets the <code>Scripting.FileSystemObject</code> created by the class constructor.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Permissions</code></td><td colspan=\"1\" rowspan=\"1\">Gets the <code>MSWC.PermissionChecker</code> object created by the class constructor.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>WebFileName</code></td><td colspan=\"1\" rowspan=\"1\">Gets/Sets the name of a file. No path information should be set here.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>WebFilePath</code></td><td colspan=\"1\" rowspan=\"1\">Gets/Sets the path to the file set in <code>WebFileName</code>. This string literal must end with a backslash, <code>&#092;</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>WebFileExists()</code></td><td colspan=\"1\" rowspan=\"1\">Gets the Boolean result of the test checking for the existence and/or permissions of a file with the respect to IIS. A file object must be pre-defined by setting the <code>WebFileName</code> and <code>WebFilePath</code> properties.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>WebFileObject</code></td><td colspan=\"1\" rowspan=\"1\">Gets the file object associated with the call to the <code>WebFileExists()</code> method. The implied rule here is, You cannot have a file object without first checking for its existence.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>WebFileSize</code></td><td colspan=\"1\" rowspan=\"1\">Gets the size in bytes of the file object associated with the call to the <code>WebFileExists()</code> method.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>WriteFile()</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets the Boolean result of the test for successfully writing to a text file with the argument:</p><p><code>FileString</code>—the string literal to write to the file.</p><p>A file object must be pre-defined by setting the <code>WebFileName</code> and <code>WebFilePath</code> properties. If the file does not exist, this method will create the file.</p></td></tr></table><h2>The <code>&#092;inc&#092;classes&#092;HTMLComboBox.asp</code> File</h2><p>This file contains the VBScript class, <code>clsHTMLComboBox</code>, which renders HTML <code>select</code> elements, described in Microsoft-speak as “list boxes” or “drop-down boxes.” It will be stated with pride that this method of rendering HTML was “discovered” independently and almost predates the public introduction of .NET <a href=\"http://msdn.microsoft.com/msdnmag/issues/1000/visualprog/default.aspx\" shape=\"rect\">server-side controls</a>. It is quite a reassuring feeling that Microsoft was on the same page as our little organization—although there should be some debate about the size of this page!</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Property/Method</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ClassName</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets the <code>class</code> attribute of the <code>select</code> element.</p><p>By default, the <code>class</code> attribute is not rendered in the HTML.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>DefaultSelected</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets the Boolean property that determines if the default value (<code>option</code>) of the <code>select</code> element is selected.</p><p><em>NOTE:</em> The client-side JavaScript function <code>jsGetOptionsIndex()</code> is often used instead of setting this property. See “The <code>&#092;inc&#092;routines&#092;rootData.js</code> File” below.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ID</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets the <code>id</code> attribute of the <code>select</code> element.</p><p>By default, the <code>id</code> attribute is not rendered in the HTML.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>JavaScript</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets inline JavaScript used by the <code>select</code> element.</p><p><em>EXAMPLE:</em> To add the <code>onChange</code> attribute to the <code>select</code> element, we have:</p><pre xml:space=\"preserve\">Set objCombo = new clsHTMLComboBox\r\nobjCombo.JavaScript = _\r\n    \"onChange = \"\"[your code here]\"\"\"\r\n</pre><p>You can see how we are using the old VB double-quote trick to render the quotes in HTML. You can also see how free-form this property can be which makes it very dangerous to inexperienced users.</p><p>By default, inline JavaScript is not rendered in the HTML.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Name</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets the <code>name</code> attribute of the <code>select</code> element.</p><p>By default, the <code>name</code> attribute is not rendered in the HTML.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>IsMultiSelect</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets the Boolean property that determines if this <code>select</code> element has a <code>multiple</code> attribute.</p><p>By default, the <code>name</code> attribute is not rendered in the HTML.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Recordset</code></td><td colspan=\"1\" rowspan=\"1\">Gets/Sets the ADO recordset object used to create <code>option</code> elements for the <code>select</code> element. Only the first two columns of this recordset are used. By default, the leftmost column (column 0) sets the <code>value</code> attribute of the <code>option</code> element and the second column (column 1) is displayed.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>RevColumnOrder</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets the Boolean property that determines if the column order of the recordset or array is reversed. This means that column 1 sets the <code>value</code> attribute of the <code>option</code> element and column 0 is displayed.</p><p>This property is useful for those unfortunate cases when you are not in control of the data being sent to the client from the DBMS.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Size</code></td><td colspan=\"1\" rowspan=\"1\">Gets/Sets the <code>size</code> attribute of the <code>select</code> element. By default, it is <code>1</code> (making a drop-down box); values greater than one make the list box.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Width</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets the <code>width</code> attribute of the <code>select</code> element. This will also create an inline <code>style</code> attribute setting the CSS <code>width</code> property to make sure it renders on as many browsers as possible.</p><p>By default, this property is not used and is usually ignored because of the use of the <code>ClassName</code> property.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ValueList</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets the string literal used to create <code>option</code> elements for the <code>select</code> element. This string literal is a <code>vbNullChar</code>-delimited list in the form:</p><pre xml:space=\"preserve\">[value] &amp; vbNullChar &amp; [display text] …\r\n</pre><p>This implies that odd-number values in the list set the <code>value</code> attribute of each <code>option</code> element and even-number values are displayed. This design was chosen more for flexibility than for convenience.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>GetComboBox()</code></td><td colspan=\"1\" rowspan=\"1\">Returns an HTML string based on the properties set above. This method should only be used when the <code>Recordset</code> property is set.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>GetComboBoxValLst()</code></td><td colspan=\"1\" rowspan=\"1\">Returns an HTML string based on the properties set above. This method should only be used when the <code>ValueList</code> property is set.</td></tr></table><h2>The <code>&#092;inc&#092;classes&#092;HTMLPage.asp</code> File</h2><p>This file contains the VBScript class, <code>clsHTMLPage</code>, which renders entire HTML pages and common interface elements. This class was replaced by the <code>&#092;inc&#092;routines&#092;uiServices.asp</code> file mentioned below. This class was just not flexible enough but is mentioned here for the sake of completeness and will not be documented in detail.</p><h2>The <code>&#092;inc&#092;classes&#092;HTMLTable.asp</code> File</h2><p>This file contains the VBScript class, <code>clsHTMLTable</code>, which renders entire HTML tables. This class is the workhorse of the core and is discussed in detail in <a href=\"http://songhaysystem.com/document.php?cmd=getDoc&amp;get=4\" shape=\"rect\">Using a Generic, Stateless VBScript Object to Display Data in a Tabular Format</a>.</p><h2>The <code>&#092;inc&#092;routines&#092;appServices.asp</code> File</h2><p>This is the “web application services” file containing generic, frequently-used VBScript routines.</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Routine</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basDisplayHTML()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function truncates the text to be displayed as HTML at the specified length with arguments:</p><p><code>vString</code>—the string to truncate.</p><p><code>vZeroString</code>—the text to display when <code>vString</code> contains a zero-length string.</p><p><code>vLength</code>—the length of the string to display before characters are truncated.</p><p><em>NOTE:</em> Ellipses are appended to the end of a non-zero-length truncated string.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basGetGMTOffset()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns the Greenwich Mean Time “offset” with respect to Pacific Time. It returns 7 when Pacific Standard Time is detected and 8 when Pacific Daylight Savings Time is detected.</p><p>This function is rather useless out of the Pacific time zone. It was developed for writing <a href=\"http://www.imc.org/pdi/vcaloverview.html\" shape=\"rect\">vCalendar</a> items.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basGetMonthNames()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns a one-dimensional array of month names based on the locale settings of the web server with the following argument:</p><p><code>vAbbreviate</code>—Boolean value that indicates if the month name is to be abbreviated based on the locale settings of the web server.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basGetWeekDayNames()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns a one-dimensional array of weekday names based on the locale settings of the web server with the following arguments:</p><p><code>vAbbreviate</code>—Boolean value that indicates if the month name is to be abbreviated based on the locale settings of the web server.</p><p><code>vFirstDay</code>—Numeric value indicating the first day of the week (use these constants for readability: <code>vbUseSystemDayOfWeek</code>, <code>vbSunday</code>, <code>vbMonday</code>, <code>vbTuesday</code>, <code>vbWednesday</code>, <code>vbThursday</code>, <code>vbFriday</code>, <code>vbSaturday</code>).</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basGetWeekDate()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns a date based on these arguments:</p><p><code>vWeekDay</code>—An integer from1 to 7 corresponding to the day constants <code>vbSunday</code>, <code>vbMonday</code>, <code>vbTuesday</code>, <code>vbWednesday</code>, <code>vbThursday</code>, <code>vbFriday</code>, <code>vbSaturday</code>.</p><p><code>vWeek</code>—An integer indicating the current week on the year (usually from 1 to 52).</p><p><code>vMonth</code>—An integer indicating the current month of the year (usually from 1 to 12).</p><p><code>vYear</code>—The current four-digit year.</p><p><code>vFirstWeekDay</code>—An integer indicating the first day of the week (from 1 to 7 corresponding to the day constants mentioned above.).</p><p><em>NOTE:</em> This function assumes that the first week of the year the week in which January 1 occurs</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basGetVPath()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns the virtual path in the SCRIPT_NAME environment variable as an array or as a scalar identified by <code>vLevel</code> with arguments:</p><p><code>vLevel</code>—The level of the path to return. For example, <code>0</code> returns the file name; <code>1</code> returns the directory where the file resides.</p><p><code>vReturnArray</code>—Boolean value that determines whether to return the entire array or just a scalar indicated by <code>vLevel</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basIIf()</code></td><td colspan=\"1\" rowspan=\"1\">This function is the VBScript equivalent of <code>VBA.IIf()</code> with arguments <code>vCondition</code>, <code>vTrueResult</code> and <code>vFalseResult</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basInArray()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function searches an array for a scalar value with arguments:</p><p><code>vArray</code>—The array to be searched.</p><p><code>vItem</code>—The search scalar.</p><p><em>NOTE:</em> This converts the search scalar and each array element to strings for each search attempt.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basIsAgent()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function is a server-side browser sniffer with argument <code>vAgent</code> which a string indicating the browser to detect. This is the latest list of targets:</p><p><code>Gecko 5x</code>—Mozilla 5 and above.</p><p><code>MSIE 4x</code>—MS Internet Explorer 4 and above.</p><p><code>MSIE 5x</code>—MS Internet Explorer 5 and above.</p><p><code>Netscape 4x</code>—Netscape 4 and above.</p><p><em>NOTE:</em> Our client-side browser sniffer (<code>rootSniffer.js</code>) from <a href=\"http://www.webreference.com/tools/browser/javascript.html\" shape=\"rect\">webreference.com</a> should be used for more accurate sniffing.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basLogonUser()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function reads the <code>LOGON_USER</code> environment variable and returns a scalar containing the domain name or the user name—or the entire environment variable. The <code>vItem</code> argument determines what is returned:</p><p>When <code>vItem=\"domain\"</code> the domain name is returned.</p><p>When <code>vItem=\"user\"</code> the user name is returned.</p><p>All other values return the unaltered contents of the <code>LOGON_USER</code> environment variable.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basRandomNum()</code></td><td colspan=\"1\" rowspan=\"1\">This function returns a random integer from <code>LowerLimit</code> to <code>UpperLimit</code>. The <code>OmitList</code> argument, a comma-delimited list of integers, is used to prevent random values matching one of the integers in the list from being returned.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basDelaySec()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function delays code execution for the amount (in seconds) indicated by <code>vSeconds</code>.</p><p>This function is most useful when the <code>Response.Buffer</code> and <code>Response.Flush</code> features of ASP are used.</p></td></tr></table><h2>The <code>&#092;inc&#092;routines&#092;rootData.js</code> File</h2><p>This is the “root” file of client-side JavaScript routines that handle generic data binding and validation for web-based data editing forms.</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Routine</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsGetOptionsIndex()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function returns an integer value indicating the index of one of the <code>option</code> objects in a <code>select</code> object with arguments:</p><p><code>objSelect</code>—The <code>select</code> object as seen by the DOM of the web browser.</p><p><code>vValue_data</code>—The value of the <code>option</code> object in the <code>select</code> object being “bound.”</p><p>This data binding function is essentially used to set the <code>selectedIndex</code> property of the <code>select</code> object.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsGetRadioValue()</code></td><td colspan=\"1\" rowspan=\"1\">This JavaScript function returns the value of the checked radio button in an array of radio buttons with the argument <code>objRadio</code>, the input object of <code>type=radio</code> as seen by the DOM.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsGetWildCard()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function concatenates the wildcard character (<code>vWildCard</code>) of the DBMS to a search string (<code>vString</code>). The concatenation is determined by a code (<code>vCode</code>) where:</p><p><code>*</code> indicates “containing.”</p><p><code>=*</code> indicates “starting with.”</p><p><code>*=</code> indicates “ending with.”</p><p><code>=</code> indicates “exact.”</p><p>This function is made to be a part of a search form.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsIsEmailValid()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function returns a Boolean value, testing the validity of email addresses with arguments:</p><p><code>vFormName</code>—The name of form containing the email address <code>input</code> object.</p><p><code>objElement</code>—The email address <code>input</code> object.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsIsNotComplete()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function returns a Boolean value, testing for text entered in an <code>input</code> object with arguments:</p><p><code>objElement</code>—The <code>input</code> object being tested.</p><p><code>vMsg</code>—The message to pop up if the text field is not completed (empty).</p><p>If the text field is not complete, this function returns <code>true</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsIsNotNumeric()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function returns a Boolean value, testing for a numeric value entered in an <code>input</code> object. It has the same arguments as <code>jsIsNotComplete()</code>.</p><p>If the value entered is not numeric, this function returns <code>true</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsIsNotSelected()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function returns a Boolean value, testing for an item selected in an <code>input</code> object where <code>type=radio</code> or an item selected other than the default of the <code>select</code> object.</p><p>It has the same arguments as <code>jsIsNotComplete()</code> where <code>objElement</code> is the radio or drop-down list box object being tested.</p><p>If the item is not selected, this function returns <code>true</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsIsTextConfirmed()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function returns a Boolean value, testing for identical values entered in two <code>input</code> objects of type <code>text</code> with arguments:</p><p><code>objElement1</code>—the first input element to test.</p><p><code>objElement2</code>—the second input element to test.</p><p><code>vMsg</code>—The message to pop up if the text fields do not contain the same value.</p><p>If the text fields do not contain the same value, this function returns <code>true</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsIsTextLength()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function returns a Boolean value, testing for the length of text entries into <code>input</code> (<code>type=text</code>) and <code>textarea</code> objects (<code>objElement</code>) against a maximum value (<code>vMaxLength</code>).</p><p>If the text entered exceeds the maximum value, this function returns <code>false</code> and pops up an error message (<code>vMsg</code>).</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsIsUniqueOption()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function returns a Boolean value, testing for unique <code>option</code> values selected in a multi-select list with areguments:</p><p><code>objSelect</code>—The <code>select</code> object to test.</p><p><code>vValue_data</code>—The value to use in the test.</p><p>If the value is unique, this function returns <code>true</code>.</p></td></tr></table><h2>The <code>&#092;inc&#092;routines&#092;rootDates.js</code> File</h2><p>This is the “root” file of client-side JavaScript routines that handle a client-side date picker. This date picker is still under development and will be documented in a future publication.</p><h2>The <code>&#092;inc&#092;routines&#092;rootMenu.js</code> File</h2><p>This JavaScript comes from Macromedia’s Andy Finnell and is used by Fireworks to make drop-down, hierarchical menus. This is another “experimental” item and may be documented later.</p><h2>The <code>&#092;inc&#092;routines&#092;rootSniffer.js</code> File</h2><p>Our client-side JavaScript browser sniffer (<code>rootSniffer.js</code>) from <a href=\"http://www.webreference.com/tools/browser/javascript.html\" shape=\"rect\">webreference.com</a>.</p><h2>The <code>&#092;inc&#092;routines&#092;stringServices.asp</code> File</h2><p>This VBScript file contains string handling routines. This, the oldest file of the core, was translated out of Visual Basic 6.x and 4.x (before that, translated out of Access 97!). Many of the string handling functions were removed as Microsoft improved upon VB, VBA and VBScript. Many more functions should be replaced since the advent of Regular Expressions in VBScript (<a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnclinic/html/scripting051099.asp\" shape=\"rect\">evidently</a> introduced around 1999).</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Routine</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basGetCharPos()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns the character position of the first character in the search string (<code>argChars</code>) within the string being searched (<code>argStr</code>).</p><p>So far, this function is very similar to <code>Instr()</code>. However, the <code>argIterations</code> argument can be used to find the <code>n</code><sup>th</sup> occurrence of the search string.</p><p>If <code>argIterations=0</code> then the position of the last occurrence of <code>argChars</code> is returned.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basGetDigits()</code></td><td colspan=\"1\" rowspan=\"1\">This function returns Arabic numerals out of and will return “periods” (assumed to decimal points) if <code>argIncludeDecimal=true</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basGetSubStr()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns a substring out of <code>argStr</code> based on combinations of the arguments:</p><p><code>argStartCol</code>—The starting column of fix-width text to extract. This column is assumed to be column <code>1</code>.</p><p><code>argEndCol</code>—The ending column of fix-width text to extract. This function extracts what is <em>between</em> the starting and ending columns.</p><p><code>argStartChar</code>—The starting character of text to extract.</p><p><code>argEndChar</code>—The ending character of text to extract.</p><p>These arguments can be used in any combination allowing some flexibility and some primitive form of pattern matching. However, this function is to be considered obsolete for those who can use regular expressions. When a particular parameter needs to be “turned off,” use the following default values:</p><pre xml:space=\"preserve\">argStartCol = 0\r\nargEndCol = 0\r\nargStartChar = vbNullString\r\nargEndChar = vbNullString\r\n</pre></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basSearchLine()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns the line containing <code>argSearchStr</code>, where “line” in the name of the function implies that <code>argStr</code> contains several <code>vbCrLf</code> characters.</p><p>In other words, this function responds to the request saying, “Show me the entire line of text containing the search string.”</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basInsCrLf()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function inserts <code>vbCrLf</code> characters at the length (or column) specified by <code>argLineLen</code> in <code>argInpString</code>.</p><p>This function was very useful back in the days when lines of text in email messages needed to be a certain length.</p></td></tr></table><h2>The <code>&#092;inc&#092;routines&#092;uiServices.asp</code> File</h2><p>This VBScript file contains “user interface services” common to many web sites. This is sort of a “smart” include file that contains one subroutine, <code>basIncludeHTMLBlock()</code> that takes two parameters: <code>vBlockName</code> and <code>vBlockValue</code>. The first parameter calls a particular block of HTML and the second parameter passes content that changes from call to call. The following table summarizes some the common HTML blocks:</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Block Name</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>!BOF_begin</code></td><td colspan=\"1\" rowspan=\"1\">Returns the “beginning of HTML file” block. This contains the DTD and the VS.NET, <code>VS_TARGETSCHEMA</code> tag. The target schema tag makes it easy to maintain the <code>uiServices.asp</code> itself because it provides Intellisense and other VS.NET features. So far, not much “service” for the “user.”</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>!LINK_css</code></td><td colspan=\"1\" rowspan=\"1\">Returns a <code>link</code> tag calling an external CSS file. By default, it will call <code>./root.css</code>. If <code>vBlockValue</code> is not a zero-length string then it must be relative or absolute path to an external CSS file.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>!META</code></td><td colspan=\"1\" rowspan=\"1\">Returns <code>meta</code> tags used by search engines. This routine makes all web pages of a particular site have identical <code>meta</code> identification tags.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>!SCRIPT_js</code></td><td colspan=\"1\" rowspan=\"1\">Returns a <code>script</code> tag calling an external JavaScript file. By default, it will call <code>./root.js</code>. If <code>vBlockValue</code> is not a zero-length string then it must be relative or absolute path to an external JavaScript file.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>!BOF_end</code></td><td colspan=\"1\" rowspan=\"1\"><p>Returns the end of a “beginning of HTML file” block. This contains <code>title</code> elements, the end <code>head</code> tag and the beginning <code>body</code> tag.</p><p>When an “error page” is called from ASP code this HTML block is useful in making a complete web page. See below for more details.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Page</code></td><td colspan=\"1\" rowspan=\"1\"><p>Returns a complete HTML page by calling this subroutine recursively. This is used mostly for ASP “error pages” so <code>vBlockValue</code> usually contains an HTML-formatted error message.</p><p>This kind of call should not be made from an ASP page if the calling page is already rendering HTML.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>!EOF</code></td><td colspan=\"1\" rowspan=\"1\">Returns the ending tags of an HTML page.</td></tr></table><p>Our designs usually have blocks like <code>Header</code> or <code>Footer</code>. Clearly, the intention here is to centralize the handling of look and feel for web sites—even when errors are being handled. A page like this is easier to maintain with Visual Studio.NET than the VBScript class <code>HTMLPage.asp</code> file mentioned earlier. In fact, a web designer can create that wonderful header or footer in <em>static</em> HTML (like in Dreamweaver or even FrontPage) only to have it copied and pasted into a <em>dynamic</em> page like this one.</p><h1>Free Samples and a Fond Farewell</h1><p>The publishing of this document in public on the Internet marks a fond farewell to an era of ASP. This lengthy summary (which is 16 pages in Microsoft Word) records years and years of pain, misery and triumph. Now we move on to ASP.NET! Microsoft promises that this new technology will not bring as much suffering as ASP classic. In fact, the code is supposed to document itself, making pages like these obsolete.</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Download</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><a href=\"samples/ASPKit/rasxASP.zip\" shape=\"rect\">rasxASP.zip</a></td><td colspan=\"1\" rowspan=\"1\">The <code>&#092;inc</code> folder and the files mentioned above.</td></tr></table>",
    "ItemText": "<h1>Songhay “ASP Classic” Core</h1><p>This document summarizes the core include files required by our ASP web sites. This core is regarded as mature and stable and should require little modification. This is good news in view of the establishment of Microsoft’s new ASP.NET technology. Ideally, these words mark our formal departure from the “classic” ASP world, allowing research in .NET technology to go forward on a firm foundation.</p><p> The image at left shows the core ASP in the Visual Studio.NET Solution Explorer. We have three folders:</p><ul><li>The root <code>&#092;inc</code> folder, containing constants.</li><li>The <code>&#092;inc&#092;classes</code> folder, containing VBScript and PHP classes.</li><li>The <code>&#092;inc&#092;routines</code> folder, containing frequently-used, generic VBScript routines and generic, client-side JavaScript.</li></ul><p>The root folder (<code>&#092;inc</code>) is usually at the root of the web site and is called by a <code>#include virtual</code> directive.</p><h2>Why VBScript?</h2><p>A small but vociferous minority has innocently posed the question, “Why use VBScript on the server side instead of JScript?” The question usually comes from a person who was not brought up on a healthy diet of calorie-rich Microsoft products. This kit is designed with a large population of Visual Basic and VBA programmers in mind. Back in the late 1990s, when this kit was first starting out, these folks were the blokes claiming “ASP/IIS” experience in the resumes. So, in an effort to play well with others, VBScript was selected to make sure that the majority could hit the ground running.</p><h2>The Root <code>&#092;inc</code> Folder</h2><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">File Name</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ADOVBS.asp</code></td><td colspan=\"1\" rowspan=\"1\">Constants used with Microsoft’s ActiveX Data Objects (ADO). This file shipped with IIS (under a different file name).</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>CDOVBS.asp</code></td><td colspan=\"1\" rowspan=\"1\">Constants used with Microsoft’s Collaboration Data Objects for New Technology Services (CDONTS). For us everyday folk this file was needed when you wanted to use ASP to send an email. The contents of this file is also directly from Microsoft.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>rasxADO.asp</code></td><td colspan=\"1\" rowspan=\"1\">Constants used with our customized COM object used to streamline ADO calls. This object is discussed in detail in “<a href=\"http://songhaysystem.com/document.php?cmd=getDoc&amp;get=3\" shape=\"rect\">Developing a Customized COM Object for ADO</a>.” By the year 2000, this file and its associated COM object was not used anymore in lieu of the <code>ADO.asp</code> VBScript class file discussed below.</td></tr></table><h2>The <code>&#092;inc&#092;classes&#092;ADO.asp</code> File</h2><p>This file contains the VBScript class, <code>clsADO</code>, which was translated from the ActiveX object discussed in “<a href=\"http://songhaysystem.com/document.php?cmd=getDoc&amp;get=3\" shape=\"rect\">Developing a Customized COM Object for ADO</a>.”</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Property/Method</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Connection</code></td><td colspan=\"1\" rowspan=\"1\">Gets the ADO Connection object associated with the instantiated object of this class.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>DataErrText</code></td><td colspan=\"1\" rowspan=\"1\">Gets the errors collected by the private <code>basDataErrMsg()</code> method.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>RecordsAffected</code></td><td colspan=\"1\" rowspan=\"1\">Gets the records affected by the last command run against the ADO Command object via <code>CnnCmd()</code> or <code>StoredProcCmd()</code> (if this feature is supported by the OLEDB Provider).</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>HasRecords</code></td><td colspan=\"1\" rowspan=\"1\">Gets the Boolean after the test for whether an ADO Recordset object contains records.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Connect()</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets the Boolean after the test for connecting to the data source with the following arguments:</p><p><code>DataSrc</code>—the name of the data source (usually the NETBIOS name of the database server).</p><p><code>DataSrcType</code>—specifies the OLEDB providers supported by this class: <code>adJetOLEDB</code>, <code>adJet4OLEDB</code>, <code>adODBCOLEDB</code>, <code>adOracleOLEDB</code>, <code>adMSSQLOLEDB</code>, <code>adSybaseOLEDB</code> and <code>adUDL</code>.</p><p><code>ConnectType</code>—Specifies the connection behavior of the ADO connection object. Because this is used in ASP, this value should always be set to <code>adConnectSynchronous</code>.</p><p><code>Catalog</code>—Specifies the name of the database for most OLEDB providers.</p><p><code>UserName</code>—Specifies the name of the database user with permission to access the data.</p><p><code>Password</code>—Specifies the password of the database user with permission to access the data.</p><p><em>TIP:</em> By omitting the <code>UserName</code> and <code>Password</code> when calling <code>Connect()</code> for SQL Server 7.x (or MSDE 1.x) on Windows NT/2000, this class will use the NT/2000 login credentials to attempt to connect to the database server.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>CnnCmd()</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets the Boolean after the test for successfully executing dynamic SQL commands against the <code>ADODB.Connection</code> object with the arguments:</p><p><code>Source</code>—Valid SQL for the DBMS. SQL strings with parameters should contain question marks (<code>?</code>).</p><p><code>Options</code>—An <code>ADODB.CommandTypeEnum</code>. Only <code>adCmdText</code> has been extensively tested.</p><p><code>SQLPrms</code>—This optional value can be an array or delimited string literal corresponding to the parameters required by <code>Source</code>. The string literal must be delimited by <code>vbNullChar</code> characters.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>CnnRst()</code></td><td colspan=\"1\" rowspan=\"1\"><p>Executes dynamic SQL projections against the <code>ADODB.Connection</code> object and returns a read-only, forward-only ADO Recordset.</p><p>This method has the same arguments as <code>CnnCmd()</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ClientRst()</code></td><td colspan=\"1\" rowspan=\"1\"><p>Returns a disconnected, ADO Recordset (<code>CursorType:=adOpenStatic</code> and <code>LockType:=adLockBatchOptimistic</code>). This method is used to access ADO Recordset methods like <code>MoveFirst()</code> and <code>MovePrevious()</code>, and properties like <code>Recordcount</code>.</p><p>This method has the same arguments as <code>CnnCmd()</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>StoredProcCmd()</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets the Boolean after the test for successfully executing a stored procedure against the <code>ADODB.Command</code> object with the following arguments:</p><p><code>StoredProcName</code>—Contains the name of the stored procedure of the DBMS supported by this Class.</p><p><code>Params</code>—This value can be an array or delimited string literal corresponding to the parameters required by <code>StoredProcName</code>. The string literal must be delimited by <code>vbNullChar</code> characters.</p><p><em>NOTE:</em> This value is passed by reference (<code>ByRef</code>) for stored procedure parameters that return values.</p><p>When <code>Has2DparamArray:=True</code> parameters passed as a two-dimensional parameter array can be updated <em>after</em> execution. For example, in Microsoft remote data management systems parameters modified by the <code>OUTPUT</code> keyword will be updated.</p><p>The 2D parameter array has the following form:</p><pre xml:space=\"preserve\">&lt;param’ name&gt;, &lt;row 0&gt;\r\n&lt;param’ value&gt;, &lt;row 0&gt;\r\n&lt;param’ name&gt;, &lt;row 1&gt;\r\n&lt;param’ value&gt;, &lt;row 1&gt;\r\n</pre><p>etc.</p><p><code>Has2DparamArray</code>—Indicates if <code>Params</code> contains a two-dimensional array. See <code>Params</code>.</p><p><code>TimeOut</code>—The number of seconds to set the <code>CommandTimeout</code> property of the ADO Command object. By default, it is set to 30 seconds.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>StoredProcRst()</code></td><td colspan=\"1\" rowspan=\"1\"><p>Executes a stored procedure against the <code>ADODB.Command</code> object and returns a read-only, forward-only ADO Recordset.</p><p>This method has the same arguments as <code>StoredProcCmd()</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>CloseRecordset()</code></td><td colspan=\"1\" rowspan=\"1\"><p>Closes the specified recordset object and sets the object to <code>Nothing</code> with the following argument:</p><p><code>RecSet</code>—The reference to the recordset object.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Disconnect()</code></td><td colspan=\"1\" rowspan=\"1\">Closes the ADO connection object.</td></tr></table><h2>The <code>&#092;inc&#092;classes&#092;FileSystem.asp</code> File</h2><p>This file contains the VBScript class, <code>clsFileSystem</code>, which handles routine calls to the file system via the <code>Scripting.FileSystemObject</code> and, because these calls are from ASP, the <code>MSWC.PermissionChecker</code> (referred to as the <a href=\"http://www.microsoft.com/windows2000/en/advanced/iis/default.asp?url=/WINDOWS2000/en/advanced/iis/htm/asp/comp3hf8.htm\" shape=\"rect\">Permission Checker Component</a> in the Windows 2000 Advanced Server documentation). This is a VBScript class (instead of a stateless set of routines) because, like <code>clsADO</code>, it is convenient to “open a connection” to a folder and “query” it several times at runtime.</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Property/Method</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ErrMsg</code></td><td colspan=\"1\" rowspan=\"1\">Gets any trappable VBScript error messages.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>FSO</code></td><td colspan=\"1\" rowspan=\"1\">Gets the <code>Scripting.FileSystemObject</code> created by the class constructor.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Permissions</code></td><td colspan=\"1\" rowspan=\"1\">Gets the <code>MSWC.PermissionChecker</code> object created by the class constructor.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>WebFileName</code></td><td colspan=\"1\" rowspan=\"1\">Gets/Sets the name of a file. No path information should be set here.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>WebFilePath</code></td><td colspan=\"1\" rowspan=\"1\">Gets/Sets the path to the file set in <code>WebFileName</code>. This string literal must end with a backslash, <code>&#092;</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>WebFileExists()</code></td><td colspan=\"1\" rowspan=\"1\">Gets the Boolean result of the test checking for the existence and/or permissions of a file with the respect to IIS. A file object must be pre-defined by setting the <code>WebFileName</code> and <code>WebFilePath</code> properties.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>WebFileObject</code></td><td colspan=\"1\" rowspan=\"1\">Gets the file object associated with the call to the <code>WebFileExists()</code> method. The implied rule here is, You cannot have a file object without first checking for its existence.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>WebFileSize</code></td><td colspan=\"1\" rowspan=\"1\">Gets the size in bytes of the file object associated with the call to the <code>WebFileExists()</code> method.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>WriteFile()</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets the Boolean result of the test for successfully writing to a text file with the argument:</p><p><code>FileString</code>—the string literal to write to the file.</p><p>A file object must be pre-defined by setting the <code>WebFileName</code> and <code>WebFilePath</code> properties. If the file does not exist, this method will create the file.</p></td></tr></table><h2>The <code>&#092;inc&#092;classes&#092;HTMLComboBox.asp</code> File</h2><p>This file contains the VBScript class, <code>clsHTMLComboBox</code>, which renders HTML <code>select</code> elements, described in Microsoft-speak as “list boxes” or “drop-down boxes.” It will be stated with pride that this method of rendering HTML was “discovered” independently and almost predates the public introduction of .NET <a href=\"http://msdn.microsoft.com/msdnmag/issues/1000/visualprog/default.aspx\" shape=\"rect\">server-side controls</a>. It is quite a reassuring feeling that Microsoft was on the same page as our little organization—although there should be some debate about the size of this page!</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Property/Method</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ClassName</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets the <code>class</code> attribute of the <code>select</code> element.</p><p>By default, the <code>class</code> attribute is not rendered in the HTML.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>DefaultSelected</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets the Boolean property that determines if the default value (<code>option</code>) of the <code>select</code> element is selected.</p><p><em>NOTE:</em> The client-side JavaScript function <code>jsGetOptionsIndex()</code> is often used instead of setting this property. See “The <code>&#092;inc&#092;routines&#092;rootData.js</code> File” below.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ID</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets the <code>id</code> attribute of the <code>select</code> element.</p><p>By default, the <code>id</code> attribute is not rendered in the HTML.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>JavaScript</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets inline JavaScript used by the <code>select</code> element.</p><p><em>EXAMPLE:</em> To add the <code>onChange</code> attribute to the <code>select</code> element, we have:</p><pre xml:space=\"preserve\">Set objCombo = new clsHTMLComboBox\r\nobjCombo.JavaScript = _\r\n    \"onChange = \"\"[your code here]\"\"\"\r\n</pre><p>You can see how we are using the old VB double-quote trick to render the quotes in HTML. You can also see how free-form this property can be which makes it very dangerous to inexperienced users.</p><p>By default, inline JavaScript is not rendered in the HTML.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Name</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets the <code>name</code> attribute of the <code>select</code> element.</p><p>By default, the <code>name</code> attribute is not rendered in the HTML.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>IsMultiSelect</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets the Boolean property that determines if this <code>select</code> element has a <code>multiple</code> attribute.</p><p>By default, the <code>name</code> attribute is not rendered in the HTML.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Recordset</code></td><td colspan=\"1\" rowspan=\"1\">Gets/Sets the ADO recordset object used to create <code>option</code> elements for the <code>select</code> element. Only the first two columns of this recordset are used. By default, the leftmost column (column 0) sets the <code>value</code> attribute of the <code>option</code> element and the second column (column 1) is displayed.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>RevColumnOrder</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets the Boolean property that determines if the column order of the recordset or array is reversed. This means that column 1 sets the <code>value</code> attribute of the <code>option</code> element and column 0 is displayed.</p><p>This property is useful for those unfortunate cases when you are not in control of the data being sent to the client from the DBMS.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Size</code></td><td colspan=\"1\" rowspan=\"1\">Gets/Sets the <code>size</code> attribute of the <code>select</code> element. By default, it is <code>1</code> (making a drop-down box); values greater than one make the list box.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Width</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets the <code>width</code> attribute of the <code>select</code> element. This will also create an inline <code>style</code> attribute setting the CSS <code>width</code> property to make sure it renders on as many browsers as possible.</p><p>By default, this property is not used and is usually ignored because of the use of the <code>ClassName</code> property.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>ValueList</code></td><td colspan=\"1\" rowspan=\"1\"><p>Gets/Sets the string literal used to create <code>option</code> elements for the <code>select</code> element. This string literal is a <code>vbNullChar</code>-delimited list in the form:</p><pre xml:space=\"preserve\">[value] &amp; vbNullChar &amp; [display text] …\r\n</pre><p>This implies that odd-number values in the list set the <code>value</code> attribute of each <code>option</code> element and even-number values are displayed. This design was chosen more for flexibility than for convenience.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>GetComboBox()</code></td><td colspan=\"1\" rowspan=\"1\">Returns an HTML string based on the properties set above. This method should only be used when the <code>Recordset</code> property is set.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>GetComboBoxValLst()</code></td><td colspan=\"1\" rowspan=\"1\">Returns an HTML string based on the properties set above. This method should only be used when the <code>ValueList</code> property is set.</td></tr></table><h2>The <code>&#092;inc&#092;classes&#092;HTMLPage.asp</code> File</h2><p>This file contains the VBScript class, <code>clsHTMLPage</code>, which renders entire HTML pages and common interface elements. This class was replaced by the <code>&#092;inc&#092;routines&#092;uiServices.asp</code> file mentioned below. This class was just not flexible enough but is mentioned here for the sake of completeness and will not be documented in detail.</p><h2>The <code>&#092;inc&#092;classes&#092;HTMLTable.asp</code> File</h2><p>This file contains the VBScript class, <code>clsHTMLTable</code>, which renders entire HTML tables. This class is the workhorse of the core and is discussed in detail in <a href=\"http://songhaysystem.com/document.php?cmd=getDoc&amp;get=4\" shape=\"rect\">Using a Generic, Stateless VBScript Object to Display Data in a Tabular Format</a>.</p><h2>The <code>&#092;inc&#092;routines&#092;appServices.asp</code> File</h2><p>This is the “web application services” file containing generic, frequently-used VBScript routines.</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Routine</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basDisplayHTML()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function truncates the text to be displayed as HTML at the specified length with arguments:</p><p><code>vString</code>—the string to truncate.</p><p><code>vZeroString</code>—the text to display when <code>vString</code> contains a zero-length string.</p><p><code>vLength</code>—the length of the string to display before characters are truncated.</p><p><em>NOTE:</em> Ellipses are appended to the end of a non-zero-length truncated string.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basGetGMTOffset()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns the Greenwich Mean Time “offset” with respect to Pacific Time. It returns 7 when Pacific Standard Time is detected and 8 when Pacific Daylight Savings Time is detected.</p><p>This function is rather useless out of the Pacific time zone. It was developed for writing <a href=\"http://www.imc.org/pdi/vcaloverview.html\" shape=\"rect\">vCalendar</a> items.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basGetMonthNames()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns a one-dimensional array of month names based on the locale settings of the web server with the following argument:</p><p><code>vAbbreviate</code>—Boolean value that indicates if the month name is to be abbreviated based on the locale settings of the web server.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basGetWeekDayNames()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns a one-dimensional array of weekday names based on the locale settings of the web server with the following arguments:</p><p><code>vAbbreviate</code>—Boolean value that indicates if the month name is to be abbreviated based on the locale settings of the web server.</p><p><code>vFirstDay</code>—Numeric value indicating the first day of the week (use these constants for readability: <code>vbUseSystemDayOfWeek</code>, <code>vbSunday</code>, <code>vbMonday</code>, <code>vbTuesday</code>, <code>vbWednesday</code>, <code>vbThursday</code>, <code>vbFriday</code>, <code>vbSaturday</code>).</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basGetWeekDate()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns a date based on these arguments:</p><p><code>vWeekDay</code>—An integer from1 to 7 corresponding to the day constants <code>vbSunday</code>, <code>vbMonday</code>, <code>vbTuesday</code>, <code>vbWednesday</code>, <code>vbThursday</code>, <code>vbFriday</code>, <code>vbSaturday</code>.</p><p><code>vWeek</code>—An integer indicating the current week on the year (usually from 1 to 52).</p><p><code>vMonth</code>—An integer indicating the current month of the year (usually from 1 to 12).</p><p><code>vYear</code>—The current four-digit year.</p><p><code>vFirstWeekDay</code>—An integer indicating the first day of the week (from 1 to 7 corresponding to the day constants mentioned above.).</p><p><em>NOTE:</em> This function assumes that the first week of the year the week in which January 1 occurs</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basGetVPath()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns the virtual path in the SCRIPT_NAME environment variable as an array or as a scalar identified by <code>vLevel</code> with arguments:</p><p><code>vLevel</code>—The level of the path to return. For example, <code>0</code> returns the file name; <code>1</code> returns the directory where the file resides.</p><p><code>vReturnArray</code>—Boolean value that determines whether to return the entire array or just a scalar indicated by <code>vLevel</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basIIf()</code></td><td colspan=\"1\" rowspan=\"1\">This function is the VBScript equivalent of <code>VBA.IIf()</code> with arguments <code>vCondition</code>, <code>vTrueResult</code> and <code>vFalseResult</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basInArray()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function searches an array for a scalar value with arguments:</p><p><code>vArray</code>—The array to be searched.</p><p><code>vItem</code>—The search scalar.</p><p><em>NOTE:</em> This converts the search scalar and each array element to strings for each search attempt.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basIsAgent()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function is a server-side browser sniffer with argument <code>vAgent</code> which a string indicating the browser to detect. This is the latest list of targets:</p><p><code>Gecko 5x</code>—Mozilla 5 and above.</p><p><code>MSIE 4x</code>—MS Internet Explorer 4 and above.</p><p><code>MSIE 5x</code>—MS Internet Explorer 5 and above.</p><p><code>Netscape 4x</code>—Netscape 4 and above.</p><p><em>NOTE:</em> Our client-side browser sniffer (<code>rootSniffer.js</code>) from <a href=\"http://www.webreference.com/tools/browser/javascript.html\" shape=\"rect\">webreference.com</a> should be used for more accurate sniffing.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basLogonUser()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function reads the <code>LOGON_USER</code> environment variable and returns a scalar containing the domain name or the user name—or the entire environment variable. The <code>vItem</code> argument determines what is returned:</p><p>When <code>vItem=\"domain\"</code> the domain name is returned.</p><p>When <code>vItem=\"user\"</code> the user name is returned.</p><p>All other values return the unaltered contents of the <code>LOGON_USER</code> environment variable.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basRandomNum()</code></td><td colspan=\"1\" rowspan=\"1\">This function returns a random integer from <code>LowerLimit</code> to <code>UpperLimit</code>. The <code>OmitList</code> argument, a comma-delimited list of integers, is used to prevent random values matching one of the integers in the list from being returned.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basDelaySec()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function delays code execution for the amount (in seconds) indicated by <code>vSeconds</code>.</p><p>This function is most useful when the <code>Response.Buffer</code> and <code>Response.Flush</code> features of ASP are used.</p></td></tr></table><h2>The <code>&#092;inc&#092;routines&#092;rootData.js</code> File</h2><p>This is the “root” file of client-side JavaScript routines that handle generic data binding and validation for web-based data editing forms.</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Routine</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsGetOptionsIndex()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function returns an integer value indicating the index of one of the <code>option</code> objects in a <code>select</code> object with arguments:</p><p><code>objSelect</code>—The <code>select</code> object as seen by the DOM of the web browser.</p><p><code>vValue_data</code>—The value of the <code>option</code> object in the <code>select</code> object being “bound.”</p><p>This data binding function is essentially used to set the <code>selectedIndex</code> property of the <code>select</code> object.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsGetRadioValue()</code></td><td colspan=\"1\" rowspan=\"1\">This JavaScript function returns the value of the checked radio button in an array of radio buttons with the argument <code>objRadio</code>, the input object of <code>type=radio</code> as seen by the DOM.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsGetWildCard()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function concatenates the wildcard character (<code>vWildCard</code>) of the DBMS to a search string (<code>vString</code>). The concatenation is determined by a code (<code>vCode</code>) where:</p><p><code>*</code> indicates “containing.”</p><p><code>=*</code> indicates “starting with.”</p><p><code>*=</code> indicates “ending with.”</p><p><code>=</code> indicates “exact.”</p><p>This function is made to be a part of a search form.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsIsEmailValid()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function returns a Boolean value, testing the validity of email addresses with arguments:</p><p><code>vFormName</code>—The name of form containing the email address <code>input</code> object.</p><p><code>objElement</code>—The email address <code>input</code> object.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsIsNotComplete()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function returns a Boolean value, testing for text entered in an <code>input</code> object with arguments:</p><p><code>objElement</code>—The <code>input</code> object being tested.</p><p><code>vMsg</code>—The message to pop up if the text field is not completed (empty).</p><p>If the text field is not complete, this function returns <code>true</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsIsNotNumeric()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function returns a Boolean value, testing for a numeric value entered in an <code>input</code> object. It has the same arguments as <code>jsIsNotComplete()</code>.</p><p>If the value entered is not numeric, this function returns <code>true</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsIsNotSelected()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function returns a Boolean value, testing for an item selected in an <code>input</code> object where <code>type=radio</code> or an item selected other than the default of the <code>select</code> object.</p><p>It has the same arguments as <code>jsIsNotComplete()</code> where <code>objElement</code> is the radio or drop-down list box object being tested.</p><p>If the item is not selected, this function returns <code>true</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsIsTextConfirmed()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function returns a Boolean value, testing for identical values entered in two <code>input</code> objects of type <code>text</code> with arguments:</p><p><code>objElement1</code>—the first input element to test.</p><p><code>objElement2</code>—the second input element to test.</p><p><code>vMsg</code>—The message to pop up if the text fields do not contain the same value.</p><p>If the text fields do not contain the same value, this function returns <code>true</code>.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsIsTextLength()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function returns a Boolean value, testing for the length of text entries into <code>input</code> (<code>type=text</code>) and <code>textarea</code> objects (<code>objElement</code>) against a maximum value (<code>vMaxLength</code>).</p><p>If the text entered exceeds the maximum value, this function returns <code>false</code> and pops up an error message (<code>vMsg</code>).</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>jsIsUniqueOption()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This JavaScript function returns a Boolean value, testing for unique <code>option</code> values selected in a multi-select list with areguments:</p><p><code>objSelect</code>—The <code>select</code> object to test.</p><p><code>vValue_data</code>—The value to use in the test.</p><p>If the value is unique, this function returns <code>true</code>.</p></td></tr></table><h2>The <code>&#092;inc&#092;routines&#092;rootDates.js</code> File</h2><p>This is the “root” file of client-side JavaScript routines that handle a client-side date picker. This date picker is still under development and will be documented in a future publication.</p><h2>The <code>&#092;inc&#092;routines&#092;rootMenu.js</code> File</h2><p>This JavaScript comes from Macromedia’s Andy Finnell and is used by Fireworks to make drop-down, hierarchical menus. This is another “experimental” item and may be documented later.</p><h2>The <code>&#092;inc&#092;routines&#092;rootSniffer.js</code> File</h2><p>Our client-side JavaScript browser sniffer (<code>rootSniffer.js</code>) from <a href=\"http://www.webreference.com/tools/browser/javascript.html\" shape=\"rect\">webreference.com</a>.</p><h2>The <code>&#092;inc&#092;routines&#092;stringServices.asp</code> File</h2><p>This VBScript file contains string handling routines. This, the oldest file of the core, was translated out of Visual Basic 6.x and 4.x (before that, translated out of Access 97!). Many of the string handling functions were removed as Microsoft improved upon VB, VBA and VBScript. Many more functions should be replaced since the advent of Regular Expressions in VBScript (<a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnclinic/html/scripting051099.asp\" shape=\"rect\">evidently</a> introduced around 1999).</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Routine</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basGetCharPos()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns the character position of the first character in the search string (<code>argChars</code>) within the string being searched (<code>argStr</code>).</p><p>So far, this function is very similar to <code>Instr()</code>. However, the <code>argIterations</code> argument can be used to find the <code>n</code><sup>th</sup> occurrence of the search string.</p><p>If <code>argIterations=0</code> then the position of the last occurrence of <code>argChars</code> is returned.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basGetDigits()</code></td><td colspan=\"1\" rowspan=\"1\">This function returns Arabic numerals out of and will return “periods” (assumed to decimal points) if <code>argIncludeDecimal=true</code>.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basGetSubStr()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns a substring out of <code>argStr</code> based on combinations of the arguments:</p><p><code>argStartCol</code>—The starting column of fix-width text to extract. This column is assumed to be column <code>1</code>.</p><p><code>argEndCol</code>—The ending column of fix-width text to extract. This function extracts what is <em>between</em> the starting and ending columns.</p><p><code>argStartChar</code>—The starting character of text to extract.</p><p><code>argEndChar</code>—The ending character of text to extract.</p><p>These arguments can be used in any combination allowing some flexibility and some primitive form of pattern matching. However, this function is to be considered obsolete for those who can use regular expressions. When a particular parameter needs to be “turned off,” use the following default values:</p><pre xml:space=\"preserve\">argStartCol = 0\r\nargEndCol = 0\r\nargStartChar = vbNullString\r\nargEndChar = vbNullString\r\n</pre></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basSearchLine()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function returns the line containing <code>argSearchStr</code>, where “line” in the name of the function implies that <code>argStr</code> contains several <code>vbCrLf</code> characters.</p><p>In other words, this function responds to the request saying, “Show me the entire line of text containing the search string.”</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>basInsCrLf()</code></td><td colspan=\"1\" rowspan=\"1\"><p>This function inserts <code>vbCrLf</code> characters at the length (or column) specified by <code>argLineLen</code> in <code>argInpString</code>.</p><p>This function was very useful back in the days when lines of text in email messages needed to be a certain length.</p></td></tr></table><h2>The <code>&#092;inc&#092;routines&#092;uiServices.asp</code> File</h2><p>This VBScript file contains “user interface services” common to many web sites. This is sort of a “smart” include file that contains one subroutine, <code>basIncludeHTMLBlock()</code> that takes two parameters: <code>vBlockName</code> and <code>vBlockValue</code>. The first parameter calls a particular block of HTML and the second parameter passes content that changes from call to call. The following table summarizes some the common HTML blocks:</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Block Name</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>!BOF_begin</code></td><td colspan=\"1\" rowspan=\"1\">Returns the “beginning of HTML file” block. This contains the DTD and the VS.NET, <code>VS_TARGETSCHEMA</code> tag. The target schema tag makes it easy to maintain the <code>uiServices.asp</code> itself because it provides Intellisense and other VS.NET features. So far, not much “service” for the “user.”</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>!LINK_css</code></td><td colspan=\"1\" rowspan=\"1\">Returns a <code>link</code> tag calling an external CSS file. By default, it will call <code>./root.css</code>. If <code>vBlockValue</code> is not a zero-length string then it must be relative or absolute path to an external CSS file.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>!META</code></td><td colspan=\"1\" rowspan=\"1\">Returns <code>meta</code> tags used by search engines. This routine makes all web pages of a particular site have identical <code>meta</code> identification tags.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>!SCRIPT_js</code></td><td colspan=\"1\" rowspan=\"1\">Returns a <code>script</code> tag calling an external JavaScript file. By default, it will call <code>./root.js</code>. If <code>vBlockValue</code> is not a zero-length string then it must be relative or absolute path to an external JavaScript file.</td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>!BOF_end</code></td><td colspan=\"1\" rowspan=\"1\"><p>Returns the end of a “beginning of HTML file” block. This contains <code>title</code> elements, the end <code>head</code> tag and the beginning <code>body</code> tag.</p><p>When an “error page” is called from ASP code this HTML block is useful in making a complete web page. See below for more details.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>Page</code></td><td colspan=\"1\" rowspan=\"1\"><p>Returns a complete HTML page by calling this subroutine recursively. This is used mostly for ASP “error pages” so <code>vBlockValue</code> usually contains an HTML-formatted error message.</p><p>This kind of call should not be made from an ASP page if the calling page is already rendering HTML.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><code>!EOF</code></td><td colspan=\"1\" rowspan=\"1\">Returns the ending tags of an HTML page.</td></tr></table><p>Our designs usually have blocks like <code>Header</code> or <code>Footer</code>. Clearly, the intention here is to centralize the handling of look and feel for web sites—even when errors are being handled. A page like this is easier to maintain with Visual Studio.NET than the VBScript class <code>HTMLPage.asp</code> file mentioned earlier. In fact, a web designer can create that wonderful header or footer in <em>static</em> HTML (like in Dreamweaver or even FrontPage) only to have it copied and pasted into a <em>dynamic</em> page like this one.</p><h1>Free Samples and a Fond Farewell</h1><p>The publishing of this document in public on the Internet marks a fond farewell to an era of ASP. This lengthy summary (which is 16 pages in Microsoft Word) records years and years of pain, misery and triumph. Now we move on to ASP.NET! Microsoft promises that this new technology will not bring as much suffering as ASP classic. In fact, the code is supposed to document itself, making pages like these obsolete.</p><table class=\"docTable\"><tr><th colspan=\"1\" rowspan=\"1\">Download</th><th colspan=\"1\" rowspan=\"1\">Description</th></tr><tr><td colspan=\"1\" rowspan=\"1\"><a href=\"samples/ASPKit/rasxASP.zip\" shape=\"rect\">rasxASP.zip</a></td><td colspan=\"1\" rowspan=\"1\">The <code>&#092;inc</code> folder and the files mentioned above.</td></tr></table>",
    "CreateDate": "2003-03-29T17:57:23.0000000",
    "EndDate": "1899-12-30T00:00:00.0000000",
    "ModificationDate": "2005-04-26T19:06:00.2570000",
    "DocumentId": "22",
    "PrevFragmentId": "-1",
    "NextFragmentId": "-1",
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "27",
    "FragmentName": null,
    "FragmentDisplayName": "Rants of a Robert Penner Flash MX Disciple",
    "SortOrdinal": null,
    "ItemChar": "<h1>Rants of a Robert Penner Flash MX Disciple</h1>\r\n<p> <a href=\"http://www.amazon.com/exec/obidos/ISBN=0072223561/thekintespacec00A/\"><img alt=\"Buy this Book at Amazon.com!\" border=\"0\" src=\"http://kintespace.com/bitmaps/blog_penner_flashmx_book.jpg\" style=\"float:left;margin:16px;margin-top:0;\" /></a>So Robert Penner looks like just like any other young man from Canada, tracing his lineage back to Europe. He’s looks like just another skinny kid—nothing like Martin Luther. But the man is inspiring. I am a self-declared disciple of the <em>philosophy</em> outlined in the first chapter of his book, <a href=\"http://www.amazon.com/exec/obidos/ISBN=0072223561/thekintespacec00A/\" title=\"Buy this book at Amazon.com\"><em>Programming Macromedia Flash MX</em></a>. It is in this context that I make my declarations:</p>\r\n<h2>Realistically Maintainable Flash MX Sites</h2>\r\n<p>I want to build realistically maintainable Flash MX presentations/applications. I use the words “realistically maintainable” to encapsulate my frustration with previous versions of Flash, which were really designed for a determined refugee from Adobe Illustrator, Quark XPress or Macromedia Director (or, even Authorware). Such people worked much harder than I ever voluntarily would to publish their compelling motions and interactions on the web.</p>\r\n<p>These people may have been paid very well to sift through pages and pages—and stages and stages—of <em>static</em> content, so why should working in Flash be any different? When I see a Flash Movie file full of blank frames, I see hard such work. When I see a Movie with hand-built motion tweens, I see more hard work. When I don’t see a Flash SWF file because the browser I happen to be using totally sucks, I see a lot of hard work down the drain. So as much as I would like to be thought of as a hip, cool interactive web designer wearing Elvis Costello glasses, I have steadfastly avoided investing my web life in Flash until I was able to achieve some semblance of the following ideals:</p>\r\n<h3>ActionScript Automation of Designs Previously “Hand Built”</h3>\r\n<p>I want to write code that automates things in Flash that would take way too long to do by hand. As my father (and my father’s father) says, “You work work: don’t let work work you!” Automation by ActionScript programming is the key to working smarter, not harder in Flash. Version 5 of Flash was the first time this key concept was taken seriously. Flash MX takes this even more seriously. The foundation of my toolkit consists of examples of how ActionScript can automate many of the tedious tasks that had to be done “by hand” in Flash (using the Timeline). These examples include:</p>\r\n<ul>\r\n  <li>Slowing down, speeding up and/or delaying perceived Movie Clip playback without having to insert blank frames by hand.</li>\r\n  <li>Creating a simple motion tween without building a tween by hand.</li>\r\n  <li>Preloading and displaying JPEG images without having to import them into Flash by hand.</li>\r\n  <li>Fading one Movie Clip into another without building a tween by hand.</li>\r\n  <li>Using a Movie Clip as button to simultaneously simplify the design and increase the complexity of interactions.</li>\r\n  <li>Creating complex motion tween thanks to kick-ass code from <a href=\"http://robertpenner.com/\">Robert Penner</a>.</li>\r\n</ul>\r\n<h3>Working with a Mature Design Time Interface</h3>\r\n<p>I want to write my Flash ActionScript code in an editor as “good” as Microsoft Visual Studio .NET. Knowing that billions of U.S. dollars were behind VS.NET, I will settle for an editor as functional as Macromedia HomeSite, originally from those Allaire folks that gave us Cold Fusion—and now <a href=\"http://www.macromedia.com/software/coldfusion/\">Macromedia’s Cold Fusion MX</a>. Macromedia Dreamweaver MX is very, very close to this ideal but I still wish for the following:</p>\r\n<ul>\r\n  <li>To be able to delete a line of code with a keyboard shortcut without having to resort to an extension.</li>\r\n  <li>A more sophisticated Find/Change feature that at least matches the one in Macromedia HomeSite.</li>\r\n  <li>The ability to switch focus from one pane to another with “obvious” keyboard commands.</li>\r\n</ul>\r\n<div align=\"center\">\r\n  <img alt=\"ActionScript Panel Trouble\" height=\"417\" src=\"http://songhaysystem.com/bitmaps/FlashToolkit/ActionsPanelProblem.gif\" width=\"533\" /></div>\r\n<p>The code editor in Flash MX is promising beta material—but this thing can’t do simple things like preserving indenting after a properly placed carriage return and returning focus back to the editor while switching among applications. I also cannot stand having to reposition the Library window every time I open it. I understand that maintaining state in these user interfaces must be extremely complex. So I don’t expect much relief outside of Microsoft soon. Hey, Microsoft is good at <em>something</em> folks—not even Darth Vader is 100% evil. I think they did a swell job bringing the document editing experience in Visual Studio and in Office to the masses—and, when it comes to Knowledge Base documentation and online help, they have no serious rivals. Macromedia is years behind and/or one acquisition away from catching up.</p>\r\n<h3>Implementing Data-Centric Solutions for Quick, Easy Ongoing Maintenance</h3>\r\n<p>I want to implement more data-centric solutions in Flash so that ongoing maintenance of my Flash-based “web parts” will be easier. Now that “real” classes can be built in Flash MX, I have a tool that I can really, really use. Coupled with the <code>#include</code> directive (introduced in Flash 5), I can create and edit classes in Dreamweaver MX and “register” them with movie clips via the <strong>Linkage…</strong> command in the Library. I am now able to hobble something together similar to a central “include folder” on a web server where common routines and classes are kept for all web applications.</p>\r\n<p>Just one version earlier, in Flash 5, you might have blown 40-something bucks on <a href=\"http://dragslidefade.com/\">Brendan Dawes</a> rapping to you about creating empty movie clips and writing code <em>per instance</em> of said empty movie clip. In Flash MX, using blank movie clips packed with code is not quite out of the picture but, using class definitions between <code>#initclip</code> and <code>#endinitclip</code> directives, you have the option of writing that code once (for all instances) and storing it in a Library (to be called from the Library at design time or <a href=\"http://www.macromedia.com/support/flash/ts/documents/shared_libraries.htm\">runtime</a>).</p>\r\n<p>Way down here in this paragraph, you might notice that I have not mentioned XML, talking about data-centric solutions. Well, flippantly speaking, I am more impressed with the <code>loadVars()</code> object (method?) new to Flash MX (so new as to not be documented in the application help files but can be <a href=\"http://www.macromedia.com/support/flash/action_scripts/actionscript_dictionary/actionscript_dictionary427.html\">found online</a>) than the “processor intensive” XML reader (is it really implementing SAX?). This version of the toolkit, however, does come with an XML-related item—in fact, it is an <em>XHTML</em> item, demonstrating the multi-purposing of data (see below).</p>\r\n<h2>Passing through the Door’s of Penner Perception</h2>\r\n<p>Thanks to the first six chapters of <a href=\"http://www.amazon.com/exec/obidos/ISBN=0072223561/thekintespacec00A/\" title=\"Buy this book at Amazon.com\"><em>Programming Macromedia Flash MX</em></a> I have seen the light! There are some key concepts that I glean from the material that I need to discuss immediately:</p>\r\n<h3>ActionScript Classes</h3>\r\n<p>Lines of code that define a Flash MX ActionScript class begins with setting a variable, your class name, equal to an anonymous function. It is good programming practice to attach your class explicitly to the <code>_global</code> object with the following form:</p>\r\n<pre xml:space=\"preserve\">\r\n_global.MyClass = function(){\r\n//constructor function statements...\r\n\n                    \r\n</pre>\r\n<p>This anonymous function is the <strong>constructor</strong> of the class. Because the constructor function is of the <code>Function()</code> object, it contains the <code>prototype</code> property (of type <code>'object'</code>). The <code>prototype</code> property is then used to define additional anonymous functions that serve as the <strong>methods</strong> of the ActionScript class. This is why the <code>prototype</code> property is often regarded as “the glue” that holds a class together as it allows a set of anonymous functions to be grouped together under one constructor function. Following the form above, we have:</p>\r\n<pre xml:space=\"preserve\">\r\nMyClass.prototype.myMethod = function(){\r\n//method function statements...\r\n\n                    \r\n</pre>\r\n<p>where the call to <code>MyClass.prototype.myMethod</code> shows our prototype property literally “gluing” <code>myMethod</code> to <code>MyClass</code>.</p>\r\n<p>The <strong>properties</strong> of an ActionScript class “formally” come from anonymous functions of the <code>prototype</code> property designed to be “getter/setter” methods that are used in the <code>prototype.addProperty()</code> method. “Informal” class properties are defined by badly scoped variables and the <code>this.propertyName</code> syntax. ActionScript does not protect what can be called “private” properties as of this writing.</p>\r\n<h3>The _global Object</h3>\r\n<p>Flash MX native classes and instantiated objects are stored in the <code>_global</code> object. The following table summarizes the contents of the <code>_global</code> object:</p>\r\n<table id=\"CleanXhtmlTable_EFBAAAAA3\">\r\n  <tr>\r\n    <td><strong>Flash 5 Classes</strong></td>\r\n    <td><strong>Flash 5 Objects</strong></td>\r\n    <td><strong>New Flash MX Classes</strong></td>\r\n    <td><strong>New Flash MX Objects</strong></td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>Array</code>\r\n    </td>\r\n    <td>\r\n      <code>Cookie</code>\r\n    </td>\r\n    <td>\r\n      <code>Button</code>\r\n    </td>\r\n    <td>\r\n      <code>Accessibility</code>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>Boolean</code>\r\n    </td>\r\n    <td>\r\n      <code>Key</code>\r\n    </td>\r\n    <td>\r\n      <code>Camera</code>\r\n    </td>\r\n    <td>\r\n      <code>ASBroadcaster</code>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>Color</code>\r\n    </td>\r\n    <td>\r\n      <code>Math</code>\r\n    </td>\r\n    <td>\r\n      <code>Function</code>\r\n    </td>\r\n    <td>\r\n      <code>CustomActions</code>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>Date</code>\r\n    </td>\r\n    <td>\r\n      <code>Mouse</code>\r\n    </td>\r\n    <td>\r\n      <code>LoadVars</code>\r\n    </td>\r\n    <td>\r\n      <code>Stage</code>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>MovieClip</code>\r\n    </td>\r\n    <td>\r\n      <code>Selection</code>\r\n    </td>\r\n    <td>\r\n      <code>LocalConnection</code>\r\n    </td>\r\n    <td>\r\n      <code>System</code>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>Number</code>\r\n    </td>\r\n    <td> </td>\r\n    <td>\r\n      <code>Microphone</code>\r\n    </td>\r\n    <td>\r\n      <code>System.capabilities</code>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>Object</code>\r\n    </td>\r\n    <td> </td>\r\n    <td>\r\n      <code>NetConnection</code>\r\n    </td>\r\n    <td>\r\n      <code>System.security</code>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>Sound</code>\r\n    </td>\r\n    <td> </td>\r\n    <td>\r\n      <code>NetStream</code>\r\n    </td>\r\n    <td> </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>String</code>\r\n    </td>\r\n    <td> </td>\r\n    <td>\r\n      <code>SharedObject</code>\r\n    </td>\r\n    <td> </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>XML</code>\r\n    </td>\r\n    <td> </td>\r\n    <td>\r\n      <code>System.Product</code>\r\n    </td>\r\n    <td> </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>XMLNode</code>\r\n    </td>\r\n    <td> </td>\r\n    <td>\r\n      <code>TextField</code>\r\n    </td>\r\n    <td> </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>XMLSocket</code>\r\n    </td>\r\n    <td> </td>\r\n    <td>\r\n      <code>TextFormat</code>\r\n    </td>\r\n    <td> </td>\r\n  </tr>\r\n  <tr>\r\n    <td> </td>\r\n    <td> </td>\r\n    <td>\r\n      <code>Video</code>\r\n    </td>\r\n    <td> </td>\r\n  </tr>\r\n</table>\r\n<p>The implication is that:</p>\r\n<pre xml:space=\"preserve\">\r\ntrace(_global.Array == Array)/*returns true*/;\r\n                  \r\n</pre>\r\n<p>or</p>\r\n<pre xml:space=\"preserve\">\r\ntrace(_global.Stage == Stage)/*returns true*/;\r\n                  \r\n</pre>\r\n<p>It may be good programming practice to “fully qualify” Flash classes and objects in your code to remember just how important the <code>_global</code> object is.</p>\r\n<h3>The Difference between Flash Objects and Classes</h3>\r\n<p>The Flash objects summarized in the table differ from built-in classes in that they do not have a <code>prototype</code> property:</p>\r\n<pre xml:space=\"preserve\">\r\ntrace(_global.Math.prototype)/*returns undefined*/;\r\n                  \r\n</pre>\r\n<p>or</p>\r\n<pre xml:space=\"preserve\">\r\ntrace(_global.Stage.prototype)/*returns undefined*/;\r\n                  \r\n</pre>\r\n<p>This implies that Flash objects do not have constructor functions. This also implies that these objects do not necessarily inherit from the <code>Object()</code> object. We can suggest that this is the case for Flash classes by using the <a href=\"http://www.macromedia.com/support/flash/action_scripts/actionscript_dictionary/actionscript_dictionary608.html\">__proto__</a> property in an equality:</p>\r\n<pre xml:space=\"preserve\">\r\nObject.method = function(){\r\nreturn this.prototype;\r\n\n                    \r\nFunction.method = function(){\r\nreturn this.prototype.__proto__;\r\n\n                    \r\ntrace(Object.method() == Function.method())/*returns true*/;\r\n                  \r\n</pre>\r\n<p>The <code>return</code> statement of <code>Function.method()</code> shows that it contains some “unknown” instantiated object, its <code>__proto__</code> property. When <code>trace()</code> returns true we may conclude that the <code>prototype</code> property of <code>Object</code> and the <code>__proto__</code> property of this “unknown” instantiated object of <code>Function</code> are pointing to the same place in memory. It would follow that when <code>this.prototype.__proto__ != undefined</code> inside our method, we have discovered <a href=\"http://www.quantumwave.com/flash/inheritance.html\">evidence of inheritance</a>.</p>",
    "ItemText": "<h1>Rants of a Robert Penner Flash MX Disciple</h1>\r\n<p> <a href=\"http://www.amazon.com/exec/obidos/ISBN=0072223561/thekintespacec00A/\"><img alt=\"Buy this Book at Amazon.com!\" border=\"0\" src=\"http://kintespace.com/bitmaps/blog_penner_flashmx_book.jpg\" style=\"float:left;margin:16px;margin-top:0;\" /></a>So Robert Penner looks like just like any other young man from Canada, tracing his lineage back to Europe. He’s looks like just another skinny kid—nothing like Martin Luther. But the man is inspiring. I am a self-declared disciple of the <em>philosophy</em> outlined in the first chapter of his book, <a href=\"http://www.amazon.com/exec/obidos/ISBN=0072223561/thekintespacec00A/\" title=\"Buy this book at Amazon.com\"><em>Programming Macromedia Flash MX</em></a>. It is in this context that I make my declarations:</p>\r\n<h2>Realistically Maintainable Flash MX Sites</h2>\r\n<p>I want to build realistically maintainable Flash MX presentations/applications. I use the words “realistically maintainable” to encapsulate my frustration with previous versions of Flash, which were really designed for a determined refugee from Adobe Illustrator, Quark XPress or Macromedia Director (or, even Authorware). Such people worked much harder than I ever voluntarily would to publish their compelling motions and interactions on the web.</p>\r\n<p>These people may have been paid very well to sift through pages and pages—and stages and stages—of <em>static</em> content, so why should working in Flash be any different? When I see a Flash Movie file full of blank frames, I see hard such work. When I see a Movie with hand-built motion tweens, I see more hard work. When I don’t see a Flash SWF file because the browser I happen to be using totally sucks, I see a lot of hard work down the drain. So as much as I would like to be thought of as a hip, cool interactive web designer wearing Elvis Costello glasses, I have steadfastly avoided investing my web life in Flash until I was able to achieve some semblance of the following ideals:</p>\r\n<h3>ActionScript Automation of Designs Previously “Hand Built”</h3>\r\n<p>I want to write code that automates things in Flash that would take way too long to do by hand. As my father (and my father’s father) says, “You work work: don’t let work work you!” Automation by ActionScript programming is the key to working smarter, not harder in Flash. Version 5 of Flash was the first time this key concept was taken seriously. Flash MX takes this even more seriously. The foundation of my toolkit consists of examples of how ActionScript can automate many of the tedious tasks that had to be done “by hand” in Flash (using the Timeline). These examples include:</p>\r\n<ul>\r\n  <li>Slowing down, speeding up and/or delaying perceived Movie Clip playback without having to insert blank frames by hand.</li>\r\n  <li>Creating a simple motion tween without building a tween by hand.</li>\r\n  <li>Preloading and displaying JPEG images without having to import them into Flash by hand.</li>\r\n  <li>Fading one Movie Clip into another without building a tween by hand.</li>\r\n  <li>Using a Movie Clip as button to simultaneously simplify the design and increase the complexity of interactions.</li>\r\n  <li>Creating complex motion tween thanks to kick-ass code from <a href=\"http://robertpenner.com/\">Robert Penner</a>.</li>\r\n</ul>\r\n<h3>Working with a Mature Design Time Interface</h3>\r\n<p>I want to write my Flash ActionScript code in an editor as “good” as Microsoft Visual Studio .NET. Knowing that billions of U.S. dollars were behind VS.NET, I will settle for an editor as functional as Macromedia HomeSite, originally from those Allaire folks that gave us Cold Fusion—and now <a href=\"http://www.macromedia.com/software/coldfusion/\">Macromedia’s Cold Fusion MX</a>. Macromedia Dreamweaver MX is very, very close to this ideal but I still wish for the following:</p>\r\n<ul>\r\n  <li>To be able to delete a line of code with a keyboard shortcut without having to resort to an extension.</li>\r\n  <li>A more sophisticated Find/Change feature that at least matches the one in Macromedia HomeSite.</li>\r\n  <li>The ability to switch focus from one pane to another with “obvious” keyboard commands.</li>\r\n</ul>\r\n<div align=\"center\">\r\n  <img alt=\"ActionScript Panel Trouble\" height=\"417\" src=\"http://songhaysystem.com/bitmaps/FlashToolkit/ActionsPanelProblem.gif\" width=\"533\" /></div>\r\n<p>The code editor in Flash MX is promising beta material—but this thing can’t do simple things like preserving indenting after a properly placed carriage return and returning focus back to the editor while switching among applications. I also cannot stand having to reposition the Library window every time I open it. I understand that maintaining state in these user interfaces must be extremely complex. So I don’t expect much relief outside of Microsoft soon. Hey, Microsoft is good at <em>something</em> folks—not even Darth Vader is 100% evil. I think they did a swell job bringing the document editing experience in Visual Studio and in Office to the masses—and, when it comes to Knowledge Base documentation and online help, they have no serious rivals. Macromedia is years behind and/or one acquisition away from catching up.</p>\r\n<h3>Implementing Data-Centric Solutions for Quick, Easy Ongoing Maintenance</h3>\r\n<p>I want to implement more data-centric solutions in Flash so that ongoing maintenance of my Flash-based “web parts” will be easier. Now that “real” classes can be built in Flash MX, I have a tool that I can really, really use. Coupled with the <code>#include</code> directive (introduced in Flash 5), I can create and edit classes in Dreamweaver MX and “register” them with movie clips via the <strong>Linkage…</strong> command in the Library. I am now able to hobble something together similar to a central “include folder” on a web server where common routines and classes are kept for all web applications.</p>\r\n<p>Just one version earlier, in Flash 5, you might have blown 40-something bucks on <a href=\"http://dragslidefade.com/\">Brendan Dawes</a> rapping to you about creating empty movie clips and writing code <em>per instance</em> of said empty movie clip. In Flash MX, using blank movie clips packed with code is not quite out of the picture but, using class definitions between <code>#initclip</code> and <code>#endinitclip</code> directives, you have the option of writing that code once (for all instances) and storing it in a Library (to be called from the Library at design time or <a href=\"http://www.macromedia.com/support/flash/ts/documents/shared_libraries.htm\">runtime</a>).</p>\r\n<p>Way down here in this paragraph, you might notice that I have not mentioned XML, talking about data-centric solutions. Well, flippantly speaking, I am more impressed with the <code>loadVars()</code> object (method?) new to Flash MX (so new as to not be documented in the application help files but can be <a href=\"http://www.macromedia.com/support/flash/action_scripts/actionscript_dictionary/actionscript_dictionary427.html\">found online</a>) than the “processor intensive” XML reader (is it really implementing SAX?). This version of the toolkit, however, does come with an XML-related item—in fact, it is an <em>XHTML</em> item, demonstrating the multi-purposing of data (see below).</p>\r\n<h2>Passing through the Door’s of Penner Perception</h2>\r\n<p>Thanks to the first six chapters of <a href=\"http://www.amazon.com/exec/obidos/ISBN=0072223561/thekintespacec00A/\" title=\"Buy this book at Amazon.com\"><em>Programming Macromedia Flash MX</em></a> I have seen the light! There are some key concepts that I glean from the material that I need to discuss immediately:</p>\r\n<h3>ActionScript Classes</h3>\r\n<p>Lines of code that define a Flash MX ActionScript class begins with setting a variable, your class name, equal to an anonymous function. It is good programming practice to attach your class explicitly to the <code>_global</code> object with the following form:</p>\r\n<pre xml:space=\"preserve\">\r\n_global.MyClass = function(){\r\n//constructor function statements...\r\n\n                    \r\n</pre>\r\n<p>This anonymous function is the <strong>constructor</strong> of the class. Because the constructor function is of the <code>Function()</code> object, it contains the <code>prototype</code> property (of type <code>'object'</code>). The <code>prototype</code> property is then used to define additional anonymous functions that serve as the <strong>methods</strong> of the ActionScript class. This is why the <code>prototype</code> property is often regarded as “the glue” that holds a class together as it allows a set of anonymous functions to be grouped together under one constructor function. Following the form above, we have:</p>\r\n<pre xml:space=\"preserve\">\r\nMyClass.prototype.myMethod = function(){\r\n//method function statements...\r\n\n                    \r\n</pre>\r\n<p>where the call to <code>MyClass.prototype.myMethod</code> shows our prototype property literally “gluing” <code>myMethod</code> to <code>MyClass</code>.</p>\r\n<p>The <strong>properties</strong> of an ActionScript class “formally” come from anonymous functions of the <code>prototype</code> property designed to be “getter/setter” methods that are used in the <code>prototype.addProperty()</code> method. “Informal” class properties are defined by badly scoped variables and the <code>this.propertyName</code> syntax. ActionScript does not protect what can be called “private” properties as of this writing.</p>\r\n<h3>The _global Object</h3>\r\n<p>Flash MX native classes and instantiated objects are stored in the <code>_global</code> object. The following table summarizes the contents of the <code>_global</code> object:</p>\r\n<table id=\"CleanXhtmlTable_EFBAAAAA3\">\r\n  <tr>\r\n    <td><strong>Flash 5 Classes</strong></td>\r\n    <td><strong>Flash 5 Objects</strong></td>\r\n    <td><strong>New Flash MX Classes</strong></td>\r\n    <td><strong>New Flash MX Objects</strong></td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>Array</code>\r\n    </td>\r\n    <td>\r\n      <code>Cookie</code>\r\n    </td>\r\n    <td>\r\n      <code>Button</code>\r\n    </td>\r\n    <td>\r\n      <code>Accessibility</code>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>Boolean</code>\r\n    </td>\r\n    <td>\r\n      <code>Key</code>\r\n    </td>\r\n    <td>\r\n      <code>Camera</code>\r\n    </td>\r\n    <td>\r\n      <code>ASBroadcaster</code>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>Color</code>\r\n    </td>\r\n    <td>\r\n      <code>Math</code>\r\n    </td>\r\n    <td>\r\n      <code>Function</code>\r\n    </td>\r\n    <td>\r\n      <code>CustomActions</code>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>Date</code>\r\n    </td>\r\n    <td>\r\n      <code>Mouse</code>\r\n    </td>\r\n    <td>\r\n      <code>LoadVars</code>\r\n    </td>\r\n    <td>\r\n      <code>Stage</code>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>MovieClip</code>\r\n    </td>\r\n    <td>\r\n      <code>Selection</code>\r\n    </td>\r\n    <td>\r\n      <code>LocalConnection</code>\r\n    </td>\r\n    <td>\r\n      <code>System</code>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>Number</code>\r\n    </td>\r\n    <td> </td>\r\n    <td>\r\n      <code>Microphone</code>\r\n    </td>\r\n    <td>\r\n      <code>System.capabilities</code>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>Object</code>\r\n    </td>\r\n    <td> </td>\r\n    <td>\r\n      <code>NetConnection</code>\r\n    </td>\r\n    <td>\r\n      <code>System.security</code>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>Sound</code>\r\n    </td>\r\n    <td> </td>\r\n    <td>\r\n      <code>NetStream</code>\r\n    </td>\r\n    <td> </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>String</code>\r\n    </td>\r\n    <td> </td>\r\n    <td>\r\n      <code>SharedObject</code>\r\n    </td>\r\n    <td> </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>XML</code>\r\n    </td>\r\n    <td> </td>\r\n    <td>\r\n      <code>System.Product</code>\r\n    </td>\r\n    <td> </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>XMLNode</code>\r\n    </td>\r\n    <td> </td>\r\n    <td>\r\n      <code>TextField</code>\r\n    </td>\r\n    <td> </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <code>XMLSocket</code>\r\n    </td>\r\n    <td> </td>\r\n    <td>\r\n      <code>TextFormat</code>\r\n    </td>\r\n    <td> </td>\r\n  </tr>\r\n  <tr>\r\n    <td> </td>\r\n    <td> </td>\r\n    <td>\r\n      <code>Video</code>\r\n    </td>\r\n    <td> </td>\r\n  </tr>\r\n</table>\r\n<p>The implication is that:</p>\r\n<pre xml:space=\"preserve\">\r\ntrace(_global.Array == Array)/*returns true*/;\r\n                  \r\n</pre>\r\n<p>or</p>\r\n<pre xml:space=\"preserve\">\r\ntrace(_global.Stage == Stage)/*returns true*/;\r\n                  \r\n</pre>\r\n<p>It may be good programming practice to “fully qualify” Flash classes and objects in your code to remember just how important the <code>_global</code> object is.</p>\r\n<h3>The Difference between Flash Objects and Classes</h3>\r\n<p>The Flash objects summarized in the table differ from built-in classes in that they do not have a <code>prototype</code> property:</p>\r\n<pre xml:space=\"preserve\">\r\ntrace(_global.Math.prototype)/*returns undefined*/;\r\n                  \r\n</pre>\r\n<p>or</p>\r\n<pre xml:space=\"preserve\">\r\ntrace(_global.Stage.prototype)/*returns undefined*/;\r\n                  \r\n</pre>\r\n<p>This implies that Flash objects do not have constructor functions. This also implies that these objects do not necessarily inherit from the <code>Object()</code> object. We can suggest that this is the case for Flash classes by using the <a href=\"http://www.macromedia.com/support/flash/action_scripts/actionscript_dictionary/actionscript_dictionary608.html\">__proto__</a> property in an equality:</p>\r\n<pre xml:space=\"preserve\">\r\nObject.method = function(){\r\nreturn this.prototype;\r\n\n                    \r\nFunction.method = function(){\r\nreturn this.prototype.__proto__;\r\n\n                    \r\ntrace(Object.method() == Function.method())/*returns true*/;\r\n                  \r\n</pre>\r\n<p>The <code>return</code> statement of <code>Function.method()</code> shows that it contains some “unknown” instantiated object, its <code>__proto__</code> property. When <code>trace()</code> returns true we may conclude that the <code>prototype</code> property of <code>Object</code> and the <code>__proto__</code> property of this “unknown” instantiated object of <code>Function</code> are pointing to the same place in memory. It would follow that when <code>this.prototype.__proto__ != undefined</code> inside our method, we have discovered <a href=\"http://www.quantumwave.com/flash/inheritance.html\">evidence of inheritance</a>.</p>",
    "CreateDate": "2003-08-14T15:07:36.0000000",
    "EndDate": "1899-12-30T00:00:00.0000000",
    "ModificationDate": "2006-04-06T11:40:59.0000000",
    "DocumentId": "23",
    "PrevFragmentId": "-1",
    "NextFragmentId": "-1",
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "28",
    "FragmentName": null,
    "FragmentDisplayName": "XHTML Schemas in Word 2003 Documents",
    "SortOrdinal": null,
    "ItemChar": "<h1>XHTML Schemas in Word 2003 Documents</h1>\n<p>The subject of this document centers upon a labor-intensive way of making Word documents interchangeable with standard <acronym title=\"Extensible Markup Language\">XML</acronym> schemas related to formatting. The previous, January 2005, version of this document was marked up <em>by hand</em> with a modified <a href=\"http://www.w3.org/TR/2002/NOTE-xhtml1-schema-20020902/\">XHTML 1.0 Strict Schema</a> from the w3c. The document you are reading now is still authored in Word 2003 but how it was transformed into <acronym title=\"Extensible Hypertext Markup Language\">XHTML</acronym> is currently out of the scope of this document and is currently fodder for <a href=\"http://www.kintespace.com/rasxlog/?p=223\">one Blog entry</a> or two…</p>\n<p>Using XML in Word is very exciting. The exiting part of the process is not covered in this writ so I strongly recommend looking up the <acronym title=\"Microsoft Developer Network\">MSDN</acronym> Nugget “<a href=\"http://www.microsoft.com/uk/msdn/events/nuggets.aspx\">Using Word as an XML editor in Office 2003</a>.” This motion picture presentation by the MDSN UK people, featuring <a href=\"http://mtaulty.com/\">Mike Taulty</a>, provides an excellent introduction of “what the hell” I am talking about here.</p>\n<p>Coyness aside, this primitive method of marking up a Word document with an XHTML schema works quite well for relatively short passages of prose without complex formatting. The rumors out there suggest that most Microsoft Word users (myself included) barely use 10 percent of the formatting features in the program. So the effort required to write this article using this technique appears worthwhile. By the end of this document, I should be able to share my opinion regarding how painful this process is! I am not hurting yet.</p>\n<h2>Attaching the Schema to the Document</h2>\n<p>\n  <img alt=\"Office System Word 2003 Schema Library\" height=\"496\" src=\"http://songhaysystem.com/bitmaps/Word2003XhtmlSchema/schema_lib.gif\" style=\"border-style:none;float:right;margin:16px;\" width=\"455\" />The <a href=\"http://www.w3.org/TR/2002/NOTE-xhtml1-schema-20020902/\">XHTML 1.0 Strict Schema</a> from the w3c is <em>not</em> considered “well-formed” by Microsoft Office Word 2003 (11.6359.6360 SP1) or Microsoft Office InfoPath 2003 (11.6357.6360 SP1). Fortunately, InfoPath provides some clues as to why this is the case. As of this writing, Microsoft regards any namespace beginning with <code>xml</code> in any letter-case-combination as <em>reserved</em>. This makes sense when we agree that user-defined schemas used by Office System should not redefine XML itself. So I opened the <a href=\"http://www.w3.org/TR/2002/NOTE-xhtml1-schema-20020902/\">XHTML 1.0 Strict Schema</a> in Visual Studio .NET and ran a find/change operation to change references to the namespace <code>xml</code> to <code>w3xml</code>. Office System Word 2003 was then able to open the schema. We can see how it appeared in the Schema Library at right.</p>\n<p>Note how there is a second schema named <strong>XML 1998</strong> in the list. The <a href=\"http://www.w3.org/TR/2002/NOTE-xhtml1-schema-20020902/\">XHTML 1.0 Strict Schema</a> makes an external reference to this schema but a message box in Word clearly states that it will not be used because it is reserved. I left this external reference to the document out of respect for the original author(s), assuming it won’t come back to haunt me later! For more information about XML schemas and Office System Word documents, please see MSDN Article “<a href=\"http://msdn.microsoft.com/office/understanding/word/gettingstarted/default.aspx?pull=/library/en-us/odc_wd2003_ta/html/odc_wdnew2k3xmlom.asp\">New XML Features of the Microsoft Office Word 2003 Object Model</a>.”</p>\n<h2>Flippant Remarks about Applying the Schema</h2>\n<table id=\"CleanXhtmlTable_EABAAAA2\">\n  <tr>\n    <td>Automating This Process</td>\n    <td>\n      <p>The XML features in Office System Word 2003 are new and leave much to be desired. It would be great, for example, to apply XML elements in formatting- and style-based find/change operations.</p>\n      <p>In the mean time, Microsoft has released a few add-ons to Word such as the <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnofftalk/html/ODC_office01012004.asp\">Microsoft Office Word 2003 XML Toolbox</a> and the <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/wordxmlcdk/html/cdkintrodefaultpage_hv01113687.asp\">Word XML SDK</a>.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>The <code>title</code> Element Is Required</td>\n    <td>In XHTML, the <code>title</code> element is required. This means that validation errors may appear when the <code>html</code> element is present without the <code>title</code> element nested in the <code>head</code> element.</td>\n  </tr>\n  <tr>\n    <td>Doing Twice the Formatting</td>\n    <td>Inserting hyperlinks definitely requires entering data twice. The <code>href</code> attribute of the <code>a</code> element needs the same data that’s in the <strong>Address:</strong> field in the <strong>Edit Hyperlink…</strong> dialog. I am sure that at least one or two minds at Microsoft is perfectly fine with this level of inconvenience so that we users are ‘inspired’ to stick with <a href=\"http://www.microsoft.com/downloads/details.aspx?familyid=2cb5b04e-61d9-4f16-9b18-223ec626080e&amp;displaylang=en\">WordML</a>.</td>\n  </tr>\n  <tr>\n    <td>Tables and Images</td>\n    <td>\n      <p>Marking up tables with a formatting schema can get tedious but some mitigating factors include tabbing into a new row and having markup automatically inserted. What is very impressive is that the open and closing <code>table</code> elements move around correctly when top and bottom rows are inserted respectively. This may be working because I selected the table with the <strong>Table &gt; Select &gt; Table</strong> command before applying the <code>table</code> elements. Feel free to test this out yourself and <a href=\"http://songhaysystem.com/mail.php\">get back to me</a>.</p>\n      <p>The <code>img</code> element used in this design is far better than the technique I developed for <a href=\"http://songhaysystem.com/document.php?cmd=getDoc&amp;get=2\">Clean HTML for Word 2000/2002</a>. The image below summarizes:</p>\n      <div style=\"text-align:center;\">\n        <img alt=\"img attributes\" height=\"552\" src=\"http://songhaysystem.com/bitmaps/Word2003XhtmlSchema/img_attr.gif\" style=\"border-style:none;padding:16px;\" width=\"510\" /></div>\n      <p>Most modern Web browsers expect the <code>img</code> element to be minimized (<code>&lt;img /&gt;</code>). However, the techniques covered here will almost always produce the maximized <code>&lt;img&gt;&lt;/img&gt;</code>. This rendering is not considered well-formed XHTML. Fixing this problem with <acronym title=\"Extensible Stylesheet Language Transformations\">XSLT</acronym> using, say, the <strong>Apply transform</strong> option, in the <strong>Save As…</strong> dialog is not that difficult for people who know XSLT. But it opens the door to the slippery slope of making more complex extensible transformations or it is simply beyond the skill set of the person willing to mark up a document with XML tags by hand.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>Cutting, Copying and Pasting</td>\n    <td>Cutting, Copying and pasting selections that include XML elements work as expected when the operation takes place in the same document. To have the expected results across documents, the same schema must be loaded in the destination document as that in the source document.</td>\n  </tr>\n  <tr>\n    <td>Post-processing</td>\n    <td>\n      <p>In order to publish this document on the Internet I had to do more stuff <em>by hand</em> that has my mind frantically working to devise ways to make the process better. On the other hand, the post work was not so bad that I am unwilling to wait for a decent version of <a href=\"http://msdn.microsoft.com/vstudio/office/officetools.aspx\">Visual Studio Tools for Office</a>.</p>\n      <p>Out of the box, you will have to save a copy of your Word document to an XML file. The image below summarizes the selected save options:</p>\n      <div style=\"text-align:center;\">\n        <img alt=\"Save As... Dialog\" height=\"85\" src=\"http://songhaysystem.com/bitmaps/Word2003XhtmlSchema/save_as.gif\" style=\"border-style:none;padding:16px;\" width=\"502\" /></div>\n      <p>When you save the file you should receive a warning message that might be considered humorous in this context:</p>\n      <div style=\"text-align:center;\">\n        <img alt=\"Warning! Warning!\" height=\"119\" src=\"http://songhaysystem.com/bitmaps/Word2003XhtmlSchema/warning_dialog.gif\" style=\"border-style:none;padding:16px;\" width=\"554\" /></div>\n    </td>\n  </tr>\n  <tr>\n    <td>Typographic Entities</td>\n    <td>\n      <p>From the very beginning or my wired life, since HTML 3.x, I have always taken my work habits from desktop publishing, typography and graphic design, along with me—this means I <em>need</em> to see em dashes and curly quotes in my English prose. This typographic desire corresponds, in part, with the subject of entities in the world of XML.</p>\n      <p>The <a href=\"http://www.xml.com/\">XML.com</a> article “<a href=\"http://www.xml.com/pub/a/2001/01/31/qanda.html\">Entities: Handling Special Content</a>” by John E. Simpson summarizes what a proper XML parser should know about entities, “If what appears between the <code>&amp;</code> and <code>;</code> is numeric (either decimal or hexadecimal) and falls in the range of acceptable values for Unicode data, there’s no problem at all.”</p>\n      <p>What this means for Songhay enterprise workflow is that the final destination of entities in textual data is in the presentation—most likely our contemporary web browser. Simultaneously, this textual data must store the actual glyphs otherwise, in view of the available technology, editing textual data full of ampersands and semicolons used to represent glyphs will be even more frustrating and tedious.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <acronym title=\"Random Access Memory\">RAM</acronym> Requirements</td>\n    <td>The XHTML schema is huge! When this schema is loaded into Office Word 2003, the RAM footprint skyrockets toward 80MB and above.</td>\n  </tr>\n  <tr>\n    <td>Downloading</td>\n    <td>\n      <ul>\n        <li>Download the <a href=\"http://songhaysystem.com/samples/Word2003XhtmlSchema/xhtml_1_strict.xsd\">modified XHTML Strict 1.0 schema</a>.</li>\n        <li>Download the <a href=\"http://songhaysystem.com/samples/Word2003XhtmlSchema/WordFile.zip\">source Word Document and the schema</a>.</li>\n      </ul>\n    </td>\n  </tr>\n</table>\n<h2>Finally…</h2>\n<p>This technique is a brute-force solution for people who are not familiar with <acronym title=\"Visual Studio Tools for the Microsoft Office System\">VSTO</acronym> and/or XSLT but they still (somehow) desire to produce XHTML. In fact, one of these Word documents can serve as a cut-and-paste data source for multiple Web documents. The <strong>View XML &gt; Current Selection (Data Only)</strong> command in the <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnofftalk/html/ODC_office01012004.asp\">Microsoft Office Word 2003 XML Toolbox</a> can go a long way to produce a crude workflow scenario where a few Word documents can support multiple Web sites (and Blog entries).</p>\n<p>It will be said that I am not satisfied with this solution and it is published here in order to inform those writers and publishers out there who may not want to use <a href=\"http://www.kintespace.com/rasxlog/?p=220\">Blogger™ for Word</a> or Dreamweaver as a word processor.</p>",
    "ItemText": "<h1>XHTML Schemas in Word 2003 Documents</h1>\n<p>The subject of this document centers upon a labor-intensive way of making Word documents interchangeable with standard <acronym title=\"Extensible Markup Language\">XML</acronym> schemas related to formatting. The previous, January 2005, version of this document was marked up <em>by hand</em> with a modified <a href=\"http://www.w3.org/TR/2002/NOTE-xhtml1-schema-20020902/\">XHTML 1.0 Strict Schema</a> from the w3c. The document you are reading now is still authored in Word 2003 but how it was transformed into <acronym title=\"Extensible Hypertext Markup Language\">XHTML</acronym> is currently out of the scope of this document and is currently fodder for <a href=\"http://www.kintespace.com/rasxlog/?p=223\">one Blog entry</a> or two…</p>\n<p>Using XML in Word is very exciting. The exiting part of the process is not covered in this writ so I strongly recommend looking up the <acronym title=\"Microsoft Developer Network\">MSDN</acronym> Nugget “<a href=\"http://www.microsoft.com/uk/msdn/events/nuggets.aspx\">Using Word as an XML editor in Office 2003</a>.” This motion picture presentation by the MDSN UK people, featuring <a href=\"http://mtaulty.com/\">Mike Taulty</a>, provides an excellent introduction of “what the hell” I am talking about here.</p>\n<p>Coyness aside, this primitive method of marking up a Word document with an XHTML schema works quite well for relatively short passages of prose without complex formatting. The rumors out there suggest that most Microsoft Word users (myself included) barely use 10 percent of the formatting features in the program. So the effort required to write this article using this technique appears worthwhile. By the end of this document, I should be able to share my opinion regarding how painful this process is! I am not hurting yet.</p>\n<h2>Attaching the Schema to the Document</h2>\n<p>\n  <img alt=\"Office System Word 2003 Schema Library\" height=\"496\" src=\"http://songhaysystem.com/bitmaps/Word2003XhtmlSchema/schema_lib.gif\" style=\"border-style:none;float:right;margin:16px;\" width=\"455\" />The <a href=\"http://www.w3.org/TR/2002/NOTE-xhtml1-schema-20020902/\">XHTML 1.0 Strict Schema</a> from the w3c is <em>not</em> considered “well-formed” by Microsoft Office Word 2003 (11.6359.6360 SP1) or Microsoft Office InfoPath 2003 (11.6357.6360 SP1). Fortunately, InfoPath provides some clues as to why this is the case. As of this writing, Microsoft regards any namespace beginning with <code>xml</code> in any letter-case-combination as <em>reserved</em>. This makes sense when we agree that user-defined schemas used by Office System should not redefine XML itself. So I opened the <a href=\"http://www.w3.org/TR/2002/NOTE-xhtml1-schema-20020902/\">XHTML 1.0 Strict Schema</a> in Visual Studio .NET and ran a find/change operation to change references to the namespace <code>xml</code> to <code>w3xml</code>. Office System Word 2003 was then able to open the schema. We can see how it appeared in the Schema Library at right.</p>\n<p>Note how there is a second schema named <strong>XML 1998</strong> in the list. The <a href=\"http://www.w3.org/TR/2002/NOTE-xhtml1-schema-20020902/\">XHTML 1.0 Strict Schema</a> makes an external reference to this schema but a message box in Word clearly states that it will not be used because it is reserved. I left this external reference to the document out of respect for the original author(s), assuming it won’t come back to haunt me later! For more information about XML schemas and Office System Word documents, please see MSDN Article “<a href=\"http://msdn.microsoft.com/office/understanding/word/gettingstarted/default.aspx?pull=/library/en-us/odc_wd2003_ta/html/odc_wdnew2k3xmlom.asp\">New XML Features of the Microsoft Office Word 2003 Object Model</a>.”</p>\n<h2>Flippant Remarks about Applying the Schema</h2>\n<table id=\"CleanXhtmlTable_EABAAAA2\">\n  <tr>\n    <td>Automating This Process</td>\n    <td>\n      <p>The XML features in Office System Word 2003 are new and leave much to be desired. It would be great, for example, to apply XML elements in formatting- and style-based find/change operations.</p>\n      <p>In the mean time, Microsoft has released a few add-ons to Word such as the <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnofftalk/html/ODC_office01012004.asp\">Microsoft Office Word 2003 XML Toolbox</a> and the <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/wordxmlcdk/html/cdkintrodefaultpage_hv01113687.asp\">Word XML SDK</a>.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>The <code>title</code> Element Is Required</td>\n    <td>In XHTML, the <code>title</code> element is required. This means that validation errors may appear when the <code>html</code> element is present without the <code>title</code> element nested in the <code>head</code> element.</td>\n  </tr>\n  <tr>\n    <td>Doing Twice the Formatting</td>\n    <td>Inserting hyperlinks definitely requires entering data twice. The <code>href</code> attribute of the <code>a</code> element needs the same data that’s in the <strong>Address:</strong> field in the <strong>Edit Hyperlink…</strong> dialog. I am sure that at least one or two minds at Microsoft is perfectly fine with this level of inconvenience so that we users are ‘inspired’ to stick with <a href=\"http://www.microsoft.com/downloads/details.aspx?familyid=2cb5b04e-61d9-4f16-9b18-223ec626080e&amp;displaylang=en\">WordML</a>.</td>\n  </tr>\n  <tr>\n    <td>Tables and Images</td>\n    <td>\n      <p>Marking up tables with a formatting schema can get tedious but some mitigating factors include tabbing into a new row and having markup automatically inserted. What is very impressive is that the open and closing <code>table</code> elements move around correctly when top and bottom rows are inserted respectively. This may be working because I selected the table with the <strong>Table &gt; Select &gt; Table</strong> command before applying the <code>table</code> elements. Feel free to test this out yourself and <a href=\"http://songhaysystem.com/mail.php\">get back to me</a>.</p>\n      <p>The <code>img</code> element used in this design is far better than the technique I developed for <a href=\"http://songhaysystem.com/document.php?cmd=getDoc&amp;get=2\">Clean HTML for Word 2000/2002</a>. The image below summarizes:</p>\n      <div style=\"text-align:center;\">\n        <img alt=\"img attributes\" height=\"552\" src=\"http://songhaysystem.com/bitmaps/Word2003XhtmlSchema/img_attr.gif\" style=\"border-style:none;padding:16px;\" width=\"510\" /></div>\n      <p>Most modern Web browsers expect the <code>img</code> element to be minimized (<code>&lt;img /&gt;</code>). However, the techniques covered here will almost always produce the maximized <code>&lt;img&gt;&lt;/img&gt;</code>. This rendering is not considered well-formed XHTML. Fixing this problem with <acronym title=\"Extensible Stylesheet Language Transformations\">XSLT</acronym> using, say, the <strong>Apply transform</strong> option, in the <strong>Save As…</strong> dialog is not that difficult for people who know XSLT. But it opens the door to the slippery slope of making more complex extensible transformations or it is simply beyond the skill set of the person willing to mark up a document with XML tags by hand.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>Cutting, Copying and Pasting</td>\n    <td>Cutting, Copying and pasting selections that include XML elements work as expected when the operation takes place in the same document. To have the expected results across documents, the same schema must be loaded in the destination document as that in the source document.</td>\n  </tr>\n  <tr>\n    <td>Post-processing</td>\n    <td>\n      <p>In order to publish this document on the Internet I had to do more stuff <em>by hand</em> that has my mind frantically working to devise ways to make the process better. On the other hand, the post work was not so bad that I am unwilling to wait for a decent version of <a href=\"http://msdn.microsoft.com/vstudio/office/officetools.aspx\">Visual Studio Tools for Office</a>.</p>\n      <p>Out of the box, you will have to save a copy of your Word document to an XML file. The image below summarizes the selected save options:</p>\n      <div style=\"text-align:center;\">\n        <img alt=\"Save As... Dialog\" height=\"85\" src=\"http://songhaysystem.com/bitmaps/Word2003XhtmlSchema/save_as.gif\" style=\"border-style:none;padding:16px;\" width=\"502\" /></div>\n      <p>When you save the file you should receive a warning message that might be considered humorous in this context:</p>\n      <div style=\"text-align:center;\">\n        <img alt=\"Warning! Warning!\" height=\"119\" src=\"http://songhaysystem.com/bitmaps/Word2003XhtmlSchema/warning_dialog.gif\" style=\"border-style:none;padding:16px;\" width=\"554\" /></div>\n    </td>\n  </tr>\n  <tr>\n    <td>Typographic Entities</td>\n    <td>\n      <p>From the very beginning or my wired life, since HTML 3.x, I have always taken my work habits from desktop publishing, typography and graphic design, along with me—this means I <em>need</em> to see em dashes and curly quotes in my English prose. This typographic desire corresponds, in part, with the subject of entities in the world of XML.</p>\n      <p>The <a href=\"http://www.xml.com/\">XML.com</a> article “<a href=\"http://www.xml.com/pub/a/2001/01/31/qanda.html\">Entities: Handling Special Content</a>” by John E. Simpson summarizes what a proper XML parser should know about entities, “If what appears between the <code>&amp;</code> and <code>;</code> is numeric (either decimal or hexadecimal) and falls in the range of acceptable values for Unicode data, there’s no problem at all.”</p>\n      <p>What this means for Songhay enterprise workflow is that the final destination of entities in textual data is in the presentation—most likely our contemporary web browser. Simultaneously, this textual data must store the actual glyphs otherwise, in view of the available technology, editing textual data full of ampersands and semicolons used to represent glyphs will be even more frustrating and tedious.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <acronym title=\"Random Access Memory\">RAM</acronym> Requirements</td>\n    <td>The XHTML schema is huge! When this schema is loaded into Office Word 2003, the RAM footprint skyrockets toward 80MB and above.</td>\n  </tr>\n  <tr>\n    <td>Downloading</td>\n    <td>\n      <ul>\n        <li>Download the <a href=\"http://songhaysystem.com/samples/Word2003XhtmlSchema/xhtml_1_strict.xsd\">modified XHTML Strict 1.0 schema</a>.</li>\n        <li>Download the <a href=\"http://songhaysystem.com/samples/Word2003XhtmlSchema/WordFile.zip\">source Word Document and the schema</a>.</li>\n      </ul>\n    </td>\n  </tr>\n</table>\n<h2>Finally…</h2>\n<p>This technique is a brute-force solution for people who are not familiar with <acronym title=\"Visual Studio Tools for the Microsoft Office System\">VSTO</acronym> and/or XSLT but they still (somehow) desire to produce XHTML. In fact, one of these Word documents can serve as a cut-and-paste data source for multiple Web documents. The <strong>View XML &gt; Current Selection (Data Only)</strong> command in the <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnofftalk/html/ODC_office01012004.asp\">Microsoft Office Word 2003 XML Toolbox</a> can go a long way to produce a crude workflow scenario where a few Word documents can support multiple Web sites (and Blog entries).</p>\n<p>It will be said that I am not satisfied with this solution and it is published here in order to inform those writers and publishers out there who may not want to use <a href=\"http://www.kintespace.com/rasxlog/?p=220\">Blogger™ for Word</a> or Dreamweaver as a word processor.</p>",
    "CreateDate": "2005-01-15T00:59:00.0000000",
    "EndDate": "1899-12-30T00:00:00.0000000",
    "ModificationDate": "2007-05-06T18:42:35.8570000",
    "DocumentId": "24",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "29",
    "FragmentName": "WebDomain",
    "FragmentDisplayName": "Web Domain Name",
    "SortOrdinal": null,
    "ItemChar": "songhaysystem.com",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1230000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1230000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_domain",
    "IsActive": "True"
  },
  {
    "FragmentId": "30",
    "FragmentName": "WebName",
    "FragmentDisplayName": "Web Name",
    "SortOrdinal": null,
    "ItemChar": "Songhay System Company Web",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1230000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1230000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_name",
    "IsActive": "True"
  },
  {
    "FragmentId": "31",
    "FragmentName": "WebPathLocal",
    "FragmentDisplayName": "Web Local Path",
    "SortOrdinal": null,
    "ItemChar": "C:\\~shares\\webRoot\\dev_SonghaySystem\\",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1230000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1230000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_local_path",
    "IsActive": "True"
  },
  {
    "FragmentId": "32",
    "FragmentName": "WebUriDev",
    "FragmentDisplayName": "Web URI (Development)",
    "SortOrdinal": null,
    "ItemChar": "http://songhay5/dev_SonghaySystem/",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1230000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1230000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_local_uri_dev",
    "IsActive": "True"
  },
  {
    "FragmentId": "33",
    "FragmentName": "WebUriStaging",
    "FragmentDisplayName": "Web URI (Staging)",
    "SortOrdinal": null,
    "ItemChar": "http://songhay5/dev_SonghaySystem/",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1230000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1230000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_local_uri_stage",
    "IsActive": "True"
  },
  {
    "FragmentId": "34",
    "FragmentName": "WebPathLogsLocal",
    "FragmentDisplayName": "Web Local Logs Path",
    "SortOrdinal": null,
    "ItemChar": "C:\\~shares\\webRoot\\dev_SonghaySystem_Support\\data\\raw_logs\\",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1230000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1230000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_local_logs_path",
    "IsActive": "True"
  },
  {
    "FragmentId": "35",
    "FragmentName": "WebMgrEnableTemplates",
    "FragmentDisplayName": "Web Manager: Enable Fragments",
    "SortOrdinal": null,
    "ItemChar": "true",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1230000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1230000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_manager_enable_frags",
    "IsActive": "True"
  },
  {
    "FragmentId": "36",
    "FragmentName": "WebMgrEnableFrags",
    "FragmentDisplayName": "Web Manager: Enable Templates",
    "SortOrdinal": null,
    "ItemChar": "false",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1230000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1230000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_manager_enable_templates",
    "IsActive": "True"
  },
  {
    "FragmentId": "37",
    "FragmentName": "WebMgrEnableDocDateEdit",
    "FragmentDisplayName": "Web Manager: Enable Document Date Editing",
    "SortOrdinal": null,
    "ItemChar": "false",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1330000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1330000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_manager_enable_docdateedit",
    "IsActive": "True"
  },
  {
    "FragmentId": "38",
    "FragmentName": "WebMgrEnableDocSort",
    "FragmentDisplayName": "Web Manager: Enable Document Sorting",
    "SortOrdinal": null,
    "ItemChar": "false",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1330000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1330000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_manager_enable_docsort",
    "IsActive": "True"
  },
  {
    "FragmentId": "39",
    "FragmentName": "WebMgrDisplayNameDocument",
    "FragmentDisplayName": "Web Manager: Display Name (Document)",
    "SortOrdinal": null,
    "ItemChar": "Document",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1330000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1330000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_manager_display_name_doc",
    "IsActive": "True"
  },
  {
    "FragmentId": "40",
    "FragmentName": "WebMgrDisplayNameDocCreateDate",
    "FragmentDisplayName": "Web Manager: Display Name (Document Create Date)",
    "SortOrdinal": null,
    "ItemChar": "Create Date",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1330000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1330000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_manager_display_name_doccreatedate",
    "IsActive": "True"
  },
  {
    "FragmentId": "41",
    "FragmentName": "WebMgrDisplayNameDocModDate",
    "FragmentDisplayName": "Web Manager: Display Name (Document Mod’ Date)",
    "SortOrdinal": null,
    "ItemChar": "Mod’ Date",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1330000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1330000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_manager_display_name_docmoddate",
    "IsActive": "True"
  },
  {
    "FragmentId": "42",
    "FragmentName": "WebMgrDisplayNameDocName",
    "FragmentDisplayName": "Web Manager: Display Name (Document Name)",
    "SortOrdinal": null,
    "ItemChar": "Name",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1330000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1330000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_manager_display_name_docname",
    "IsActive": "True"
  },
  {
    "FragmentId": "43",
    "FragmentName": "WebMgrDisplayNameDocShortName",
    "FragmentDisplayName": "Web Manager: Display Name (Document Short Name)",
    "SortOrdinal": null,
    "ItemChar": "Short Name",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1330000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1330000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_manager_display_name_docshortname",
    "IsActive": "True"
  },
  {
    "FragmentId": "44",
    "FragmentName": "WebMgrDisplayNameDocTag",
    "FragmentDisplayName": "Web Manager: Display Name (Document Tag)",
    "SortOrdinal": null,
    "ItemChar": "Document Tag",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1330000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1330000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_manager_display_name_doctag",
    "IsActive": "True"
  },
  {
    "FragmentId": "45",
    "FragmentName": "WebMgrDisplayNameFragment",
    "FragmentDisplayName": "Web Manager: Display Name (Fragment)",
    "SortOrdinal": null,
    "ItemChar": "Fragment",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1330000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1330000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_manager_display_name_frag",
    "IsActive": "True"
  },
  {
    "FragmentId": "46",
    "FragmentName": "WebMgrDisplayNameSegment",
    "FragmentDisplayName": "Web Manager: Display Name (Segment)",
    "SortOrdinal": null,
    "ItemChar": "Segment",
    "ItemText": null,
    "CreateDate": "2005-11-01T10:54:37.1330000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T10:54:37.1330000",
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "globaltext_web_manager_display_name_seg",
    "IsActive": "True"
  },
  {
    "FragmentId": "47",
    "FragmentName": null,
    "FragmentDisplayName": "Songhay System AJaX Highlights",
    "SortOrdinal": null,
    "ItemChar": "<h1>Songhay System AJaX Highlights</h1>\r\n<p>This document comments on the code samples in “ <a href=\"http://songhaysystem.com/samples/ajax/\">Asynchronous JavaScript and XML Highlights</a>.” The samples serve to summarize all of the <acronym title=\"Asynchronous JavaScript and XML\">AJAX</acronym> implementations supported by Songhay System, providing explicit constraints for Web client design specifications.</p>\r\n<p>The infamous problem with Web clients is the standards problem. These proprietary Web browsers implement <acronym title=\"Extensible Markup Language\">XML</acronym> over HTTP differently. It follows that our approach to AJaX is necessarily simple. Our primary approach to AJaX design is the attempt to deliver <code>responseText</code> to <code>innerHTML</code>. See <code>responseText</code> in action in “<a href=\"http://jibbering.com/2002/4/httprequest.html\">Using the XML HTTP Request object</a>.” The following attempts to summarize why this approach is taken:</p>\r\n<ul>\r\n  <li>Using <code>responseXML</code> exposes a “reference type” of unknown quality. Ideally we get an object like that described in “<a href=\"http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/ecma-script-binding.html\">ECMAScript Language Binding</a>.” But this is only hope.</li>\r\n  <li>Using <code>responseText</code> produces a “value type”—a string. Those who are impressed by the concept of “<a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpref/html/frlrfsystemxmlxmldocumentclassinnerxmltopic.asp\">inner XML</a>” should understand quickly the advantage here. The <code>nodeValue</code> property in a <code>responseXML</code> object is another reference type of unknown quality. Will <code>nodeValue</code> return “mixed content”—the text node scalar <em>and</em> child elements as a string? Or will it just return the text node scalar?</li>\r\n  <li>Using <code>responseText</code> implies that there will be little or no client-side manipulation of data. The opinion here, as of this writing, is that Web browsers are still <em>poor</em> platforms for complex XML-based applications. We can look forward to companies like Google™ to make this opinion clearly ridiculous.</li>\r\n  <li>Using <code>responseText</code> should eventually demand tightly-coupled, well-formed <acronym title=\"Representational State Transfer\">REST</acronym> data from the server. This should not be a problem for Songhay System but it is understandable why other designs depend on relatively large client-side JavaScript frameworks (like <a href=\"http://dojotoolkit.org/\">dojo</a>) when the REST server is not under developer control.</li>\r\n</ul>\r\n<h2>“Get Tabular Data”</h2>\r\n<p>The first example in “ <a href=\"http://songhaysystem.com/samples/ajax/\">Asynchronous JavaScript and XML Highlights</a>” defines the pattern that will be used throughout the samples. The essential <code>div</code> elements are <code>TabularDataMessage</code> and <code>TabularDataTableBlock</code>:</p>\r\n<pre xml:space=\"preserve\">\r\n&amp;lt;h2&amp;gt;Get Tabular Data&amp;lt;/h2&amp;gt;\r\n&amp;lt;div id=&amp;quot;TabularDataBlock&amp;quot;&amp;gt;\r\n&amp;lt;div&amp;gt;&amp;lt;button onclick=&amp;quot;jsTabularData()&amp;quot;&amp;gt;Get Data&amp;lt;/button&amp;gt;&amp;lt;/div&amp;gt;\r\n&amp;lt;div id=&amp;quot;TabularDataMessage&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;\r\n&amp;lt;div id=&amp;quot;TabularDataTableBlock&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;\r\n&amp;lt;/div&amp;gt;\r\n                  \r\n</pre>\r\n<p>The asynchronous callbacks are sent to <code>TabularDataMessage</code> started by the JavaScript function <code>jsTabularData()</code>, defined in the inline script block below:</p>\r\n<pre xml:space=\"preserve\">\r\n&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;\r\nvar ajTabularData = new Ajax()\r\nvar requestTabularData = null\r\n  function jsTabularData()\r\n{\r\n    var vUri = './restCaller.php?cmd=table1'\r\n    requestTabularData = ajTabularData.Send(vUri,true,'jsTabularDataReqHandler')\r\n}\r\n  function jsTabularDataReqHandler()\r\n{\r\n    var div = window.document.getElementById('TabularDataMessage')\r\n    if(!ajTabularData.IsXmlLoaded(requestTabularData))\r\n    {\r\n        div.style.display = 'block'\r\n        div.innerHTML = ajTabularData.Message\r\n        return\r\n    }\r\n    else\r\n    {\r\n        div.style.display = 'none'\r\n          with(window.document.getElementById('TabularDataTableBlock'))\r\n        {\r\n            innerHTML = requestTabularData.responseText\r\n        }\r\n    }\r\n}\r\n&amp;lt;/script&amp;gt;\r\n                  \r\n</pre>\r\n<p>The first line in the script block refers to the <a href=\"http://songhaysystem.com/js/classes/Ajax.js\">custom Songhay System class</a>, <code>Ajax</code><code>()</code>. This relatively small effort was made in spite of the existence of <a href=\"http://dojotoolkit.org/\">dojo</a>, primarily because the scope of <code>dojo.io</code> is quite sweeping, while, as of this writing, Songhay System confines itself to supporting Microsoft Internet Explorer 5.x and Firefox 1.x (which should cover Opera and Safari). This effectively means that <code>Ajax</code><code>()</code> asynchronous input/output is based on the <a href=\"http://en.wikipedia.org/wiki/XMLHttpRequest\">XmlHttpRequest</a> object. This rather small “surface area” of browser compatibility means that our <acronym title=\"Asynchronous JavaScript and XML\">AJAX</acronym> functionality <em>should</em> be used where failure does not disable the entire Web page.</p>\r\n<p>The first line in <code>jsTabularData()</code> defines the <acronym title=\"Universal Resource Identifier\">URI</acronym> of the server-side “rails” script, <code>restCaller.php</code>, transporting data from within and across domains to the client. This script describes a <acronym title=\"Representational State Transfer\">REST</acronym> ‘server’ because it returns <acronym title=\"Extensible Markup Language\">XML</acronym>. Our tabular data example renders an <acronym title=\"Extensible Hypertext Markup Language\">XHTML</acronym><code>table</code> element from an <code>Ajax</code><code>()</code> call based on a static XML file, <code>tabular.xml</code>. The rails script transforms <code>tabular.xml</code> with the <acronym title=\"Extensible Stylesheet Language Transformations\">XSLT</acronym> file, <code>ajax.xslt</code>. The opinion here is that it is easier to declare the AJaX table in the XSLT file instead of rendering it client-side in a lengthy JavaScript procedure.</p>\r\n<h2>The REST Server Script</h2>\r\n<p>Our “ <a href=\"http://songhaysystem.com/samples/ajax/\">Asynchronous JavaScript and XML Highlights</a>” presentation depends on a PHP5 script, <code>restCaller.php</code>, featuring these lines of code:</p>\r\n<pre xml:space=\"preserve\">\r\nif(strlen($restUri) &amp;gt; 0)\r\n   \r\n$c = curl_init($restUri);\r\n  curl_setopt($c, CURLOPT_RETURNTRANSFER, 1);\r\n$s = curl_exec($c);\r\ncurl_close($c);\r\n  $xml = simplexml_load_string($s);\r\n  $xsl = new XSLTProcessor();\r\n$xsl-&amp;gt;importStyleSheet(DOMDocument::load('./ajax.xslt'));\r\n$xsl-&amp;gt;setParameter(null,'cmd',$cmd);\r\n  $xhtml .= $xsl-&amp;gt;transformToXML($xml);\r\n  //Note that Firefox 1.x will attempt to render the XHTML as HTML without this line:\r\n                  \r\n$xhtml = str_replace(' xmlns=&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;','',$xhtml);}\r\n\r\necho $xhtml;\r\n                  \r\n</pre>\r\n<p>The value for <code>$restUri</code> is determined by the “query string” of the request (setting the value of <code>$cmd</code>) and we see that <code>ajax.xslt</code> is the server side star of the show. This AJaX design permits server-side domination. The server is used almost exclusively to render client-side data and user interface elements. Since a server-side “proxy” script is <em>required</em> by the current AJaX security model to access data across domains, this design seems appropriate.</p>\r\n<p>Note that <code>$c</code> is set by <a href=\"http://en.wikipedia.org/wiki/CURL\">cURL</a>. Many Web hosts require the use of cURL for security reasons. As an example, see how <a href=\"http://wiki.dreamhost.com/index.php/CURL\">my current host introduces cURL</a> with respect to PHP.</p>\r\n<h2>“Get Amazon.com REST Data”</h2>\r\n<p>The “Get Amazon.com <acronym title=\"Representational State Transfer\">REST</acronym> Data” sample in “ <a href=\"http://songhaysystem.com/samples/ajax/\">Asynchronous JavaScript and XML Highlights</a>” uses server-side <acronym title=\"Extensible Stylesheet Language\">XSL</acronym> transformations. This quote under “Using XSLT with ECS” from the Amazon E-Commerce Service (ECS) <acronym title=\"Software Development Kit\">SDK</acronym> is very important to this sample:</p>\r\n<blockquote>\r\n  <p>You must create a namespace prefix at the top of your style sheet. In previous versions of ECS, it was possible to use the default namespace, which meant that you did not need to specify a namespace to access elements in the response. This is no longer the case.</p>\r\n</blockquote>\r\n<p>My misunderstanding of this change had me losing several hours trying to figure out why <a href=\"http://xmlsoft.org/XSLT/\">libxslt</a>, running under PHP 5 was not working properly. It turns out that I needed to select one of the ECS nodes to get the latest namespace <acronym title=\"Universal Resource Identifier\">URI</acronym>. As of this writing, this is <a href=\"http://webservices.amazon.com/AWSECommerceService/2005-10-05\">http://webservices.amazon.com/AWSECommerceService/2005-10-05</a>.</p>\r\n<h2>“Post Form Data”</h2>\r\n<p>This last and only <code>POST</code> example is based on “<a href=\"http://www.captain.at/howto-ajax-form-post-request.php\">AJAX Form POST Request—HTML Form POST/Submit with AJAX/Javascript Example/Tutorial</a>.” This design has the same structure as the previous ones except for the addition of a data collection function, <code>jsGetFormData()</code> used for the form <code>AjaxForm</code>. The <code>action</code> attribute of <code>AjaxForm</code> is <code>javascript:;</code> and the semi-colon is important because the location <code>javascript:</code> will open JavaScript Console in Firefox.</p>\r\n<h2>Selected Links to Resources</h2>\r\n<table id=\"CleanXhtmlTable_ECAAAAA2\">\r\n  <tr>\r\n    <td>\r\n      <a href=\"http://songhaysystem.com/samples/ajax/ajax.zip\">Asynchronous JavaScript and XML Highlights (*.zip)</a>\r\n    </td>\r\n    <td>The compressed archive of the files discussed in this article.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://www.w3.org/TR/REC-html40/interact/forms.html\">Forms in HTML Documents</a>”</td>\r\n    <td>Formally defines the bread and butter of REST remote procedure calls—namely “form content types” especially the all-important <code>application/x-www-form-urlencoded</code> type.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://www-128.ibm.com/developerworks/web/library/ws-wsajax/\">Call SOAP Web services with AJAX, Part 1</a>”</td>\r\n    <td>IBM of course would plug SOAP—because this means Java.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://ajaxblog.com/archives/2005/06/01/async-requests-over-an-unreliable-network\">Async Requests over an Unreliable Network</a>”</td>\r\n    <td>“The biggest void in the AJaX discussion, IMO, is how network and server availability affects XMLHttpRequests.” And of course we must prepare for when the network is down.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://www.ajaxpatterns.org/XMLHttpRequest_Call\">XMLHttpRequest Call</a>”</td>\r\n    <td>The “Handling POSTs and Other Request Types” section makes sense here…</td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <a href=\"http://www.captain.at/howto-ajax-form-post-request.php\">AJAX Form POST Request—HTML Form POST/Submit with AJAX/Javascript Example/Tutorial</a>\r\n    </td>\r\n    <td>A straight-forward example of <code>POST</code> in AJaX.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <a href=\"http://www.howtoadvice.com/StopCaching\">AJAX/RPC: “Prevent IE Caching During Partial Page Updates”</a>\r\n    </td>\r\n    <td>Explains why Microsoft Internet Explorer needs a ‘randomized’ <acronym title=\"Universal Resource Identifier\">URI</acronym> for multiple calls to the same resource. This is very important when you want to reload AJaX content when the page reloads.</td>\r\n  </tr>\r\n</table>",
    "ItemText": "<h1>Songhay System AJaX Highlights</h1>\r\n<p>This document comments on the code samples in “ <a href=\"http://songhaysystem.com/samples/ajax/\">Asynchronous JavaScript and XML Highlights</a>.” The samples serve to summarize all of the <acronym title=\"Asynchronous JavaScript and XML\">AJAX</acronym> implementations supported by Songhay System, providing explicit constraints for Web client design specifications.</p>\r\n<p>The infamous problem with Web clients is the standards problem. These proprietary Web browsers implement <acronym title=\"Extensible Markup Language\">XML</acronym> over HTTP differently. It follows that our approach to AJaX is necessarily simple. Our primary approach to AJaX design is the attempt to deliver <code>responseText</code> to <code>innerHTML</code>. See <code>responseText</code> in action in “<a href=\"http://jibbering.com/2002/4/httprequest.html\">Using the XML HTTP Request object</a>.” The following attempts to summarize why this approach is taken:</p>\r\n<ul>\r\n  <li>Using <code>responseXML</code> exposes a “reference type” of unknown quality. Ideally we get an object like that described in “<a href=\"http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/ecma-script-binding.html\">ECMAScript Language Binding</a>.” But this is only hope.</li>\r\n  <li>Using <code>responseText</code> produces a “value type”—a string. Those who are impressed by the concept of “<a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpref/html/frlrfsystemxmlxmldocumentclassinnerxmltopic.asp\">inner XML</a>” should understand quickly the advantage here. The <code>nodeValue</code> property in a <code>responseXML</code> object is another reference type of unknown quality. Will <code>nodeValue</code> return “mixed content”—the text node scalar <em>and</em> child elements as a string? Or will it just return the text node scalar?</li>\r\n  <li>Using <code>responseText</code> implies that there will be little or no client-side manipulation of data. The opinion here, as of this writing, is that Web browsers are still <em>poor</em> platforms for complex XML-based applications. We can look forward to companies like Google™ to make this opinion clearly ridiculous.</li>\r\n  <li>Using <code>responseText</code> should eventually demand tightly-coupled, well-formed <acronym title=\"Representational State Transfer\">REST</acronym> data from the server. This should not be a problem for Songhay System but it is understandable why other designs depend on relatively large client-side JavaScript frameworks (like <a href=\"http://dojotoolkit.org/\">dojo</a>) when the REST server is not under developer control.</li>\r\n</ul>\r\n<h2>“Get Tabular Data”</h2>\r\n<p>The first example in “ <a href=\"http://songhaysystem.com/samples/ajax/\">Asynchronous JavaScript and XML Highlights</a>” defines the pattern that will be used throughout the samples. The essential <code>div</code> elements are <code>TabularDataMessage</code> and <code>TabularDataTableBlock</code>:</p>\r\n<pre xml:space=\"preserve\">\r\n&amp;lt;h2&amp;gt;Get Tabular Data&amp;lt;/h2&amp;gt;\r\n&amp;lt;div id=&amp;quot;TabularDataBlock&amp;quot;&amp;gt;\r\n&amp;lt;div&amp;gt;&amp;lt;button onclick=&amp;quot;jsTabularData()&amp;quot;&amp;gt;Get Data&amp;lt;/button&amp;gt;&amp;lt;/div&amp;gt;\r\n&amp;lt;div id=&amp;quot;TabularDataMessage&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;\r\n&amp;lt;div id=&amp;quot;TabularDataTableBlock&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;\r\n&amp;lt;/div&amp;gt;\r\n                  \r\n</pre>\r\n<p>The asynchronous callbacks are sent to <code>TabularDataMessage</code> started by the JavaScript function <code>jsTabularData()</code>, defined in the inline script block below:</p>\r\n<pre xml:space=\"preserve\">\r\n&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;\r\nvar ajTabularData = new Ajax()\r\nvar requestTabularData = null\r\n  function jsTabularData()\r\n{\r\n    var vUri = './restCaller.php?cmd=table1'\r\n    requestTabularData = ajTabularData.Send(vUri,true,'jsTabularDataReqHandler')\r\n}\r\n  function jsTabularDataReqHandler()\r\n{\r\n    var div = window.document.getElementById('TabularDataMessage')\r\n    if(!ajTabularData.IsXmlLoaded(requestTabularData))\r\n    {\r\n        div.style.display = 'block'\r\n        div.innerHTML = ajTabularData.Message\r\n        return\r\n    }\r\n    else\r\n    {\r\n        div.style.display = 'none'\r\n          with(window.document.getElementById('TabularDataTableBlock'))\r\n        {\r\n            innerHTML = requestTabularData.responseText\r\n        }\r\n    }\r\n}\r\n&amp;lt;/script&amp;gt;\r\n                  \r\n</pre>\r\n<p>The first line in the script block refers to the <a href=\"http://songhaysystem.com/js/classes/Ajax.js\">custom Songhay System class</a>, <code>Ajax</code><code>()</code>. This relatively small effort was made in spite of the existence of <a href=\"http://dojotoolkit.org/\">dojo</a>, primarily because the scope of <code>dojo.io</code> is quite sweeping, while, as of this writing, Songhay System confines itself to supporting Microsoft Internet Explorer 5.x and Firefox 1.x (which should cover Opera and Safari). This effectively means that <code>Ajax</code><code>()</code> asynchronous input/output is based on the <a href=\"http://en.wikipedia.org/wiki/XMLHttpRequest\">XmlHttpRequest</a> object. This rather small “surface area” of browser compatibility means that our <acronym title=\"Asynchronous JavaScript and XML\">AJAX</acronym> functionality <em>should</em> be used where failure does not disable the entire Web page.</p>\r\n<p>The first line in <code>jsTabularData()</code> defines the <acronym title=\"Universal Resource Identifier\">URI</acronym> of the server-side “rails” script, <code>restCaller.php</code>, transporting data from within and across domains to the client. This script describes a <acronym title=\"Representational State Transfer\">REST</acronym> ‘server’ because it returns <acronym title=\"Extensible Markup Language\">XML</acronym>. Our tabular data example renders an <acronym title=\"Extensible Hypertext Markup Language\">XHTML</acronym><code>table</code> element from an <code>Ajax</code><code>()</code> call based on a static XML file, <code>tabular.xml</code>. The rails script transforms <code>tabular.xml</code> with the <acronym title=\"Extensible Stylesheet Language Transformations\">XSLT</acronym> file, <code>ajax.xslt</code>. The opinion here is that it is easier to declare the AJaX table in the XSLT file instead of rendering it client-side in a lengthy JavaScript procedure.</p>\r\n<h2>The REST Server Script</h2>\r\n<p>Our “ <a href=\"http://songhaysystem.com/samples/ajax/\">Asynchronous JavaScript and XML Highlights</a>” presentation depends on a PHP5 script, <code>restCaller.php</code>, featuring these lines of code:</p>\r\n<pre xml:space=\"preserve\">\r\nif(strlen($restUri) &amp;gt; 0)\r\n   \r\n$c = curl_init($restUri);\r\n  curl_setopt($c, CURLOPT_RETURNTRANSFER, 1);\r\n$s = curl_exec($c);\r\ncurl_close($c);\r\n  $xml = simplexml_load_string($s);\r\n  $xsl = new XSLTProcessor();\r\n$xsl-&amp;gt;importStyleSheet(DOMDocument::load('./ajax.xslt'));\r\n$xsl-&amp;gt;setParameter(null,'cmd',$cmd);\r\n  $xhtml .= $xsl-&amp;gt;transformToXML($xml);\r\n  //Note that Firefox 1.x will attempt to render the XHTML as HTML without this line:\r\n                  \r\n$xhtml = str_replace(' xmlns=&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;','',$xhtml);}\r\n\r\necho $xhtml;\r\n                  \r\n</pre>\r\n<p>The value for <code>$restUri</code> is determined by the “query string” of the request (setting the value of <code>$cmd</code>) and we see that <code>ajax.xslt</code> is the server side star of the show. This AJaX design permits server-side domination. The server is used almost exclusively to render client-side data and user interface elements. Since a server-side “proxy” script is <em>required</em> by the current AJaX security model to access data across domains, this design seems appropriate.</p>\r\n<p>Note that <code>$c</code> is set by <a href=\"http://en.wikipedia.org/wiki/CURL\">cURL</a>. Many Web hosts require the use of cURL for security reasons. As an example, see how <a href=\"http://wiki.dreamhost.com/index.php/CURL\">my current host introduces cURL</a> with respect to PHP.</p>\r\n<h2>“Get Amazon.com REST Data”</h2>\r\n<p>The “Get Amazon.com <acronym title=\"Representational State Transfer\">REST</acronym> Data” sample in “ <a href=\"http://songhaysystem.com/samples/ajax/\">Asynchronous JavaScript and XML Highlights</a>” uses server-side <acronym title=\"Extensible Stylesheet Language\">XSL</acronym> transformations. This quote under “Using XSLT with ECS” from the Amazon E-Commerce Service (ECS) <acronym title=\"Software Development Kit\">SDK</acronym> is very important to this sample:</p>\r\n<blockquote>\r\n  <p>You must create a namespace prefix at the top of your style sheet. In previous versions of ECS, it was possible to use the default namespace, which meant that you did not need to specify a namespace to access elements in the response. This is no longer the case.</p>\r\n</blockquote>\r\n<p>My misunderstanding of this change had me losing several hours trying to figure out why <a href=\"http://xmlsoft.org/XSLT/\">libxslt</a>, running under PHP 5 was not working properly. It turns out that I needed to select one of the ECS nodes to get the latest namespace <acronym title=\"Universal Resource Identifier\">URI</acronym>. As of this writing, this is <a href=\"http://webservices.amazon.com/AWSECommerceService/2005-10-05\">http://webservices.amazon.com/AWSECommerceService/2005-10-05</a>.</p>\r\n<h2>“Post Form Data”</h2>\r\n<p>This last and only <code>POST</code> example is based on “<a href=\"http://www.captain.at/howto-ajax-form-post-request.php\">AJAX Form POST Request—HTML Form POST/Submit with AJAX/Javascript Example/Tutorial</a>.” This design has the same structure as the previous ones except for the addition of a data collection function, <code>jsGetFormData()</code> used for the form <code>AjaxForm</code>. The <code>action</code> attribute of <code>AjaxForm</code> is <code>javascript:;</code> and the semi-colon is important because the location <code>javascript:</code> will open JavaScript Console in Firefox.</p>\r\n<h2>Selected Links to Resources</h2>\r\n<table id=\"CleanXhtmlTable_ECAAAAA2\">\r\n  <tr>\r\n    <td>\r\n      <a href=\"http://songhaysystem.com/samples/ajax/ajax.zip\">Asynchronous JavaScript and XML Highlights (*.zip)</a>\r\n    </td>\r\n    <td>The compressed archive of the files discussed in this article.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://www.w3.org/TR/REC-html40/interact/forms.html\">Forms in HTML Documents</a>”</td>\r\n    <td>Formally defines the bread and butter of REST remote procedure calls—namely “form content types” especially the all-important <code>application/x-www-form-urlencoded</code> type.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://www-128.ibm.com/developerworks/web/library/ws-wsajax/\">Call SOAP Web services with AJAX, Part 1</a>”</td>\r\n    <td>IBM of course would plug SOAP—because this means Java.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://ajaxblog.com/archives/2005/06/01/async-requests-over-an-unreliable-network\">Async Requests over an Unreliable Network</a>”</td>\r\n    <td>“The biggest void in the AJaX discussion, IMO, is how network and server availability affects XMLHttpRequests.” And of course we must prepare for when the network is down.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://www.ajaxpatterns.org/XMLHttpRequest_Call\">XMLHttpRequest Call</a>”</td>\r\n    <td>The “Handling POSTs and Other Request Types” section makes sense here…</td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <a href=\"http://www.captain.at/howto-ajax-form-post-request.php\">AJAX Form POST Request—HTML Form POST/Submit with AJAX/Javascript Example/Tutorial</a>\r\n    </td>\r\n    <td>A straight-forward example of <code>POST</code> in AJaX.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <a href=\"http://www.howtoadvice.com/StopCaching\">AJAX/RPC: “Prevent IE Caching During Partial Page Updates”</a>\r\n    </td>\r\n    <td>Explains why Microsoft Internet Explorer needs a ‘randomized’ <acronym title=\"Universal Resource Identifier\">URI</acronym> for multiple calls to the same resource. This is very important when you want to reload AJaX content when the page reloads.</td>\r\n  </tr>\r\n</table>",
    "CreateDate": "2005-12-03T21:22:39.0000000",
    "EndDate": null,
    "ModificationDate": "2005-12-03T21:22:47.0000000",
    "DocumentId": "36",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "48",
    "FragmentName": null,
    "FragmentDisplayName": "Songhay System CSS Highlights",
    "SortOrdinal": null,
    "ItemChar": "<h1>Songhay System CSS Highlights</h1>\n<p>Welcome to the ‘companion document’ to “<a href=\"http://songhaysystem.com/samples/CSS/index.html\" target=\"_blank\">Cascading Style Sheets Highlights</a>.” This is the veritable commentary track to the main feature. More details come from the main feature itself and do take time to View Source.</p>\n<h2>A Horizontal List without <code>table</code> Elements</h2>\n<p>Please see “Block Alignment: Flattening a Horizontal List” below.</p>\n<h2>A <code>table</code> Block Formatted by CSS</h2>\n<p>The ability to format <code>table</code> elements without any inline declarations is the most fundamental and foremost example of separating data from presentation. <code>table</code> elements are meant to hold data.</p>\n<p>To achieve the expected results when designing the <acronym title=\"Cascading Style Sheet\">CSS</acronym> equivalent of the <code>border</code> attribute of the <code>table</code> element, the <code>border-collapse:collapse;</code> declaration is very important.</p>\n<h2>\n  <code></code>Block Alignment: A Centered <code>table</code></h2>\n<p>Centering a block with respect to another block is accomplished with different techniques, respecting the different browsers. In a “modern” Internet Explorer browser, the parent block should align any child block by declaring <code>text-align:center;</code> in the parent block. In Firefox, it is the child block that controls itself with <code>margin-left:auto;</code> and <code>margin-right:auto;</code>. The Firefox technique seems more attractive since there appears to be more flexibility in defining centering per child instead of the parent affecting all child elements. Also text alignment should have no relationship with block alignment.</p>\n<h2>Block Alignment: A Horizontal Sequence of <code>div</code> Elements</h2>\n<p>This is a variation of “A Horizontal List without <code>table</code> Elements” aforementioned. Instead of the unordered list, we have a sequence of <code>div</code> elements with <code>float:left;</code> declared. The last <code>div</code> element is not floating and terminates the sequence with <code>clear:both;</code>—without this declaration the three floating <code>div</code> elements would hang down from their containing block, causing the containing block to collapse to a height of 1 pixel.</p>\n<h2>Block Alignment: Left-Center-Right Float</h2>\n<p>\n  <a href=\"http://www.glish.com/css/\">CSS Layout Techniques</a> has more designs based on this one. This one shows how three child blocks can be centered with respect to a parent block. What is very non-intuitive about this approach starts with the fact that the ‘middle’ child block is not declared as the second child block. It is the <em>last</em> child block. Moreover, this last block contains its own child block—and this is the block that is visible as the ‘middle’ block.</p>\n<p>See the source code of “<a href=\"http://songhaysystem.com/samples/CSS/index.html\" target=\"_blank\">Cascading Style Sheets Highlights</a>” for more details.</p>\n<h2>Block Alignment: Flattening a Horizontal List</h2>\n<p>The elegant design of <a href=\"http://www.alistapart.com/\">http://www.alistapart.com/</a> features a menu at the top of relevant pages. The menu block is an <a href=\"http://www.w3.org/TR/REC-html40/struct/lists.html\">unordered list</a> with list item elements, <code>li</code>, set to float left. This is a semantically sound design choice but the reality of Microsoft Internet Explorer and, yes, even Firefox, requires some ‘serious’ CSS thought—especially when Flattening and aligning is required.</p>\n<p>An examination of “Block Alignment: Flattening a Horizontal List” in the Songhay System <a href=\"http://songhaysystem.com/samples/CSS/index.html\">Cascading Style Sheet Highlights</a> reveals the details of this thought. Here is an unordered list about unordered lists:</p>\n<ul>\n  <li>Selecting the <code>ul</code> block and declaring a <code>border-top</code> setting prevents unexpected spacing problems in Microsoft Internet Explorer 6.x. This one is extremely strange!</li>\n  <li>Selecting the <code>ul</code> block and declaring <code>margin:0;padding:0;</code> prevents unexpected spacing problems in Microsoft Internet Explorer 6.x (for <code>margin</code>) and Firefox 1.x (for <code>padding</code>).</li>\n  <li>The block following the <code>ul</code> block needs a <code>clear</code> setting—usually <code>clear:both;</code> to prevent the last list item(s) floating left.</li>\n  <li>Defining <code>display:inline;</code> instead of <code>float:left;</code> can remove the bullets from the list. This inline style is better when this is not an issue (because there is no need to <code>clear</code> the floating <code>li</code> blocks making more modular and cleaner markup). I have to use the word ‘can’ because, somehow, over four years ago, Mark Newhouse avoids losing his bullets in “<a href=\"http://www.alistapart.com/articles/practicalcss/\">Practical CSS Layout Tips, Tricks, &amp; Techniques</a>.” I copy and paste his markup and lose the bullets.</li>\n</ul>\n<p>The Songhay System <a href=\"http://songhaysystem.com/samples/CSS/index.html\">Cascading Style Sheet Highlights</a> has only been tested in Windows. Any comments/screen shots from other platforms are welcome. And, by the way, I am not saying that <a href=\"http://www.alistapart.com/\">alistapart.com</a> is not ‘serious’—a huge portion of my CSS ideas come examining their source code. It’s just that their unordered list menu is in a ‘banner’ or header form—securely attached to the top of the window. This may be the best arrangement for most platforms and the Songhay System design remains limited.</p>\n<h2>Block Overflow</h2>\n<p>This design strategy is straight forward, the use of <code>overflow</code>, and no remarkable issues are known here. Applying this design to <code>pre</code> elements help to display code samples without unappealing resizing.</p>\n<h2>Selected Links to Resources</h2>\n<table id=\"CleanXhtmlTable_ECAAAAA2\">\n  <tr>\n    <td>\n      <a href=\"http://erraticwisdom.com/2006/01/18/5-tips-for-organizing-your-css\">5 Tips for Organizing Your CSS</a>\n    </td>\n    <td>Very intimate, mastery-oriented <acronym title=\"Cascading Style Sheet\">CSS</acronym> advice from “a <span style=\"text-decoration:line-through;\">sixteen</span> seventeen year old student living in New York”</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://www.glish.com/css/\">CSS Layout Techniques</a>\n    </td>\n    <td>A definitive resource for <code>div</code>-based <acronym title=\"Cascading Style Sheet\">CSS</acronym> design.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://www.alistapart.com/articles/customcorners/\">CSS Design: Creating Custom Corners &amp; Borders</a>\n    </td>\n    <td>Pushes beyond the <code>div</code>-based “boxy-ness” of <acronym title=\"Cascading Style Sheet\">CSS</acronym> design.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://www.exploding-boy.com\">ExplodingBoy</a>\n    </td>\n    <td>A CSS-centric Blog with “free samples” like “<a href=\"http://www.exploding-boy.com/2005/12/29/14-free-vertical-css-menus/\" title=\"Permanent Link to &quot;14 Free Vertical CSS Menus&quot;\">14 Free Vertical CSS Menus</a>” and “<a href=\"http://www.exploding-boy.com/2005/12/15/free-css-navigation-designs/\">Free CSS Navigation Menu Designs</a>.”</td>\n  </tr>\n  <tr>\n    <td><a href=\"http://www.csszengarden.com/\">csszengarden.com</a></td>\n    <td>“A demonstration of what can be accomplished visually through CSS-based design.”</td>\n  </tr>\n  <tr>\n    <td>“<a href=\"http://nemesis1.f2o.org/aarchive?id=11\">Curing Float Drops and Wraps</a>”</td>\n    <td>Zoe Gillenwater covers a common CSS implementation problem that is a cross-browser irritation.</td>\n  </tr>\n</table>",
    "ItemText": "<h1>Songhay System CSS Highlights</h1>\n<p>Welcome to the ‘companion document’ to “<a href=\"http://songhaysystem.com/samples/CSS/index.html\" target=\"_blank\">Cascading Style Sheets Highlights</a>.” This is the veritable commentary track to the main feature. More details come from the main feature itself and do take time to View Source.</p>\n<h2>A Horizontal List without <code>table</code> Elements</h2>\n<p>Please see “Block Alignment: Flattening a Horizontal List” below.</p>\n<h2>A <code>table</code> Block Formatted by CSS</h2>\n<p>The ability to format <code>table</code> elements without any inline declarations is the most fundamental and foremost example of separating data from presentation. <code>table</code> elements are meant to hold data.</p>\n<p>To achieve the expected results when designing the <acronym title=\"Cascading Style Sheet\">CSS</acronym> equivalent of the <code>border</code> attribute of the <code>table</code> element, the <code>border-collapse:collapse;</code> declaration is very important.</p>\n<h2>\n  <code></code>Block Alignment: A Centered <code>table</code></h2>\n<p>Centering a block with respect to another block is accomplished with different techniques, respecting the different browsers. In a “modern” Internet Explorer browser, the parent block should align any child block by declaring <code>text-align:center;</code> in the parent block. In Firefox, it is the child block that controls itself with <code>margin-left:auto;</code> and <code>margin-right:auto;</code>. The Firefox technique seems more attractive since there appears to be more flexibility in defining centering per child instead of the parent affecting all child elements. Also text alignment should have no relationship with block alignment.</p>\n<h2>Block Alignment: A Horizontal Sequence of <code>div</code> Elements</h2>\n<p>This is a variation of “A Horizontal List without <code>table</code> Elements” aforementioned. Instead of the unordered list, we have a sequence of <code>div</code> elements with <code>float:left;</code> declared. The last <code>div</code> element is not floating and terminates the sequence with <code>clear:both;</code>—without this declaration the three floating <code>div</code> elements would hang down from their containing block, causing the containing block to collapse to a height of 1 pixel.</p>\n<h2>Block Alignment: Left-Center-Right Float</h2>\n<p>\n  <a href=\"http://www.glish.com/css/\">CSS Layout Techniques</a> has more designs based on this one. This one shows how three child blocks can be centered with respect to a parent block. What is very non-intuitive about this approach starts with the fact that the ‘middle’ child block is not declared as the second child block. It is the <em>last</em> child block. Moreover, this last block contains its own child block—and this is the block that is visible as the ‘middle’ block.</p>\n<p>See the source code of “<a href=\"http://songhaysystem.com/samples/CSS/index.html\" target=\"_blank\">Cascading Style Sheets Highlights</a>” for more details.</p>\n<h2>Block Alignment: Flattening a Horizontal List</h2>\n<p>The elegant design of <a href=\"http://www.alistapart.com/\">http://www.alistapart.com/</a> features a menu at the top of relevant pages. The menu block is an <a href=\"http://www.w3.org/TR/REC-html40/struct/lists.html\">unordered list</a> with list item elements, <code>li</code>, set to float left. This is a semantically sound design choice but the reality of Microsoft Internet Explorer and, yes, even Firefox, requires some ‘serious’ CSS thought—especially when Flattening and aligning is required.</p>\n<p>An examination of “Block Alignment: Flattening a Horizontal List” in the Songhay System <a href=\"http://songhaysystem.com/samples/CSS/index.html\">Cascading Style Sheet Highlights</a> reveals the details of this thought. Here is an unordered list about unordered lists:</p>\n<ul>\n  <li>Selecting the <code>ul</code> block and declaring a <code>border-top</code> setting prevents unexpected spacing problems in Microsoft Internet Explorer 6.x. This one is extremely strange!</li>\n  <li>Selecting the <code>ul</code> block and declaring <code>margin:0;padding:0;</code> prevents unexpected spacing problems in Microsoft Internet Explorer 6.x (for <code>margin</code>) and Firefox 1.x (for <code>padding</code>).</li>\n  <li>The block following the <code>ul</code> block needs a <code>clear</code> setting—usually <code>clear:both;</code> to prevent the last list item(s) floating left.</li>\n  <li>Defining <code>display:inline;</code> instead of <code>float:left;</code> can remove the bullets from the list. This inline style is better when this is not an issue (because there is no need to <code>clear</code> the floating <code>li</code> blocks making more modular and cleaner markup). I have to use the word ‘can’ because, somehow, over four years ago, Mark Newhouse avoids losing his bullets in “<a href=\"http://www.alistapart.com/articles/practicalcss/\">Practical CSS Layout Tips, Tricks, &amp; Techniques</a>.” I copy and paste his markup and lose the bullets.</li>\n</ul>\n<p>The Songhay System <a href=\"http://songhaysystem.com/samples/CSS/index.html\">Cascading Style Sheet Highlights</a> has only been tested in Windows. Any comments/screen shots from other platforms are welcome. And, by the way, I am not saying that <a href=\"http://www.alistapart.com/\">alistapart.com</a> is not ‘serious’—a huge portion of my CSS ideas come examining their source code. It’s just that their unordered list menu is in a ‘banner’ or header form—securely attached to the top of the window. This may be the best arrangement for most platforms and the Songhay System design remains limited.</p>\n<h2>Block Overflow</h2>\n<p>This design strategy is straight forward, the use of <code>overflow</code>, and no remarkable issues are known here. Applying this design to <code>pre</code> elements help to display code samples without unappealing resizing.</p>\n<h2>Selected Links to Resources</h2>\n<table id=\"CleanXhtmlTable_ECAAAAA2\">\n  <tr>\n    <td>\n      <a href=\"http://erraticwisdom.com/2006/01/18/5-tips-for-organizing-your-css\">5 Tips for Organizing Your CSS</a>\n    </td>\n    <td>Very intimate, mastery-oriented <acronym title=\"Cascading Style Sheet\">CSS</acronym> advice from “a <span style=\"text-decoration:line-through;\">sixteen</span> seventeen year old student living in New York”</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://www.glish.com/css/\">CSS Layout Techniques</a>\n    </td>\n    <td>A definitive resource for <code>div</code>-based <acronym title=\"Cascading Style Sheet\">CSS</acronym> design.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://www.alistapart.com/articles/customcorners/\">CSS Design: Creating Custom Corners &amp; Borders</a>\n    </td>\n    <td>Pushes beyond the <code>div</code>-based “boxy-ness” of <acronym title=\"Cascading Style Sheet\">CSS</acronym> design.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://www.exploding-boy.com\">ExplodingBoy</a>\n    </td>\n    <td>A CSS-centric Blog with “free samples” like “<a href=\"http://www.exploding-boy.com/2005/12/29/14-free-vertical-css-menus/\" title=\"Permanent Link to &quot;14 Free Vertical CSS Menus&quot;\">14 Free Vertical CSS Menus</a>” and “<a href=\"http://www.exploding-boy.com/2005/12/15/free-css-navigation-designs/\">Free CSS Navigation Menu Designs</a>.”</td>\n  </tr>\n  <tr>\n    <td><a href=\"http://www.csszengarden.com/\">csszengarden.com</a></td>\n    <td>“A demonstration of what can be accomplished visually through CSS-based design.”</td>\n  </tr>\n  <tr>\n    <td>“<a href=\"http://nemesis1.f2o.org/aarchive?id=11\">Curing Float Drops and Wraps</a>”</td>\n    <td>Zoe Gillenwater covers a common CSS implementation problem that is a cross-browser irritation.</td>\n  </tr>\n</table>",
    "CreateDate": "2006-01-14T12:43:00.0000000",
    "EndDate": null,
    "ModificationDate": "2007-05-08T14:42:55.0930000",
    "DocumentId": "37",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "49",
    "FragmentName": null,
    "FragmentDisplayName": "The Resource Location Manager: A Tiny C# Application That Solves the “Favorites Problem”",
    "SortOrdinal": null,
    "ItemChar": "<h1>The Resource Location Manager: A Tiny C# Application That Solves the “Favorites Problem”</h1><p>The tiny C# application summarized here is not the first C# application from Songhay System. It’s the first <em>presentable</em> C# application. Other Songhay solutions with C# is tied so closely to legacy data and relatively large and complex systems, that the task of simply <em>presenting</em> a C#—application for the sake of C#, introducing the .NET Framework—would be overshadowed by a long list of types and too many namespaces.</p><p>By no means is there time to waste trying to dream up a tiny application just for the sake of this article. So years after .NET 1.x is released, on the heels of the 2.0 release, this article presents a real 1.1 application, solving a real simple problem: the Favorites problem.</p><h2>The Favorites Problem</h2><p>At the beginning of 2004, my Desktop Start Menu displayed over 600 Favorites or <a href=\"http://en.wikipedia.org/wiki/Bookmarks\">bookmarks</a>—from over 600 little text files. The challenge of placing these Favorites into <em>one</em> <acronym title=\"Extensible Markup Language\">XML</acronym> file to display them from a Desktop menu is easily solved by the .NET Framework. Underneath all the Web services and data grids is the primal power of XML. The opinion here is that this solution to the Favorites problem demonstrates the awesome primacy of XML. In fact, this solution goes beyond Internet bookmarks and preserves and executes shell commands as well. This ‘extra’ functionality is the main reason why this Application is regarded as a ‘resource location manager.’</p><h2>The Class View</h2><p align=\"center\"><img alt=\"Class View\" src=\"http://songhaysystem.com/bitmaps/SonghayLinks/ClassView.jpg\" /></p><p>To accentuate the negative first, note the <code>ExceptionHandler</code> and <code>SaveException</code> types above—these types are <em>not</em> used by the <code>Client</code> type, the “main” application. They are hanging out as bloat because the <code>Xml.Manager</code> class has a dependency on them. This implies that our <code>Xml.Manager</code> is designed for larger, often server-based solutions and is currently not flexible enough to handle a tiny C# application like this one without a bit of bloat. Exceptions in this application are written directly to the screen as pop-up dialog boxes because only a few exceptions are expected.</p><p>Now, a few comments about each class in the Class View shown above:</p><h3>The <code>Songhay.Xml.Manager</code> Class</h3><p>This class is used to call routines for getting XML attribute values and node sets. The assumption here is that these routines are easier to use than what is offered by <code>System.XML</code> itself. There are others such as <a href=\"http://donxml.com/allthingstechie/\">DonXML</a> that have spent time developing a custom XML solution as well. Although time and opportunity has not permitted a thorough investigation of these products, what is certain is that <code>System.XML</code> requires customization for a particular solution. Surely our behavior is “by design”!</p><h3>The <code>Songhay.Reflection</code> Class</h3><p>The <code>Songhay.Xml.Manager</code> class depends on the <code>Songhay.Reflection</code> class. This is because the Songhay XML Manager has the ability to load XML from embedded resources. The <code>LoadStream()</code> member of <code>Songhay.Reflection</code> does this job.</p><h3>The <code>Songhay.WinForms.Managers.IconManager</code> Class</h3><p>This type is used to load an icon embedded as a resource in this application. The <code>IconManager.ManifestIcon()</code> member loads <code>\"Icons.Kinte.ico\"</code> in the constructor of <code>Client</code>. It follows that the Build Action of the icon is <a href=\"http://www.jelovic.com/articles/resources_in_visual_studio.htm\">Embedded Resource</a>.</p><h3>The <code>Songhay.WinForms.ResourceLocationManager.Client</code> Class</h3><p>This class is the application itself. The name “Client” indicates a Songhay System User Interface. The next section will highlight some of the features of this type.</p><h2>Client Highlights</h2><h3>Unhandled Exceptions</h3><p>The Client has an <code>Application_ThreadException()</code> handler. This implies the intention of implementing “best practices” for Windows Forms. This reveals a design meant to catch ‘all’ unhandled exceptions in the application. But according to Peter A. Bromberg, Ph.D. in “<a href=\"http://www.eggheadcafe.com/articles/20051205.asp\">Getting Better Information on Unhandled Exceptions</a>,” this handler is only one-fifth of the solution:</p><blockquote><p>There are basically five ways I’ve identified so far that enable you to deal with UE’s (Unhandled Exceptions):</p><p>1. Putting <code>Application.Run()</code> in try-catch block</p><p>2. Using <code>Application.ThreadException</code> event</p><p>3. Using <code>AppDomain.UnhandledException</code> event</p><p>4. Add registry entry to pop up JIT Debugger</p><p>5. Use ADPLUS in crash mode with debug symbols installed.</p></blockquote><h3>Preventing Multiple Instances from Running</h3><p>The following form of <code>Client.Main()</code> means to prevent multiple instances from running:</p><pre xml:space=\"preserve\">\r\n/// &amp;lt;summary&amp;gt;\r\n/// The main entry point for the application.\r\n/// &amp;lt;/summary&amp;gt;\r\n[STAThread]\r\nstatic void Main()\r\n{\r\n    _mutex = new Mutex(true,&amp;quot;SonghayLinksClient&amp;quot;);\r\n\r\n    if(_mutex.WaitOne(0,false))\r\n    {\r\n        Client c = new Client();\r\n        Application.ThreadException +=\r\n            new System.Threading.ThreadExceptionEventHandler(Application_ThreadException);\r\n        Application.Run();\r\n    }\r\n    else\r\n        Application.Exit();\r\n}\r\n\r\n                    \r\n</pre><p>Joseph M. Newcomer in “<a href=\"http://www.developerfusion.co.uk/show/1716/5/\">Avoiding Multiple Instances of an Application—Why FindWindow doesn’t work</a>” has a broader discussion of relevant techniques.</p><h3><code>_xmlLocal</code> and <code>_xmlRemote</code></h3><p>Is this application a “<a href=\"http://blogs.msdn.com/dphill/articles/66300.aspx\">Smart Client</a>”? This tiny application loads and displays two XML files. A screenshot from an old Windows 2000 installation can be seen in the Blog entry “<a href=\"http://www.kintespace.com/rasxlog/?p=191\" title=\"Permanent Link: XML Favorites for Windows\">XML Favorites for Windows</a>.” These XML file locations are defined in <code>App.Config</code> with the expectation that there will be a local file and a remote file.</p><p>The primary reason for this design is to secure command-line entries that are not <acronym title=\"Universal Resource Identifier\">URI</acronym>s in a local, machine-dependent, XML file while sharing a remote, universal XML file. By the way, the same remote XML file used by this application is consumed via <acronym title=\"Asynchronous JavaScript and XML\">AJAX</acronym> by the <a href=\"http://www.kintespace.com/klinks.html\">kinté links page</a> of kintespace.com, the first Songhay System Web site.</p><h3>The XML Schema Is Based on OPML</h3><p>A ‘dialect’ of <a href=\"http://en.wikipedia.org/wiki/OPML\">OPML 1.0</a> was used to store the bookmarks for this application. Our interpretation of Dave Winer’s <code>outline</code> element is that is can be ‘extended’ with any attribute. The <code>my:uri</code> attribute is therefore ‘attached’ to outline to provide locations for our “favorites.” The use of <code>my</code> for a namespace identifier should immediately hint to modern Microsoft Office users that there must be an InfoPath form supporting this XML file.</p><p>OPML, its generic design, promises to be the schema supporting almost all list-like data structures. The assumption here is its repeated use in InfoPath form design and in XPath expressions will speed up development time.</p><p>And speaking of XPath expressions, the <code>key</code> attributes prefixed with <code>xpath_</code>, in <code>appSettings</code> of <code>App.config</code>, are meant to make the compiled code somewhat schema independent. In other words, no XML elements are “hard-coded” in the “business logic.” All references to XML elements are stored in <code>App.config</code>.</p><h3>Parsing XML Data with Regular Expressions</h3><p>Some thought was devoted to how the command-line entries are processed in this application. This ‘thought’ resulted in the following logic:</p><pre xml:space=\"preserve\">\r\nMatchCollection matches = Regex.Matches(uri,@&amp;quot;&amp;quot;&amp;quot;[^&amp;quot;&amp;quot;]+&amp;quot;&amp;quot;|\\s+[\\/-]\\w+&amp;quot;);\r\n\r\n                    \r\n</pre><p>This is the first step taken to locate the file part and the argument(s) part of a <acronym title=\"Universal Resource Identifier\">URI</acronym>. So, for example, this is the entry for editing the HOSTS text file with Notepad++:</p><pre xml:space=\"preserve\">\r\n&amp;quot;C:\\Program Files\\Notepad++\\notepad++.exe&amp;quot; %SystemRoot%\\System32\\DRIVERS\\ETC\\HOSTS\r\n\r\n                    \r\n</pre><p>The content inside the quotes is the file part and one argument follows a whitespace character. Also note that <code>Environment.ExpandEnvironmentVariables()</code> comes in handy here.</p><h3>Handling Command-Line Arguments</h3><p>The constructor of <code>Client</code> checks for environment variables with the following logic:</p><pre xml:space=\"preserve\">\r\nstring[] args = Environment.GetCommandLineArgs();\r\nthis._useAltBrowser = (System.Array.IndexOf(args,&amp;quot;-altbrowser&amp;quot;) != -1);\r\n\r\n                    \r\n</pre><p>So <code>–altbrowser</code> is the command line option that will open an ‘alternative’ browser instead of the default Internet Explorer. The alternative browser is declared in <code>App.config</code> in <code>appSettings</code> as:</p><pre xml:space=\"preserve\">\r\n&amp;lt;add key=&amp;quot;alt_browser&amp;quot; value=&amp;quot;C:\\Program Files\\Mozilla Firefox\\firefox.exe&amp;quot; /&amp;gt;\r\n\r\n                    \r\n</pre><h3>Shutting Down When Windows Shuts Down</h3><p>In “<a href=\"http://msdn.microsoft.com/msdnmag/issues/05/09/WindowsForms/default.aspx\">Sprinkle Some Pizzazz on Your Plain Vanilla Windows Forms Apps</a>,” Bill Wagner writes:</p><blockquote><p>If a user logs off Windows while your application is running, Windows will request that your application exit by raising the <code>SessionEnded</code> event. If you don’t respond to this event, Windows will assume your application just crashed. Windows will tell your users that your application is not responding, and will request to terminate it.</p></blockquote><p>The following form of <code>Client.Main()</code> means to force this application to quit when windows shuts down:</p><pre xml:space=\"preserve\">\r\nprivate void SystemEvents_SessionEnded(object sender,SessionEndedEventArgs e)\r\n{\r\n   this._icon.Visible = false;\r\n   Application.Exit();\r\n}\r\n\r\n                    \r\n</pre><h2>Enhancing the Application</h2><p>Most of the desired improvements in this tiny application are down to the bare metal of Windows Forms itself:</p><ul><li>The <code>System.Windows.Forms.MenuItem</code> needs a proper <code>Icon</code> property. A closer look at Windows Forms 2.0 may reveal an easy way to show menu items in Notification Area with icons. This would make the menus easer to scan.</li><li>A built-in “balloon help” control for the Notification Area would replace pop-up dialog boxes. This need is recognized by Rama Krishna Vavilala in “<a href=\"http://www.codeproject.com/cs/miscctrl/balloonnet.asp\">Balloon Windows for .NET</a>” at CodeProject.com. Again, this may be featured somewhere in Windows Forms 2.0.</li></ul><h2>Selected Links to Resources</h2><table id=\"CleanXhtmlTable_IDAOTCY2\"><tr><td><a href=\"http://songhaysystem.com/samples/SonghayLinks/SonghayLinks.zip\">Resource Location Manager</a></td><td>Download the compiled assembly, the subject of this document.</td></tr><tr><td>“<a href=\"http://www.interact-sw.co.uk/iangblog/2004/11/30/nomainform\">You Don’t Need a ‘Main’ Form</a>”</td><td>This article from Ian Griffiths, co-author of <a href=\"http://www.amazon.com/exec/obidos/ISBN=0596003609/thekintespacec00A/\" title=\"Buy this book at Amazon.com\"><em>Mastering Visual Studio .NET</em></a>, provided the fundamental concepts that made this application conceivable.</td></tr><tr><td><a href=\"http://taskable.com/\">Taskable</a></td><td>The design of this <acronym title=\"Outline Processor Markup Language\">OPML</acronym> application resembles our app. Taskable menu items look much better than what we have here. My guess is that Taskable is not written with .NET Framework 1.1. It looks like an unmanaged, Win32 application.</td></tr><tr><td>“<a href=\"http://www.codeproject.com/csharp/XYNetSocket.asp\">A Simple .NET TCP Socket Component</a>”</td><td>This article may lead to the next conceptual jump for this kind of application. Maybe not…</td></tr><tr><td>“<a href=\"http://www.jelovic.com/articles/resources_in_visual_studio.htm\">Using Resources in Visual Studio .NET</a>”</td><td>Dejan Jelovic writes, “Visual Studio .NET seems to have a weird model for adding and managing resources such as bitmaps and locale-specific strings. It doesn’t work in all the cases, it’s illogical, tool support is poor, and it’s badly documented.”</td></tr></table>",
    "ItemText": "<h1>The Resource Location Manager: A Tiny C# Application That Solves the “Favorites Problem”</h1><p>The tiny C# application summarized here is not the first C# application from Songhay System. It’s the first <em>presentable</em> C# application. Other Songhay solutions with C# is tied so closely to legacy data and relatively large and complex systems, that the task of simply <em>presenting</em> a C#—application for the sake of C#, introducing the .NET Framework—would be overshadowed by a long list of types and too many namespaces.</p><p>By no means is there time to waste trying to dream up a tiny application just for the sake of this article. So years after .NET 1.x is released, on the heels of the 2.0 release, this article presents a real 1.1 application, solving a real simple problem: the Favorites problem.</p><h2>The Favorites Problem</h2><p>At the beginning of 2004, my Desktop Start Menu displayed over 600 Favorites or <a href=\"http://en.wikipedia.org/wiki/Bookmarks\">bookmarks</a>—from over 600 little text files. The challenge of placing these Favorites into <em>one</em> <acronym title=\"Extensible Markup Language\">XML</acronym> file to display them from a Desktop menu is easily solved by the .NET Framework. Underneath all the Web services and data grids is the primal power of XML. The opinion here is that this solution to the Favorites problem demonstrates the awesome primacy of XML. In fact, this solution goes beyond Internet bookmarks and preserves and executes shell commands as well. This ‘extra’ functionality is the main reason why this Application is regarded as a ‘resource location manager.’</p><h2>The Class View</h2><p align=\"center\"><img alt=\"Class View\" src=\"http://songhaysystem.com/bitmaps/SonghayLinks/ClassView.jpg\" /></p><p>To accentuate the negative first, note the <code>ExceptionHandler</code> and <code>SaveException</code> types above—these types are <em>not</em> used by the <code>Client</code> type, the “main” application. They are hanging out as bloat because the <code>Xml.Manager</code> class has a dependency on them. This implies that our <code>Xml.Manager</code> is designed for larger, often server-based solutions and is currently not flexible enough to handle a tiny C# application like this one without a bit of bloat. Exceptions in this application are written directly to the screen as pop-up dialog boxes because only a few exceptions are expected.</p><p>Now, a few comments about each class in the Class View shown above:</p><h3>The <code>Songhay.Xml.Manager</code> Class</h3><p>This class is used to call routines for getting XML attribute values and node sets. The assumption here is that these routines are easier to use than what is offered by <code>System.XML</code> itself. There are others such as <a href=\"http://donxml.com/allthingstechie/\">DonXML</a> that have spent time developing a custom XML solution as well. Although time and opportunity has not permitted a thorough investigation of these products, what is certain is that <code>System.XML</code> requires customization for a particular solution. Surely our behavior is “by design”!</p><h3>The <code>Songhay.Reflection</code> Class</h3><p>The <code>Songhay.Xml.Manager</code> class depends on the <code>Songhay.Reflection</code> class. This is because the Songhay XML Manager has the ability to load XML from embedded resources. The <code>LoadStream()</code> member of <code>Songhay.Reflection</code> does this job.</p><h3>The <code>Songhay.WinForms.Managers.IconManager</code> Class</h3><p>This type is used to load an icon embedded as a resource in this application. The <code>IconManager.ManifestIcon()</code> member loads <code>\"Icons.Kinte.ico\"</code> in the constructor of <code>Client</code>. It follows that the Build Action of the icon is <a href=\"http://www.jelovic.com/articles/resources_in_visual_studio.htm\">Embedded Resource</a>.</p><h3>The <code>Songhay.WinForms.ResourceLocationManager.Client</code> Class</h3><p>This class is the application itself. The name “Client” indicates a Songhay System User Interface. The next section will highlight some of the features of this type.</p><h2>Client Highlights</h2><h3>Unhandled Exceptions</h3><p>The Client has an <code>Application_ThreadException()</code> handler. This implies the intention of implementing “best practices” for Windows Forms. This reveals a design meant to catch ‘all’ unhandled exceptions in the application. But according to Peter A. Bromberg, Ph.D. in “<a href=\"http://www.eggheadcafe.com/articles/20051205.asp\">Getting Better Information on Unhandled Exceptions</a>,” this handler is only one-fifth of the solution:</p><blockquote><p>There are basically five ways I’ve identified so far that enable you to deal with UE’s (Unhandled Exceptions):</p><p>1. Putting <code>Application.Run()</code> in try-catch block</p><p>2. Using <code>Application.ThreadException</code> event</p><p>3. Using <code>AppDomain.UnhandledException</code> event</p><p>4. Add registry entry to pop up JIT Debugger</p><p>5. Use ADPLUS in crash mode with debug symbols installed.</p></blockquote><h3>Preventing Multiple Instances from Running</h3><p>The following form of <code>Client.Main()</code> means to prevent multiple instances from running:</p><pre xml:space=\"preserve\">\r\n/// &amp;lt;summary&amp;gt;\r\n/// The main entry point for the application.\r\n/// &amp;lt;/summary&amp;gt;\r\n[STAThread]\r\nstatic void Main()\r\n{\r\n    _mutex = new Mutex(true,&amp;quot;SonghayLinksClient&amp;quot;);\r\n\r\n    if(_mutex.WaitOne(0,false))\r\n    {\r\n        Client c = new Client();\r\n        Application.ThreadException +=\r\n            new System.Threading.ThreadExceptionEventHandler(Application_ThreadException);\r\n        Application.Run();\r\n    }\r\n    else\r\n        Application.Exit();\r\n}\r\n\r\n                    \r\n</pre><p>Joseph M. Newcomer in “<a href=\"http://www.developerfusion.co.uk/show/1716/5/\">Avoiding Multiple Instances of an Application—Why FindWindow doesn’t work</a>” has a broader discussion of relevant techniques.</p><h3><code>_xmlLocal</code> and <code>_xmlRemote</code></h3><p>Is this application a “<a href=\"http://blogs.msdn.com/dphill/articles/66300.aspx\">Smart Client</a>”? This tiny application loads and displays two XML files. A screenshot from an old Windows 2000 installation can be seen in the Blog entry “<a href=\"http://www.kintespace.com/rasxlog/?p=191\" title=\"Permanent Link: XML Favorites for Windows\">XML Favorites for Windows</a>.” These XML file locations are defined in <code>App.Config</code> with the expectation that there will be a local file and a remote file.</p><p>The primary reason for this design is to secure command-line entries that are not <acronym title=\"Universal Resource Identifier\">URI</acronym>s in a local, machine-dependent, XML file while sharing a remote, universal XML file. By the way, the same remote XML file used by this application is consumed via <acronym title=\"Asynchronous JavaScript and XML\">AJAX</acronym> by the <a href=\"http://www.kintespace.com/klinks.html\">kinté links page</a> of kintespace.com, the first Songhay System Web site.</p><h3>The XML Schema Is Based on OPML</h3><p>A ‘dialect’ of <a href=\"http://en.wikipedia.org/wiki/OPML\">OPML 1.0</a> was used to store the bookmarks for this application. Our interpretation of Dave Winer’s <code>outline</code> element is that is can be ‘extended’ with any attribute. The <code>my:uri</code> attribute is therefore ‘attached’ to outline to provide locations for our “favorites.” The use of <code>my</code> for a namespace identifier should immediately hint to modern Microsoft Office users that there must be an InfoPath form supporting this XML file.</p><p>OPML, its generic design, promises to be the schema supporting almost all list-like data structures. The assumption here is its repeated use in InfoPath form design and in XPath expressions will speed up development time.</p><p>And speaking of XPath expressions, the <code>key</code> attributes prefixed with <code>xpath_</code>, in <code>appSettings</code> of <code>App.config</code>, are meant to make the compiled code somewhat schema independent. In other words, no XML elements are “hard-coded” in the “business logic.” All references to XML elements are stored in <code>App.config</code>.</p><h3>Parsing XML Data with Regular Expressions</h3><p>Some thought was devoted to how the command-line entries are processed in this application. This ‘thought’ resulted in the following logic:</p><pre xml:space=\"preserve\">\r\nMatchCollection matches = Regex.Matches(uri,@&amp;quot;&amp;quot;&amp;quot;[^&amp;quot;&amp;quot;]+&amp;quot;&amp;quot;|\\s+[\\/-]\\w+&amp;quot;);\r\n\r\n                    \r\n</pre><p>This is the first step taken to locate the file part and the argument(s) part of a <acronym title=\"Universal Resource Identifier\">URI</acronym>. So, for example, this is the entry for editing the HOSTS text file with Notepad++:</p><pre xml:space=\"preserve\">\r\n&amp;quot;C:\\Program Files\\Notepad++\\notepad++.exe&amp;quot; %SystemRoot%\\System32\\DRIVERS\\ETC\\HOSTS\r\n\r\n                    \r\n</pre><p>The content inside the quotes is the file part and one argument follows a whitespace character. Also note that <code>Environment.ExpandEnvironmentVariables()</code> comes in handy here.</p><h3>Handling Command-Line Arguments</h3><p>The constructor of <code>Client</code> checks for environment variables with the following logic:</p><pre xml:space=\"preserve\">\r\nstring[] args = Environment.GetCommandLineArgs();\r\nthis._useAltBrowser = (System.Array.IndexOf(args,&amp;quot;-altbrowser&amp;quot;) != -1);\r\n\r\n                    \r\n</pre><p>So <code>–altbrowser</code> is the command line option that will open an ‘alternative’ browser instead of the default Internet Explorer. The alternative browser is declared in <code>App.config</code> in <code>appSettings</code> as:</p><pre xml:space=\"preserve\">\r\n&amp;lt;add key=&amp;quot;alt_browser&amp;quot; value=&amp;quot;C:\\Program Files\\Mozilla Firefox\\firefox.exe&amp;quot; /&amp;gt;\r\n\r\n                    \r\n</pre><h3>Shutting Down When Windows Shuts Down</h3><p>In “<a href=\"http://msdn.microsoft.com/msdnmag/issues/05/09/WindowsForms/default.aspx\">Sprinkle Some Pizzazz on Your Plain Vanilla Windows Forms Apps</a>,” Bill Wagner writes:</p><blockquote><p>If a user logs off Windows while your application is running, Windows will request that your application exit by raising the <code>SessionEnded</code> event. If you don’t respond to this event, Windows will assume your application just crashed. Windows will tell your users that your application is not responding, and will request to terminate it.</p></blockquote><p>The following form of <code>Client.Main()</code> means to force this application to quit when windows shuts down:</p><pre xml:space=\"preserve\">\r\nprivate void SystemEvents_SessionEnded(object sender,SessionEndedEventArgs e)\r\n{\r\n   this._icon.Visible = false;\r\n   Application.Exit();\r\n}\r\n\r\n                    \r\n</pre><h2>Enhancing the Application</h2><p>Most of the desired improvements in this tiny application are down to the bare metal of Windows Forms itself:</p><ul><li>The <code>System.Windows.Forms.MenuItem</code> needs a proper <code>Icon</code> property. A closer look at Windows Forms 2.0 may reveal an easy way to show menu items in Notification Area with icons. This would make the menus easer to scan.</li><li>A built-in “balloon help” control for the Notification Area would replace pop-up dialog boxes. This need is recognized by Rama Krishna Vavilala in “<a href=\"http://www.codeproject.com/cs/miscctrl/balloonnet.asp\">Balloon Windows for .NET</a>” at CodeProject.com. Again, this may be featured somewhere in Windows Forms 2.0.</li></ul><h2>Selected Links to Resources</h2><table id=\"CleanXhtmlTable_IDAOTCY2\"><tr><td><a href=\"http://songhaysystem.com/samples/SonghayLinks/SonghayLinks.zip\">Resource Location Manager</a></td><td>Download the compiled assembly, the subject of this document.</td></tr><tr><td>“<a href=\"http://www.interact-sw.co.uk/iangblog/2004/11/30/nomainform\">You Don’t Need a ‘Main’ Form</a>”</td><td>This article from Ian Griffiths, co-author of <a href=\"http://www.amazon.com/exec/obidos/ISBN=0596003609/thekintespacec00A/\" title=\"Buy this book at Amazon.com\"><em>Mastering Visual Studio .NET</em></a>, provided the fundamental concepts that made this application conceivable.</td></tr><tr><td><a href=\"http://taskable.com/\">Taskable</a></td><td>The design of this <acronym title=\"Outline Processor Markup Language\">OPML</acronym> application resembles our app. Taskable menu items look much better than what we have here. My guess is that Taskable is not written with .NET Framework 1.1. It looks like an unmanaged, Win32 application.</td></tr><tr><td>“<a href=\"http://www.codeproject.com/csharp/XYNetSocket.asp\">A Simple .NET TCP Socket Component</a>”</td><td>This article may lead to the next conceptual jump for this kind of application. Maybe not…</td></tr><tr><td>“<a href=\"http://www.jelovic.com/articles/resources_in_visual_studio.htm\">Using Resources in Visual Studio .NET</a>”</td><td>Dejan Jelovic writes, “Visual Studio .NET seems to have a weird model for adding and managing resources such as bitmaps and locale-specific strings. It doesn’t work in all the cases, it’s illogical, tool support is poor, and it’s badly documented.”</td></tr></table>",
    "CreateDate": "2006-01-23T13:57:48.0000000",
    "EndDate": null,
    "ModificationDate": "2006-01-23T13:57:54.0000000",
    "DocumentId": "38",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "50",
    "FragmentName": null,
    "FragmentDisplayName": "A .NET Assembly Linker for Microsoft Word 2003 Documents",
    "SortOrdinal": null,
    "ItemChar": "\r\n<h1>A .NET Assembly Linker for Microsoft Word 2003 Documents</h1>\r\n<h2>VSTO Assembly Linker</h2>\r\n<p>\r\n  <acronym title=\"Visual Studio Tools for the Microsoft Office System\">VSTO</acronym> Assembly Linker is a little utility that links Microsoft Office Word Documents to Visual Studio Tools for Office 2003 assemblies. This tool is essentially a .NET <acronym title=\"User Interface\">UI</acronym> wrapper for the <code>OfficeToolkit.Persistence</code> ActiveX object. Download links are shown below.</p>\r\n<p>The VSTO Assembly Linker allows Office “power users” to limit the surface area of Office Application exposed to .NET assemblies down to the document level. This visual interface is an option to those not fond of the command line and provides easy-to-understand visuals for documenting policies and procedures related to Microsoft Office System applications in the enterprise.</p>\r\n<h2>User Interface</h2>\r\n<p>The user interface (below) displays the four-step process involved in linking a VSTO Assembly:</p>\r\n<p align=\"center\">\r\n  <img alt=\"VSTO Assembly Linker UI\" src=\"http://songhaysystem.com/bitmaps/VstoAsmLinker/ui.jpg\" /></p>\r\n<p>\r\n  <em>Select VSTO Assembly…</em> This command is used to specify the VSTO assembly to connect to an Office Word Document. The location to the assembly can be a Windows path, a <acronym title=\"Uniform Resource Locator\">URL</acronym> or a <acronym title=\"Universal Naming Convention \">UNC</acronym>. To select local Windows paths click on the icon on the left or the ellipses button next to the first text box. <em>A note to administrators:</em> you may need to review the Code Access Security policy of the VSTO assembly with CASPOL.EXE. Please see “Selected Links to Resources” at the bottom of this document for more information.</p>\r\n<p>\r\n  <em>Enter VSTO Assembly Name…</em> This value is automatically entered when a local assembly is selected through the interface in the first step. In the case of remote assemblies, the name must be manually entered. This value corresponds to the <code>AssemblyName.Name</code> <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpref/html/frlrfsystemreflectionassemblynameclassnametopic.asp\">property</a> and is usually the filename prefix of the assembly.</p>\r\n<p>\r\n  <em>Select Office Word Document…</em> This command is used to specify the Office Word document to link to. Note that this document can be in DOC or XML format. To select local Windows paths click on the icon on the right or the ellipses button next to the last text box.</p>\r\n<p>To link the document, click on the <strong>Link!</strong> button in the middle of the form.</p>\r\n<h2>Known Issues</h2>\r\n<ul>\r\n  <li>\r\n    <em>The ellipses (…) in Menu items appear incorrectly on some Windows 2000 systems.</em> This probably has something to do with ‘limited’ Unicode support in Windows 2000. This problem is of the rare case of a C# programmer concerned about Latin glyphs and typography!</li>\r\n  <li>\r\n    <em>Limited testing.</em> VSTO Assembly Linker has only been tested on Office Word documents linked to Visual Studio 2003 assemblies. It ‘should’ work on other Office documents and perhaps other <acronym title=\"Visual Studio Tools for the Microsoft Office System\">VSTO</acronym> assemblies.</li>\r\n  <li>\r\n    <em>VSTO Assemblies can load multiple times when co-mingled with .NET </em>\r\n    <acronym title=\"Microsoft Component Object Model\">\r\n      <em>COM</em>\r\n    </acronym>\r\n    <em> Add-ins.</em> In the rare case that a VSTO assembly is also used as a COM Add-in, it can be “hooked” into Office from two locations: via the COM Add-in and by the VSTO Assembly Linker. Use the <strong>Tools &amp;gt; Unlink Office Document…</strong> command to remove the VSTO Assembly Linker hook.</li>\r\n</ul>\r\n<h2>Future Enhancements</h2>\r\n<ul>\r\n  <li>\r\n    <em>Bulk operations.</em> The ability to select an entire directory of Word documents for linking would be a nice touch. There is, however, the question of how the underlying <acronym title=\"Microsoft Component Object Model\">COM</acronym> object would hold up in stress tests.</li>\r\n  <li>\r\n    <em>Predetermining the Code Access Security status of the VSTO assembly.</em> A polite warning message about any possible security problems would be helpful.</li>\r\n</ul>\r\n<h2>Selected Links to Resources</h2>\r\n<table id=\"CleanXhtmlTable_ECAAAAA2\">\r\n  <tr>\r\n    <td>\r\n      <a href=\"http://songhaysystem.com/samples/VstoAsmLinker/Setup.zip\">VSTO Assembly Linker (Setup Archive)</a>\r\n    </td>\r\n    <td>Download the VSTO Assembly Linker ZIP with <code>Setup.exe</code>. (Includes source code.)</td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <a href=\"http://songhaysystem.com/samples/VstoAsmLinker/VstoAsmLinkerSetup.msi\">VSTO Assembly Linker (Single Installer File)</a>\r\n    </td>\r\n    <td>Download the VSTO Assembly Linker MSI. (Includes source code.)</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dv_wrcore/html/wrtsktargetingcorrectassembly.asp\">How to: Link an Assembly to a Word or Excel File</a>”</td>\r\n    <td>This article introduces the <code>OfficeToolkit.Persistence</code> ActiveX object.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dv_wrcore/html/wroricommandlinetool.asp\">Persistence Control Methods</a>”</td>\r\n    <td>Details the members of the unmanaged Persistence Control.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://support.microsoft.com/?id=224351\">Dsofile.dll lets you edit Office document properties without Office in Visual Basic .NET 2003 and in Visual Basic .NET 2002</a>”</td>\r\n    <td>This ActiveX object is used to read the properties of Office Documents. It can also write these properties as well.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dv_wrcore/html/wrtskgrantingpermissionstofoldersassemblies.asp\">How to: Grant Permissions to Folders and Assemblies</a>”</td>\r\n    <td>Covers security issues with <acronym title=\"Visual Studio Tools for the Microsoft Office System\">VSTO</acronym> assemblies.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://www.simple-talk.com/2005/04/25/getting-started-with-setup-projects/\">Getting started with setup projects</a>”</td>\r\n    <td>Hey! It can’t hurt to review “the basics.”</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://www.vsj.co.uk/dotnet/display.asp?id=334\">A re-usable ‘about’ box for C# applications</a>”</td>\r\n    <td>This article caused a generic About… box to be shared among all Songhay System Windows Forms projects.</td>\r\n  </tr>\r\n</table>",
    "ItemText": "\r\n<h1>A .NET Assembly Linker for Microsoft Word 2003 Documents</h1>\r\n<h2>VSTO Assembly Linker</h2>\r\n<p>\r\n  <acronym title=\"Visual Studio Tools for the Microsoft Office System\">VSTO</acronym> Assembly Linker is a little utility that links Microsoft Office Word Documents to Visual Studio Tools for Office 2003 assemblies. This tool is essentially a .NET <acronym title=\"User Interface\">UI</acronym> wrapper for the <code>OfficeToolkit.Persistence</code> ActiveX object. Download links are shown below.</p>\r\n<p>The VSTO Assembly Linker allows Office “power users” to limit the surface area of Office Application exposed to .NET assemblies down to the document level. This visual interface is an option to those not fond of the command line and provides easy-to-understand visuals for documenting policies and procedures related to Microsoft Office System applications in the enterprise.</p>\r\n<h2>User Interface</h2>\r\n<p>The user interface (below) displays the four-step process involved in linking a VSTO Assembly:</p>\r\n<p align=\"center\">\r\n  <img alt=\"VSTO Assembly Linker UI\" src=\"http://songhaysystem.com/bitmaps/VstoAsmLinker/ui.jpg\" /></p>\r\n<p>\r\n  <em>Select VSTO Assembly…</em> This command is used to specify the VSTO assembly to connect to an Office Word Document. The location to the assembly can be a Windows path, a <acronym title=\"Uniform Resource Locator\">URL</acronym> or a <acronym title=\"Universal Naming Convention \">UNC</acronym>. To select local Windows paths click on the icon on the left or the ellipses button next to the first text box. <em>A note to administrators:</em> you may need to review the Code Access Security policy of the VSTO assembly with CASPOL.EXE. Please see “Selected Links to Resources” at the bottom of this document for more information.</p>\r\n<p>\r\n  <em>Enter VSTO Assembly Name…</em> This value is automatically entered when a local assembly is selected through the interface in the first step. In the case of remote assemblies, the name must be manually entered. This value corresponds to the <code>AssemblyName.Name</code> <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpref/html/frlrfsystemreflectionassemblynameclassnametopic.asp\">property</a> and is usually the filename prefix of the assembly.</p>\r\n<p>\r\n  <em>Select Office Word Document…</em> This command is used to specify the Office Word document to link to. Note that this document can be in DOC or XML format. To select local Windows paths click on the icon on the right or the ellipses button next to the last text box.</p>\r\n<p>To link the document, click on the <strong>Link!</strong> button in the middle of the form.</p>\r\n<h2>Known Issues</h2>\r\n<ul>\r\n  <li>\r\n    <em>The ellipses (…) in Menu items appear incorrectly on some Windows 2000 systems.</em> This probably has something to do with ‘limited’ Unicode support in Windows 2000. This problem is of the rare case of a C# programmer concerned about Latin glyphs and typography!</li>\r\n  <li>\r\n    <em>Limited testing.</em> VSTO Assembly Linker has only been tested on Office Word documents linked to Visual Studio 2003 assemblies. It ‘should’ work on other Office documents and perhaps other <acronym title=\"Visual Studio Tools for the Microsoft Office System\">VSTO</acronym> assemblies.</li>\r\n  <li>\r\n    <em>VSTO Assemblies can load multiple times when co-mingled with .NET </em>\r\n    <acronym title=\"Microsoft Component Object Model\">\r\n      <em>COM</em>\r\n    </acronym>\r\n    <em> Add-ins.</em> In the rare case that a VSTO assembly is also used as a COM Add-in, it can be “hooked” into Office from two locations: via the COM Add-in and by the VSTO Assembly Linker. Use the <strong>Tools &amp;gt; Unlink Office Document…</strong> command to remove the VSTO Assembly Linker hook.</li>\r\n</ul>\r\n<h2>Future Enhancements</h2>\r\n<ul>\r\n  <li>\r\n    <em>Bulk operations.</em> The ability to select an entire directory of Word documents for linking would be a nice touch. There is, however, the question of how the underlying <acronym title=\"Microsoft Component Object Model\">COM</acronym> object would hold up in stress tests.</li>\r\n  <li>\r\n    <em>Predetermining the Code Access Security status of the VSTO assembly.</em> A polite warning message about any possible security problems would be helpful.</li>\r\n</ul>\r\n<h2>Selected Links to Resources</h2>\r\n<table id=\"CleanXhtmlTable_ECAAAAA2\">\r\n  <tr>\r\n    <td>\r\n      <a href=\"http://songhaysystem.com/samples/VstoAsmLinker/Setup.zip\">VSTO Assembly Linker (Setup Archive)</a>\r\n    </td>\r\n    <td>Download the VSTO Assembly Linker ZIP with <code>Setup.exe</code>. (Includes source code.)</td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <a href=\"http://songhaysystem.com/samples/VstoAsmLinker/VstoAsmLinkerSetup.msi\">VSTO Assembly Linker (Single Installer File)</a>\r\n    </td>\r\n    <td>Download the VSTO Assembly Linker MSI. (Includes source code.)</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dv_wrcore/html/wrtsktargetingcorrectassembly.asp\">How to: Link an Assembly to a Word or Excel File</a>”</td>\r\n    <td>This article introduces the <code>OfficeToolkit.Persistence</code> ActiveX object.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dv_wrcore/html/wroricommandlinetool.asp\">Persistence Control Methods</a>”</td>\r\n    <td>Details the members of the unmanaged Persistence Control.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://support.microsoft.com/?id=224351\">Dsofile.dll lets you edit Office document properties without Office in Visual Basic .NET 2003 and in Visual Basic .NET 2002</a>”</td>\r\n    <td>This ActiveX object is used to read the properties of Office Documents. It can also write these properties as well.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dv_wrcore/html/wrtskgrantingpermissionstofoldersassemblies.asp\">How to: Grant Permissions to Folders and Assemblies</a>”</td>\r\n    <td>Covers security issues with <acronym title=\"Visual Studio Tools for the Microsoft Office System\">VSTO</acronym> assemblies.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://www.simple-talk.com/2005/04/25/getting-started-with-setup-projects/\">Getting started with setup projects</a>”</td>\r\n    <td>Hey! It can’t hurt to review “the basics.”</td>\r\n  </tr>\r\n  <tr>\r\n    <td>“<a href=\"http://www.vsj.co.uk/dotnet/display.asp?id=334\">A re-usable ‘about’ box for C# applications</a>”</td>\r\n    <td>This article caused a generic About… box to be shared among all Songhay System Windows Forms projects.</td>\r\n  </tr>\r\n</table>",
    "CreateDate": "2006-02-09T15:46:48.0000000",
    "EndDate": null,
    "ModificationDate": "2006-02-09T15:46:55.0000000",
    "DocumentId": "39",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "51",
    "FragmentName": null,
    "FragmentDisplayName": "CleanXHTML for Microsoft Office Word 2003",
    "SortOrdinal": null,
    "ItemChar": "<h1>CleanXHTML for Microsoft Office Word 2003</h1>\n<div id=\"ProductPurchaseBlock\">\n  <p>\n    <a href=\"http://store5.esellerate.net/store/catalog.aspx?s=STR291982498&amp;pc=\" target=\"_blank\">Download CleanXHTML 1.2 for Office Word 2003</a>.</p>\n  <p>Get the free trial copy by clicking on the <strong>Try</strong> button.</p>\n  <p>You can also <a href=\"http://store5.esellerate.net/store/catalog.aspx?s=STR291982498&amp;pc=\">purchase CleanXHTML 1.2</a> from the same location by clicking on the <strong>Buy</strong> button.</p>\n</div>\n<p>Great news! CleanXHTML is now version 1.2 and supports .NET 2.0. For more details, see “<a href=\"http://songhaysystem.com/document.php?cmd=getDocCode&amp;get=CleanXhtml12\">CleanXHTML 1.2 for Microsoft Office Word 2003 (.NET 2.0)</a>.”</p>\n<h2>Attention users of the old version of CleanXHTML…</h2>\n<p>Download <a href=\"http://store5.esellerate.net/store/catalog.aspx?s=STR291982498&amp;pc=\">the trial copy of CleanXHTML 1.2</a> and your existing registration data should upgrade you automatically. In some cases you may have to enter your registration data again. For more questions feel free to <a href=\"http://songhaysystem.com/mail.php\">contact Songhay System</a>. Your patience with us is greatly appreciated!</p>",
    "ItemText": "<h1>CleanXHTML for Microsoft Office Word 2003</h1>\n<div id=\"ProductPurchaseBlock\">\n  <p>\n    <a href=\"http://store5.esellerate.net/store/catalog.aspx?s=STR291982498&amp;pc=\" target=\"_blank\">Download CleanXHTML 1.2 for Office Word 2003</a>.</p>\n  <p>Get the free trial copy by clicking on the <strong>Try</strong> button.</p>\n  <p>You can also <a href=\"http://store5.esellerate.net/store/catalog.aspx?s=STR291982498&amp;pc=\">purchase CleanXHTML 1.2</a> from the same location by clicking on the <strong>Buy</strong> button.</p>\n</div>\n<p>Great news! CleanXHTML is now version 1.2 and supports .NET 2.0. For more details, see “<a href=\"http://songhaysystem.com/document.php?cmd=getDocCode&amp;get=CleanXhtml12\">CleanXHTML 1.2 for Microsoft Office Word 2003 (.NET 2.0)</a>.”</p>\n<h2>Attention users of the old version of CleanXHTML…</h2>\n<p>Download <a href=\"http://store5.esellerate.net/store/catalog.aspx?s=STR291982498&amp;pc=\">the trial copy of CleanXHTML 1.2</a> and your existing registration data should upgrade you automatically. In some cases you may have to enter your registration data again. For more questions feel free to <a href=\"http://songhaysystem.com/mail.php\">contact Songhay System</a>. Your patience with us is greatly appreciated!</p>",
    "CreateDate": "2006-03-02T11:03:00.0000000",
    "EndDate": null,
    "ModificationDate": "2007-07-30T14:36:46.9030000",
    "DocumentId": "40",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "53",
    "FragmentName": null,
    "FragmentDisplayName": "UriTree: A Free, OPML-based, WPF System Tray Utility for Handling Hundreds of Links",
    "SortOrdinal": null,
    "ItemChar": "<h1>UriTree: A Free, OPML-based, WPF System Tray Utility for Handling Hundreds of Links</h1>\n<div id=\"CodePlexBlock\">\n  <div align=\"center\">\n    <img alt=\"CodePlex\" src=\"http://songhaysystem.com/bitmaps/codeplex.jpg\" />\n  </div>\n  <p>Download the UriTree stable release at <a href=\"http://uritree.codeplex.com/\">CodePlex.com</a>.</p>\n</div>\n<p>UriTree is the name of an idea documented in 2006, “<a href=\"http://songhaysystem.com/document.php?doc=38\">The Resource Location Manager: A Tiny C# Application That Solves the “Favorites Problem</a>.” Now that this ‘tiny’ application has a name, <em>UriTree</em>, it has matured and stabilized into a more concise expression. This document highlights the following changes:</p>\n<ul>\n  <li>UriTree is based on .NET 3.5 and Dave Winer’s OPML 2.0.</li>\n  <li>The <code>Songhay.Xml.Manager</code> class featured in January is replaced by the <code>Songhay.Xml.XmlUtility</code> static class, taking advantage of new features in .NET 2.0—and the <code>Songhay.Xml.XObjectUtility</code> static class, taking advantage of new features in .NET 3.5, namely LINQ to XML.</li>\n  <li>The <code>Songhay.Wpf.Mvvm</code> namespace is defined and holds <code>Songhay.Wpf.Mvvm.View.AboutView</code> a centralized, XAML-based <strong>About…</strong> dialog box that can be used with any WPF application.</li>\n</ul>\n<p>Browse this code base for <a href=\"http://uritree.codeplex.com/SourceControl/changeset/view/56599\">release 2.x at CodePlex.com</a>.</p>\n<h2>UriTree Takes Advantage of Windows Presentation Foundation</h2>\n<p>\n  <acronym title=\"Windows Presentation Foundation\">WPF</acronym> offers the <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.controls.menuitem.aspx\">MenuItem</a> control. When this element is used with the <code>Hardcodet.Wpf.TaskbarNotification</code> libraries from <a href=\"http://www.hardcodet.net/projects/wpf-notifyicon\">Philipp Sumi</a>, we obtain all of the visual effects and experiences that we expect from professional Windows applications:</p>\n<div align=\"center\">\n  <a href=\"http://songhaysystem.com/bitmaps/UriTree/screenshot.jpg\" target=\"_blank\"><img alt=\"UriTree Screenshot\" border=\"0\" height=\"246\" src=\"http://songhaysystem.com/bitmaps/UriTree/screenshot.jpg\" width=\"368\" /></a>\n</div>\n<p>By the way, just to illustrate (yet again) why <acronym title=\"Extensible Markup Language\">XML</acronym> is so cool, note that the UriTree links you see in the screenshot are pulled from the same remote location that the AJaX-based <a href=\"http://kintespace.com/klinks.html\">kinté links</a> page uses on kintespace.com.</p>\n<div align=\"center\">\n  <img alt=\"UriTree showing balloon message with Hardcodet.Wpf.TaskbarNotification library\" src=\"http://songhaysystem.com/bitmaps/UriTree/BalloonMessage.jpg\" style=\"margin:16px;\" />\n</div>\n<h3>Dave Winer’s OPML 2.0</h3>\n<p>The XML format that UriTree uses is a subset of <a href=\"http://www.opml.org/spec2\">OPML 2.0</a>; you can download and examine <a href=\"http://songhaysystem.com/xml/kinte_links.xml\">the source XML</a> to see whether it is “valid”—and to see what portion of OPML 2.0 is being used. The schema referenced in this XML set, that provides <a href=\"http://en.wikipedia.org/wiki/Intellisense\">IntelliSense</a> in Visual Studio 2005 among other benefits, is <a href=\"http://songhaysystem.com/schemas/opml.xsd\">also available for download</a>.</p>\n<p>It is worth mentioning that an InfoPath 2007 form was designed based on our schema—and it is used to edit OPML data. Significant performance problems were found when the XML set when upwards of a one hundred elements. Of course it works quite well when the XML is small. Designers experienced with InfoPath should know that sharing OPML data generated by InfoPath can cause problems since most of the OPML “validators” in the wild are not prepared to parse the namespace prefixes that must be present.</p>\n<h3>UriTree Handles More Than Just HTTP Links</h3>\n<p>\n  <acronym title=\"XML Schema Definition\">XSD</acronym> mavens may wonder why our schema does not declare <code>anyURI</code> for the OPML <code>url</code> attribute. This is because UriTree is a Windows Desktop application and needs to handle more than Web protocols. To assist in this design goal the <code>app.config</code> file for UriTree allows you to specify a local and remote XML set—this asserts a convention where a local XML set can contain desktop specific links and a remote set can contain “public” Web links. In the <code>applicationSettings</code> block for <code>UriTree.exe.config</code>, we have the settings <code>ResourcesLocal</code> and <code>ResourcesRemote</code> respectively. This convention makes UriTree eliminate the conceptual differences between local and remote links, the proprietary Windows desktop and the Word Wide Web. The following table highlights the kind of local resources you can put in UriTree:</p>\n<table id=\"CleanXhtmlTable_ID0EGXAE3\">\n  <tr>\n    <td>\n      <strong>Local Resource</strong>\n    </td>\n    <td>\n      <strong>Remarks</strong>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>&amp;lt;outline text=\"Development Server\" type=\"link\" url=\"http://%ComputerName%/\"/&amp;gt;</code>\n    </td>\n    <td>This is the link to my local Web server. UriTree takes advantage of the <a href=\"http://msdn2.microsoft.com/en-us/library/system.environment.expandenvironmentvariables.aspx\">Environment.ExpandEnvironmentVariables()</a> member during Resource parsing.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>&amp;lt;outline text=\"Device Manager\" type=\"link\" url=\"%SystemRoot%\\System32\\DEVMGMT.MSC\"/&amp;gt;</code>\n    </td>\n    <td>This item links to the Windows XP Device Manager.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>&amp;lt;outline text=\"Edit HOSTS File\" type=\"link\" url=\"%ProgramFiles%\\Notepad++\\notepad++.exe %SystemRoot%\\System32\\DRIVERS\\ETC\\HOSTS\"/&amp;gt;</code>\n    </td>\n    <td>This is a link to the Windows XP HOSTS file.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>&amp;lt;outline text=\"Event Viewer\" type=\"link\" url=\"%SystemRoot%\\System32\\eventvwr.msc /s\"/&amp;gt;</code>\n    </td>\n    <td>This is a link to the Windows XP Event Viewer.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>&amp;lt;outline text=\".NET 2.0 SDK Folder\" type=\"link\" url=\"%ProgramFiles%\\Microsoft Visual Studio 8\\SDK\\v2.0\\Bin\" /&amp;gt;</code>\n    </td>\n    <td>This is a link to the .NET 2.0 <acronym title=\"Software Development Kit\">SDK</acronym> Folder.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>&amp;lt;outline text=\".NET Global Assembly Cache\" type=\"link\" url=\"%SYSTEMROOT%\\assembly\" /&amp;gt;</code>\n    </td>\n    <td>A quick link to the .NET Global Assembly Cache.</td>\n  </tr>\n</table>\n<h3>Introducing Songhay.Xml.XmlUtility</h3>\n<p>\n  <a href=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Xml.XmlUtility.jpg\" target=\"_blank\"><img alt=\"Songhay.Xml.XmlUtility\" height=\"242\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Xml.XmlUtility.jpg\" style=\"float:right;margin:16px;margin-top:0;\" width=\"181\" /></a>The image at right summarizes the static class <code>Songhay.Xml.XmlUtility</code>. UriTree depends heavily on this “helper” class. This definition instances the workhorse of all <acronym title=\"Extensible Markup Language\">XML</acronym>-related activities for Songhay System enterprise data solutions. The design goals include:</p>\n<ul>\n  <li>Exploiting the <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.xpath.ixpathnavigable.aspx\">System.Xml.XPath.IXPathNavigable</a> interface. Use of this interface almost completely eliminates the boundary between <code>XmlDocument</code> and <code>XPathDocument</code>. This reduces lines of code—especially when writing overloads that erroneously distinguish these types. In the <code>Songhay.Xml.XmlUtility</code> definition, you will see members with <code>IXPathNavigable XSet</code> among the arguments.</li>\n  <li>Leveraging .NET 2.0 Generics. The <code>GetInstance&amp;lt;T&amp;gt;(String XmlPath)</code> and <code>GetInstanceRaw&amp;lt;T&amp;gt;(String XmlString)</code> members are generic de-serialization methods that are designed to handle all of the de-serialization tasks required by Songhay System solutions. Their featured use case is when an XML configuration file needs to be loaded from disk and instanced into a .NET type.</li>\n  <li>Centralizing <code>XPathDocument</code> “factory” code. Songhay System makes the <code>XPathDocument</code> the premiere, .NET 2.0 XML data type. It follows that the <code>XPathNavigator</code> is the premiere XML data set. We can find no near-fatal flaws with this Microsoft innovation! The <code>GetXpDoc()</code>, <code>GetXpNode()</code> and <code>GetXpNodes()</code> members of <code>Songhay.Xml.XmlUtility</code> express this sentiment. This ‘sentiment’ might be considered ridiculous for the seasoned, .NET 1.x, XML maven. This is because such experienced folk may have overlooked the sentence, “The <code>XPathNavigator</code> class has been updated to include editing capabilities…” in the <acronym title=\"Microsoft Developer Network\">MSDN</acronym> <a href=\"http://msdn2.microsoft.com/en-us/library/1k76xshy.aspx\">documentation</a>.</li>\n  <li>Centralizing all required <acronym title=\"Extensible Stylesheet Language\">XSL</acronym> transformation scenarios. The new very, <em>very</em> fast <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.xsl.xslcompiledtransform.aspx\">XslCompiledTransform</a> is featured in these members: <code>GetXslResult()</code>, <code>GetXslString()</code>, <code>LoadXslTransform()</code> and <code>WriteXslTransform()</code>.</li>\n  <li>Centralizing namespace management for <a href=\"http://en.wikipedia.org/wiki/XPath\">XPath</a> queries. The <code>GetNamespaceManager()</code> members handle certain XPath node ‘resolution issues’ that are beyond the scope of this document.</li>\n</ul>\n<p>Our UriTree takes advantage of the ‘<code>XPathDocument</code> factory code’ and the associated namespace routines in <code>Songhay.Xml.XmlUtility</code>. This is a brief introduction of the <code>Songhay.Xml.XmlUtility</code>. Going forward, certainly this topic will come up again as this “helper” class is <em>fundamental</em> to the Songhay System.</p>\n<h2>Selected Resources</h2>\n<table id=\"CleanXhtmlTable_ID0E3MAG2\">\n  <tr>\n    <td>\n      <a href=\"http://songhaysystem.com/samples/OPML/UriTree.zip\">UriTree Source Code</a>\n    </td>\n    <td>The Visual Studio 2005 Project files.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://songhaysystem.com/xml/kinte_links.xml\">kinté links</a>\n    </td>\n    <td>The current UriTree XML set.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://songhaysystem.com/schemas/opml.xsd\">Songhay OPML 2.0 Schema</a>\n    </td>\n    <td>The current schema behind the UriTree XML set.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://www.opml.org/spec2\">OPML 2.0 (DRAFT)</a>\n    </td>\n    <td>It is clear to me why Dave’s specification is not widely available as an XSD: many of his definitions go beyond the features available in XSD and would require the XPath assertions that emerge from Schematron or a similar enforcer like InfoPath.</td>\n  </tr>\n  <tr>\n    <td>“<a href=\"http://www.xml.com/pub/a/2002/07/03/schema_design.html\">W3C XML Schema Design Patterns: Dealing With Change</a>”</td>\n    <td>Dare Obasanjo of Microsoft introduces the concept of ‘schema wildcards’ among others.</td>\n  </tr>\n  <tr>\n    <td>“<a href=\"http://support.microsoft.com/?kbid=827006\">How to modify an external schema for an InfoPath form</a>”</td>\n    <td>Schema wildcards are used to allow InfoPath to leverage the wonderful <code>my:</code> namespace. I thought this feature could be used with OPML 2.0 but I found out that you can’t mix <code>attribute</code> with <code>anyAttribute</code> without unexpected results in InfoPath.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://songhaysystem.com/samples/InfoPath/UriTreeData(OPML2).xsn\">Songhay OPML InfoPath Form</a>\n    </td>\n    <td>A brave attempt.</td>\n  </tr>\n  <tr>\n    <td>“<a href=\"http://msdn2.microsoft.com/en-us/library/1k76xshy.aspx\">What’s New in System.Xml</a>”</td>\n    <td>\n      <acronym title=\"Microsoft Developer Network\">MSDN</acronym> details what’s new for XML-related features in the .NET Framework Developer’s Guide.</td>\n  </tr>\n</table>",
    "ItemText": "<h1>UriTree: A Free, OPML-based, WPF System Tray Utility for Handling Hundreds of Links</h1>\n<div id=\"CodePlexBlock\">\n  <div align=\"center\">\n    <img alt=\"CodePlex\" src=\"http://songhaysystem.com/bitmaps/codeplex.jpg\" />\n  </div>\n  <p>Download the UriTree stable release at <a href=\"http://uritree.codeplex.com/\">CodePlex.com</a>.</p>\n</div>\n<p>UriTree is the name of an idea documented in 2006, “<a href=\"http://songhaysystem.com/document.php?doc=38\">The Resource Location Manager: A Tiny C# Application That Solves the “Favorites Problem</a>.” Now that this ‘tiny’ application has a name, <em>UriTree</em>, it has matured and stabilized into a more concise expression. This document highlights the following changes:</p>\n<ul>\n  <li>UriTree is based on .NET 3.5 and Dave Winer’s OPML 2.0.</li>\n  <li>The <code>Songhay.Xml.Manager</code> class featured in January is replaced by the <code>Songhay.Xml.XmlUtility</code> static class, taking advantage of new features in .NET 2.0—and the <code>Songhay.Xml.XObjectUtility</code> static class, taking advantage of new features in .NET 3.5, namely LINQ to XML.</li>\n  <li>The <code>Songhay.Wpf.Mvvm</code> namespace is defined and holds <code>Songhay.Wpf.Mvvm.View.AboutView</code> a centralized, XAML-based <strong>About…</strong> dialog box that can be used with any WPF application.</li>\n</ul>\n<p>Browse this code base for <a href=\"http://uritree.codeplex.com/SourceControl/changeset/view/56599\">release 2.x at CodePlex.com</a>.</p>\n<h2>UriTree Takes Advantage of Windows Presentation Foundation</h2>\n<p>\n  <acronym title=\"Windows Presentation Foundation\">WPF</acronym> offers the <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.controls.menuitem.aspx\">MenuItem</a> control. When this element is used with the <code>Hardcodet.Wpf.TaskbarNotification</code> libraries from <a href=\"http://www.hardcodet.net/projects/wpf-notifyicon\">Philipp Sumi</a>, we obtain all of the visual effects and experiences that we expect from professional Windows applications:</p>\n<div align=\"center\">\n  <a href=\"http://songhaysystem.com/bitmaps/UriTree/screenshot.jpg\" target=\"_blank\"><img alt=\"UriTree Screenshot\" border=\"0\" height=\"246\" src=\"http://songhaysystem.com/bitmaps/UriTree/screenshot.jpg\" width=\"368\" /></a>\n</div>\n<p>By the way, just to illustrate (yet again) why <acronym title=\"Extensible Markup Language\">XML</acronym> is so cool, note that the UriTree links you see in the screenshot are pulled from the same remote location that the AJaX-based <a href=\"http://kintespace.com/klinks.html\">kinté links</a> page uses on kintespace.com.</p>\n<div align=\"center\">\n  <img alt=\"UriTree showing balloon message with Hardcodet.Wpf.TaskbarNotification library\" src=\"http://songhaysystem.com/bitmaps/UriTree/BalloonMessage.jpg\" style=\"margin:16px;\" />\n</div>\n<h3>Dave Winer’s OPML 2.0</h3>\n<p>The XML format that UriTree uses is a subset of <a href=\"http://www.opml.org/spec2\">OPML 2.0</a>; you can download and examine <a href=\"http://songhaysystem.com/xml/kinte_links.xml\">the source XML</a> to see whether it is “valid”—and to see what portion of OPML 2.0 is being used. The schema referenced in this XML set, that provides <a href=\"http://en.wikipedia.org/wiki/Intellisense\">IntelliSense</a> in Visual Studio 2005 among other benefits, is <a href=\"http://songhaysystem.com/schemas/opml.xsd\">also available for download</a>.</p>\n<p>It is worth mentioning that an InfoPath 2007 form was designed based on our schema—and it is used to edit OPML data. Significant performance problems were found when the XML set when upwards of a one hundred elements. Of course it works quite well when the XML is small. Designers experienced with InfoPath should know that sharing OPML data generated by InfoPath can cause problems since most of the OPML “validators” in the wild are not prepared to parse the namespace prefixes that must be present.</p>\n<h3>UriTree Handles More Than Just HTTP Links</h3>\n<p>\n  <acronym title=\"XML Schema Definition\">XSD</acronym> mavens may wonder why our schema does not declare <code>anyURI</code> for the OPML <code>url</code> attribute. This is because UriTree is a Windows Desktop application and needs to handle more than Web protocols. To assist in this design goal the <code>app.config</code> file for UriTree allows you to specify a local and remote XML set—this asserts a convention where a local XML set can contain desktop specific links and a remote set can contain “public” Web links. In the <code>applicationSettings</code> block for <code>UriTree.exe.config</code>, we have the settings <code>ResourcesLocal</code> and <code>ResourcesRemote</code> respectively. This convention makes UriTree eliminate the conceptual differences between local and remote links, the proprietary Windows desktop and the Word Wide Web. The following table highlights the kind of local resources you can put in UriTree:</p>\n<table id=\"CleanXhtmlTable_ID0EGXAE3\">\n  <tr>\n    <td>\n      <strong>Local Resource</strong>\n    </td>\n    <td>\n      <strong>Remarks</strong>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>&amp;lt;outline text=\"Development Server\" type=\"link\" url=\"http://%ComputerName%/\"/&amp;gt;</code>\n    </td>\n    <td>This is the link to my local Web server. UriTree takes advantage of the <a href=\"http://msdn2.microsoft.com/en-us/library/system.environment.expandenvironmentvariables.aspx\">Environment.ExpandEnvironmentVariables()</a> member during Resource parsing.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>&amp;lt;outline text=\"Device Manager\" type=\"link\" url=\"%SystemRoot%\\System32\\DEVMGMT.MSC\"/&amp;gt;</code>\n    </td>\n    <td>This item links to the Windows XP Device Manager.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>&amp;lt;outline text=\"Edit HOSTS File\" type=\"link\" url=\"%ProgramFiles%\\Notepad++\\notepad++.exe %SystemRoot%\\System32\\DRIVERS\\ETC\\HOSTS\"/&amp;gt;</code>\n    </td>\n    <td>This is a link to the Windows XP HOSTS file.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>&amp;lt;outline text=\"Event Viewer\" type=\"link\" url=\"%SystemRoot%\\System32\\eventvwr.msc /s\"/&amp;gt;</code>\n    </td>\n    <td>This is a link to the Windows XP Event Viewer.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>&amp;lt;outline text=\".NET 2.0 SDK Folder\" type=\"link\" url=\"%ProgramFiles%\\Microsoft Visual Studio 8\\SDK\\v2.0\\Bin\" /&amp;gt;</code>\n    </td>\n    <td>This is a link to the .NET 2.0 <acronym title=\"Software Development Kit\">SDK</acronym> Folder.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>&amp;lt;outline text=\".NET Global Assembly Cache\" type=\"link\" url=\"%SYSTEMROOT%\\assembly\" /&amp;gt;</code>\n    </td>\n    <td>A quick link to the .NET Global Assembly Cache.</td>\n  </tr>\n</table>\n<h3>Introducing Songhay.Xml.XmlUtility</h3>\n<p>\n  <a href=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Xml.XmlUtility.jpg\" target=\"_blank\"><img alt=\"Songhay.Xml.XmlUtility\" height=\"242\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Xml.XmlUtility.jpg\" style=\"float:right;margin:16px;margin-top:0;\" width=\"181\" /></a>The image at right summarizes the static class <code>Songhay.Xml.XmlUtility</code>. UriTree depends heavily on this “helper” class. This definition instances the workhorse of all <acronym title=\"Extensible Markup Language\">XML</acronym>-related activities for Songhay System enterprise data solutions. The design goals include:</p>\n<ul>\n  <li>Exploiting the <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.xpath.ixpathnavigable.aspx\">System.Xml.XPath.IXPathNavigable</a> interface. Use of this interface almost completely eliminates the boundary between <code>XmlDocument</code> and <code>XPathDocument</code>. This reduces lines of code—especially when writing overloads that erroneously distinguish these types. In the <code>Songhay.Xml.XmlUtility</code> definition, you will see members with <code>IXPathNavigable XSet</code> among the arguments.</li>\n  <li>Leveraging .NET 2.0 Generics. The <code>GetInstance&amp;lt;T&amp;gt;(String XmlPath)</code> and <code>GetInstanceRaw&amp;lt;T&amp;gt;(String XmlString)</code> members are generic de-serialization methods that are designed to handle all of the de-serialization tasks required by Songhay System solutions. Their featured use case is when an XML configuration file needs to be loaded from disk and instanced into a .NET type.</li>\n  <li>Centralizing <code>XPathDocument</code> “factory” code. Songhay System makes the <code>XPathDocument</code> the premiere, .NET 2.0 XML data type. It follows that the <code>XPathNavigator</code> is the premiere XML data set. We can find no near-fatal flaws with this Microsoft innovation! The <code>GetXpDoc()</code>, <code>GetXpNode()</code> and <code>GetXpNodes()</code> members of <code>Songhay.Xml.XmlUtility</code> express this sentiment. This ‘sentiment’ might be considered ridiculous for the seasoned, .NET 1.x, XML maven. This is because such experienced folk may have overlooked the sentence, “The <code>XPathNavigator</code> class has been updated to include editing capabilities…” in the <acronym title=\"Microsoft Developer Network\">MSDN</acronym> <a href=\"http://msdn2.microsoft.com/en-us/library/1k76xshy.aspx\">documentation</a>.</li>\n  <li>Centralizing all required <acronym title=\"Extensible Stylesheet Language\">XSL</acronym> transformation scenarios. The new very, <em>very</em> fast <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.xsl.xslcompiledtransform.aspx\">XslCompiledTransform</a> is featured in these members: <code>GetXslResult()</code>, <code>GetXslString()</code>, <code>LoadXslTransform()</code> and <code>WriteXslTransform()</code>.</li>\n  <li>Centralizing namespace management for <a href=\"http://en.wikipedia.org/wiki/XPath\">XPath</a> queries. The <code>GetNamespaceManager()</code> members handle certain XPath node ‘resolution issues’ that are beyond the scope of this document.</li>\n</ul>\n<p>Our UriTree takes advantage of the ‘<code>XPathDocument</code> factory code’ and the associated namespace routines in <code>Songhay.Xml.XmlUtility</code>. This is a brief introduction of the <code>Songhay.Xml.XmlUtility</code>. Going forward, certainly this topic will come up again as this “helper” class is <em>fundamental</em> to the Songhay System.</p>\n<h2>Selected Resources</h2>\n<table id=\"CleanXhtmlTable_ID0E3MAG2\">\n  <tr>\n    <td>\n      <a href=\"http://songhaysystem.com/samples/OPML/UriTree.zip\">UriTree Source Code</a>\n    </td>\n    <td>The Visual Studio 2005 Project files.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://songhaysystem.com/xml/kinte_links.xml\">kinté links</a>\n    </td>\n    <td>The current UriTree XML set.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://songhaysystem.com/schemas/opml.xsd\">Songhay OPML 2.0 Schema</a>\n    </td>\n    <td>The current schema behind the UriTree XML set.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://www.opml.org/spec2\">OPML 2.0 (DRAFT)</a>\n    </td>\n    <td>It is clear to me why Dave’s specification is not widely available as an XSD: many of his definitions go beyond the features available in XSD and would require the XPath assertions that emerge from Schematron or a similar enforcer like InfoPath.</td>\n  </tr>\n  <tr>\n    <td>“<a href=\"http://www.xml.com/pub/a/2002/07/03/schema_design.html\">W3C XML Schema Design Patterns: Dealing With Change</a>”</td>\n    <td>Dare Obasanjo of Microsoft introduces the concept of ‘schema wildcards’ among others.</td>\n  </tr>\n  <tr>\n    <td>“<a href=\"http://support.microsoft.com/?kbid=827006\">How to modify an external schema for an InfoPath form</a>”</td>\n    <td>Schema wildcards are used to allow InfoPath to leverage the wonderful <code>my:</code> namespace. I thought this feature could be used with OPML 2.0 but I found out that you can’t mix <code>attribute</code> with <code>anyAttribute</code> without unexpected results in InfoPath.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://songhaysystem.com/samples/InfoPath/UriTreeData(OPML2).xsn\">Songhay OPML InfoPath Form</a>\n    </td>\n    <td>A brave attempt.</td>\n  </tr>\n  <tr>\n    <td>“<a href=\"http://msdn2.microsoft.com/en-us/library/1k76xshy.aspx\">What’s New in System.Xml</a>”</td>\n    <td>\n      <acronym title=\"Microsoft Developer Network\">MSDN</acronym> details what’s new for XML-related features in the .NET Framework Developer’s Guide.</td>\n  </tr>\n</table>",
    "CreateDate": "2006-06-16T12:03:00.0000000",
    "EndDate": null,
    "ModificationDate": "2006-06-16T12:03:00.0000000",
    "DocumentId": "78",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": "2006-06-16-12-03-35-IDAIAM5IDAJAM5-1",
    "IsActive": "True"
  },
  {
    "FragmentId": "70",
    "FragmentName": null,
    "FragmentDisplayName": "Songhay.NET: An Overview of the Songhay Namespace",
    "SortOrdinal": null,
    "ItemChar": "<h1>Songhay.NET: An Overview of the Songhay Namespace</h1>\n<div id=\"CodePlexBlock\">\n  <div align=\"center\">\n    <img alt=\"CodePlex\" src=\"http://songhaysystem.com/bitmaps/codeplex.jpg\" />\n  </div>\n  <p>The code archive for the Songhay Namespace is available at CodePlex.com in the <a href=\"http://www.codeplex.com/songhaydata/SourceControl/ListDownloadableCommits.aspx\">Songhay System Data Access Framework</a>.</p>\n</div>\n<p>\n  <img alt=\"Songhay\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/songhay_project.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This document summarizes the design goals and designer intentions behind the <code>Songhay</code> namespace, written in C# for .NET 2.0.50727. The <code>Songhay</code> namespace is the ‘thin layer’ at the bottom of all Songhay System .NET application layers. The contents of this namespace attempts to not make the mistake of providing functionality that is already available in .NET. Rather, the <code>Songhay</code> namespace contains definitions that assert <em>specific</em> purpose over the <em>general</em> purpose of the .NET framework.</p>\n<p>The specific purpose of the <code>Songhay</code> namespace is governed by these strong words:</p>\n<ul>\n  <li>Framework</li>\n  <li>Net</li>\n  <li>Xml</li>\n</ul>\n<p>The image of the Visual Studio 2005 project, shown at left, shows these strong words. Apart from <em>Xml</em>, the rest of this document discusses each of these words in turn. For Xml, do see “<a href=\"http://SonghaySystem.com/document.php?docCode=SonghayNetXml\">Songhay.NET: An Overview of the Songhay XML Namespace</a>.”</p>\n<h2>The Songhay.Framework Static Class</h2>\n<p>\n  <img alt=\"Songhay.Framework\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Framework.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The strong word <em>Framework</em> in this static class indicates the .NET Framework. The assertion here is that the primal experience with .NET Framework is through a console—through the command line. The following table showing the member of this class reflects this assertion:</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Framework Public Member</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EK2AE2\">\n  <tr>\n    <td>\n      <code>RunConsoleCommand()</code>\n    </td>\n    <td>This member is merely a wrapper for <kbd>CMD /C</kbd>, based on code by <a href=\"http://www.thecodeproject.com/cs/miscctrl/shellcontrol.asp\">S. Senthil Kumar</a>. It returns a <code>System.String</code>.</td>\n  </tr>\n</table>\n<h2>The Songhay.FrameworkAssembly Static Class</h2>\n<p>\n  <img alt=\"Songhay.FrameworkAssembly\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.FrameworkAssembly.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />These classes are concerned with extracting meta-data from what is called here a <em>Framework Assembly</em>, the *.DLL file containing complied .NET code. Originally, this was intended for populating the customary <strong>About…</strong> dialog box for Windows Forms applications. This proved to <em>still</em> be useful in spite of such a dialog box shipping with Visual Studio 2005.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.FrameworkAssembly Public Member</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0E16AE2\">\n  <tr>\n    <td>\n      <code>GetAssemblyInfo()</code>\n    </td>\n    <td>\n      <p>Returns a string formatted with <code>Environment.NewLine</code> characters summarizing .NET assembly data.</p>\n      <p>It is a server-friendly wrapper for <code>Songhay.AssemblyInfo</code> (see below).</p>\n    </td>\n  </tr>\n</table>\n<h2>The Songhay.FrameworkAssemblyInfo Class</h2>\n<p>\n  <img alt=\"Songhay.FrameworkAssemblyInfo\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.FrameworkAssemblyInfo.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This definition combines data from the <a href=\"http://msdn2.microsoft.com/en-us/library/system.reflection.assembly.getcustomattributes(VS.71).aspx\">Assembly.GetCustomAttributes Method</a> and other members of the <a href=\"http://msdn2.microsoft.com/en-us/library/system.reflection(vs.71).aspx\">System.Reflection</a> namespace. It was originally designed for use in Windows Forms applications but, through <code>Songhay.FrameworkAssembly</code> (see above), can be used in Server applications when reading “plain old objects” directly is not advantageous.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.FrameworkAssemblyInfo Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EGEAG2\">\n  <tr>\n    <td>\n      <code>AssemblyTitle</code>\n    </td>\n    <td>Attempts to return <code>AssemblyTitleAttribute</code> as a string. When this is null or empty, returns <code>Assembly.CodeBase</code> as a string.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>AssemblyVersion</code>\n    </td>\n    <td>Returns <code>AssemblyName.Version</code> as a string.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>AssemblyVersionDetail</code>\n    </td>\n    <td>Returns <code>AssemblyName.Version.Major</code> and <code>AssemblyName.Version.Minor</code> in a formatted string.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>AssemblyDescription</code>\n    </td>\n    <td>Attempts to return <code>AssemblyDescriptionAttribute</code> as a string. Failure returns <code>String.Empty</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>AssemblyProduct</code>\n    </td>\n    <td>Attempts to return <code>AssemblyProductAttribute</code> as a string. Failure returns <code>String.Empty</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>AssemblyCopyright</code>\n    </td>\n    <td>Attempts to return <code>AssemblyCopyrightAttribute</code> as a string. Failure returns <code>String.Empty</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>AssemblyCompany</code>\n    </td>\n    <td>Attempts to return <code>AssemblyCompanyAttribute</code> as a string. Failure returns <code>String.Empty</code>.</td>\n  </tr>\n</table>\n<h2>The Songhay.FrameworkFile Static Class</h2>\n<p>\n  <img alt=\"Songhay.FrameworkFile\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.FrameworkFile.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This defines helper routines providing disk file functionality not known to be available in the .NET in general and the <a href=\"http://msdn2.microsoft.com/en-us/library/system.io(vs.80).aspx\">System.IO</a> namespace in particular.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.FrameworkFile Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EHRAG2\">\n  <tr>\n    <td>\n      <code>FileName()</code>\n    </td>\n    <td>\n      <p>Returns the file name based on the specified path and <code>System.IO.Path.DirectorySeparatorChar</code>. You have the option of supplying your own directory separator character in an overload.</p>\n      <p>This member returns <code>foo.txt</code> from <code>c:\\myfolder\\foo.txt</code>.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>PathRoot()</code>\n    </td>\n    <td>\n      <p>Returns the directory root based on the specified path and <code>System.IO.Path.DirectorySeparatorChar</code>. You have the option of supplying your own directory separator character in an overload.</p>\n      <p>This member returns <code>c:\\myfolder\\</code> from <code>c:\\myfolder\\foo.txt</code>.</p>\n    </td>\n  </tr>\n</table>\n<h2>The Songhay.FrameworkType Static Class</h2>\n<p>\n  <img alt=\"Songhay.FrameworkType\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.FrameworkType.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This defines a response to the <code>TryParse()</code> methods for the new .NET 2.0 <a href=\"http://msdn2.microsoft.com/en-us/library/1t3y8s4s(VS.80).aspx\">Nullable Types</a>. This class definition also recognizes “<a href=\"http://en.wikipedia.org/wiki/Unix_Time\">Unix Time</a>.”</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.FrameworkType Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EXYAG2\">\n  <tr>\n    <td>\n      <code>DateTimeFromUnixTime()</code>\n    </td>\n    <td>Converts Unix time stamps to <code>System.DateTime</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>DateTimeToUnixTime()</code>\n    </td>\n    <td>Converts the current time or a specified <code>System.DateTime</code> to a Unix time stamp.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>ParseBoolean()</code>\n    </td>\n    <td>Returns a Nullable <code>Boolean</code> based on the specified <code>System.Object</code>. Failure returns a Nullable with <code>HasValue == false</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>ParseByte()</code>\n    </td>\n    <td>Returns a Nullable <code>Byte</code> based on the specified <code>System.Object</code>. Failure returns a Nullable with <code>HasValue == false</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>ParseDateTime()</code>\n    </td>\n    <td>Returns a Nullable <code>DateTime</code> based on the specified <code>System.Object</code>. Failure returns a Nullable with <code>HasValue == false</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>ParseDateTimeWithFormat()</code>\n    </td>\n    <td>Returns a <code>System.String</code> based on the specified <code>System.Object</code> and date-time format expression. Failure returns null.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>ParseDouble()</code>\n    </td>\n    <td>Returns a Nullable <code>Double</code> based on the specified <code>System.Object</code>. Failure returns a Nullable with <code>HasValue == false</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>ParseInt32()</code>\n    </td>\n    <td>Returns a Nullable <code>Int32</code> based on the specified <code>System.Object</code>. Failure returns a Nullable with <code>HasValue == false</code>.</td>\n  </tr>\n</table>\n<h2>The Songhay.Net.HttpVerb Static Class</h2>\n<p>\n  <img alt=\"Songhay.Net.HttpVerb\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Net.HttpVerb.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This definition recognizes the importance of <acronym title=\"Representational State Transfer\">REST</acronym> for Windows “rich” clients—starting with Windows Forms. As of this writing, the HTTP verbs <span style=\"font-variant:small-caps;\">get</span> and <span style=\"font-variant:small-caps;\">post</span> are recognized here. Additionally, the concept of the XML <span style=\"font-variant:small-caps;\">post</span> is implemented. This definition depends on the <a href=\"http://msdn2.microsoft.com/en-us/library/system.net.httpwebrequest.aspx\">System.Net.HttpWebRequest</a> class.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Net.HttpVerb Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EZJBG2\">\n  <tr>\n    <td>\n      <code>Get()</code>\n    </td>\n    <td>Returns the result of an HTTP <span style=\"font-variant:small-caps;\">get</span> in a <code>System.String</code> based on the specified resource location. You have the option of supplying proxy server information with a bypass switch.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>Post()</code>\n    </td>\n    <td>Returns the result of an HTTP <span style=\"font-variant:small-caps;\">post</span> in a <code>System.String</code> based on the specified resource location and <span style=\"font-variant:small-caps;\">post</span> data. You have the option of supplying proxy server information with a bypass switch.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>XmlPost()</code>\n    </td>\n    <td>Returns the result of an HTTP <span style=\"font-variant:small-caps;\">post</span> in a <code>System.String</code> based on the specified resource location and <span style=\"font-variant:small-caps;\">post</span> data. The post data is assumed to be an <acronym title=\"Extensible Markup Language\">XML</acronym> fragment. You have the option of supplying proxy server information with a bypass switch.</td>\n  </tr>\n</table>\n<h2>The Songhay.Xml Namespace</h2>\n<p>The <code>Songhay.Xml</code> namespace is overviewed in another document, “<a href=\"http://SonghaySystem.com/document.php?docCode=SonghayNetXml\">Songhay.NET: An Overview of the Songhay XML Namespace</a>.”</p>\n<h2>Response to FxCop Analysis of this Namespace</h2>\n<p>As of this writing, the <code>Songhay</code> and <code>Songhay.Net</code> namespaces both ‘violate’ internationalization as indicated by the <code>SpecifyIFormatProvider</code> error. This is a typical, North American oversight that will be addressed in future!</p>\n<p>The <code>Songhay.Net</code> namespace gets the <code>AvoidNamespacesWithFewTypes</code> error. Today, this error is considered an encouragement to develop the <code>Songhay.Net</code> namespace. For example, the case of using security credentials other than the default network credentials has yet to be implemented.</p>",
    "ItemText": "<h1>Songhay.NET: An Overview of the Songhay Namespace</h1>\n<div id=\"CodePlexBlock\">\n  <div align=\"center\">\n    <img alt=\"CodePlex\" src=\"http://songhaysystem.com/bitmaps/codeplex.jpg\" />\n  </div>\n  <p>The code archive for the Songhay Namespace is available at CodePlex.com in the <a href=\"http://www.codeplex.com/songhaydata/SourceControl/ListDownloadableCommits.aspx\">Songhay System Data Access Framework</a>.</p>\n</div>\n<p>\n  <img alt=\"Songhay\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/songhay_project.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This document summarizes the design goals and designer intentions behind the <code>Songhay</code> namespace, written in C# for .NET 2.0.50727. The <code>Songhay</code> namespace is the ‘thin layer’ at the bottom of all Songhay System .NET application layers. The contents of this namespace attempts to not make the mistake of providing functionality that is already available in .NET. Rather, the <code>Songhay</code> namespace contains definitions that assert <em>specific</em> purpose over the <em>general</em> purpose of the .NET framework.</p>\n<p>The specific purpose of the <code>Songhay</code> namespace is governed by these strong words:</p>\n<ul>\n  <li>Framework</li>\n  <li>Net</li>\n  <li>Xml</li>\n</ul>\n<p>The image of the Visual Studio 2005 project, shown at left, shows these strong words. Apart from <em>Xml</em>, the rest of this document discusses each of these words in turn. For Xml, do see “<a href=\"http://SonghaySystem.com/document.php?docCode=SonghayNetXml\">Songhay.NET: An Overview of the Songhay XML Namespace</a>.”</p>\n<h2>The Songhay.Framework Static Class</h2>\n<p>\n  <img alt=\"Songhay.Framework\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Framework.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The strong word <em>Framework</em> in this static class indicates the .NET Framework. The assertion here is that the primal experience with .NET Framework is through a console—through the command line. The following table showing the member of this class reflects this assertion:</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Framework Public Member</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EK2AE2\">\n  <tr>\n    <td>\n      <code>RunConsoleCommand()</code>\n    </td>\n    <td>This member is merely a wrapper for <kbd>CMD /C</kbd>, based on code by <a href=\"http://www.thecodeproject.com/cs/miscctrl/shellcontrol.asp\">S. Senthil Kumar</a>. It returns a <code>System.String</code>.</td>\n  </tr>\n</table>\n<h2>The Songhay.FrameworkAssembly Static Class</h2>\n<p>\n  <img alt=\"Songhay.FrameworkAssembly\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.FrameworkAssembly.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />These classes are concerned with extracting meta-data from what is called here a <em>Framework Assembly</em>, the *.DLL file containing complied .NET code. Originally, this was intended for populating the customary <strong>About…</strong> dialog box for Windows Forms applications. This proved to <em>still</em> be useful in spite of such a dialog box shipping with Visual Studio 2005.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.FrameworkAssembly Public Member</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0E16AE2\">\n  <tr>\n    <td>\n      <code>GetAssemblyInfo()</code>\n    </td>\n    <td>\n      <p>Returns a string formatted with <code>Environment.NewLine</code> characters summarizing .NET assembly data.</p>\n      <p>It is a server-friendly wrapper for <code>Songhay.AssemblyInfo</code> (see below).</p>\n    </td>\n  </tr>\n</table>\n<h2>The Songhay.FrameworkAssemblyInfo Class</h2>\n<p>\n  <img alt=\"Songhay.FrameworkAssemblyInfo\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.FrameworkAssemblyInfo.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This definition combines data from the <a href=\"http://msdn2.microsoft.com/en-us/library/system.reflection.assembly.getcustomattributes(VS.71).aspx\">Assembly.GetCustomAttributes Method</a> and other members of the <a href=\"http://msdn2.microsoft.com/en-us/library/system.reflection(vs.71).aspx\">System.Reflection</a> namespace. It was originally designed for use in Windows Forms applications but, through <code>Songhay.FrameworkAssembly</code> (see above), can be used in Server applications when reading “plain old objects” directly is not advantageous.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.FrameworkAssemblyInfo Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EGEAG2\">\n  <tr>\n    <td>\n      <code>AssemblyTitle</code>\n    </td>\n    <td>Attempts to return <code>AssemblyTitleAttribute</code> as a string. When this is null or empty, returns <code>Assembly.CodeBase</code> as a string.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>AssemblyVersion</code>\n    </td>\n    <td>Returns <code>AssemblyName.Version</code> as a string.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>AssemblyVersionDetail</code>\n    </td>\n    <td>Returns <code>AssemblyName.Version.Major</code> and <code>AssemblyName.Version.Minor</code> in a formatted string.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>AssemblyDescription</code>\n    </td>\n    <td>Attempts to return <code>AssemblyDescriptionAttribute</code> as a string. Failure returns <code>String.Empty</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>AssemblyProduct</code>\n    </td>\n    <td>Attempts to return <code>AssemblyProductAttribute</code> as a string. Failure returns <code>String.Empty</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>AssemblyCopyright</code>\n    </td>\n    <td>Attempts to return <code>AssemblyCopyrightAttribute</code> as a string. Failure returns <code>String.Empty</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>AssemblyCompany</code>\n    </td>\n    <td>Attempts to return <code>AssemblyCompanyAttribute</code> as a string. Failure returns <code>String.Empty</code>.</td>\n  </tr>\n</table>\n<h2>The Songhay.FrameworkFile Static Class</h2>\n<p>\n  <img alt=\"Songhay.FrameworkFile\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.FrameworkFile.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This defines helper routines providing disk file functionality not known to be available in the .NET in general and the <a href=\"http://msdn2.microsoft.com/en-us/library/system.io(vs.80).aspx\">System.IO</a> namespace in particular.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.FrameworkFile Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EHRAG2\">\n  <tr>\n    <td>\n      <code>FileName()</code>\n    </td>\n    <td>\n      <p>Returns the file name based on the specified path and <code>System.IO.Path.DirectorySeparatorChar</code>. You have the option of supplying your own directory separator character in an overload.</p>\n      <p>This member returns <code>foo.txt</code> from <code>c:\\myfolder\\foo.txt</code>.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>PathRoot()</code>\n    </td>\n    <td>\n      <p>Returns the directory root based on the specified path and <code>System.IO.Path.DirectorySeparatorChar</code>. You have the option of supplying your own directory separator character in an overload.</p>\n      <p>This member returns <code>c:\\myfolder\\</code> from <code>c:\\myfolder\\foo.txt</code>.</p>\n    </td>\n  </tr>\n</table>\n<h2>The Songhay.FrameworkType Static Class</h2>\n<p>\n  <img alt=\"Songhay.FrameworkType\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.FrameworkType.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This defines a response to the <code>TryParse()</code> methods for the new .NET 2.0 <a href=\"http://msdn2.microsoft.com/en-us/library/1t3y8s4s(VS.80).aspx\">Nullable Types</a>. This class definition also recognizes “<a href=\"http://en.wikipedia.org/wiki/Unix_Time\">Unix Time</a>.”</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.FrameworkType Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EXYAG2\">\n  <tr>\n    <td>\n      <code>DateTimeFromUnixTime()</code>\n    </td>\n    <td>Converts Unix time stamps to <code>System.DateTime</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>DateTimeToUnixTime()</code>\n    </td>\n    <td>Converts the current time or a specified <code>System.DateTime</code> to a Unix time stamp.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>ParseBoolean()</code>\n    </td>\n    <td>Returns a Nullable <code>Boolean</code> based on the specified <code>System.Object</code>. Failure returns a Nullable with <code>HasValue == false</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>ParseByte()</code>\n    </td>\n    <td>Returns a Nullable <code>Byte</code> based on the specified <code>System.Object</code>. Failure returns a Nullable with <code>HasValue == false</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>ParseDateTime()</code>\n    </td>\n    <td>Returns a Nullable <code>DateTime</code> based on the specified <code>System.Object</code>. Failure returns a Nullable with <code>HasValue == false</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>ParseDateTimeWithFormat()</code>\n    </td>\n    <td>Returns a <code>System.String</code> based on the specified <code>System.Object</code> and date-time format expression. Failure returns null.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>ParseDouble()</code>\n    </td>\n    <td>Returns a Nullable <code>Double</code> based on the specified <code>System.Object</code>. Failure returns a Nullable with <code>HasValue == false</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>ParseInt32()</code>\n    </td>\n    <td>Returns a Nullable <code>Int32</code> based on the specified <code>System.Object</code>. Failure returns a Nullable with <code>HasValue == false</code>.</td>\n  </tr>\n</table>\n<h2>The Songhay.Net.HttpVerb Static Class</h2>\n<p>\n  <img alt=\"Songhay.Net.HttpVerb\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Net.HttpVerb.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This definition recognizes the importance of <acronym title=\"Representational State Transfer\">REST</acronym> for Windows “rich” clients—starting with Windows Forms. As of this writing, the HTTP verbs <span style=\"font-variant:small-caps;\">get</span> and <span style=\"font-variant:small-caps;\">post</span> are recognized here. Additionally, the concept of the XML <span style=\"font-variant:small-caps;\">post</span> is implemented. This definition depends on the <a href=\"http://msdn2.microsoft.com/en-us/library/system.net.httpwebrequest.aspx\">System.Net.HttpWebRequest</a> class.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Net.HttpVerb Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EZJBG2\">\n  <tr>\n    <td>\n      <code>Get()</code>\n    </td>\n    <td>Returns the result of an HTTP <span style=\"font-variant:small-caps;\">get</span> in a <code>System.String</code> based on the specified resource location. You have the option of supplying proxy server information with a bypass switch.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>Post()</code>\n    </td>\n    <td>Returns the result of an HTTP <span style=\"font-variant:small-caps;\">post</span> in a <code>System.String</code> based on the specified resource location and <span style=\"font-variant:small-caps;\">post</span> data. You have the option of supplying proxy server information with a bypass switch.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>XmlPost()</code>\n    </td>\n    <td>Returns the result of an HTTP <span style=\"font-variant:small-caps;\">post</span> in a <code>System.String</code> based on the specified resource location and <span style=\"font-variant:small-caps;\">post</span> data. The post data is assumed to be an <acronym title=\"Extensible Markup Language\">XML</acronym> fragment. You have the option of supplying proxy server information with a bypass switch.</td>\n  </tr>\n</table>\n<h2>The Songhay.Xml Namespace</h2>\n<p>The <code>Songhay.Xml</code> namespace is overviewed in another document, “<a href=\"http://SonghaySystem.com/document.php?docCode=SonghayNetXml\">Songhay.NET: An Overview of the Songhay XML Namespace</a>.”</p>\n<h2>Response to FxCop Analysis of this Namespace</h2>\n<p>As of this writing, the <code>Songhay</code> and <code>Songhay.Net</code> namespaces both ‘violate’ internationalization as indicated by the <code>SpecifyIFormatProvider</code> error. This is a typical, North American oversight that will be addressed in future!</p>\n<p>The <code>Songhay.Net</code> namespace gets the <code>AvoidNamespacesWithFewTypes</code> error. Today, this error is considered an encouragement to develop the <code>Songhay.Net</code> namespace. For example, the case of using security credentials other than the default network credentials has yet to be implemented.</p>",
    "CreateDate": "2007-05-01T15:46:00.0000000",
    "EndDate": null,
    "ModificationDate": "2007-08-17T16:29:24.6070000",
    "DocumentId": "52",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "71",
    "FragmentName": null,
    "FragmentDisplayName": "Songhay.NET: An Overview of the Songhay XML Namespace",
    "SortOrdinal": null,
    "ItemChar": "<h1>Songhay.NET: An Overview of the Songhay XML Namespace</h1>\n<div id=\"CodePlexBlock\">\n  <div align=\"center\">\n    <img alt=\"CodePlex\" src=\"http://songhaysystem.com/bitmaps/codeplex.jpg\" />\n  </div>\n  <p>The code archive for the Songhay XML Namespace is available at CodePlex.com in the <a href=\"http://www.codeplex.com/songhaydata/SourceControl/ListDownloadableCommits.aspx\">Songhay System Data Access Framework</a>.</p>\n</div>\n<p>\n  <img alt=\"Songhay\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/songhay_project.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This document summarizes the design goals and designer intentions behind the <code>Songhay.Xml</code> namespace, written in C# for .NET 2.0.50727. This namespace, introduced in “<a href=\"http://SonghaySystem.com/document.php?docCode=SonghayNet\">Songhay.NET: An Overview of the Songhay Namespace</a>,” is so large that it needs its own document! This is an indicator of a Microsoft future of enhancing or supplementing <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml(vs.71).aspx\">System.Xml</a>—or this is an indicator of the ignorance of the developer (me). Again, the contents of this namespace attempts to not make the mistake of providing functionality that is already available in .NET. Rather, the <code>Songhay</code><code>.Xml</code> namespace contains definitions that assert <em>specific</em> purpose over the <em>general</em> purpose of the .NET framework.</p>\n<p>To explain the <em>primal</em> importance of <acronym title=\"Extensible Markup Language\">XML</acronym> is beyond the scope of this document. The specific purpose of the <code>Songhay</code><code>.Xml</code> namespace is governed by these strong words:</p>\n<ul>\n  <li>Utility</li>\n  <li>Glyph</li>\n</ul>\n<p>The strong word, <em>Utility</em>, implies that “helper” methods are defined for use. So the <code>Songhay</code><code>.Xml.</code><code>HtmlUtility</code> and <code>Songhay</code><code>.Xml.</code><code>XmlUtility</code> classes in this namespace indicate generic “helper” members concerned with <acronym title=\"Hypertext Markup Language\">HTML</acronym> and XML, respectively. The distinction here between HTML and XML is the formal recognition that HTML degrades into non-well-formed XML demanding the use of Regular Expressions.</p>\n<p>The strong word, <em>Glyph</em>, recognizes the concept of the typographic glyphs—specifically the Latin glyphs that exist outside of the ASCII character set. The specific problem of translating <a href=\"http://en.wikipedia.org/wiki/HTML_entities\">HTML entities</a> to full UTF-8 glyphs is recognized and respected here. The <code>Songhay.Xml.LatinGlyphs</code> struct defines a response to this problem.</p>\n<h2>The Songhay.Xml.HtmlUtility Static Class</h2>\n<p>\n  <img alt=\"Songhay.Xml.HtmlUtility\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Xml.HtmlUtility.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This defines generic helper procedures for HTML processing.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Xml.HtmlUtility Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0E46AE2\">\n  <tr>\n    <td>\n      <code>ConvertToHtml()</code>\n    </td>\n    <td>\n      <p>Returns a string of marked up text compatible with degenerate browsers that do not support XHTML (loosely towards HTML 4.x W3C standard). These are the activities inside this member:</p>\n      <ul>\n        <li>Minimize selected XHTML block elements.</li>\n        <li>Remove XHTML html element attributes.</li>\n        <li>Remove XHTML element minimization.</li>\n        <li>Remove XHTML attribute minimization.</li>\n      </ul>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>ConvertToXml()</code>\n    </td>\n    <td>\n      <p>Attempts to convert HTML to well-formed XML. This task is simpler than converting to XHTML. These are the activities inside this member:</p>\n      <ul>\n        <li>Remove <code>x</code><code></code><code>mlns</code> attributes.</li>\n        <li>Close open elements.</li>\n        <li>Find attributes without quotes.</li>\n        <li>Generate attributes for <code>checked</code>, <code>nobreak</code>, <code>nosave</code> and <code>selected</code>.</li>\n        <li>Look for URI query strings with raw ampersands.</li>\n        <li>Replace the CDATA \"x­mlns\" with \"x-mlns\" (adds a soft-hyphen). For more information, read “<a href=\"http://songhaysystem.com/document.php?kbDoc=xml_2076071823\">XSLT Problem: The String \"x­mlns\" Can Mangle Output</a>.”</li>\n      </ul>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>FormatXhtmlElements()</code>\n    </td>\n    <td>\n      <p>Returns an XHTML string derived from a .NET procedure. This member addresses certain quirks that well-formed XML cannot have in a contemporary Web browser. These are the activities inside this member:</p>\n      <ul>\n        <li>Maximize selected empty minimized block elements. These are the elements that cannot be minimized: <code>a</code>, <code>iframe</code>, <code>td</code>, <code>th</code> and <code>script</code>.</li>\n      </ul>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetInnerXml()</code>\n    </td>\n    <td>\n      <p>Returns the “inner” fragment of XML from the specified unique element.</p>\n      <p>The strong word XML is somewhat abused here because what is returned may not be well-formed XML.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>PublicDocType()</code>\n    </td>\n    <td>Emits a public <code>DOCTYPE</code> tag for HTML 4.0 transitional (by default).</td>\n  </tr>\n</table>\n<h2>The Songhay.Xml.LatinGlyphs Struct</h2>\n<p>\n  <img alt=\"Songhay.Xml.LatinGlyphs\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Xml.LatinGlyphs.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This data structure condenses and expands selected Latin glyphs. To <em>condense</em> a glyph means that its HTML entity form is ‘reduced’ to its single glyph. This means that <code>&amp;#233</code><code>;</code> is condensed into <em>é</em>. To expand a glyph is the reverse of this process. Note that the decimal form of entities is preferred here because only five named entities are supported by XML. However some named entities are supported (see below).</p>\n<p>This data structure uses a static, generic Dictionary <code>&lt;String,String&gt;</code> to store glyph-decimal-entity pairs. This should immediately suggest the brute force nature of this struct that was designed to address a <em>specific</em> problem!</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Xml.LatinGlyphs Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0E2VAG2\">\n  <tr>\n    <td>\n      <code>Condense()</code>\n    </td>\n    <td>\n      <p>Condenses selected decimal and named entities into their Latin glyph equivalent.</p>\n      <p>The named entities were selected for historical reasons. For Songhay System applications, these were the conventional/editorial entities most in use:</p>\n      <ul>\n        <li>&amp;copy;</li>\n        <li>&amp;eacute;</li>\n        <li>&amp;nbsp;</li>\n        <li>&amp;reg;</li>\n        <li>&amp;trade;</li>\n      </ul>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>Expand()</code>\n    </td>\n    <td>\n      <p>Expands selected Latin glyphs into their decimal entity equivalent. These are the ranges expanded:</p>\n      <ul>\n        <li>Characters 128–159</li>\n        <li>Characters 160–191</li>\n        <li>Characters 192–223</li>\n        <li>Characters 224–255</li>\n      </ul>\n      <p>As of this writing, the range is simply 128 through 255.</p>\n    </td>\n  </tr>\n</table>\n<h2>The Songhay.Xml.XmlUtility Static Class</h2>\n<p>\n  <img alt=\"Songhay.Xml.XmlUtility\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Xml.XmlUtility.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This defines generic helper procedures for XML processing.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Xml.XmlUtility Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EJ6AG2\">\n  <tr>\n    <td>\n      <code>ExpandSpecialChars()</code>\n    </td>\n    <td>Expands selected characters in the specified <code>System.String</code> into the standard XML entities (<code>&amp;amp;</code>, <code>&amp;apos;</code>, <code>&amp;gt;</code>, <code>&amp;lt;</code> and <code>&amp;quot;</code>). Comments are preserved.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetAttributeValue()</code>\n    </td>\n    <td>\n      <p>An alternative to <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.xpath.xpathnavigator.getattribute.aspx\">System.Xml.XPath.XPathNavigator.GetAttribute</a>.</p>\n      <p>Returns the value of an XML attribute based on the specified <code>IXPathNavigable</code> set, XPath query and <code>XmlNamespaceManager</code> (optional).</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetInternalMessage()</code>\n    </td>\n    <td>\n      <p>Generates a conventional, ‘schema-free’ XML message used by <acronym title=\"Extensible Stylesheet Language Transformations\">XSLT</acronym> applications.</p>\n      <p>This message format can be used to display exceptions (in a secure context of course) or the results of an operation that does not return data.</p>\n      <p>Remember that this member exists <em>by convention</em>. The sordid details of this cultural practice are beyond the scope of this document!</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetInternalMessageDoc()</code>\n    </td>\n    <td>Serves the same purpose as <code>GetInternalMessage()</code> but returns an <code>XPathDocument</code> navigable document.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetInstance&lt;&gt;()</code>\n    </td>\n    <td>\n      <p>‘Hydrates’ a native .NET type based on the specified XML file and <code>System.Type</code>. This member is a wrapper for the <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.serialization.xmlserializer.deserialize.aspx\">XmlSerializer.Deserialize</a> method using Generics.</p>\n      <p>FxCop considers this method ‘dangerous’ (see below).</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetInstanceRaw&lt;&gt;()</code>\n    </td>\n    <td>\n      <p>‘Hydrates’ a native .NET type based on the specified XML fragment and <code>System.Type</code>. This member is a wrapper for the <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.serialization.xmlserializer.deserialize.aspx\">XmlSerializer.Deserialize</a> method using Generics.</p>\n      <p>FxCop considers this method ‘dangerous’ (see below).</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetNamespaceManager()</code>\n    </td>\n    <td>\n      <p>Returns a <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.xmlnamespacemanager_members.aspx\">System.Xml.XmlNamespaceManager</a> with respect to the document element of the specified <code>IXPathNavigable</code> set.</p>\n      <p>The requirement of namespace managers for simple navigable document operations can be quite tiresome. This member is here to relieve some misery!</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetNavigableDocument()</code>\n    </td>\n    <td>Returns an <code>XPathDocument</code> based on the specified <code>System.String</code> (as an XML fragment) or the <code>IXPathNavigable</code> set.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetNavigableNode()</code>\n    </td>\n    <td>Returns an <code>XPathNavigator</code> based on the specified <code>IXPathNavigable</code> set, XPath query and <code>XmlNamespaceManager</code> (optional).</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetNavigableNodes()</code>\n    </td>\n    <td>Returns an <code>XPathNodeIterator</code> based on the specified <code>IXPathNavigable</code> set, XPath query and <code>XmlNamespaceManager</code> (optional).</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetNodeValue()</code>\n    </td>\n    <td>\n      <p>Returns a <code>System.Object</code> based on the specified <code>XPathNavigator</code>, XPath query and a Boolean that when <code>true</code> throws a new <code>XmlException</code> for XPath queries that fail. This member also takes an optional default value to be used in case of XPath query failure.</p>\n      <p>This member is extremely important because it provides an alternative to schemas and strongly suggests that conventional XPath assertions can be used <em>before</em> formal schemas.</p>\n      <p>This member returns <code>System.Object</code> because ADO.NET parameters are objects.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetNodeValueAndParse&lt;&gt;()</code>\n    </td>\n    <td>\n      <p>This member works just like <code>GetNodeValue()</code> but adds the ability to parse for the specified .NET type. These are the supported types:</p>\n      <ul>\n        <li>Boolean</li>\n        <li>Byte</li>\n        <li>DateTime</li>\n        <li>Decimal</li>\n        <li>Double</li>\n        <li>Int16</li>\n        <li>Int32</li>\n        <li>Int64</li>\n        <li>String</li>\n      </ul>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetText()</code>\n    </td>\n    <td>“Cleans” XML data returning in a <a href=\"http://msdn2.microsoft.com/en-us/library/system.io.memorystream_members.aspx\">System.IO.MemoryStream</a>. The primary activity in this procedure is to remove <code>\\0</code> characters.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetXslResult()</code>\n    </td>\n    <td>Returns an <code>XPathDocument</code> for the transformation of the XSLT navigable document and the XML navigable document, with the option of providing a <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.xsl.xsltargumentlist_members.aspx\">System.Xml.Xsl.XsltArgumentList</a>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetXslString()</code>\n    </td>\n    <td>Returns a <code>System.String</code> for the transformation of the XSLT navigable document and the XML navigable document, with the option of providing a <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.xsl.xsltargumentlist_members.aspx\">System.Xml.Xsl.XsltArgumentList</a>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>LoadXslTransform()</code>\n    </td>\n    <td>\n      <p>Returns a <code>System.String</code> for the transformation of the XSLT file and the XML file or navigable document, with the option of providing a <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.xsl.xsltargumentlist_members.aspx\">System.Xml.Xsl.XsltArgumentList</a>.</p>\n      <p>You also have the option of sending an XSLT command to a conventional XSLT parameter (<code>cmd</code>).</p>\n      <p>Also note that this member assumes that XSLT comes from file locations. The notion of, say, an ‘in-memory’ XSLT file (as a navigable set) is not recognized here.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>StripNamespaces()</code>\n    </td>\n    <td>\n      <p>Strips the namespaces from the specified <code>System.String</code> based on the specified string or navigable document.</p>\n      <p>Stripping namespaces “flattens” the document and can cause local-name collisions. This routine does not remove namespace prefixes.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>WriteReader()</code>\n    </td>\n    <td>Transfers the data in the source <code>XmlTextReader</code> to the destination <code>XmlTextWriter</code>. These arguments are passed by reference and throws an error in FxCop (see below).</td>\n  </tr>\n  <tr>\n    <td>\n      <code>WriteXslTransform()</code>\n    </td>\n    <td>Transforms the specified navigable XML input document and XSLT document, and writes to disk with the specified path. This member optionally takes an <code>XmlReader</code> as input.</td>\n  </tr>\n</table>\n<h2>Response to FxCop Analysis of this Namespace</h2>\n<p>As of this writing, the <code>Songhay.Xml</code> namespace ‘violates’ internationalization as indicated by the <code>SpecifyIFormatProvider</code> error. This is a typical, North American oversight that will be addressed in future!</p>\n<p>The <code>Songhay.Xml</code> namespace also gets the <code>AvoidNamespacesWithFewTypes</code> error. The hope is that this namespace will shrink further!</p>\n<p>The <code>DoNotPassTypesByReference</code> error in <code>Songhay.Xml.XmlUtility.WriteReader()</code> only piques my interest in why this member is hanging around. A review of any applications depending on this code reveals nothing so far. This member was written for some ASP.NET scenario…</p>\n<p>The <code>DoNotExposeGenericLists</code> error is just an FxCop mystery to me.</p>\n<p>Both <code>Songhay.Xml.XmlUtility.GetInstance&lt;&gt;()</code> and <code>Songhay.Xml.XmlUtility.GetInstanceRaw&lt;&gt;()</code> methods cause the <code>GenericMethodsShouldProvideTypeParameter</code> error. The guidance for this error is this:</p>\n<blockquote>\n  <p>Methods where the type parameter cannot be inferred from the parameters and therefore has to be defined in the method call are too difficult to understand. Methods with a formal parameter typed as the generic method type parameter support inference. Methods with no formal parameter typed as the generic method type parameter don’t support inference.</p>\n</blockquote>\n<p>I’m staring at this right now… Of course this is not ridiculous and it deserves some investigation.</p>",
    "ItemText": "<h1>Songhay.NET: An Overview of the Songhay XML Namespace</h1>\n<div id=\"CodePlexBlock\">\n  <div align=\"center\">\n    <img alt=\"CodePlex\" src=\"http://songhaysystem.com/bitmaps/codeplex.jpg\" />\n  </div>\n  <p>The code archive for the Songhay XML Namespace is available at CodePlex.com in the <a href=\"http://www.codeplex.com/songhaydata/SourceControl/ListDownloadableCommits.aspx\">Songhay System Data Access Framework</a>.</p>\n</div>\n<p>\n  <img alt=\"Songhay\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/songhay_project.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This document summarizes the design goals and designer intentions behind the <code>Songhay.Xml</code> namespace, written in C# for .NET 2.0.50727. This namespace, introduced in “<a href=\"http://SonghaySystem.com/document.php?docCode=SonghayNet\">Songhay.NET: An Overview of the Songhay Namespace</a>,” is so large that it needs its own document! This is an indicator of a Microsoft future of enhancing or supplementing <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml(vs.71).aspx\">System.Xml</a>—or this is an indicator of the ignorance of the developer (me). Again, the contents of this namespace attempts to not make the mistake of providing functionality that is already available in .NET. Rather, the <code>Songhay</code><code>.Xml</code> namespace contains definitions that assert <em>specific</em> purpose over the <em>general</em> purpose of the .NET framework.</p>\n<p>To explain the <em>primal</em> importance of <acronym title=\"Extensible Markup Language\">XML</acronym> is beyond the scope of this document. The specific purpose of the <code>Songhay</code><code>.Xml</code> namespace is governed by these strong words:</p>\n<ul>\n  <li>Utility</li>\n  <li>Glyph</li>\n</ul>\n<p>The strong word, <em>Utility</em>, implies that “helper” methods are defined for use. So the <code>Songhay</code><code>.Xml.</code><code>HtmlUtility</code> and <code>Songhay</code><code>.Xml.</code><code>XmlUtility</code> classes in this namespace indicate generic “helper” members concerned with <acronym title=\"Hypertext Markup Language\">HTML</acronym> and XML, respectively. The distinction here between HTML and XML is the formal recognition that HTML degrades into non-well-formed XML demanding the use of Regular Expressions.</p>\n<p>The strong word, <em>Glyph</em>, recognizes the concept of the typographic glyphs—specifically the Latin glyphs that exist outside of the ASCII character set. The specific problem of translating <a href=\"http://en.wikipedia.org/wiki/HTML_entities\">HTML entities</a> to full UTF-8 glyphs is recognized and respected here. The <code>Songhay.Xml.LatinGlyphs</code> struct defines a response to this problem.</p>\n<h2>The Songhay.Xml.HtmlUtility Static Class</h2>\n<p>\n  <img alt=\"Songhay.Xml.HtmlUtility\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Xml.HtmlUtility.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This defines generic helper procedures for HTML processing.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Xml.HtmlUtility Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0E46AE2\">\n  <tr>\n    <td>\n      <code>ConvertToHtml()</code>\n    </td>\n    <td>\n      <p>Returns a string of marked up text compatible with degenerate browsers that do not support XHTML (loosely towards HTML 4.x W3C standard). These are the activities inside this member:</p>\n      <ul>\n        <li>Minimize selected XHTML block elements.</li>\n        <li>Remove XHTML html element attributes.</li>\n        <li>Remove XHTML element minimization.</li>\n        <li>Remove XHTML attribute minimization.</li>\n      </ul>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>ConvertToXml()</code>\n    </td>\n    <td>\n      <p>Attempts to convert HTML to well-formed XML. This task is simpler than converting to XHTML. These are the activities inside this member:</p>\n      <ul>\n        <li>Remove <code>x</code><code></code><code>mlns</code> attributes.</li>\n        <li>Close open elements.</li>\n        <li>Find attributes without quotes.</li>\n        <li>Generate attributes for <code>checked</code>, <code>nobreak</code>, <code>nosave</code> and <code>selected</code>.</li>\n        <li>Look for URI query strings with raw ampersands.</li>\n        <li>Replace the CDATA \"x­mlns\" with \"x-mlns\" (adds a soft-hyphen). For more information, read “<a href=\"http://songhaysystem.com/document.php?kbDoc=xml_2076071823\">XSLT Problem: The String \"x­mlns\" Can Mangle Output</a>.”</li>\n      </ul>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>FormatXhtmlElements()</code>\n    </td>\n    <td>\n      <p>Returns an XHTML string derived from a .NET procedure. This member addresses certain quirks that well-formed XML cannot have in a contemporary Web browser. These are the activities inside this member:</p>\n      <ul>\n        <li>Maximize selected empty minimized block elements. These are the elements that cannot be minimized: <code>a</code>, <code>iframe</code>, <code>td</code>, <code>th</code> and <code>script</code>.</li>\n      </ul>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetInnerXml()</code>\n    </td>\n    <td>\n      <p>Returns the “inner” fragment of XML from the specified unique element.</p>\n      <p>The strong word XML is somewhat abused here because what is returned may not be well-formed XML.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>PublicDocType()</code>\n    </td>\n    <td>Emits a public <code>DOCTYPE</code> tag for HTML 4.0 transitional (by default).</td>\n  </tr>\n</table>\n<h2>The Songhay.Xml.LatinGlyphs Struct</h2>\n<p>\n  <img alt=\"Songhay.Xml.LatinGlyphs\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Xml.LatinGlyphs.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This data structure condenses and expands selected Latin glyphs. To <em>condense</em> a glyph means that its HTML entity form is ‘reduced’ to its single glyph. This means that <code>&amp;#233</code><code>;</code> is condensed into <em>é</em>. To expand a glyph is the reverse of this process. Note that the decimal form of entities is preferred here because only five named entities are supported by XML. However some named entities are supported (see below).</p>\n<p>This data structure uses a static, generic Dictionary <code>&lt;String,String&gt;</code> to store glyph-decimal-entity pairs. This should immediately suggest the brute force nature of this struct that was designed to address a <em>specific</em> problem!</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Xml.LatinGlyphs Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0E2VAG2\">\n  <tr>\n    <td>\n      <code>Condense()</code>\n    </td>\n    <td>\n      <p>Condenses selected decimal and named entities into their Latin glyph equivalent.</p>\n      <p>The named entities were selected for historical reasons. For Songhay System applications, these were the conventional/editorial entities most in use:</p>\n      <ul>\n        <li>&amp;copy;</li>\n        <li>&amp;eacute;</li>\n        <li>&amp;nbsp;</li>\n        <li>&amp;reg;</li>\n        <li>&amp;trade;</li>\n      </ul>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>Expand()</code>\n    </td>\n    <td>\n      <p>Expands selected Latin glyphs into their decimal entity equivalent. These are the ranges expanded:</p>\n      <ul>\n        <li>Characters 128–159</li>\n        <li>Characters 160–191</li>\n        <li>Characters 192–223</li>\n        <li>Characters 224–255</li>\n      </ul>\n      <p>As of this writing, the range is simply 128 through 255.</p>\n    </td>\n  </tr>\n</table>\n<h2>The Songhay.Xml.XmlUtility Static Class</h2>\n<p>\n  <img alt=\"Songhay.Xml.XmlUtility\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Xml.XmlUtility.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />This defines generic helper procedures for XML processing.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Xml.XmlUtility Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EJ6AG2\">\n  <tr>\n    <td>\n      <code>ExpandSpecialChars()</code>\n    </td>\n    <td>Expands selected characters in the specified <code>System.String</code> into the standard XML entities (<code>&amp;amp;</code>, <code>&amp;apos;</code>, <code>&amp;gt;</code>, <code>&amp;lt;</code> and <code>&amp;quot;</code>). Comments are preserved.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetAttributeValue()</code>\n    </td>\n    <td>\n      <p>An alternative to <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.xpath.xpathnavigator.getattribute.aspx\">System.Xml.XPath.XPathNavigator.GetAttribute</a>.</p>\n      <p>Returns the value of an XML attribute based on the specified <code>IXPathNavigable</code> set, XPath query and <code>XmlNamespaceManager</code> (optional).</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetInternalMessage()</code>\n    </td>\n    <td>\n      <p>Generates a conventional, ‘schema-free’ XML message used by <acronym title=\"Extensible Stylesheet Language Transformations\">XSLT</acronym> applications.</p>\n      <p>This message format can be used to display exceptions (in a secure context of course) or the results of an operation that does not return data.</p>\n      <p>Remember that this member exists <em>by convention</em>. The sordid details of this cultural practice are beyond the scope of this document!</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetInternalMessageDoc()</code>\n    </td>\n    <td>Serves the same purpose as <code>GetInternalMessage()</code> but returns an <code>XPathDocument</code> navigable document.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetInstance&lt;&gt;()</code>\n    </td>\n    <td>\n      <p>‘Hydrates’ a native .NET type based on the specified XML file and <code>System.Type</code>. This member is a wrapper for the <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.serialization.xmlserializer.deserialize.aspx\">XmlSerializer.Deserialize</a> method using Generics.</p>\n      <p>FxCop considers this method ‘dangerous’ (see below).</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetInstanceRaw&lt;&gt;()</code>\n    </td>\n    <td>\n      <p>‘Hydrates’ a native .NET type based on the specified XML fragment and <code>System.Type</code>. This member is a wrapper for the <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.serialization.xmlserializer.deserialize.aspx\">XmlSerializer.Deserialize</a> method using Generics.</p>\n      <p>FxCop considers this method ‘dangerous’ (see below).</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetNamespaceManager()</code>\n    </td>\n    <td>\n      <p>Returns a <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.xmlnamespacemanager_members.aspx\">System.Xml.XmlNamespaceManager</a> with respect to the document element of the specified <code>IXPathNavigable</code> set.</p>\n      <p>The requirement of namespace managers for simple navigable document operations can be quite tiresome. This member is here to relieve some misery!</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetNavigableDocument()</code>\n    </td>\n    <td>Returns an <code>XPathDocument</code> based on the specified <code>System.String</code> (as an XML fragment) or the <code>IXPathNavigable</code> set.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetNavigableNode()</code>\n    </td>\n    <td>Returns an <code>XPathNavigator</code> based on the specified <code>IXPathNavigable</code> set, XPath query and <code>XmlNamespaceManager</code> (optional).</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetNavigableNodes()</code>\n    </td>\n    <td>Returns an <code>XPathNodeIterator</code> based on the specified <code>IXPathNavigable</code> set, XPath query and <code>XmlNamespaceManager</code> (optional).</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetNodeValue()</code>\n    </td>\n    <td>\n      <p>Returns a <code>System.Object</code> based on the specified <code>XPathNavigator</code>, XPath query and a Boolean that when <code>true</code> throws a new <code>XmlException</code> for XPath queries that fail. This member also takes an optional default value to be used in case of XPath query failure.</p>\n      <p>This member is extremely important because it provides an alternative to schemas and strongly suggests that conventional XPath assertions can be used <em>before</em> formal schemas.</p>\n      <p>This member returns <code>System.Object</code> because ADO.NET parameters are objects.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetNodeValueAndParse&lt;&gt;()</code>\n    </td>\n    <td>\n      <p>This member works just like <code>GetNodeValue()</code> but adds the ability to parse for the specified .NET type. These are the supported types:</p>\n      <ul>\n        <li>Boolean</li>\n        <li>Byte</li>\n        <li>DateTime</li>\n        <li>Decimal</li>\n        <li>Double</li>\n        <li>Int16</li>\n        <li>Int32</li>\n        <li>Int64</li>\n        <li>String</li>\n      </ul>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetText()</code>\n    </td>\n    <td>“Cleans” XML data returning in a <a href=\"http://msdn2.microsoft.com/en-us/library/system.io.memorystream_members.aspx\">System.IO.MemoryStream</a>. The primary activity in this procedure is to remove <code>\\0</code> characters.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetXslResult()</code>\n    </td>\n    <td>Returns an <code>XPathDocument</code> for the transformation of the XSLT navigable document and the XML navigable document, with the option of providing a <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.xsl.xsltargumentlist_members.aspx\">System.Xml.Xsl.XsltArgumentList</a>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetXslString()</code>\n    </td>\n    <td>Returns a <code>System.String</code> for the transformation of the XSLT navigable document and the XML navigable document, with the option of providing a <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.xsl.xsltargumentlist_members.aspx\">System.Xml.Xsl.XsltArgumentList</a>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>LoadXslTransform()</code>\n    </td>\n    <td>\n      <p>Returns a <code>System.String</code> for the transformation of the XSLT file and the XML file or navigable document, with the option of providing a <a href=\"http://msdn2.microsoft.com/en-us/library/system.xml.xsl.xsltargumentlist_members.aspx\">System.Xml.Xsl.XsltArgumentList</a>.</p>\n      <p>You also have the option of sending an XSLT command to a conventional XSLT parameter (<code>cmd</code>).</p>\n      <p>Also note that this member assumes that XSLT comes from file locations. The notion of, say, an ‘in-memory’ XSLT file (as a navigable set) is not recognized here.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>StripNamespaces()</code>\n    </td>\n    <td>\n      <p>Strips the namespaces from the specified <code>System.String</code> based on the specified string or navigable document.</p>\n      <p>Stripping namespaces “flattens” the document and can cause local-name collisions. This routine does not remove namespace prefixes.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>WriteReader()</code>\n    </td>\n    <td>Transfers the data in the source <code>XmlTextReader</code> to the destination <code>XmlTextWriter</code>. These arguments are passed by reference and throws an error in FxCop (see below).</td>\n  </tr>\n  <tr>\n    <td>\n      <code>WriteXslTransform()</code>\n    </td>\n    <td>Transforms the specified navigable XML input document and XSLT document, and writes to disk with the specified path. This member optionally takes an <code>XmlReader</code> as input.</td>\n  </tr>\n</table>\n<h2>Response to FxCop Analysis of this Namespace</h2>\n<p>As of this writing, the <code>Songhay.Xml</code> namespace ‘violates’ internationalization as indicated by the <code>SpecifyIFormatProvider</code> error. This is a typical, North American oversight that will be addressed in future!</p>\n<p>The <code>Songhay.Xml</code> namespace also gets the <code>AvoidNamespacesWithFewTypes</code> error. The hope is that this namespace will shrink further!</p>\n<p>The <code>DoNotPassTypesByReference</code> error in <code>Songhay.Xml.XmlUtility.WriteReader()</code> only piques my interest in why this member is hanging around. A review of any applications depending on this code reveals nothing so far. This member was written for some ASP.NET scenario…</p>\n<p>The <code>DoNotExposeGenericLists</code> error is just an FxCop mystery to me.</p>\n<p>Both <code>Songhay.Xml.XmlUtility.GetInstance&lt;&gt;()</code> and <code>Songhay.Xml.XmlUtility.GetInstanceRaw&lt;&gt;()</code> methods cause the <code>GenericMethodsShouldProvideTypeParameter</code> error. The guidance for this error is this:</p>\n<blockquote>\n  <p>Methods where the type parameter cannot be inferred from the parameters and therefore has to be defined in the method call are too difficult to understand. Methods with a formal parameter typed as the generic method type parameter support inference. Methods with no formal parameter typed as the generic method type parameter don’t support inference.</p>\n</blockquote>\n<p>I’m staring at this right now… Of course this is not ridiculous and it deserves some investigation.</p>",
    "CreateDate": "2007-05-01T16:16:00.0000000",
    "EndDate": null,
    "ModificationDate": "2007-08-17T16:30:18.4370000",
    "DocumentId": "53",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "89",
    "FragmentName": null,
    "FragmentDisplayName": "CleanXHTML 1.2 for Microsoft Office Word 2003 (.NET 2.0)",
    "SortOrdinal": null,
    "ItemChar": "<h1>CleanXHTML 1.2 for Microsoft Office Word 2003 (.NET 2.0)</h1>\n<div id=\"ProductPurchaseBlock\">\n  <p>\n    <a href=\"http://store5.esellerate.net/store/catalog.aspx?s=STR291982498&amp;pc=\" target=\"_blank\">Download CleanXHTML 1.2 for Office Word 2003</a>.</p>\n  <p>Get the free trial copy by clicking on the <strong>Try</strong> button.</p>\n  <p>You can also <a href=\"http://store5.esellerate.net/store/catalog.aspx?s=STR291982498&amp;pc=\">purchase CleanXHTML 1.2</a> from the same location by clicking on the <strong>Buy</strong> button.</p>\n</div>\n<p>CleanXHTML 1.2, now requiring .NET 2.0, extends Microsoft Office Word, adding the ability to export entire documents <em>or</em> a selected range within a document as “clean” <acronym title=\"Extensible Hypertext Markup Language\">XHTML</acronym>. This “Clean” XHTML is standards-compliant <a href=\"http://www.w3.org/TR/xhtml1/dtds.html\">XHTML Transitional</a> markup that is free from the proprietary nature of Microsoft Office Documents. The design goal here is to leverage the robust Office System platform to produce “generic” markup ready for <acronym title=\"Cascading Style Sheet\">CSS</acronym> formatting by Blog tools, <acronym title=\"Really Simple Syndication\">RSS</acronym> feeds or any publishing system that depends on XHTML.</p>\n<p>This document, an <acronym title=\"Extensible Markup Language\">XML</acronym> fragment stored in a database, is produced by CleanXHTML!</p>\n<h2>Attention Current CleanXHTML Users!</h2>\n<p>This new version, CleanXHTML 1.2, is now based on .NET 2.0 and is amazingly fast! CleanXHTML also installs as a ‘real’ Office Add-In just like any other .NET 2.0 Setup application. For more details about this version, see “Known Issues” and “Future Plans for CleanXHTML-based Products” below. Download <a href=\"http://store5.esellerate.net/store/catalog.aspx?s=STR291982498&amp;pc=\">the trial copy of CleanXHTML 1.2</a> and your existing registration data should upgrade you automatically. In some cases you may have to enter your registration data again. For more questions feel free to <a href=\"http://songhaysystem.com/mail.php\">contact Songhay System</a>. Your patience with us is greatly appreciated!</p>\n<h2>The Main Menu</h2>\n<div align=\"center\">\n  <img alt=\"CleanXHTML Main Menu\" src=\"http://songhaysystem.com/bitmaps/CleanXhtml/menu.jpg\" />\n</div>\n<p>The CleanXHTML menu is appended to the main menu as an Office Add-in when it is successfully installed. The menu has three items: <strong>Convert Selection…</strong>, <strong>Options…</strong> and <strong>About CleanXHTML…</strong>.</p>\n<h3>The Convert Selection… Command</h3>\n<p>This is the command that converts a selected range into XHTML. To convert an entire Word document, select the entire document (type <kbd>Ctrl A</kbd> or choose <strong>Edit &gt; Select All</strong>). When CleanXHTML finds a selection it will convert it and show XHTML in the Windows Form below:</p>\n<div align=\"center\">\n  <a href=\"http://songhaysystem.com/bitmaps/CleanXhtml/output.jpg\" target=\"_blank\"><img alt=\"CleanXHTML 1.2 Output\" height=\"371\" src=\"http://songhaysystem.com/bitmaps/CleanXhtml/output.jpg\" width=\"512\" /></a>\n</div>\n<p>Use this form to copy the XHTML to the Clipboard (with the <strong>Copy XHTML</strong> button) or save the XHTML to a file (with the <strong>Save XHTML</strong> button). There are CleanXHTML output options. The table summarizes:</p>\n<table id=\"CleanXhtmlTable_ID0EHVAE5\">\n  <tr>\n    <th>Output Option</th>\n    <th>Remarks</th>\n  </tr>\n  <tr>\n    <td>Copy <code>&lt;body&gt;</code> content only</td>\n    <td>\n      <p>CleanXHTML outputs well-formed XML documents by default. When enabled, this option will strip the XHMTL document down to the XML fragment inside of the <code>body</code> element.</p>\n      <p>This feature is useful for the production of Blog entries and other XHTML fragments.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>Expand glyphs.</td>\n    <td>\n      <p>When enabled, selected <acronym title=\"Unicode Transformation Format-8\">UTF-8</acronym> Latinate glyphs are ‘expanded’ into entities. So a glyph like é is converted into <code>&amp;#233;</code>.</p>\n      <p>This feature is useful for <acronym title=\"Hypertext Markup Language\">HTML</acronym> conversion for non-Unicode environments.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>Convert to HTML</td>\n    <td>When enabled, the output is converted into HTML 4.x.</td>\n  </tr>\n  <tr>\n    <td>Wrap text</td>\n    <td>When enabled, the output wraps inside of its display area.</td>\n  </tr>\n</table>\n<h3>The Options… Command</h3>\n<div align=\"center\">\n  <img alt=\"CleanXHTML Options\" src=\"http://songhaysystem.com/bitmaps/CleanXhtml/options.jpg\" />\n</div>\n<p>The <strong>Options…</strong> command opens the Options dialog shown above. These options control what XHTML attributes are generated. This is largely for <acronym title=\"Cascading Style Sheet\">CSS</acronym> designing. The table below summarizes:</p>\n<table id=\"CleanXhtmlTable_ID0EU3AE4\">\n  <tr>\n    <th>Option Group</th>\n    <th>Option</th>\n    <th>Remarks</th>\n  </tr>\n  <tr>\n    <td>Block Alignment</td>\n    <td>Enable <code>&lt;p align=\"\"&gt;</code></td>\n    <td>When enabled, CleanXHTML will translate Word paragraph alignment (except Left alignment) into XHTML.</td>\n  </tr>\n  <tr>\n    <td>Block Alignment</td>\n    <td>Enable <code>&lt;p align=\"left\"&gt;</code></td>\n    <td>When enabled, CleanXHTML will translate Word paragraph Left alignment into XHTML.</td>\n  </tr>\n  <tr>\n    <td>Block Alignment</td>\n    <td>Enable Table Cell align</td>\n    <td>When enabled, CleanXHTML will translate Word Table Cell horizontal alignment into XHTML. This will output <code>align</code> attributes for <code>td</code> and <code>th</code> elements.</td>\n  </tr>\n  <tr>\n    <td>Block Alignment</td>\n    <td>Enable <code>&lt;table id=\"\"&gt;</code></td>\n    <td>When enabled, CleanXHTML will identify each Word table in XHTML with <code>table</code> <code>id</code> attributes based on the specified prefix (<code>CleanXhtmlTable_</code> by default), a random sequence of letters and ordinal position.</td>\n  </tr>\n  <tr>\n    <td>Endnotes</td>\n    <td>Enable Endnotes</td>\n    <td>When enabled, CleanXHTML will translate Word Footnotes into XHTML endnotes, a <code>div</code> block with <code>id='EndNotesBlock'</code> by default.</td>\n  </tr>\n</table>\n<h2>CleanXHTML Character Style/Effect Conversion for Standard Word Styles and Effects</h2>\n<table id=\"CleanXhtmlTable_ID0EUHAG2\">\n  <tr>\n    <th>Style/Effect</th>\n    <th>CleanXHTML Output</th>\n  </tr>\n  <tr>\n    <td>A <strong>bold character</strong> style or the Bold style</td>\n    <td>\n      <code>&lt;strong&gt;bold character&lt;/strong&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>An <em>italic character</em> style or the Emphasis style</td>\n    <td>\n      <code>&lt;em&gt;italic character&lt;/em&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>A <strong><em>bold-italic</em></strong> style</td>\n    <td>\n      <code>&lt;strong&gt;&lt;em&gt;bold-italic&lt;/em&gt;&lt;/strong&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>A <span style=\"text-decoration:line-through;\">Strike-Through</span> style or the Strikethrough style</td>\n    <td>\n      <code>&lt;span style=\"text-decoration:line-through;\"&gt;Strike-Through&lt;/span&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>A 2<sup>nd</sup> Superscript effect</td>\n    <td>\n      <code>A 2&lt;sup&gt;nd&lt;/sup&gt; Superscript style</code>\n    </td>\n  </tr>\n  <tr>\n    <td>An x<sub>2</sub> Subscript effect</td>\n    <td>\n      <code>An x&lt;sub&gt;2&lt;/sub&gt; Subscript effect</code>\n    </td>\n  </tr>\n  <tr>\n    <td>A <span style=\"font-variant:small-caps;\">Small Caps</span> effect or the Small Caps style</td>\n    <td>\n      <code>&lt;span style=\"font-variant:small-caps;\"&gt;Small Caps&lt;/span&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>An <span style=\"text-transform:uppercase;\">all caps</span> effect or the All Caps style</td>\n    <td>\n      <code>&lt;span style=\"text-transform:uppercase;\"&gt;all caps&lt;/span&gt;</code>\n    </td>\n  </tr>\n</table>\n<h2>CleanXHTML Style Conversion for Standard Word Styles</h2>\n<table id=\"CleanXhtmlTable_ID0EKTAG2\">\n  <tr>\n    <th>Style Name</th>\n    <th>CleanXHTML Output</th>\n  </tr>\n  <tr>\n    <td>Block Text</td>\n    <td>\n      <p>\n        <code>&lt;blockquote&gt;&lt;/blockquote&gt;</code>\n      </p>\n      <p>The <code>cite</code> attribute is not currently supported.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>Heading 1</td>\n    <td>\n      <code>&lt;h1&gt;&lt;/h1&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>Heading 2</td>\n    <td>\n      <code>&lt;h2&gt;&lt;/h2&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>Heading 3</td>\n    <td>\n      <code>&lt;h3&gt;&lt;/h3&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>Heading 4</td>\n    <td>\n      <code>&lt;h4&gt;&lt;/h4&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>Heading 5</td>\n    <td>\n      <code>&lt;h5&gt;&lt;/h5&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>Heading 6</td>\n    <td>\n      <code>&lt;h6&gt;&lt;/h6&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>Hyperlink</td>\n    <td>\n      <p>\n        <code>&lt;a href=\"…\" target=\"…\" title=\"…\"&gt;&lt;/a&gt;</code>\n      </p>\n      <ul>\n        <li>The <code>target</code> and the <code>title</code> attributes appear when the <strong>ScreenTip…</strong> or <strong>Target Frame</strong><strong>…</strong> commands are used in the <strong>Insert Hyperlink</strong> dialog (or the <a href=\"http://office.microsoft.com/en-us/assistance/CH011097281033.aspx\"><strong>Edit Hyperlinks…</strong> dialog</a>).</li>\n      </ul>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <p>Normal</p>\n    </td>\n    <td>\n      <p>\n        <code>&lt;p&gt;&lt;/p&gt;</code>\n      </p>\n      <p>See “The Options… Command” above about details about aligning the <code>p</code> block.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <ul>\n        <li>List Bullet</li>\n      </ul>\n    </td>\n    <td>\n      <pre xml:space=\"preserve\">\n&lt;ul&gt;\n    &lt;li&gt;List Bullet&lt;/li&gt;\n&lt;/ul&gt;\n                  \n</pre>\n      <p>The List Bullet style appears with the <kbd>Ctrl+Shift+L</kbd> shortcut.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <ol>\n        <li>List Number</li>\n      </ol>\n    </td>\n    <td>\n      <pre xml:space=\"preserve\">\n&lt;ol&gt;\n    &lt;li&gt;List Number&lt;/li&gt;\n&lt;/ol&gt;\n                  \n</pre>\n    </td>\n  </tr>\n</table>\n<h2>CleanXHTML Style Conversion for Standard HTML-Related Styles</h2>\n<table id=\"CleanXhtmlTable_ID0EOFBG2\">\n  <tr>\n    <th>Style Name</th>\n    <th>CleanXHTML Output</th>\n  </tr>\n  <tr>\n    <td>HTML Acronym</td>\n    <td>\n      <code>&lt;acronym&gt;&lt;/acronym&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>HTML Cite</td>\n    <td>\n      <code>&lt;cite&gt;&lt;/cite&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>HTML Code</td>\n    <td>\n      <code>&lt;code&gt;&lt;/code&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>HTML Definition</td>\n    <td>\n      <code>&lt;dfn&gt;&lt;/dfn&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>HTML Keyboard</td>\n    <td>\n      <code>&lt;kbd&gt;&lt;/kbd&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>HTML Preformatted</td>\n    <td>\n      <p>\n        <code>&lt;pre xml:space=\"preserve\"&gt;</code>\n      </p>\n      <p>\n        <code>&lt;/pre&gt;</code>\n      </p>\n    </td>\n  </tr>\n  <tr>\n    <td>HTML Sample</td>\n    <td>\n      <code>&lt;samp&gt;&lt;/samp&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>HTML Typewriter</td>\n    <td>\n      <code>&lt;tt&gt;&lt;/tt&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>HTML Variable</td>\n    <td>\n      <code>&lt;var&gt;&lt;/var&gt;</code>\n    </td>\n  </tr>\n</table>\n<h3>The About CleanXHTML… Command</h3>\n<p>This shows credits and a link to this document.</p>\n<h2>Tips and Tricks</h2>\n<p>The table below summarizes built-in styles that CleanXHTML recognizes:</p>\n<ul>\n  <li>Use the built-in Word HTML-related styles to force CleanXHTML to produce advanced/semantic output. (See the “CleanXHTML Style Conversion Table” above.)</li>\n  <li>Force CleanXHTML to produce <code>th</code> elements instead of <code>td</code> elements by formatting the <em>entire</em> Word Table Cell as any Header style.</li>\n</ul>\n<h2>Known Issues</h2>\n<ul>\n  <li>CleanXHTML is dependent on the <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/wordxmlcdk/html/cdkPrimerPlaceholder_HV01113631.asp\">WordprocessingML</a> schema developed for Word 2003. It is unable to anticipate future versions of WordprocessingML. Attempting to run CleanXHTML 1.2 on, say, Microsoft Word 2007 is not recommended.</li>\n  <li>CleanXHTML 1.2 depends on the <a href=\"http://msdn2.microsoft.com/en-us/library/5a4x27ek(VS.80).aspx\">.NET Framework 2.0</a> and a ‘properly’ updated version of Microsoft Office Word 2003. There are many opportunities for these items to be installed “by default” and their absence will not be predetermined in this release. Please see “<a href=\"http://msdn2.microsoft.com/en-us/library/2ac08ee2(VS.80).aspx\">How to: Prepare End User Computers to Run Office Solutions</a>” for details.</li>\n  <li>CleanXHTML is designed to work with <a href=\"http://blogs.msdn.com/brian_jones/archive/2006/01/25/517739.aspx\">custom schemas</a> applied to Word documents but cannot anticipate all related errors associated with custom schemas.</li>\n  <li>CleanXHTML has been tested with “simple” Word documents. It has not been tested with all combinations of inserted <a href=\"http://en.wikipedia.org/wiki/Object_Linking_and_Embedding\">OLE</a> objects, Text Box items, complex Column layouts and other “desktop publishing” features of Office System Word.</li>\n  <li>CleanXHTML has poor locale support and cannot anticipate failure related to “international” versions of Microsoft Office System Word 2003. However, the assumption here is that, since CleanXHTML is based on .NET, many of these problems are avoided (or transferred to .NET).</li>\n  <li>CleanXHTML cannot find hyperlinks inside of a Range formatted with a Character Style.</li>\n</ul>\n<h2>Future Plans for CleanXHTML-based Products</h2>\n<ul>\n  <li>A future version of CleanXHTML should take advantage of Windows Forms 2.0—especially its <a href=\"http://msdn2.microsoft.com/en-us/library/system.windows.forms.webbrowser.aspx\">WebBrowser</a> control. This means a “Web Preview” feature can be added.</li>\n  <li>The cut-and-paste method of Blog entry can be replaced by adding <a href=\"http://en.wikipedia.org/wiki/XML-RPC\">XML-RPC</a> support in a future version of CleanXHTML. Now that CleanXHTML is built on the .NET Framework it is positioned to be a Web Services publisher. However, any solution sending passwords or other credentials in “clear text” will not be implemented.</li>\n  <li>The ability to link to any <acronym title=\"Extensible Stylesheet Language Transformations\">XSLT</acronym> file is an “obvious” convenience for a future of CleanXHTML.</li>\n</ul>\n<h2>Selected Links to Resources</h2>\n<table id=\"CleanXhtmlTable_ID0EF1BG2\">\n  <tr>\n    <td>“<a href=\"http://www.kintespace.com/rasxlog/?p=697\">Upgrading My Office Solution to a VSTO SE Application-Level Add-In</a>”</td>\n    <td>My personal, uncensored notes about the frustrating aspects of VSTO SE development.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://www.builderau.com.au/architect/dotnet/soa/Use_XML_to_store_configuration_settings/0,39024710,39211304,00.htm\">Use XML to store configuration settings</a>\n    </td>\n    <td>Provided the germ for developing the CleanXHTML configuration system.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://support.microsoft.com/?kbid=827706\">Description of Office Safe Mode for Word 2003 and Word 2002</a>\n    </td>\n    <td>Introduced the concept of “Safe Mode” relating to Office applications.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://support.microsoft.com/?id=824017\">HOW TO: Set the Mask Property and the Picture Property for an Office 2003 CommandBar Button</a>\n    </td>\n    <td>Directly related to designing the menu for CleanXHTML.</td>\n  </tr>\n  <tr>\n    <td>“<a href=\"http://blogs.msdn.com/vsto/archive/2004/01/29/64449.aspx\">Menu, Toolbar, or Form Suddenly Stops Working?</a>”</td>\n    <td>A very important article explaining a bug that got me. Ouch! Hours of fun…</td>\n  </tr>\n  <tr>\n    <td>“<a href=\"http://blogs.msdn.com/vsto/archive/2004/02/10/70691.aspx\">Even More On Adding Images to Command Bar Buttons</a>”</td>\n    <td>This was another way of highlighting the importance of <code>System.Windows.Forms.AxHost</code>.</td>\n  </tr>\n  <tr>\n    <td>“<a href=\"http://blogs.msdn.com/jehance/archive/2005/07/01/434716.aspx\">A Simple Resource Helper Class</a>”</td>\n    <td>A Blog entry from a Microsoft guy that made retrieving bitmaps and other resources easier.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://blogs.msdn.com/brian_jones/archive/2005/09/30/475794.aspx\">Converting WordprocessingML into HTML (for easy viewing)</a>\n    </td>\n    <td>Brian Jones of the Office team introduces Word 2003: XML Viewer. You can use this tool instead of CleanXHTML for document-centric “fidelity.” It contains the <acronym title=\"Extensible Stylesheet Language\">XSL</acronym> transformation released by Microsoft that translates WordprocessingML into HTML.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://support.microsoft.com/kb/q210565/\">How to use startup command line switches to start Word 2003, Word 2002, and Word 2000</a>\n    </td>\n    <td>“This article describes the command-line switches that can be used to start Word and their purpose. Some of these switches are also described in Word Help.”</td>\n  </tr>\n</table>",
    "ItemText": "<h1>CleanXHTML 1.2 for Microsoft Office Word 2003 (.NET 2.0)</h1>\n<div id=\"ProductPurchaseBlock\">\n  <p>\n    <a href=\"http://store5.esellerate.net/store/catalog.aspx?s=STR291982498&amp;pc=\" target=\"_blank\">Download CleanXHTML 1.2 for Office Word 2003</a>.</p>\n  <p>Get the free trial copy by clicking on the <strong>Try</strong> button.</p>\n  <p>You can also <a href=\"http://store5.esellerate.net/store/catalog.aspx?s=STR291982498&amp;pc=\">purchase CleanXHTML 1.2</a> from the same location by clicking on the <strong>Buy</strong> button.</p>\n</div>\n<p>CleanXHTML 1.2, now requiring .NET 2.0, extends Microsoft Office Word, adding the ability to export entire documents <em>or</em> a selected range within a document as “clean” <acronym title=\"Extensible Hypertext Markup Language\">XHTML</acronym>. This “Clean” XHTML is standards-compliant <a href=\"http://www.w3.org/TR/xhtml1/dtds.html\">XHTML Transitional</a> markup that is free from the proprietary nature of Microsoft Office Documents. The design goal here is to leverage the robust Office System platform to produce “generic” markup ready for <acronym title=\"Cascading Style Sheet\">CSS</acronym> formatting by Blog tools, <acronym title=\"Really Simple Syndication\">RSS</acronym> feeds or any publishing system that depends on XHTML.</p>\n<p>This document, an <acronym title=\"Extensible Markup Language\">XML</acronym> fragment stored in a database, is produced by CleanXHTML!</p>\n<h2>Attention Current CleanXHTML Users!</h2>\n<p>This new version, CleanXHTML 1.2, is now based on .NET 2.0 and is amazingly fast! CleanXHTML also installs as a ‘real’ Office Add-In just like any other .NET 2.0 Setup application. For more details about this version, see “Known Issues” and “Future Plans for CleanXHTML-based Products” below. Download <a href=\"http://store5.esellerate.net/store/catalog.aspx?s=STR291982498&amp;pc=\">the trial copy of CleanXHTML 1.2</a> and your existing registration data should upgrade you automatically. In some cases you may have to enter your registration data again. For more questions feel free to <a href=\"http://songhaysystem.com/mail.php\">contact Songhay System</a>. Your patience with us is greatly appreciated!</p>\n<h2>The Main Menu</h2>\n<div align=\"center\">\n  <img alt=\"CleanXHTML Main Menu\" src=\"http://songhaysystem.com/bitmaps/CleanXhtml/menu.jpg\" />\n</div>\n<p>The CleanXHTML menu is appended to the main menu as an Office Add-in when it is successfully installed. The menu has three items: <strong>Convert Selection…</strong>, <strong>Options…</strong> and <strong>About CleanXHTML…</strong>.</p>\n<h3>The Convert Selection… Command</h3>\n<p>This is the command that converts a selected range into XHTML. To convert an entire Word document, select the entire document (type <kbd>Ctrl A</kbd> or choose <strong>Edit &gt; Select All</strong>). When CleanXHTML finds a selection it will convert it and show XHTML in the Windows Form below:</p>\n<div align=\"center\">\n  <a href=\"http://songhaysystem.com/bitmaps/CleanXhtml/output.jpg\" target=\"_blank\"><img alt=\"CleanXHTML 1.2 Output\" height=\"371\" src=\"http://songhaysystem.com/bitmaps/CleanXhtml/output.jpg\" width=\"512\" /></a>\n</div>\n<p>Use this form to copy the XHTML to the Clipboard (with the <strong>Copy XHTML</strong> button) or save the XHTML to a file (with the <strong>Save XHTML</strong> button). There are CleanXHTML output options. The table summarizes:</p>\n<table id=\"CleanXhtmlTable_ID0EHVAE5\">\n  <tr>\n    <th>Output Option</th>\n    <th>Remarks</th>\n  </tr>\n  <tr>\n    <td>Copy <code>&lt;body&gt;</code> content only</td>\n    <td>\n      <p>CleanXHTML outputs well-formed XML documents by default. When enabled, this option will strip the XHMTL document down to the XML fragment inside of the <code>body</code> element.</p>\n      <p>This feature is useful for the production of Blog entries and other XHTML fragments.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>Expand glyphs.</td>\n    <td>\n      <p>When enabled, selected <acronym title=\"Unicode Transformation Format-8\">UTF-8</acronym> Latinate glyphs are ‘expanded’ into entities. So a glyph like é is converted into <code>&amp;#233;</code>.</p>\n      <p>This feature is useful for <acronym title=\"Hypertext Markup Language\">HTML</acronym> conversion for non-Unicode environments.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>Convert to HTML</td>\n    <td>When enabled, the output is converted into HTML 4.x.</td>\n  </tr>\n  <tr>\n    <td>Wrap text</td>\n    <td>When enabled, the output wraps inside of its display area.</td>\n  </tr>\n</table>\n<h3>The Options… Command</h3>\n<div align=\"center\">\n  <img alt=\"CleanXHTML Options\" src=\"http://songhaysystem.com/bitmaps/CleanXhtml/options.jpg\" />\n</div>\n<p>The <strong>Options…</strong> command opens the Options dialog shown above. These options control what XHTML attributes are generated. This is largely for <acronym title=\"Cascading Style Sheet\">CSS</acronym> designing. The table below summarizes:</p>\n<table id=\"CleanXhtmlTable_ID0EU3AE4\">\n  <tr>\n    <th>Option Group</th>\n    <th>Option</th>\n    <th>Remarks</th>\n  </tr>\n  <tr>\n    <td>Block Alignment</td>\n    <td>Enable <code>&lt;p align=\"\"&gt;</code></td>\n    <td>When enabled, CleanXHTML will translate Word paragraph alignment (except Left alignment) into XHTML.</td>\n  </tr>\n  <tr>\n    <td>Block Alignment</td>\n    <td>Enable <code>&lt;p align=\"left\"&gt;</code></td>\n    <td>When enabled, CleanXHTML will translate Word paragraph Left alignment into XHTML.</td>\n  </tr>\n  <tr>\n    <td>Block Alignment</td>\n    <td>Enable Table Cell align</td>\n    <td>When enabled, CleanXHTML will translate Word Table Cell horizontal alignment into XHTML. This will output <code>align</code> attributes for <code>td</code> and <code>th</code> elements.</td>\n  </tr>\n  <tr>\n    <td>Block Alignment</td>\n    <td>Enable <code>&lt;table id=\"\"&gt;</code></td>\n    <td>When enabled, CleanXHTML will identify each Word table in XHTML with <code>table</code> <code>id</code> attributes based on the specified prefix (<code>CleanXhtmlTable_</code> by default), a random sequence of letters and ordinal position.</td>\n  </tr>\n  <tr>\n    <td>Endnotes</td>\n    <td>Enable Endnotes</td>\n    <td>When enabled, CleanXHTML will translate Word Footnotes into XHTML endnotes, a <code>div</code> block with <code>id='EndNotesBlock'</code> by default.</td>\n  </tr>\n</table>\n<h2>CleanXHTML Character Style/Effect Conversion for Standard Word Styles and Effects</h2>\n<table id=\"CleanXhtmlTable_ID0EUHAG2\">\n  <tr>\n    <th>Style/Effect</th>\n    <th>CleanXHTML Output</th>\n  </tr>\n  <tr>\n    <td>A <strong>bold character</strong> style or the Bold style</td>\n    <td>\n      <code>&lt;strong&gt;bold character&lt;/strong&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>An <em>italic character</em> style or the Emphasis style</td>\n    <td>\n      <code>&lt;em&gt;italic character&lt;/em&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>A <strong><em>bold-italic</em></strong> style</td>\n    <td>\n      <code>&lt;strong&gt;&lt;em&gt;bold-italic&lt;/em&gt;&lt;/strong&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>A <span style=\"text-decoration:line-through;\">Strike-Through</span> style or the Strikethrough style</td>\n    <td>\n      <code>&lt;span style=\"text-decoration:line-through;\"&gt;Strike-Through&lt;/span&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>A 2<sup>nd</sup> Superscript effect</td>\n    <td>\n      <code>A 2&lt;sup&gt;nd&lt;/sup&gt; Superscript style</code>\n    </td>\n  </tr>\n  <tr>\n    <td>An x<sub>2</sub> Subscript effect</td>\n    <td>\n      <code>An x&lt;sub&gt;2&lt;/sub&gt; Subscript effect</code>\n    </td>\n  </tr>\n  <tr>\n    <td>A <span style=\"font-variant:small-caps;\">Small Caps</span> effect or the Small Caps style</td>\n    <td>\n      <code>&lt;span style=\"font-variant:small-caps;\"&gt;Small Caps&lt;/span&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>An <span style=\"text-transform:uppercase;\">all caps</span> effect or the All Caps style</td>\n    <td>\n      <code>&lt;span style=\"text-transform:uppercase;\"&gt;all caps&lt;/span&gt;</code>\n    </td>\n  </tr>\n</table>\n<h2>CleanXHTML Style Conversion for Standard Word Styles</h2>\n<table id=\"CleanXhtmlTable_ID0EKTAG2\">\n  <tr>\n    <th>Style Name</th>\n    <th>CleanXHTML Output</th>\n  </tr>\n  <tr>\n    <td>Block Text</td>\n    <td>\n      <p>\n        <code>&lt;blockquote&gt;&lt;/blockquote&gt;</code>\n      </p>\n      <p>The <code>cite</code> attribute is not currently supported.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>Heading 1</td>\n    <td>\n      <code>&lt;h1&gt;&lt;/h1&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>Heading 2</td>\n    <td>\n      <code>&lt;h2&gt;&lt;/h2&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>Heading 3</td>\n    <td>\n      <code>&lt;h3&gt;&lt;/h3&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>Heading 4</td>\n    <td>\n      <code>&lt;h4&gt;&lt;/h4&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>Heading 5</td>\n    <td>\n      <code>&lt;h5&gt;&lt;/h5&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>Heading 6</td>\n    <td>\n      <code>&lt;h6&gt;&lt;/h6&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>Hyperlink</td>\n    <td>\n      <p>\n        <code>&lt;a href=\"…\" target=\"…\" title=\"…\"&gt;&lt;/a&gt;</code>\n      </p>\n      <ul>\n        <li>The <code>target</code> and the <code>title</code> attributes appear when the <strong>ScreenTip…</strong> or <strong>Target Frame</strong><strong>…</strong> commands are used in the <strong>Insert Hyperlink</strong> dialog (or the <a href=\"http://office.microsoft.com/en-us/assistance/CH011097281033.aspx\"><strong>Edit Hyperlinks…</strong> dialog</a>).</li>\n      </ul>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <p>Normal</p>\n    </td>\n    <td>\n      <p>\n        <code>&lt;p&gt;&lt;/p&gt;</code>\n      </p>\n      <p>See “The Options… Command” above about details about aligning the <code>p</code> block.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <ul>\n        <li>List Bullet</li>\n      </ul>\n    </td>\n    <td>\n      <pre xml:space=\"preserve\">\n&lt;ul&gt;\n    &lt;li&gt;List Bullet&lt;/li&gt;\n&lt;/ul&gt;\n                  \n</pre>\n      <p>The List Bullet style appears with the <kbd>Ctrl+Shift+L</kbd> shortcut.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <ol>\n        <li>List Number</li>\n      </ol>\n    </td>\n    <td>\n      <pre xml:space=\"preserve\">\n&lt;ol&gt;\n    &lt;li&gt;List Number&lt;/li&gt;\n&lt;/ol&gt;\n                  \n</pre>\n    </td>\n  </tr>\n</table>\n<h2>CleanXHTML Style Conversion for Standard HTML-Related Styles</h2>\n<table id=\"CleanXhtmlTable_ID0EOFBG2\">\n  <tr>\n    <th>Style Name</th>\n    <th>CleanXHTML Output</th>\n  </tr>\n  <tr>\n    <td>HTML Acronym</td>\n    <td>\n      <code>&lt;acronym&gt;&lt;/acronym&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>HTML Cite</td>\n    <td>\n      <code>&lt;cite&gt;&lt;/cite&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>HTML Code</td>\n    <td>\n      <code>&lt;code&gt;&lt;/code&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>HTML Definition</td>\n    <td>\n      <code>&lt;dfn&gt;&lt;/dfn&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>HTML Keyboard</td>\n    <td>\n      <code>&lt;kbd&gt;&lt;/kbd&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>HTML Preformatted</td>\n    <td>\n      <p>\n        <code>&lt;pre xml:space=\"preserve\"&gt;</code>\n      </p>\n      <p>\n        <code>&lt;/pre&gt;</code>\n      </p>\n    </td>\n  </tr>\n  <tr>\n    <td>HTML Sample</td>\n    <td>\n      <code>&lt;samp&gt;&lt;/samp&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>HTML Typewriter</td>\n    <td>\n      <code>&lt;tt&gt;&lt;/tt&gt;</code>\n    </td>\n  </tr>\n  <tr>\n    <td>HTML Variable</td>\n    <td>\n      <code>&lt;var&gt;&lt;/var&gt;</code>\n    </td>\n  </tr>\n</table>\n<h3>The About CleanXHTML… Command</h3>\n<p>This shows credits and a link to this document.</p>\n<h2>Tips and Tricks</h2>\n<p>The table below summarizes built-in styles that CleanXHTML recognizes:</p>\n<ul>\n  <li>Use the built-in Word HTML-related styles to force CleanXHTML to produce advanced/semantic output. (See the “CleanXHTML Style Conversion Table” above.)</li>\n  <li>Force CleanXHTML to produce <code>th</code> elements instead of <code>td</code> elements by formatting the <em>entire</em> Word Table Cell as any Header style.</li>\n</ul>\n<h2>Known Issues</h2>\n<ul>\n  <li>CleanXHTML is dependent on the <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/wordxmlcdk/html/cdkPrimerPlaceholder_HV01113631.asp\">WordprocessingML</a> schema developed for Word 2003. It is unable to anticipate future versions of WordprocessingML. Attempting to run CleanXHTML 1.2 on, say, Microsoft Word 2007 is not recommended.</li>\n  <li>CleanXHTML 1.2 depends on the <a href=\"http://msdn2.microsoft.com/en-us/library/5a4x27ek(VS.80).aspx\">.NET Framework 2.0</a> and a ‘properly’ updated version of Microsoft Office Word 2003. There are many opportunities for these items to be installed “by default” and their absence will not be predetermined in this release. Please see “<a href=\"http://msdn2.microsoft.com/en-us/library/2ac08ee2(VS.80).aspx\">How to: Prepare End User Computers to Run Office Solutions</a>” for details.</li>\n  <li>CleanXHTML is designed to work with <a href=\"http://blogs.msdn.com/brian_jones/archive/2006/01/25/517739.aspx\">custom schemas</a> applied to Word documents but cannot anticipate all related errors associated with custom schemas.</li>\n  <li>CleanXHTML has been tested with “simple” Word documents. It has not been tested with all combinations of inserted <a href=\"http://en.wikipedia.org/wiki/Object_Linking_and_Embedding\">OLE</a> objects, Text Box items, complex Column layouts and other “desktop publishing” features of Office System Word.</li>\n  <li>CleanXHTML has poor locale support and cannot anticipate failure related to “international” versions of Microsoft Office System Word 2003. However, the assumption here is that, since CleanXHTML is based on .NET, many of these problems are avoided (or transferred to .NET).</li>\n  <li>CleanXHTML cannot find hyperlinks inside of a Range formatted with a Character Style.</li>\n</ul>\n<h2>Future Plans for CleanXHTML-based Products</h2>\n<ul>\n  <li>A future version of CleanXHTML should take advantage of Windows Forms 2.0—especially its <a href=\"http://msdn2.microsoft.com/en-us/library/system.windows.forms.webbrowser.aspx\">WebBrowser</a> control. This means a “Web Preview” feature can be added.</li>\n  <li>The cut-and-paste method of Blog entry can be replaced by adding <a href=\"http://en.wikipedia.org/wiki/XML-RPC\">XML-RPC</a> support in a future version of CleanXHTML. Now that CleanXHTML is built on the .NET Framework it is positioned to be a Web Services publisher. However, any solution sending passwords or other credentials in “clear text” will not be implemented.</li>\n  <li>The ability to link to any <acronym title=\"Extensible Stylesheet Language Transformations\">XSLT</acronym> file is an “obvious” convenience for a future of CleanXHTML.</li>\n</ul>\n<h2>Selected Links to Resources</h2>\n<table id=\"CleanXhtmlTable_ID0EF1BG2\">\n  <tr>\n    <td>“<a href=\"http://www.kintespace.com/rasxlog/?p=697\">Upgrading My Office Solution to a VSTO SE Application-Level Add-In</a>”</td>\n    <td>My personal, uncensored notes about the frustrating aspects of VSTO SE development.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://www.builderau.com.au/architect/dotnet/soa/Use_XML_to_store_configuration_settings/0,39024710,39211304,00.htm\">Use XML to store configuration settings</a>\n    </td>\n    <td>Provided the germ for developing the CleanXHTML configuration system.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://support.microsoft.com/?kbid=827706\">Description of Office Safe Mode for Word 2003 and Word 2002</a>\n    </td>\n    <td>Introduced the concept of “Safe Mode” relating to Office applications.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://support.microsoft.com/?id=824017\">HOW TO: Set the Mask Property and the Picture Property for an Office 2003 CommandBar Button</a>\n    </td>\n    <td>Directly related to designing the menu for CleanXHTML.</td>\n  </tr>\n  <tr>\n    <td>“<a href=\"http://blogs.msdn.com/vsto/archive/2004/01/29/64449.aspx\">Menu, Toolbar, or Form Suddenly Stops Working?</a>”</td>\n    <td>A very important article explaining a bug that got me. Ouch! Hours of fun…</td>\n  </tr>\n  <tr>\n    <td>“<a href=\"http://blogs.msdn.com/vsto/archive/2004/02/10/70691.aspx\">Even More On Adding Images to Command Bar Buttons</a>”</td>\n    <td>This was another way of highlighting the importance of <code>System.Windows.Forms.AxHost</code>.</td>\n  </tr>\n  <tr>\n    <td>“<a href=\"http://blogs.msdn.com/jehance/archive/2005/07/01/434716.aspx\">A Simple Resource Helper Class</a>”</td>\n    <td>A Blog entry from a Microsoft guy that made retrieving bitmaps and other resources easier.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://blogs.msdn.com/brian_jones/archive/2005/09/30/475794.aspx\">Converting WordprocessingML into HTML (for easy viewing)</a>\n    </td>\n    <td>Brian Jones of the Office team introduces Word 2003: XML Viewer. You can use this tool instead of CleanXHTML for document-centric “fidelity.” It contains the <acronym title=\"Extensible Stylesheet Language\">XSL</acronym> transformation released by Microsoft that translates WordprocessingML into HTML.</td>\n  </tr>\n  <tr>\n    <td>\n      <a href=\"http://support.microsoft.com/kb/q210565/\">How to use startup command line switches to start Word 2003, Word 2002, and Word 2000</a>\n    </td>\n    <td>“This article describes the command-line switches that can be used to start Word and their purpose. Some of these switches are also described in Word Help.”</td>\n  </tr>\n</table>",
    "CreateDate": "2007-07-30T16:08:00.0000000",
    "EndDate": null,
    "ModificationDate": "2007-07-30T16:39:08.6400000",
    "DocumentId": "55",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "90",
    "FragmentName": null,
    "FragmentDisplayName": "Songhay.NET: An Overview of the Songhay Data Namespace",
    "SortOrdinal": null,
    "ItemChar": "<h1>Songhay.NET: An Overview of the Songhay Data Namespace</h1>\n<div id=\"CodePlexBlock\">\n  <div align=\"center\">\n    <img alt=\"CodePlex\" src=\"http://songhaysystem.com/bitmaps/codeplex.jpg\" />\n  </div>\n  <p>The code archive for the Songhay Data Namespace is available at CodePlex.com in the <a href=\"http://www.codeplex.com/songhaydata/SourceControl/ListDownloadableCommits.aspx\">Songhay System Data Access Framework</a>.</p>\n</div>\n<p>\n  <img alt=\"Songhay.Data\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/songhay_data_project.jpg\" style=\"float:left;margin:0;margin-bottom:16px;\" />This document summarizes the design goals and designer intentions behind the <code>Songhay.</code><code>Data</code> namespace, written in C# for .NET 2.0.50727. This namespace provides all Songhay System applications access to <acronym title=\"Database Management System\">DBMS</acronym> data. It is the core of the <a href=\"http://www.codeplex.com/songhaydata/SourceControl/ListDownloadableCommits.aspx\">Songhay System Data Access Framework</a>. This small framework does not recognize the problem of mapping relational data to .NET objects in larger frameworks like <a href=\"http://www.hibernate.org/343.html\">NHibernate</a> or <a href=\"http://www.llblgen.com/\">LLBLGen</a>. This framework is a rendition of <em>a fraction</em> of what’s in the <code>DataContext</code> in <a href=\"http://en.wikipedia.org/wiki/Language_Integrated_Query\">LINQ</a>. It is best to place the purpose for this framework in the context of moving out of SQL 2000 <a href=\"http://en.wikipedia.org/wiki/Data_Transformation_Services\">DTS</a> and going straight to managed code (veering away from the gigantic, official replacement for DTS, <a href=\"http://msdn2.microsoft.com/en-us/library/ms141026.aspx\">SQL Server Integration Services</a>).</p>\n<p>The characteristics of the <code>Songhay.</code><code>Data</code> namespace are governed by these strong words:</p>\n<ul>\n  <li>Activity</li>\n  <li>Common</li>\n</ul>\n<p>The strong word <em>Activity</em> implies there are ‘activities’ associated with data. These activities operate under a contract by the interface <code>IDataActivityAssembly</code>, defining the Data Activity Assembly. The <acronym title=\"Extensible Markup Language\">XML</acronym> configuration of the Data Activity Assembly is de-serialized into the <code>DataAccessConfiguration</code> class—specifically, its array of <code>DataAccessItem</code> objects. The <code>DataAccessItem</code> allows the Data Activity Assembly to load components implementing the <code>ICommandHandler</code> interface when needed. It follows that these two interfaces, <code>IDataActivityAssembly</code> and <code>ICommandHandler</code>, define an actor and a receiver—a primal, input-output system for data access.</p>\n<p>The strong word <em>Common</em> indicates support for the <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.common.aspx\">System.Data.Common</a> namespace. This is a move toward supporting the widest range of data stores possible based on the assumption that Microsoft (and the Mono team) will continue to invest in the <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.common.aspx\">System.Data.Common</a> namespace—and, in fact, Microsoft would use assets in this namespace to support <a href=\"http://msdn2.microsoft.com/en-us/netframework/aa904594.aspx\">LINQ</a> and the <a href=\"http://msdn2.microsoft.com/en-us/library/aa697427(vs.80).aspx\">Entity Framework</a> “under the hood.”</p>\n<p>As a courtesy—to warn early and often—it must said that the <code>Songhay.</code><code>Data</code> namespace prioritizes XML-over-HTTP scenarios. This immediately means that the “data set” in this space will, by default, be the <code>XPathDocument</code>.</p>\n<h2>The Songhay.Data.DataAccessConfiguration Class</h2>\n<p>\n  <img alt=\"Songhay.Data.DataAccessConfiguration\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.DataAccessConfiguration.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The <acronym title=\"Extensible Markup Language\">XML</acronym> configuration of the Data Activity Assembly is defined by the composite, <code>DataAccessConfiguration</code> partial classes. Since this is composed of partial classes, most of the members of this class are generated by the <a href=\"http://msdn2.microsoft.com/en-us/library/x6c1kb0s(VS.71).aspx\">XML Schema Definition Tool (Xsd.exe)</a>.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.DataAccessConfiguration Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EAFAG2\">\n  <tr>\n    <td>\n      <code>DataAccessConfiguration()</code>\n    </td>\n    <td>The constructor of this class takes a parameter that specifies an XML file, valid for the schema in <code>DataAccessConfiguration.xsd</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>DataAccessItem[]</code>\n    </td>\n    <td>An array of <code>DataAccessItem</code> (see below).</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetDataAccessItem()</code>\n    </td>\n    <td>Uses an anonymous delegate to return a <code>DataAccessItem</code> based on the specified <code>DataAccessItem</code><code>.Name</code> or the static overload is used to load a <code>DataAccessItem</code> from the specified XML file and XPath Query.</td>\n  </tr>\n</table>\n<h2>The Songhay.Data.DataAccessItem Class</h2>\n<p>\n  <img alt=\"Songhay.Data.DataAccessItem\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.DataAccessItem.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The <code>DataAccessItem</code> composite of partial classes provides the information needed to access data. A <code>DataAccessConfiguration</code> object contains one or more of these items. Multiple items of type <code>DataAccessItem</code> available at the command line or on a Web server provide a flexible, simple way to associate many procedural activities with many data stores.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.DataAccessItem Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EPMAG2\">\n  <tr>\n    <td>\n      <code>Connection[]</code>\n    </td>\n    <td>An array of <code>Songhay.Data.Connection</code>. Zero or more <code>Songhay.Data.Connection</code> objects are used to provide data store connection information.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>DisplayName</code>\n    </td>\n    <td>The human-readable name of the <code>DataAccessItem</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetConnection()</code>\n    </td>\n    <td>Uses an anonymous delegate to return a <code>Songhay.Data.Connection</code> based on the specified <code>Connection.Name</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetNameValuePair()</code>\n    </td>\n    <td>Uses an anonymous delegate to return a <code>Songhay.Data.NameValue</code> pair based on the specified <code>NameValue.Name</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>Name</code>\n    </td>\n    <td>\n      <p>The unique name of the <code>DataAccessItem</code>.</p>\n      <p>This value is used in one of the overloads for <code>DataAccessConfiguration.GetDataAccessItem()</code> (see above).</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>NameValuePair[]</code>\n    </td>\n    <td>\n      <p>An array of <code>NameValuePair</code>. Zero or more <code>NameValuePair</code> objects can be used to provide parameters for <code>DataAccessItem</code>.</p>\n      <p>These provide the means to “hard code” a relatively generic data activity to a specific problem domain.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>Path</code>\n    </td>\n    <td>The path to the Data Activity Assembly used for data access.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>TypeName</code>\n    </td>\n    <td>The fully-qualified, type name of the Data Activity Assembly used for data access. This type must implement the <code>IDataActivityAssembly</code> interface (see below).</td>\n  </tr>\n</table>\n<h2>The Songhay.Data.Connection Class</h2>\n<p>\n  <img alt=\"Songhay.Data.Connection\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.Connection.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />\n  <code>Songhay.Data.Connection</code> objects are used to provide data store connection information.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.Connection Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EB2AG2\">\n  <tr>\n    <td>\n      <code>ConnectionString</code>\n    </td>\n    <td>A valid connection string.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>DisplayName</code>\n    </td>\n    <td>The human-readable name of the connection.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>Name</code>\n    </td>\n    <td>\n      <p>The unique name of the connection.</p>\n      <p>This value is used for <code>DataAccess</code><code>Item</code><code>.</code><code>GetConnection</code><code>()</code> (see above).</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>InvariantProviderName</code>\n    </td>\n    <td>The ADO.NET invariant provider name for a <code>System.Data.DbConnection</code>. For SQL Server, the name is <code>\"System.Data.SqlClient</code><code>\"</code>.</td>\n  </tr>\n</table>\n<h2>The Songhay.Data.NameValuePair Class</h2>\n<p>\n  <img alt=\"Songhay.Data.NameValuePair\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.NameValuePair.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />\n  <code>NameValuePair</code> objects can be used to provide parameters for <code>DataAccessItem</code>. These provide the means to “hard code” a relatively generic data activity to a specific problem domain.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.NameValuePair Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EAEBG2\">\n  <tr>\n    <td>\n      <code>Name</code>\n    </td>\n    <td>\n      <p>The unique name of the pair.</p>\n      <p>This value is used for <code>DataAccess</code><code>Item</code><code>.</code><code>GetNameValuePair</code><code>()</code> (see above).</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>Value</code>\n    </td>\n    <td>The value of the pair.</td>\n  </tr>\n</table>\n<h2>The Songhay.Data.Activity.IDataActivityAssembly Interface</h2>\n<p>\n  <img alt=\"Songhay.Data.Activity.IDataActivityAssembly\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.Activity.IDataActivityAssembly.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The<code> </code>IDataActivityAssembly interface defines the execution contract for Data Activity assemblies. The Data Activity Assembly cannot run in this framework without implementing this contract.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.Activity.IDataActivityAssembly Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EXKBG2\">\n  <tr>\n    <td>\n      <code>Execute()</code>\n    </td>\n    <td>This method is used to run or execute the Data Activity Assembly based on the specified <code>DataAccess</code><code>Item</code> (see above).</td>\n  </tr>\n  <tr>\n    <td>\n      <code>Log</code>\n    </td>\n    <td>This property contains all of the runtime messages generated and captured for this class.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>WriteLog</code>\n    </td>\n    <td>\n      <p>This event, with delegate <code>EventHandler&amp;lt;OnWriteLogEventArgs&amp;gt;</code>, fires when the writing the latest entry into the transformation log.</p>\n      <p>The type <code>OnWriteLogEventArgs</code> is shown with <code>IDataActivityAssembly</code> above.</p>\n    </td>\n  </tr>\n</table>\n<h2>The Songhay.Data.Activity.DataActivityAssembly Class</h2>\n<p>\n  <img alt=\"Songhay.Data.Activity.DataActivityAssembly\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.Activity.DataActivityAssembly.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The <code>DataActivityAssembly</code> class implements the<code> </code>IDataActivityAssembly interface. This is a “base” class for a Data Activity that provides event-logging support for the <code>System.Data.Common.DbConnection</code>.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.Activity.DataActivityAssembly Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0ESTBG2\">\n  <tr>\n    <td>\n      <code>Execute()</code>\n    </td>\n    <td>Implements member of IDataActivityAssembly interface (see above).</td>\n  </tr>\n  <tr>\n    <td>\n      <code>Log</code>\n    </td>\n    <td>Implements member of IDataActivityAssembly interface (see above).</td>\n  </tr>\n  <tr>\n    <td>\n      <code>WriteLog</code>\n    </td>\n    <td>Implements member of IDataActivityAssembly interface (see above).</td>\n  </tr>\n  <tr>\n    <td>\n      <code>CnnStateChange()</code>\n    </td>\n    <td>Handles the <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.common.dbconnection.statechange.aspx\">DbConnection.StateChange()</a> event, calling <code>WriteToLog()</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>WriteToLog()</code>\n    </td>\n    <td>Takes message data from the Data Activity and fires the <code>WriteLog</code> event.</td>\n  </tr>\n</table>\n<h2>The Songhay.Data.Common.CommonDbms Static Class</h2>\n<p>\n  <img alt=\"Songhay.Data.Common.CommonDbms\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.Common.CommonDbms.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The <code>CommonDbms</code> class provides generic procedures for data access.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.Common.CommonDbms Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0E14BG2\">\n  <tr>\n    <td>\n      <code>Close()</code>\n    </td>\n    <td>\n      <p>Attempts to close the specified <code>System.Data.Common.DbConnection</code> and dispose of it.</p>\n      <p>This method should be used rarely because <code>using</code> blocks wrap a new <code>DbConnection</code> and automatically close and dispose.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>DoCommand()</code>\n    </td>\n    <td>\n      <p>Executes the specified statement for the specified <code>System.Data.Common.DbConnection</code>.</p>\n      <p>This member returns the integer value of the records affected by the statement.</p>\n      <p>An optional <code>Dictionary&amp;lt;String, Object&amp;gt;</code> can be supplied for a parameterized statement (see <code>Songhay.Data.Common.CommonParameter</code>).</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetAdapter()</code>\n    </td>\n    <td>\n      <p>Returns a <code>System.Data.Common.DbDataAdapter</code> based on the specified invariant provider name.</p>\n      <p>When an optional connection string and a <code>SELECT</code> statement are provided, the <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.common.dbcommandbuilder.aspx\">DbCommandBuilder</a> is used to generate <code>DeleteCommand</code>, <code>InsertCommand</code> and <code>UpdateCommand</code> commands.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetConnection()</code>\n    </td>\n    <td>Returns a <code>System.Data.Common.DbConnection</code> based on the specified invariant provider name and connection string.</td>\n  </tr>\n</table>\n<h2>The Songhay.Data.Common.CommonParameter Static Class</h2>\n<p>\n  <img alt=\"Songhay.Data.Common.CommonParameter\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.Common.CommonParameter.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The <code>CommonParameter</code> class provides a few static helper members for <code>System.Data.Common.DbParameter</code>.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.Common.CommonParameter Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EZKAI2\">\n  <tr>\n    <td>\n      <code>GetParameter()</code>\n    </td>\n    <td>\n      <p>Returns a <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.common.dbparameter.aspx\">DbParameter</a> based on the specified <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.common.dbcommand.aspx\">DbCommand</a>, parameter name and value (this is optional).</p>\n      <p>You have the option of supplying <code>DbType</code>, <code>Int32</code> parameter size, <code>ParameterDirection</code>, <code>String</code> source column, <code>DataRowVersion</code> and a <code>Boolean</code> indicating whether the source column is Nullable. This is for the appeasement of <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.dataset.aspx\">DataSet</a> design patterns.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetParameters()</code>\n    </td>\n    <td>Returns an array of <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.common.dbparameter.aspx\">DbParameter</a> based on the specified <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.common.dbcommand.aspx\">DbCommand</a> and a <code>Dictionary&amp;lt;String, Object&amp;gt;</code> of parameters.</td>\n  </tr>\n</table>\n<h2>The Songhay.Data.Common.CommonReader Static Class</h2>\n<p>\n  <img alt=\"Songhay.Data.Common.CommonReader\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.Common.CommonReader.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The <code>CommonReader</code> class provides a few static helper members for <code>System.Data.Common.</code><code>DbDataReader</code>.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.Common.CommonReader Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EGUAI2\">\n  <tr>\n    <td>\n      <code>GetReader()</code>\n    </td>\n    <td>\n      <p>Returns a <a href=\"http://msdn2.microsoft.com/en-us/library/System.Data.Common.DbDataReader.aspx\">DbDataReader</a> based on the specified <code>DbConnection</code> and query.</p>\n      <p>You have the option of supplying a <code>Dictionary&amp;lt;String, Object&amp;gt;</code> of parameters (with a timeout value in seconds) in addition to the query.</p>\n      <p>You also have the option of supplying an ambient <code>DbTransaction</code> object for scenarios not using <a href=\"http://msdn2.microsoft.com/en-us/library/system.transactions.transactionscope.aspx\">TransactionScope</a>.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetXPathDocument()</code>\n    </td>\n    <td>\n      <p>Returns an <code>XPathDocument</code> based on the specified <code>DbCommand</code> query and (local) document element name.</p>\n      <p>You have option of specifying a (local) row element name as well.</p>\n      <p>Instead of a <code>DbCommand</code> query, you can specify a <code>DbConnection</code> and query string. You can also use an existing <code>DbDataReader</code> as well.</p>\n    </td>\n  </tr>\n</table>\n<h2>The Songhay.Data.Common.CommonScalar Static Class</h2>\n<p>\n  <img alt=\"Songhay.Data.Common.CommonScalar\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.Common.CommonScalar.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The <code>CommonScalar</code> class provides a few static helper members for <code>System.Data.Common.</code><code>DbDataReader</code>. This defines the ‘Common <a href=\"http://en.wikipedia.org/wiki/Scalar_%28computing%29\">Scalar</a>’ as a string representation of relational data. This is deliberately designed to take advantage of SQL Sever 2005 queries like this:</p>\n<pre xml:space=\"preserve\">\nDECLARE @xml XML\n\nSET @xml = (SELECT * FROM MyTable FOR XML AUTO, ELEMENTS, ROOT('RootElement'))\n\nSELECT @xml\n                  \n</pre>\n<p>This pattern emerges from the problem documented in “<a href=\"http://songhaysystem.com/document.php?kbDoc=sql_2076071783\">SQL Server 2005 PROBLEM: Using the ADO.NET DbCommand.ExecuteScalar() Method Truncates at 2033 Characters</a>.”</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.Common.CommonScalar Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EC6AI2\">\n  <tr>\n    <td>\n      <code>GetString()</code>\n    </td>\n    <td>\n      <p>Returns a well-formed XML string based on the specified <code>DbConnection</code>, query and a Boolean indicating whether to emit an XML message for an empty set.</p>\n      <p>You have the option of supplying a <code>Dictionary&amp;lt;String, Object&amp;gt;</code> of parameters in addition to the query.</p>\n      <p>This member is used in XML-over-HTTP designs serving <acronym title=\"Asynchronous JavaScript and XML\">AJAX</acronym> clients.</p>\n    </td>\n  </tr>\n</table>\n<h2>The Songhay.Data.ICommandHandler Interface</h2>\n<p>\n  <img alt=\"Songhay.Data.ICommandHandler\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.ICommandHandler.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The<code> </code>ICommandHandler interface defines how a data access layer should accept external commands and respond to these commands. This interface was built to handle primitive XML-over-HTTP communication as lightweight alternative to formal SOAP-based implementations.</p>\n<p>The use of this interface and an ASP.NET *.ASHX page, for example, is a very agile way to get an AJAX server up and running for vendor-agnostic HTTP clients.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.ICommandHandler Member</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EZEBI2\">\n  <tr>\n    <td>\n      <code>DoCommand()</code>\n    </td>\n    <td>\n      <p>Returns an <code>XPathDocument</code> based on the specified <code>Songhay.Data.DataCommandInput</code> structure (shown above).</p>\n      <p>One <code>DataCommandInput</code> structure can take generic argument which specifies the type of the <code>POST</code> data. The other <code>DataCommandInput</code> structure does not accept <code>POST</code> data as it is used for <code>GET</code> operations.</p>\n    </td>\n  </tr>\n</table>",
    "ItemText": "<h1>Songhay.NET: An Overview of the Songhay Data Namespace</h1>\n<div id=\"CodePlexBlock\">\n  <div align=\"center\">\n    <img alt=\"CodePlex\" src=\"http://songhaysystem.com/bitmaps/codeplex.jpg\" />\n  </div>\n  <p>The code archive for the Songhay Data Namespace is available at CodePlex.com in the <a href=\"http://www.codeplex.com/songhaydata/SourceControl/ListDownloadableCommits.aspx\">Songhay System Data Access Framework</a>.</p>\n</div>\n<p>\n  <img alt=\"Songhay.Data\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/songhay_data_project.jpg\" style=\"float:left;margin:0;margin-bottom:16px;\" />This document summarizes the design goals and designer intentions behind the <code>Songhay.</code><code>Data</code> namespace, written in C# for .NET 2.0.50727. This namespace provides all Songhay System applications access to <acronym title=\"Database Management System\">DBMS</acronym> data. It is the core of the <a href=\"http://www.codeplex.com/songhaydata/SourceControl/ListDownloadableCommits.aspx\">Songhay System Data Access Framework</a>. This small framework does not recognize the problem of mapping relational data to .NET objects in larger frameworks like <a href=\"http://www.hibernate.org/343.html\">NHibernate</a> or <a href=\"http://www.llblgen.com/\">LLBLGen</a>. This framework is a rendition of <em>a fraction</em> of what’s in the <code>DataContext</code> in <a href=\"http://en.wikipedia.org/wiki/Language_Integrated_Query\">LINQ</a>. It is best to place the purpose for this framework in the context of moving out of SQL 2000 <a href=\"http://en.wikipedia.org/wiki/Data_Transformation_Services\">DTS</a> and going straight to managed code (veering away from the gigantic, official replacement for DTS, <a href=\"http://msdn2.microsoft.com/en-us/library/ms141026.aspx\">SQL Server Integration Services</a>).</p>\n<p>The characteristics of the <code>Songhay.</code><code>Data</code> namespace are governed by these strong words:</p>\n<ul>\n  <li>Activity</li>\n  <li>Common</li>\n</ul>\n<p>The strong word <em>Activity</em> implies there are ‘activities’ associated with data. These activities operate under a contract by the interface <code>IDataActivityAssembly</code>, defining the Data Activity Assembly. The <acronym title=\"Extensible Markup Language\">XML</acronym> configuration of the Data Activity Assembly is de-serialized into the <code>DataAccessConfiguration</code> class—specifically, its array of <code>DataAccessItem</code> objects. The <code>DataAccessItem</code> allows the Data Activity Assembly to load components implementing the <code>ICommandHandler</code> interface when needed. It follows that these two interfaces, <code>IDataActivityAssembly</code> and <code>ICommandHandler</code>, define an actor and a receiver—a primal, input-output system for data access.</p>\n<p>The strong word <em>Common</em> indicates support for the <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.common.aspx\">System.Data.Common</a> namespace. This is a move toward supporting the widest range of data stores possible based on the assumption that Microsoft (and the Mono team) will continue to invest in the <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.common.aspx\">System.Data.Common</a> namespace—and, in fact, Microsoft would use assets in this namespace to support <a href=\"http://msdn2.microsoft.com/en-us/netframework/aa904594.aspx\">LINQ</a> and the <a href=\"http://msdn2.microsoft.com/en-us/library/aa697427(vs.80).aspx\">Entity Framework</a> “under the hood.”</p>\n<p>As a courtesy—to warn early and often—it must said that the <code>Songhay.</code><code>Data</code> namespace prioritizes XML-over-HTTP scenarios. This immediately means that the “data set” in this space will, by default, be the <code>XPathDocument</code>.</p>\n<h2>The Songhay.Data.DataAccessConfiguration Class</h2>\n<p>\n  <img alt=\"Songhay.Data.DataAccessConfiguration\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.DataAccessConfiguration.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The <acronym title=\"Extensible Markup Language\">XML</acronym> configuration of the Data Activity Assembly is defined by the composite, <code>DataAccessConfiguration</code> partial classes. Since this is composed of partial classes, most of the members of this class are generated by the <a href=\"http://msdn2.microsoft.com/en-us/library/x6c1kb0s(VS.71).aspx\">XML Schema Definition Tool (Xsd.exe)</a>.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.DataAccessConfiguration Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EAFAG2\">\n  <tr>\n    <td>\n      <code>DataAccessConfiguration()</code>\n    </td>\n    <td>The constructor of this class takes a parameter that specifies an XML file, valid for the schema in <code>DataAccessConfiguration.xsd</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>DataAccessItem[]</code>\n    </td>\n    <td>An array of <code>DataAccessItem</code> (see below).</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetDataAccessItem()</code>\n    </td>\n    <td>Uses an anonymous delegate to return a <code>DataAccessItem</code> based on the specified <code>DataAccessItem</code><code>.Name</code> or the static overload is used to load a <code>DataAccessItem</code> from the specified XML file and XPath Query.</td>\n  </tr>\n</table>\n<h2>The Songhay.Data.DataAccessItem Class</h2>\n<p>\n  <img alt=\"Songhay.Data.DataAccessItem\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.DataAccessItem.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The <code>DataAccessItem</code> composite of partial classes provides the information needed to access data. A <code>DataAccessConfiguration</code> object contains one or more of these items. Multiple items of type <code>DataAccessItem</code> available at the command line or on a Web server provide a flexible, simple way to associate many procedural activities with many data stores.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.DataAccessItem Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EPMAG2\">\n  <tr>\n    <td>\n      <code>Connection[]</code>\n    </td>\n    <td>An array of <code>Songhay.Data.Connection</code>. Zero or more <code>Songhay.Data.Connection</code> objects are used to provide data store connection information.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>DisplayName</code>\n    </td>\n    <td>The human-readable name of the <code>DataAccessItem</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetConnection()</code>\n    </td>\n    <td>Uses an anonymous delegate to return a <code>Songhay.Data.Connection</code> based on the specified <code>Connection.Name</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetNameValuePair()</code>\n    </td>\n    <td>Uses an anonymous delegate to return a <code>Songhay.Data.NameValue</code> pair based on the specified <code>NameValue.Name</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>Name</code>\n    </td>\n    <td>\n      <p>The unique name of the <code>DataAccessItem</code>.</p>\n      <p>This value is used in one of the overloads for <code>DataAccessConfiguration.GetDataAccessItem()</code> (see above).</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>NameValuePair[]</code>\n    </td>\n    <td>\n      <p>An array of <code>NameValuePair</code>. Zero or more <code>NameValuePair</code> objects can be used to provide parameters for <code>DataAccessItem</code>.</p>\n      <p>These provide the means to “hard code” a relatively generic data activity to a specific problem domain.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>Path</code>\n    </td>\n    <td>The path to the Data Activity Assembly used for data access.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>TypeName</code>\n    </td>\n    <td>The fully-qualified, type name of the Data Activity Assembly used for data access. This type must implement the <code>IDataActivityAssembly</code> interface (see below).</td>\n  </tr>\n</table>\n<h2>The Songhay.Data.Connection Class</h2>\n<p>\n  <img alt=\"Songhay.Data.Connection\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.Connection.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />\n  <code>Songhay.Data.Connection</code> objects are used to provide data store connection information.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.Connection Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EB2AG2\">\n  <tr>\n    <td>\n      <code>ConnectionString</code>\n    </td>\n    <td>A valid connection string.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>DisplayName</code>\n    </td>\n    <td>The human-readable name of the connection.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>Name</code>\n    </td>\n    <td>\n      <p>The unique name of the connection.</p>\n      <p>This value is used for <code>DataAccess</code><code>Item</code><code>.</code><code>GetConnection</code><code>()</code> (see above).</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>InvariantProviderName</code>\n    </td>\n    <td>The ADO.NET invariant provider name for a <code>System.Data.DbConnection</code>. For SQL Server, the name is <code>\"System.Data.SqlClient</code><code>\"</code>.</td>\n  </tr>\n</table>\n<h2>The Songhay.Data.NameValuePair Class</h2>\n<p>\n  <img alt=\"Songhay.Data.NameValuePair\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.NameValuePair.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />\n  <code>NameValuePair</code> objects can be used to provide parameters for <code>DataAccessItem</code>. These provide the means to “hard code” a relatively generic data activity to a specific problem domain.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.NameValuePair Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EAEBG2\">\n  <tr>\n    <td>\n      <code>Name</code>\n    </td>\n    <td>\n      <p>The unique name of the pair.</p>\n      <p>This value is used for <code>DataAccess</code><code>Item</code><code>.</code><code>GetNameValuePair</code><code>()</code> (see above).</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>Value</code>\n    </td>\n    <td>The value of the pair.</td>\n  </tr>\n</table>\n<h2>The Songhay.Data.Activity.IDataActivityAssembly Interface</h2>\n<p>\n  <img alt=\"Songhay.Data.Activity.IDataActivityAssembly\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.Activity.IDataActivityAssembly.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The<code> </code>IDataActivityAssembly interface defines the execution contract for Data Activity assemblies. The Data Activity Assembly cannot run in this framework without implementing this contract.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.Activity.IDataActivityAssembly Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EXKBG2\">\n  <tr>\n    <td>\n      <code>Execute()</code>\n    </td>\n    <td>This method is used to run or execute the Data Activity Assembly based on the specified <code>DataAccess</code><code>Item</code> (see above).</td>\n  </tr>\n  <tr>\n    <td>\n      <code>Log</code>\n    </td>\n    <td>This property contains all of the runtime messages generated and captured for this class.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>WriteLog</code>\n    </td>\n    <td>\n      <p>This event, with delegate <code>EventHandler&amp;lt;OnWriteLogEventArgs&amp;gt;</code>, fires when the writing the latest entry into the transformation log.</p>\n      <p>The type <code>OnWriteLogEventArgs</code> is shown with <code>IDataActivityAssembly</code> above.</p>\n    </td>\n  </tr>\n</table>\n<h2>The Songhay.Data.Activity.DataActivityAssembly Class</h2>\n<p>\n  <img alt=\"Songhay.Data.Activity.DataActivityAssembly\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.Activity.DataActivityAssembly.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The <code>DataActivityAssembly</code> class implements the<code> </code>IDataActivityAssembly interface. This is a “base” class for a Data Activity that provides event-logging support for the <code>System.Data.Common.DbConnection</code>.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.Activity.DataActivityAssembly Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0ESTBG2\">\n  <tr>\n    <td>\n      <code>Execute()</code>\n    </td>\n    <td>Implements member of IDataActivityAssembly interface (see above).</td>\n  </tr>\n  <tr>\n    <td>\n      <code>Log</code>\n    </td>\n    <td>Implements member of IDataActivityAssembly interface (see above).</td>\n  </tr>\n  <tr>\n    <td>\n      <code>WriteLog</code>\n    </td>\n    <td>Implements member of IDataActivityAssembly interface (see above).</td>\n  </tr>\n  <tr>\n    <td>\n      <code>CnnStateChange()</code>\n    </td>\n    <td>Handles the <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.common.dbconnection.statechange.aspx\">DbConnection.StateChange()</a> event, calling <code>WriteToLog()</code>.</td>\n  </tr>\n  <tr>\n    <td>\n      <code>WriteToLog()</code>\n    </td>\n    <td>Takes message data from the Data Activity and fires the <code>WriteLog</code> event.</td>\n  </tr>\n</table>\n<h2>The Songhay.Data.Common.CommonDbms Static Class</h2>\n<p>\n  <img alt=\"Songhay.Data.Common.CommonDbms\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.Common.CommonDbms.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The <code>CommonDbms</code> class provides generic procedures for data access.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.Common.CommonDbms Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0E14BG2\">\n  <tr>\n    <td>\n      <code>Close()</code>\n    </td>\n    <td>\n      <p>Attempts to close the specified <code>System.Data.Common.DbConnection</code> and dispose of it.</p>\n      <p>This method should be used rarely because <code>using</code> blocks wrap a new <code>DbConnection</code> and automatically close and dispose.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>DoCommand()</code>\n    </td>\n    <td>\n      <p>Executes the specified statement for the specified <code>System.Data.Common.DbConnection</code>.</p>\n      <p>This member returns the integer value of the records affected by the statement.</p>\n      <p>An optional <code>Dictionary&amp;lt;String, Object&amp;gt;</code> can be supplied for a parameterized statement (see <code>Songhay.Data.Common.CommonParameter</code>).</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetAdapter()</code>\n    </td>\n    <td>\n      <p>Returns a <code>System.Data.Common.DbDataAdapter</code> based on the specified invariant provider name.</p>\n      <p>When an optional connection string and a <code>SELECT</code> statement are provided, the <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.common.dbcommandbuilder.aspx\">DbCommandBuilder</a> is used to generate <code>DeleteCommand</code>, <code>InsertCommand</code> and <code>UpdateCommand</code> commands.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetConnection()</code>\n    </td>\n    <td>Returns a <code>System.Data.Common.DbConnection</code> based on the specified invariant provider name and connection string.</td>\n  </tr>\n</table>\n<h2>The Songhay.Data.Common.CommonParameter Static Class</h2>\n<p>\n  <img alt=\"Songhay.Data.Common.CommonParameter\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.Common.CommonParameter.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The <code>CommonParameter</code> class provides a few static helper members for <code>System.Data.Common.DbParameter</code>.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.Common.CommonParameter Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EZKAI2\">\n  <tr>\n    <td>\n      <code>GetParameter()</code>\n    </td>\n    <td>\n      <p>Returns a <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.common.dbparameter.aspx\">DbParameter</a> based on the specified <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.common.dbcommand.aspx\">DbCommand</a>, parameter name and value (this is optional).</p>\n      <p>You have the option of supplying <code>DbType</code>, <code>Int32</code> parameter size, <code>ParameterDirection</code>, <code>String</code> source column, <code>DataRowVersion</code> and a <code>Boolean</code> indicating whether the source column is Nullable. This is for the appeasement of <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.dataset.aspx\">DataSet</a> design patterns.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetParameters()</code>\n    </td>\n    <td>Returns an array of <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.common.dbparameter.aspx\">DbParameter</a> based on the specified <a href=\"http://msdn2.microsoft.com/en-us/library/system.data.common.dbcommand.aspx\">DbCommand</a> and a <code>Dictionary&amp;lt;String, Object&amp;gt;</code> of parameters.</td>\n  </tr>\n</table>\n<h2>The Songhay.Data.Common.CommonReader Static Class</h2>\n<p>\n  <img alt=\"Songhay.Data.Common.CommonReader\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.Common.CommonReader.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The <code>CommonReader</code> class provides a few static helper members for <code>System.Data.Common.</code><code>DbDataReader</code>.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.Common.CommonReader Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EGUAI2\">\n  <tr>\n    <td>\n      <code>GetReader()</code>\n    </td>\n    <td>\n      <p>Returns a <a href=\"http://msdn2.microsoft.com/en-us/library/System.Data.Common.DbDataReader.aspx\">DbDataReader</a> based on the specified <code>DbConnection</code> and query.</p>\n      <p>You have the option of supplying a <code>Dictionary&amp;lt;String, Object&amp;gt;</code> of parameters (with a timeout value in seconds) in addition to the query.</p>\n      <p>You also have the option of supplying an ambient <code>DbTransaction</code> object for scenarios not using <a href=\"http://msdn2.microsoft.com/en-us/library/system.transactions.transactionscope.aspx\">TransactionScope</a>.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <code>GetXPathDocument()</code>\n    </td>\n    <td>\n      <p>Returns an <code>XPathDocument</code> based on the specified <code>DbCommand</code> query and (local) document element name.</p>\n      <p>You have option of specifying a (local) row element name as well.</p>\n      <p>Instead of a <code>DbCommand</code> query, you can specify a <code>DbConnection</code> and query string. You can also use an existing <code>DbDataReader</code> as well.</p>\n    </td>\n  </tr>\n</table>\n<h2>The Songhay.Data.Common.CommonScalar Static Class</h2>\n<p>\n  <img alt=\"Songhay.Data.Common.CommonScalar\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.Common.CommonScalar.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The <code>CommonScalar</code> class provides a few static helper members for <code>System.Data.Common.</code><code>DbDataReader</code>. This defines the ‘Common <a href=\"http://en.wikipedia.org/wiki/Scalar_%28computing%29\">Scalar</a>’ as a string representation of relational data. This is deliberately designed to take advantage of SQL Sever 2005 queries like this:</p>\n<pre xml:space=\"preserve\">\nDECLARE @xml XML\n\nSET @xml = (SELECT * FROM MyTable FOR XML AUTO, ELEMENTS, ROOT('RootElement'))\n\nSELECT @xml\n                  \n</pre>\n<p>This pattern emerges from the problem documented in “<a href=\"http://songhaysystem.com/document.php?kbDoc=sql_2076071783\">SQL Server 2005 PROBLEM: Using the ADO.NET DbCommand.ExecuteScalar() Method Truncates at 2033 Characters</a>.”</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.Common.CommonScalar Public Members</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EC6AI2\">\n  <tr>\n    <td>\n      <code>GetString()</code>\n    </td>\n    <td>\n      <p>Returns a well-formed XML string based on the specified <code>DbConnection</code>, query and a Boolean indicating whether to emit an XML message for an empty set.</p>\n      <p>You have the option of supplying a <code>Dictionary&amp;lt;String, Object&amp;gt;</code> of parameters in addition to the query.</p>\n      <p>This member is used in XML-over-HTTP designs serving <acronym title=\"Asynchronous JavaScript and XML\">AJAX</acronym> clients.</p>\n    </td>\n  </tr>\n</table>\n<h2>The Songhay.Data.ICommandHandler Interface</h2>\n<p>\n  <img alt=\"Songhay.Data.ICommandHandler\" src=\"http://songhaysystem.com/bitmaps/SonghaySystem/Songhay.Data.ICommandHandler.jpg\" style=\"float:left;margin:16px;margin-top:0;\" />The<code> </code>ICommandHandler interface defines how a data access layer should accept external commands and respond to these commands. This interface was built to handle primitive XML-over-HTTP communication as lightweight alternative to formal SOAP-based implementations.</p>\n<p>The use of this interface and an ASP.NET *.ASHX page, for example, is a very agile way to get an AJAX server up and running for vendor-agnostic HTTP clients.</p>\n<div style=\"clear:both;\">\n  <h3>The Songhay.Data.ICommandHandler Member</h3>\n</div>\n<table id=\"CleanXhtmlTable_ID0EZEBI2\">\n  <tr>\n    <td>\n      <code>DoCommand()</code>\n    </td>\n    <td>\n      <p>Returns an <code>XPathDocument</code> based on the specified <code>Songhay.Data.DataCommandInput</code> structure (shown above).</p>\n      <p>One <code>DataCommandInput</code> structure can take generic argument which specifies the type of the <code>POST</code> data. The other <code>DataCommandInput</code> structure does not accept <code>POST</code> data as it is used for <code>GET</code> operations.</p>\n    </td>\n  </tr>\n</table>",
    "CreateDate": "2007-08-20T14:18:00.0000000",
    "EndDate": null,
    "ModificationDate": "2007-08-20T14:31:00.8270000",
    "DocumentId": "56",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "91",
    "FragmentName": "GenericWebMetaDataIsManySegmentsToManyDocuments",
    "FragmentDisplayName": null,
    "SortOrdinal": null,
    "ItemChar": "no",
    "ItemText": null,
    "CreateDate": null,
    "EndDate": null,
    "ModificationDate": null,
    "DocumentId": null,
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": "False",
    "IsNext": "False",
    "IsWrapper": "False",
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4814",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ELECTROLYTES--PART 4 OF 5",
    "SortOrdinal": null,
    "ItemChar": "Electrolytes are substances that conduct electricity. Sodium, potassium, and chloride are the principal electrolytes in the body. \n\nSodium is involved in the conduction of electrical impulses through the nervous system. It's also vital for muscle function, regulation of blood and body fluids, heart activity, and metabolic functions. Potassium regulates fluid balance, nerve transmission, and contraction of the muscles. Lack of potassium upsets the electrolyte balance in the body and can cause irregular heart rhythms and even sudden death. \n\nDietary chloride is necessary for proper digestion of fluid and fluid balance. A lack of chloride can result in severe muscle cramps. Replacement of the electrolytes lost during sweating may be necessary during and after prolonged exercise.",
    "ItemText": null,
    "CreateDate": "2004-04-15T16:11:33.3500000",
    "EndDate": null,
    "ModificationDate": "2004-04-15T16:11:33.3500000",
    "DocumentId": "-2104839153",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4815",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SHEDDING LIGHT ON LONG-TERM WEIGHT LOSS",
    "SortOrdinal": null,
    "ItemChar": "The National Weight Control Registry (NWCR) has been tracking \nsuccessful \"losers\" since 1993. \n\nThe registry is a database, not a treatment plan, established and \nmaintained by researchers at the University of Colorado Health Science Center and the University of Pittsburgh School of Medicine. It is designed to gather insight and information from individuals who have successfully maintained a significant weight loss. \n\nIn addition to religiously burning an average of 2,800 calories per week through exercise, most NWCR \"losers\" report succeeding after gaining tighter control of their eating habits. \n\nWhile being part of the registry is a big win for many folks, don't think they're overnight success stories. The average registrant is 5 years old and has gone from 220 to 154 pounds, which is a loss of \nabout 30 percent of their body weight. Many had been overweight since childhood, and more than 90 percent report multiple weight gains and losses (to the tune of 270 pounds per person) before finding what permanently works for them. About half report being involved in some type of organized weight-management program, while the remainder has gone it alone. \n\nIf you're a successful \"loser\" and would like to be involved in this worthwhile, ongoing project, contact the NWCR at 1-800-606-6927. To qualify, you must have lost a minimum of 30 pounds and kept it off for at least a year.",
    "ItemText": null,
    "CreateDate": "1999-10-26T08:37:28.0000000",
    "EndDate": null,
    "ModificationDate": "1999-10-26T08:37:28.0000000",
    "DocumentId": "-2077170540",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4816",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL: Stored Procedure Structure for Microsoft SQL Server 6.5",
    "SortOrdinal": null,
    "ItemChar": "/*\nThis form is based on what is extracted from SQL Enterprise Manager:\n*/\n\n/*\nObject:  Stored Procedure MyProc\nScript Date: 09/13/1999 8:59:44 AM \n*/\nIF EXISTS\n    (SELECT * FROM sysobjects\n    WHERE id = object_id('MyProc')\n    AND sysstat & 0xf = 4)\nDROP PROCEDURE MyProc\nGO\n\nCREATE PROCEDURE MyProc\n(\n    @param1 float,\n    @param2 datetime,\n    @param3 datetime,\n    @param4 float OUTPUT\n)\nAS\n/*\n    Procedure: MyProc\n\n    Action: Description of MyProc goes here.\n*/\n\n-- Procedure statements go here.\n\nGO\n\n\n/*\nThis is an alternate form using the PRINT statement:\n*/\nIF OBJECT_ID('ProcName') IS NOT NULL\nBEGIN\n    DROP PROCEDURE ProcName\n    IF OBJECT_ID('ProcName') IS NOT NULL\n        PRINT '<<< FAILED DROPPING PROCEDURE ProcName >>>'\n    ELSE\n        PRINT '<<< DROPPED PROCEDURE ProcName >>>'\nEND\n;\n\nCREATE PROCEDURE ProcName\n    (\n        @param1 <datatype> = <default value>\n    ,   @param2 <datatype> = <default value>\n    )\nAS\n\n-- Name:\n-- Description:\n-- Developer:\n\n--Enter procedure here.\n\nGO\n\nGRANT EXECUTE ON ProcName TO public\nGO\n\nIF OBJECT_ID('ProcName') IS NOT NULL\n    PRINT '<<< CREATED PROCEDURE ProcName >>>'\nELSE\n    PRINT '<<< FAILED CREATING PROCEDURE ProcName >>>'\nGO",
    "ItemText": null,
    "CreateDate": "2007-11-19T15:17:20.0000000",
    "EndDate": null,
    "ModificationDate": "2007-11-19T15:17:20.0000000",
    "DocumentId": "-2037898918",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4817",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: Procedures for Linked Tables",
    "SortOrdinal": null,
    "ItemChar": "Public Sub basRenLinkTbls()\n    '\n    'This Sub removes the 'dbo_' prefix from linked Tables.\n    '\n    Dim DAOTblDef As DAO.TableDef\n    \n    With Application\n    \n        For Each DAOTblDef In CurrentDb.TableDefs\n            If VBA.InStr(1, DAOTblDef.Name, \"dbo_\", _\n                vbTextCompare) > 0 Then\n                DAOTblDef.Name = VBA.Mid$(DAOTblDef.Name, 5)\n            End If\n        Next\n        \n        .CurrentDb.TableDefs.Refresh\n        .RefreshDatabaseWindow\n        \n    End With\n\nEnd Sub\n\nPublic Sub basRemoveLinkedTbls()\n    '\n    'This Sub removes all linked Tables where a linked table\n    'is defined as a TableDef with a Connect property.\n    '\n    Dim DAOTblDef As DAO.TableDef\n    \n    With Application\n    \n        For Each DAOTblDef In CurrentDb.TableDefs\n            If VBA.Len(DAOTblDef.Connect) > 0 Then _\n                Call Application.DoCmd.DeleteObject(acTable, _\n                    DAOTblDef.Name)\n        Next\n        \n        .CurrentDb.TableDefs.Refresh\n        .RefreshDatabaseWindow\n        \n    End With\n\nEnd Sub",
    "ItemText": null,
    "CreateDate": "1999-12-12T22:23:25.0000000",
    "EndDate": null,
    "ModificationDate": "1999-12-12T22:23:25.0000000",
    "DocumentId": "-2027653601",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4818",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB: ADO; More Remarks",
    "SortOrdinal": null,
    "ItemChar": "The Filter Property\n\nDAO Recordset objects have the Filter Property. I did not start using it until I started using ADO. Just a coincidence. I mention here for historical reasons. It's my history. Moving right along...\n\n\nCalling Stored Procedures with ODBC SQL\n\nThe very concept of ODBC SQL was not formally introduced to me. So now there is MS-SQL (for Access), t-SQL and ODBC SQL. Microsoft recommends using the ODBC CALL escape sequence of this form:\n\n    {[?=]call proc_name[([parameter][,[parameter]]...)]}\n\nIt is important to see that question mark as this is Parameter 0 in the Parameters Collection of a Command object for all stored procedures with parameters. For example, this is what the stored proc' get_cust_dates() looks like in a Command object:\n\n    With cmdADO\n        Set .ActiveConnection = objADO.Connection\n        .CommandText = \"get_cust_dates\"\n        .CommandType = adCmdStoredProc\n        .Parameters.Refresh\n        .Parameters.Item(\"@RETURN_VALUE\") = 0\n        .Parameters.Item(\"@all_dates\") = 1\n        .Parameters.Item(\"@max_yyyyq\") = 19993\n        Set rstADO = .Execute\n    End With\n\nThis avoids using our ODBC SQL syntax entirely. However this form uses the ODBC SQL syntax:\n\n    With cmdADO\n        Set .ActiveConnection = objADO.Connection\n        .CommandText = \"{call get_cust_dates(1,19993)}\"\n        .CommandType = adCmdText\n        Set rstADO = .Execute\n    End With\n\nThis form requires less parsing by the RPC protocol used by SQLOLEDB (the Provider for SQL 7). However, this form makes it \"harder\" to Execute the Command with different parameters. (\"Harder\" means understanding the concept of \"parameter markers\" or string handling via the Replace() function.) I don't use the Command object to open Forward-only, Read-only Recordsets; I use the Connection object. For more information please see SQL 7 Books Online; search for \"Calling a Stored Procedure (OLE DB).\"\n\n\n\nThe NextRecordset Method\n\nI am sure that only a select few DAO programmers know that the NextRecordset Method was available in ODBCDirect Workspaces. I never used it. I must make mention of it because it is indirectly related to a fundamental misunderstanding I had about ADO Recordsets returned from SQLOLEDB. I thought ADO was unfinished or \"broken.\" The only Provider I trusted was the OLE DB Provider for ODBC (MSDASQL). If I tried to use a \"native\" SQL Server Provider it would occasionally return closed (State = adStateClosed).\n\nIt took me over a year (experimenting off and on) to discover that on those \"occasions\" when the Recordsets came back closed the Recordset was based on a stored procedure SELECTing from a temporary table. This was quite a revelation for me. Microsoft knew this all along. For more details please see MS KB Article Q235340 (\"PRB: Error Messaging Referencing #Temp Table with ADO-SQLOLEDB.\")\n\nMicrosoft says this behavior is by design. To stop this behavior send the command SET NOCOUNT ON before the stored proc' is run. The reason why this behavior is by design is because SQLOLEDB Providers can return multiple Recordsets. If you have ever run a stored proc' from the SQL 7 Query Analyzer and noticed multiple \"Records Affected\" messages return during execution, then it would not be unreasonable to say that SQLOLEDB \"sees\" this as well. It follows that ADO's NextRecordet Method can be used for such a stored proc'.\n\nAs of this writing I am not certain that I will be using the NextRecordset Method since there is a problem using this method when a connection is closed. I will keep my eyes open. For more details see MS KB article Q193352 (\"PRB: NextRecordet fails When Called On a Disconnected Recordset\").\n\n\nThe PageSize, PageCount and AbsolutePage Properties\n\nI have yet to use these properties but I know I will. This is why I recommend taking a look at MS KB article Q202125 (\"HOWTO: Page Through a Recordset from ASP\").",
    "ItemText": null,
    "CreateDate": "2000-02-03T23:39:10.0000000",
    "EndDate": null,
    "ModificationDate": "2000-02-03T23:39:10.0000000",
    "DocumentId": "-2025630760",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4819",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "LUTEIN FOR EYE SUPPORT",
    "SortOrdinal": null,
    "ItemChar": "Lutein is a relative of vitamin A. It has gained attention for its ability to prevent progression of macular degeneration, a leading cause of vision loss in the elderly. The Journal of American Medical Association reports that people consuming lutein-rich foods such as spinach and collard greens had lower risks of macular degeneration. Lutein is deposited in the macula, which is the central part of the eye's retina and is responsible for vision detail and filtering out harmful light rays. Lutein is available as a supplement at health food stores.",
    "ItemText": null,
    "CreateDate": "1999-09-07T22:41:13.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-07T22:41:13.0000000",
    "DocumentId": "-1998118748",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4820",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "THE WONDERS OF DILL SEED",
    "SortOrdinal": null,
    "ItemChar": "Dill seed is an excellent herb for settling an upset stomach, is safe for children, and can be made into a tea. It breaks up gas bubbles in the stomach and prevents flatulence. It contains natural preservative properties and thus has long been used to make food safer. Dr. Daniel Mowrey, director of the American Phytotherapy Laboratory in Salt Lake City says that it also inhibits the growth of Staphylococcus, E. coli, Streptococcus, and Pseudomonas.",
    "ItemText": null,
    "CreateDate": "1999-08-06T21:23:42.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-06T21:23:42.0000000",
    "DocumentId": "-1996741398",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4821",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "HTML: The \"file:\" Protocol on the MS Windows OS; Active Desktop",
    "SortOrdinal": null,
    "ItemChar": "The general form for the file protocol in the Windows environments is:\n\n    file:///<drive letter>|<path>\n\nwhere <path> mimics the Unix-like forward slash ('/') format. So if you are trying to use the Active Desktop with a custom home page that points to local folders on your hard drive, this protocol suddenly becomes useful. This format also works on Netscape browsers in Windows.\n\nFor example, to link to a folder called \"foo\" on drive \"C:\" we have:\n\n    file:///C|/foo",
    "ItemText": null,
    "CreateDate": "1999-01-13T09:39:15.0000000",
    "EndDate": null,
    "ModificationDate": "1999-01-13T09:39:15.0000000",
    "DocumentId": "-1888684211",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4822",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Thinking of the BeforeUpdate and AfterUpdate Events in DAO Terms; the Change Event Is Different from the BeforeUpdate Event",
    "SortOrdinal": null,
    "ItemChar": "In order to distinguish the BeforeUpdate event from the Change event, think of the BeforeUpdate event and AfterUpdate event in DAO transaction terms. The BeforeUpdate event fires just before a transaction is committed to the database. It marks the time when a BeginTrans method would be called out of the Workspace object.\n\nIt follows that the AfterUpdate event fires when a CommitTrans method would be called. One can emulate the Rollback method of the Workspace by setting Cancel = True during a BeforeUpdate event procedure or implement an Undo routine by saving the OldValue property of the control that supports BeforeUpdate and AfterUpdate events.\n\nThe BeforeUpdate and AfterUpdate events fire in succession after the supporting control loses focus; whereas the Change event fires as soon as data in the control is altered by the user. The Change event continues to fire with every edit the user makes. This can make the change event very dangerous for text boxes where the user can make many changes before the control loses focus.",
    "ItemText": null,
    "CreateDate": "1998-09-18T16:39:29.0000000",
    "EndDate": null,
    "ModificationDate": "1998-09-18T16:39:29.0000000",
    "DocumentId": "-1877307985",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4823",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBScript and ASP Code: In-Line Error Handling with Resume Next",
    "SortOrdinal": null,
    "ItemChar": "'VBScript only has \"in-line\" error handling.\n'The Resume Next keywords do work\n'in the latest versions of VBScript.\n'Recall that there are no line labels in VBScript.\n'I have, however, seen some code using line numbers\n'---especially line zero (e.g. On Error Goto 0).\n'According  to Microsoft, the Err object has existed\n'since version 1.0 of VBScript.\n'This is the general form of the VBScript error handler\n'using Resume Next:\n\n    On Error Resume Next\n    'Line(s) of code to trap go here.\n    If Err.number <> 0 Then\n        Response.Write Err.Number & \": \" & Err.Description\n        Response.End\n        Err.Clear\n    End If\n\n'Alternatively, there is the Select-Case form:\n\n    On Error Resume Next\n    'Line(s) of code to trap go here.\n    Select Case Err.number\n        Case 0\n            'No error. Continue.\n        Case Else\n            Response.Write Err.Number & \": \" & Err.Description\n            Response.End\n            Err.Clear\n    End Select",
    "ItemText": null,
    "CreateDate": "1999-03-12T17:40:16.0000000",
    "EndDate": null,
    "ModificationDate": "1999-03-12T17:40:16.0000000",
    "DocumentId": "-1774130574",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4824",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Book: Access 97 Power Programming; Chapter 3 Highlights (2/3): \"Working with Application Collections And Data Access Objects\"",
    "SortOrdinal": null,
    "ItemChar": "The \"Default Instance\" of a Form\n\nThe Application object refers to all of the forms in an Access .MDB via the Forms collection. This collection contains class modules that happen to be \"automatically instanced\" when the .MDB file is loaded.\n\nThe Object Browser's Project/Library field contains a project name referring to what is stored in the .MDB file. (This project name is stored in the Title field under File > Database Properties > Summary.) Here are found the default instances of all the Forms (and Reports) in the .MDB file. For example, a form called \"Form1\" in a file called DB1.MDB will been seen as Form_Form1.\n\nThe exact way to refer this instance in code when setting a property like Caption is:\n\n    DB1.Form_Form1.Caption = \"Test\"\n\nThe shorthand syntax is:\n\n    Form_Form1.Caption = \"Test\"\n\nProperties set against the default instance of an object are not \"saved\" (they do not modify the underlying class module). Like any other object, they have a limited life.\n\n\nProgramming Multiple Copies of the Same Form (pg. 83)\n\nForms used in multiple-instance references must have modules to denote the variable storing the references to the instanced forms. In some cases you may have to set the HasModule property to True.\n\nThe general form for instancing a new form is:\n\n    Set frmInstanced = New Form_DefaultInstance\n    '\n    '...where Form_DefaultInstance is the class name\n    'of the instancing form.\n    '\n    With frmInstanced\n        .Filter = \"<stuff>\"\n        .FilterOn = True\n        <more stuff>\n        .Visible = True\n    End With\n\nNote that the Visible property of the instanced form must be explicitly set to True. When multiple copies of a forms class are instanced, it is not possible to \"find\" the forms in the Forms collection without using something like a custom property or the Tag property to differentiate among forms. \n\nEach time the New keyword is used above, a new form is added to the Forms collection. In the Unload event of the instancing form, set the variable referencing the instanced forms to Nothing. This event causes all of the Form_DefaultInstance forms in the Forms collection to close.\n\nTo keep instanced forms open when the instancing form closes, modify the form above by adding these lines of code after the With structure:\n\n    Set p_colForms As New Collection\n    p_colForms.Add frmInstanced\n\nwhere p_colForms is a public variable defined in a module.",
    "ItemText": null,
    "CreateDate": "1998-10-01T13:42:17.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-01T13:42:17.0000000",
    "DocumentId": "-1738372698",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4825",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB: ADO; Using the Number Property of the ADO Error Object",
    "SortOrdinal": null,
    "ItemChar": "In the same manner we can intercept certain error numbers for VBA errors we can do the same for ADO \"data\" errors. The trick is finding a list of the numbers. MS KB article Q168354 (\"INFO: Underlying OLE and OLEDB Provider Errors Exposed via ADO\") provides one great place to look. The sample code below illustrates:\n\n    Private Sub EnvironmentErr(ByRef DataErr As ADODB.Error, _\n        Optional ByVal ObjName = vbNullString)\n    \n        Select Case DataErr.Number\n            Case -2147217900\n                p_strErrMsg = \"ADO Environment Error: \" _\n                    & \"An Object associated with \"\"\" _\n                    & ObjName & \"\"\" was not found.\"\n            \n            Case -2147467259\n                p_strErrMsg = \"ADO Environment Error: \" _\n                    & \"Connection to Data Source \"\"\" _\n                    & pADOcnn.Properties(\"Data Source\") _\n                    & \"\"\" failed.\" & vbCrLf _\n                    & \"The specified Catalog \"\"\" _\n                    & pADOcnn.Properties(\"Initial Catalog\") _\n                    & \"\"\" was not found.\"\n            \n            Case Else\n                p_strErrMsg = \"ADO Environment Error: \" _\n                    & DataErr.Number & \": \" & DataErr.Description\n        End Select\n        \n    End Sub",
    "ItemText": null,
    "CreateDate": "2000-02-09T22:52:09.0000000",
    "EndDate": null,
    "ModificationDate": "2000-02-09T22:52:09.0000000",
    "DocumentId": "-1683864580",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4826",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WATER: A CRUCIAL NEED",
    "SortOrdinal": null,
    "ItemChar": "Water is second to oxygen as a substance needed to sustain life. Water makes up about 60 percent of your total body weight (about 1 and one-half large buckets of water). An adequate supply of water is necessary to help regulate the body temperature; to carry oxygen, hormones, and nutrients to the cells; for electrolyte balance; to cushion joints; to protect inner organs; and for the elimination of waste products. The body loses water through perspiration, exhaled water vapor from the lungs, and excretion of urine. \n\nEach day you need to replace around four percent of your body weight in water. Drinking six to eight glasses of water a day is recommended for health maintenance. However, fruits and vegetables have a high concentration of water and the actual number of glasses needed each day is somewhat less. And individual needs vary according to dietary factors, age, weight, climate and humidity, exercise, and the effectiveness of your body's systems.\n\nThe key to keeping your body working efficiently and meeting your personal exercise needs is to take in as much water as you need. \n\nResearch studies have determined that the number of ounces of water you need equals your weight divided by two. If you weigh 180 pounds, you need to drink about 90 ounces or 11 cups of water daily. One method of determining if you are getting enough water is to observe the color of your urine; it should be pale yellow. \n\nAnother method of determining the amount of water needed daily is to drink a quart of water for every 1,000 calories you consume in your diet. For a 2,500-calorie diet, this would equal a daily count of 2 and one-half quarts (10 cups) of water.\n\nThe body loses about a quart of water per hour during exercise. Fifteen minutes prior to exercise, drink approximately two cups of water. During exercise, drink one-half to one cup of water for every 15 minutes of exercise. Weigh yourself before and after exercise. Any weight lost is due to loss of water through perspiration. Drink one to two cups of water for each pound lost during the activity. The best way to replace fluid lost in exercise is with cold water. Cold water will leave the stomach sooner than warm water and help you to cool down rapidly.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4700000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4700000",
    "DocumentId": "-1683695294",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4827",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "TAKE A SECOND LOOK AT SODIUM",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nAside from watching food labels for sodium content, try these simple tips for controlling your sodium intake:\n\n* Dietitians teach that if a food has twice as much sodium as it does calories, then it's probably too much sodium. \n\n* Don't trust your taste buds. Many foods with a high sodium content do not, in fact, taste salty. \n\n* \"Unlearn\" your taste buds for sodium. Focus on enjoying the other flavors in foods. \n\n* Take a break from the salt shaker. Just one-fourth teaspoon of salt contains a whopping 600 milligrams of sodium. \n\n* Rinse off canned vegetables before eating them. You can cut sodium intake by 40 percent. \n\n* Limit other condiments that are high in sodium, like soy sauce, mustard, ketchup, and tartar sauce.\n\n* Some over-the-counter medications contain sodium, such as laxatives, headache pills, and alkalizers. Your doctor can better inform you, especially if you have salt-related high blood pressure.",
    "ItemText": null,
    "CreateDate": "2004-05-22T00:34:02.4230000",
    "EndDate": null,
    "ModificationDate": "2004-05-22T00:34:02.4230000",
    "DocumentId": "-1678805843",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4828",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "\"NIGHT IN NIJINSKY\" (Versions 1 & 2)",
    "SortOrdinal": null,
    "ItemChar": "NIGHT IN NIJINSKY (Version 1)\n\nballon and faune\nyes\nthe yoke of the erg\nthe birth, and now there is the annular ligament\nattachment\nthe firmament under the pivot\nthe geometric perfection\nthe contrapose\nthe crystallized spectre of the rose\nthey are eating\na suckling for mother\na 'little jap' for the boys\na young, feral ferrule for an old man\nan aging ghost for this woman\nkitajec\n\nwithdrawn and gone\ndown\niris into orbit\nthe trip, and across the equator\ncrossing over to the other side\nin aloneness remembering the cross and God\nwith a crucified mind\nto align, assemblé\nthe heaven chaine\nor marionette strings\nfor the Clown of God\nkitajec\n\n\n\n\nNIGHT IN NIJINSKY (Version 2)\n\na black cloud like wire\nhung down the soft of the arms\nthe broken nerves of a tired will\nhands lateral to the pivot of the hips\nmen have touched before\nhear the voices outside the dressing room door\ndressed to kill\nfathers of my Femmka\n\nand all the soldiers\nsqueezed their faces\nscreaming eye for an eye\ndressed to die\nsinging on the shiny train\nwar wore on\npressure packed on the brain\n\nthe hips\nwithout a scratch\ndanced with the pain\nof a thousand mental wounds\nuntil the last time\nin the silk cathedral\nby the sweating piano\nand chair in which the muscles sat\nlooked at the people\ntheir faces flat\nbrothers of my Femmka\n\nand circles are the eyes\nthe pressure ate through\nblacken the eyelids\nwith the smoke of a world war\nthere the pederast whore\nsin\nabomination\nbending the pinewood\nthe stages creak\nthe curtains drawn\nnothing more\n\nbut a page at home littered with circles\nthere was no end no start\njust the truth of a set of endless points\nfor the sons of art\nand nobody knew\nperhaps Tolstoi\nand the crazy dancing boy\nKitajec\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\"NIGHT IN NIJINSKY\" (Versions 1 & 2)\n(c)1995 Bryan Douglas Wilhite\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
    "ItemText": null,
    "CreateDate": "1998-12-06T17:07:21.0000000",
    "EndDate": null,
    "ModificationDate": "1998-12-06T17:07:21.0000000",
    "DocumentId": "-1643336679",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4829",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Creative Labs AWE32: Reducing Noise Coming From the Card Itself",
    "SortOrdinal": null,
    "ItemChar": "Listening with headphones it may be possible to detect a faint FM-like tone and white noise when no sounds are being played. This is due to the noise generated by the sound card itself. This noise is quantified by the Signal-to-Noise ratio of the card. PC soundcards typically have much worse signal to noise ratio (around 80 dB) than CD players (>90 dB).\n\nTo reduce this background noise, open the Creative Mixer and select Input/Output Options. Set all gain values to X1.\n\nAnother reason to reduce output gain values is distortions in sound synthesis. For example, certain notes in an instrument sound out of tune. This is called \"aharmonic distortion.\"",
    "ItemText": null,
    "CreateDate": "1999-02-10T08:29:31.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-10T08:29:31.0000000",
    "DocumentId": "-1611696358",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4830",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VITAMINS AND MINERALS: TOO MUCH CAN CAUSE BAD RESULTS",
    "SortOrdinal": null,
    "ItemChar": "It's true that scientists are learning that some nutrients provide additional health benefits when taken in amounts that exceed current recommendations, which were set at levels to prevent nutritional deficiencies. However, folks who consume eight, 40, or 50 times the recommended levels of some nutrients are playing a dangerous game of nutritional Russian roulette.  \n\nFor instance, although too little vitamin A can lead to night blindness and dry eyes, too much can cause headaches, blurred vision, hair loss, fatigue, and serious liver damage. Running low on iron causes anemia to set in, but an overload of this oxygen-binding mineral increases the risk of diabetes, cirrhosis, and even liver cancer in the nearly 1 out of every 200 to 400 Americans who have an often-overlooked genetic defect known as hemochromatosis.  \n\nTo help guard against dangerous nutritional overload due to supplement use, the newly mandated supplement labels not only must show how much of a nutrient the supplement contains, but also what this amount is as a percent of established nutritional guidelines. In addition, a new type of nutritional recommendation, called the UL or Upper Limit or tolerance, is being established to help consumers avoid the dangerous \nside effects of overloading on vitamins and minerals.  \n\nThe bottom line: Nutrients needed in small amounts can be toxic when taken in excess. So, although most Americans can get all the vitamins and minerals they need by following a healthy diet, if you choose to take supplements, check the labels and know what you're buying.",
    "ItemText": null,
    "CreateDate": "1999-09-11T16:01:23.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-11T16:01:23.0000000",
    "DocumentId": "-1547361477",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4831",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "NATURAL SWEETENER",
    "SortOrdinal": null,
    "ItemChar": "Stevia is an herbal sweetener that is ten to fifteen times sweeter than sugar without any of the health risks associated with sugar. It contains steviosides, which are more than 200 times sweeter than sugar. Stevia has long been used in South America as a tonic, for physical and mental fatigue, to aid weight loss, regulate blood pressure, and improve digestion. According to a report from the Hiroshima School of Dentistry, stevia actually suppresses the bacteria that causes dental decay--as opposed to feeding it, which regular sugar does.",
    "ItemText": null,
    "CreateDate": "1999-09-07T22:44:28.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-07T22:44:28.0000000",
    "DocumentId": "-1393290027",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4832",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: basMessagingLink",
    "SortOrdinal": null,
    "ItemChar": "Public Sub basMessagingLink(Optional IsAddressBook = False)\n\n    Dim tdfDAO As TableDef\n    Dim strConn As String\n\n    g_strMsg = \"Are you sure?\" & vbCrLf _\n        & \"TIP: Outlook Express should not \" _\n        & \"be your default MAPI client \" _\n        & \"during this procedure. (In Outlook Express, \" _\n        & \"see Options > General.)\"\n    If VBA.MsgBox(g_strMsg, vbQuestion + vbYesNo _\n        + vbDefaultButton2, _\n        \"Songhay System\") = vbNo Then Exit Sub\n    \n    On Error GoTo basMessagingLink_Err\n    \n    If VBA.VarType(IsAddressBook) <> vbBoolean Then _\n        If VBA.VarType(IsAddressBook) <> vbInteger Then _\n            VBA.Err.Raise 450\n    \n    'Source database type:\n    strConn = \"Exchange 4.0;\"\n    'Table name (MAPILEVEL=<storage|folders>):\n    strConn = strConn & \"MAPILEVEL=Personal Folders|;\"\n    'Source table type (0 for folders, 1 for address books):\n    If IsAddressBook Then\n        strConn = strConn & \"TABLETYPE=1;\"\n    Else\n        strConn = strConn & \"TABLETYPE=0;\"\n    End If\n    'Database name (DATABASE=<path>):\n    strConn = strConn & \"DATABASE=\" _\n        & Application.CurrentDb.Name & \";\"\n    'Profile name (optional):\n    strConn = strConn & \"PROFILE=Windows Messaging Settings;\"\n    'Password (optional):\n    \n    If IsAddressBook Then\n        Set tdfDAO = Application.CurrentDb _\n            .CreateTableDef(\"twmAddressBook\")\n    Else\n        Set tdfDAO = Application.CurrentDb _\n            .CreateTableDef(\"twmWebCom\")\n    End If\n    \n    With tdfDAO\n        .Connect = strConn\n        If IsAddressBook Then\n            .SourceTableName = \"Personal Address Book\"\n        Else\n            .SourceTableName = \"WebCom Accesses\"\n        End If\n    End With\n    \n    With Application.CurrentDb\n        .TableDefs.Append tdfDAO\n        VBA.MsgBox tdfDAO.Name _\n            & \" has been linked to this database.\", vbInformation\n        .TableDefs.Refresh\n    End With\n\n    Application.RefreshDatabaseWindow\n\nbasMessagingLink_Exit:\n    Exit Sub\n    \nbasMessagingLink_Err:\n    Select Case VBA.Err\n        Case 3000\n            VBA.MsgBox \"There is a problem with \" _\n                & \"the connection string.\", vbCritical\n            Resume basMessagingLink_Exit\n        Case 3170\n            VBA.MsgBox \"Windows Messaging Installable ISAM \" _\n                & \"(in Msexch32.dll) not found or not \" _\n                & \"registered.\", vbCritical\n            Resume basMessagingLink_Exit\n        Case 3012\n            VBA.MsgBox tdfDAO.Name _\n                & \" is already linked to this database.\", _\n                vbInformation\n            Resume basMessagingLink_Exit\n        Case Else\n            VBA.MsgBox VBA.Err & \": \" & VBA.Err.Description, _\n                vbCritical, \"basMessagingLink Error\"\n            Resume basMessagingLink_Exit\n    End Select\n\nEnd Sub",
    "ItemText": null,
    "CreateDate": "1999-09-09T16:02:14.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-09T16:02:14.0000000",
    "DocumentId": "-1374649060",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4833",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Joyce Franklin, CPA on Home Loans, etc.",
    "SortOrdinal": null,
    "ItemChar": "\"Points, also known as loan origination or loan discount fees, are paid up front when you purchase a home. Paying points reduces the interest rate on your loan. Each point is equivalent to one percent of the loan amount and each point paid usually reduces your interest rate by 1/8, or .125 of a percentage point. For example, if you pay two points at closing on a $100,000 loan ($2,000) at 7.5 percent, you could lower your interest rate from 7.5 percent to 7.25 percent. Points are tax deductible in the year you pay them.\"\n\n***\n\n“How large of a monthly mortgage payment can you afford? The guideline is that your household should spend a maximum of 28 percent of its gross monthly income (income before taxes) on monthly housing expenses. Your monthly income includes salary, bonus, dividends, and interest. Monthly housing expenses include mortgage principal and interest, real estate taxes, and homeowners insurance. \n\n\"A second guideline is that your monthly housing expenses plus other long-term debts (including educational loans, car loans, alimony and child support, and other loans) should not exceed 36 percent of your gross monthly income. These factors are flexible, so if you are currently paying more than 28 percent of your gross salary for rent, you may be able to qualify for a loan that would require you to pay more than 28 percent in monthly mortgage expenses. \n\n\"Some lenders offer special loan programs for lower and moderate-income buyers. In this program, you can qualify with monthly housing expenses of up to 33 percent and total debt of up to 38 percent.\"\n\n***\n\n\"The first question to ponder is how much you can afford to put down on the purchase of your home. The size of your down payment will have an inverse relationship to the amount of your loan---the larger the down payment, the smaller the loan (and the smaller your monthly payments will be). The minimum down payment you'll need to come up with is 5 percent of the purchase price of the home. \n\n\"Additionally, if you put down less than 20 percent, you are required to buy private mortgage insurance (PMI). This insurance protects your mortgage company lender in case you fail to make payments. The cost of PMI will be added to your monthly mortgage payments and to closing costs. Once you have paid down the loan to have 20 percent equity in your home, you can cancel the insurance policy. You won't need PMI if you can get a FHA loan or a VA loan. \n\n\"When mulling over how much you'll put down, remember to earmark funds for an emergency cash reserve and for upcoming expenses (for example, college education, moving expenses, and home-decorating costs). You'll also need cash for closing costs, including transfer and recording taxes, attorney fees, title insurance, and document preparation fees. \n\n\"You can ballpark closing costs by calling a real estate agent and asking what typical closing costs are for your area. The average closing costs run 3 percent to 6 percent of your mortgage loan amount.\"",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.4930000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.4930000",
    "DocumentId": "-1358509267",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4834",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Multiple ODBC Entries Are Required for One Server",
    "SortOrdinal": null,
    "ItemChar": "When you use one Access .MDB file to link to multiple remote (SQL Server) databases from the Database Window, you will need multiple ODBC entries for each database you want to link to.\n\nThis implies that, if you want to link to a table in database DB1 on MyServer and to another table in DB2 on MyServer, there should be two ODBC entries (e.g. MyServer_DB1 and MyServer_DB2). When you choose File > Get External Data Link Tables... Access will build a static Connection String for each Link created.",
    "ItemText": null,
    "CreateDate": "1999-07-31T09:02:41.0000000",
    "EndDate": null,
    "ModificationDate": "1999-07-31T09:02:41.0000000",
    "DocumentId": "-1342914425",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4835",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Notes on the Val() Function",
    "SortOrdinal": null,
    "ItemChar": "Use the Val() function if you are contemplating using LTrim$() and CDbl() on a string literal. You only want the leftmost characters from this string. You want to separate the numeric values from the non-numeric values from this string---and the numeric values are leftmost. And, most importantly, you want to convert this value to data type Double.\n\nWithout Val() you would have to use LTrim$() to find the leftmost numeric characters and then CDbl() to convert them. Please recall that CDbl() will return a Type Mismatch error in the following:\n\n    VBA.CDbl(\"123Text\")\n\nhowever,\n\n    VBA.Val(\"123Text\") = 123\n\nalso consider this a warning:\n\n    VBA.Val(\"1,234\") = 1",
    "ItemText": null,
    "CreateDate": "1999-05-18T20:02:41.0000000",
    "EndDate": null,
    "ModificationDate": "1999-05-18T20:02:41.0000000",
    "DocumentId": "-1331745693",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4836",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "THE SCOOP ON RICE",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nIf you're a rice lover, you'll be relieved to know that rice is \nnaturally low in fat. In fact, a cup of plain, steamed rice provides a mere 200 calories and less than two grams of fat. Unfortunately, most of us often prefer our rice dish with a little added flavor, which means added fat. \n\nAs you add butter, margarine, or vegetable oil to rice to cook or \nsaute it, that fat content can really begin to climb. Only one \nteaspoon of butter, margarine, or vegetable oil adds nine to 12 grams of extra fat and an additional 100 calories! Yes, one cup of tasty Chinese fried rice equates to about 370 calories and a whopping 12 grams of fat! \n\nTo still get a flavorful helping of tasty rice without a lot of the \nadded calories and fat, try these ideas: \n - Mix cooked rice with equal amounts of sauteed veggies, such as \ncarrots, onions, broccoli, or zucchini, cooked in olive oil. \n- Combine a serving of fried rice with a heaping amount of steamed \nvegetables.",
    "ItemText": null,
    "CreateDate": "2000-08-14T21:03:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-08-14T21:03:00.0000000",
    "DocumentId": "-1330737649",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4837",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 95: Selected Keyboard Commands; The 110-key Equivalents of the Windows 95 Keyboard",
    "SortOrdinal": null,
    "ItemChar": "Selected Keyboard Commands:\n\nShift-F10: Right-mouse-click selected item \nCtrl-Esc: Display Start menu \nAlt-[underlined letter]: Select menu command \nAlt-Esc: Switch to Taskbar's \"next\" open window \nAlt-Tab: Switch among open windows (hold Alt and continue to press Tab) \nAlt-F4: Close active window \nAlt-spacebar, N: Minimize active window \nAlt-spacebar, X: Maximize active window \nAlt-spacebar, R: Restore active window \nAlt-spacebar, C: Close active window \nCtrl-F10: Switch focus to menu commands (in any Explorer window) \nCtrl-Tab: Rotate through dialog box tabs \nCtrl-Shift-Tab: Rotate through dialog box tabs in reverse \nCtrl-Alt-Del: Display Close Program dialog box\nCtrl-Esc, Esc, Shift-F10: Right-mouse-click Start button \nCtrl-Esc, Esc, Tab, Tab: Shift focus to desktop icons \nCtrl-Esc, Esc, Tab, Shift-F10, M: Minimize open windows\n\n\nThe 110-key Equivalents of the Windows 95 Keyboard:\n\nShift-F10: Right-mouse-click selected item \nCtrl-Esc: Display Start menu \nAlt-[underlined letter]: Select menu command \nAlt-Esc: Switch to Taskbar's \"next\" open window \nAlt-Tab: Switch among open windows\nAlt-F4: Close active window \nAlt-spacebar, N: Minimize active window \nAlt-spacebar, X: Maximize active window \nAlt-spacebar, R: Restore active window \nAlt-spacebar, C: Close active window \nCtrl-F10: Switch focus to menu commands (in any Explorer window) \nCtrl-Tab: Rotate through dialog box tabs \nCtrl-Shift-Tab: Rotate through dialog box tabs in reverse \nCtrl-Alt-Del: Display Close Program dialog box",
    "ItemText": null,
    "CreateDate": "2003-07-31T14:46:24.0000000",
    "EndDate": null,
    "ModificationDate": "2003-07-31T14:46:24.0000000",
    "DocumentId": "-1259760088",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4838",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CSS: List Simple Selectors Before Class Selectors",
    "SortOrdinal": null,
    "ItemChar": "For the greatest effect in a browser's implementation of cascading order, list simple selectors before class selectors. The following CSS content illustrates this idea:\n\n    /* (c) 1998 Bryan Wilhite */\n    /* rasx@kintespace.com */\n\n    /* Simple Selectors */\n    BODY, P, TD { font-family: Verdana, Helvetica, sans-serif; }\n\n    /* CLASS-Tag Selectors */\n    .blockbottom { vertical-align: bottom }\n    .blockjustify { text-align: justify }\n    .blockright { text-align: right }\n    .blocktop { vertical-align: top }\n    .bold { font-weight: bold; }\n    .green {\n        color: #00FF00;\n        font-weight: bold;\n    }\n    .gunmetal {\n        background-color: #C0C0C0;\n        color: #000000;\n    }\n    .normal { font-weight: normal; }\n    .red {\n        color: #FF0000;\n        font-weight: bold;\n    }",
    "ItemText": null,
    "CreateDate": "1998-12-18T12:49:30.0000000",
    "EndDate": null,
    "ModificationDate": "1998-12-18T12:49:30.0000000",
    "DocumentId": "-1249898021",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4839",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MAGNESIUM",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nMagnesium is a mineral that your body cannot live without. Magnesium is important to your body because it plays a part in bone metabolism, helps transmit nerve impulses to muscles, helps transport calcium and potassium, and regulates blood pressure. But where do we get magnesium and how much magnesium do we need in our daily diet? \n\nMagnesium can be found in drinking water and in many foods, especially nuts, legumes, whole grains, and green vegetables. Magnesium is safe in the appropriate amounts, but when consumed excessively, magnesium intoxication can occur. Symptoms of magnesium intoxication include drowsiness, lethargy, sweating, and slurred speech.",
    "ItemText": null,
    "CreateDate": "2000-08-14T20:54:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-08-14T20:54:00.0000000",
    "DocumentId": "-1200242464",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4840",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ARE FRESH VEGETABLES BETTER THAN FROZEN OR CANNED?",
    "SortOrdinal": null,
    "ItemChar": "Fruits and vegetables that are frozen or canned might not be as attractive as their fresh counterparts, but when it comes to nutrition, they're far from second-rate. \n\nRedefining fresh: The amount of some sensitive nutrients present in \"fresh\" produce can drop by ten to 50 percent during the seven- to 14-day trek from the field to grocery store shelves. On the other hand, fruits and vegetables to be frozen or canned are processed within hours of harvest and can remain nutritionally stable for up to eight months after freezing and two years after canning. \n\nNutrition: Although some C and B vitamins are lost during canning, this process also has nutritional benefits. Heat used during canning increases the availability of lycopene, the anti-cancer phytonutrient found in tomatoes. Heat also softens the bones of fish such as salmon, which boosts the canned version's calcium content over that of fresh fish.",
    "ItemText": null,
    "CreateDate": "1999-09-07T22:37:34.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-07T22:37:34.0000000",
    "DocumentId": "-1193088250",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4841",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "DVD, A Definition",
    "SortOrdinal": null,
    "ItemChar": "The following is from the PC Webopaedia (http://webopedia.internet.com/TERM/D/DVD.html):\n\nShort for digital versatile disc or digital video disc, a new type of CD-ROM that holds a minimum of 4.7GB (gigabytes), enough for a full-length movie. Many experts believe that DVD disks, called DVD-ROMs, will eventually replace CD-ROMs, as well as VHS video cassettes and laser discs. \n\nThe DVD specification supports disks with capacities of from 4.7GB to 17GB and access rates of 600 KBps to 1.3 MBps. One of the best features of DVD drives is that they are backward-compatible with CD-ROMs. This means that DVD players can play old CD-ROMs, CD-I disks, and video CDs, as well as new DVD-ROMs. Newer DVD players, called second-generation or DVD-2 drives, can also read CD-R and CD-RW disks. \n\nDVD uses MPEG-2 to compress video data.",
    "ItemText": null,
    "CreateDate": "1999-08-29T20:59:07.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-29T20:59:07.0000000",
    "DocumentId": "-1182337614",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4842",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "THE MIRACULOUS SOYBEAN",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nSoybeans are an important food and nutritional source for Asians, but they are rarely consumed by Americans. Instead, Americans use soy primarily to feed livestock, despite its nutritional value. Soybeans contain 25 percent oil, 24 percent carbohydrates, and 50 percent protein. Soybeans are also rich in minerals, amino acids, and vitamins. Soy is usually safe for consumption by all, except for those allergic to it. It's known for having a cardiovascular benefit because it decreases LDL-cholesterol levels significantly. For soy recipes, visit the Indiana Soybean Board's Web site at \n\nhttp://www.soyfoods.com/recipes/index.html",
    "ItemText": null,
    "CreateDate": "2000-04-03T20:49:31.0000000",
    "EndDate": null,
    "ModificationDate": "2000-04-03T20:49:31.0000000",
    "DocumentId": "-1181876516",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4843",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "COM Ports and Interrupts",
    "SortOrdinal": null,
    "ItemChar": "There are three COM ports: COM1, COM2, COM3 and COM4. Two of these ports are physical (usually COM1 and COM2) and the other two are logical. Windows 95 deals with physical and logical ports much easier than Windows NT 4.0. NT tends to be closely tied to the hardware and thereby more closely tied to COM1 and COM2. For example, my default Windows NT installation only sees COM1 and COM2 in the Ports Control Panel Applet.\n\nUsually, COM1 shares interrupt 4 (IRQ4) with COM3; COM2 shares interrupt 3 (IRQ3) with COM4. Here is the summary of typical COM port addresses and interrupts:\n\n    COM1 03F8 - 03FF IRQ4\n    COM2 02F8 - 02FF IRQ3\n    COM3 03E8 - 03EF IRQ4\n    COM4 02E8 - 02EF IRQ3\n\nTIP: Assume that quality motherboards are \"smart\" enough to handle these port settings for you (whether PNP or not). Leave address settings to \"auto\" or \"default\" in the BIOS as much as possible. Don't try to fight the system. Especially one running NT 4.0!\n\nTIP: Here is a summary of typical or traditional interrupt assignments:\n\n    00 Timer \n    01 Keyboard \n    02 Cascade (for interrupts above 8) \n    03 COM2, COM4 \n    04 COM1, COM3 \n    05 LPT2 \n    06 Floppy Controller \n    07 LPT1 \n    08 Clock \n    09 Sometimes used for ISA in a PCI computer \n    12 PS2 Mouse Port \n    13 Math Coprocessor \n    14 IDE Controller \n\nNote that interrupts 10 and 11 are generally not used.",
    "ItemText": null,
    "CreateDate": "1998-11-28T17:31:50.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-28T17:31:50.0000000",
    "DocumentId": "-1132777349",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4844",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB PROBLEM: Cannot Get My Code to \"Wait\" on a Form When the Form is Designed to Be a Custom Dialog Box",
    "SortOrdinal": null,
    "ItemChar": "Suppose that the form frmDialog is meant to be a custom dialog that is called from code. The form takes values (like a user name and a password) and returns them to the calling procedure. The problem is the calling procedure does not \"wait\" for the values returned from the form.\n\nTo stop execution of code while the frmDialog is visible, open frmDialog modally with the form:\n\n    Call frmDialog.Show(Modal:=vbModal, _\n        OwnerForm:=frmMain)\n\nwhere frmMain is the Startup Object of the project. Now suppose that frmDialog has a Cancel button with the following Click Event:\n\n    Private Sub cmdCancel_Click()\n        CancelDialog = True\n        Me.Visible = False\n    End Sub\n\nwhere CancelDialog is a Public Boolean of the frmDialog. Once frmDialog.Visible = False, the calling procedure (basCallingSub()) stops waiting. The following lines of code has the form:\n\n    If frmDialog.CancelDialog Then\n        'User clicked Cancel.\n        Call VB.Unload(frmDialog)\n        Set frmDialog = Nothing\n        GoTo basCallingSub_Exit\n    Else\n        'Get values from frmDialog.\n        With frmDialog\n            strUserName = .txtUserName.Text\n            strPassword = .txtPassword.Text\n        End With\n        Call VB.Unload(frmDialog)\n        Set frmDialog = Nothing\n    End If\n\nwhere the Unload() Method of the VB Object removes the frmDialog UI from memory. Setting frmDialog = Nothing removes the frmDialog code from memory such that when it is called again, its variables wil be reinitialized.",
    "ItemText": null,
    "CreateDate": "1999-03-01T13:47:08.0000000",
    "EndDate": null,
    "ModificationDate": "1999-03-01T13:47:08.0000000",
    "DocumentId": "-1109101906",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4845",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "AMD K6-2 Processors Do Not Work with Windows 95",
    "SortOrdinal": null,
    "ItemChar": "I found out the hard way that AMD K6-2 processors do not work with Windows 95 (the OEM version of Windows 95 has a fix from Microsoft). This is not the fault of the hardware. For more information please see Microsoft Knowledge Base article Q192841 (\"Problems Using High Speed AMD K6-2/350 Central Processing Unit\").\n\nI was forced to upgrade to Windows 98.",
    "ItemText": null,
    "CreateDate": "2000-01-17T20:35:52.0000000",
    "EndDate": null,
    "ModificationDate": "2000-01-17T20:35:52.0000000",
    "DocumentId": "-1064618963",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4846",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Review of the Data Type Summary: Floating Point Numbers",
    "SortOrdinal": null,
    "ItemChar": "The online help for VBA has a topic called \"Data Type Summary.\" For those of us who are not computer scientists we should take note of the following with regard to floating point numbers:\n\nThe use of scientific notation in the help file topic to denote range implies that floating point values are stored as exponents.\n\nThe terms \"single precision\" and \"double precision\" refer to the numbers left of the decimal point that will not be rounded when VBA allocates memory between the exponent and the significant digits.\n\nBecause floating point numbers are stored as exponents, their \"precision\" affects large numbers as well as small numbers. Large numbers exceeding the precision can be inadvertently rounded. For example,\n\n    CSng(\"123,123,123\") = 1.231231E+08 = 123,123,100\n\nbecause the Single data type is accurate to seven significant digits. This means that values (without decimals) greater than or equal to 10 million will be rounded. Also we can see that\n\n    CDbl(\"123,123,123,123,123,123\") = 1.23123123123123E+17 = 123,123,123,123,123,000\n\nbecause the Double data type is accurate up to 15 significant digits. This implies that values (without decimals) greater than 999 trillion will be rounded.\n\nThe double precision may be safe to use for large numbers in \"real world\" applications but keep in mind the size of the number stored drops when decimal places in the original value need to be included. For example, suppose you want to store a value in a DAO database as type Currency. The Currency data type holds four decimal places. This implies that values greater than 99 billion will be rounded if CDbl() is used to prepare data for storage in the Currency field.\n\nIn the \"real world\" of, say, financial applications, 99 billion is not an unusually high number.",
    "ItemText": null,
    "CreateDate": "1998-06-12T23:03:15.0000000",
    "EndDate": null,
    "ModificationDate": "1998-06-12T23:03:15.0000000",
    "DocumentId": "-1062179649",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4847",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "InvestLogic Systems: Overview of the Buy-Side Enterprise",
    "SortOrdinal": null,
    "ItemChar": "The buy-side of the financial management business should be compared to banking. Where banking is more predictable and stable (which lends itself readily to turnkey software products), the IT enterprise of the buy-side business is experimental and individual. The buy-side of the enterprise is made up of fixed income and equity data.\n\nAs the fixed income data requires a great deal of mathematics, the equity portion of this enterprise is considered relatively \"easy\" to deal with as it requires extensive research more than lengthy calculation. There are exceptions to this assertion. For example, while prices for equities are set for an entire market, bond prices can come from multiple sources and is often placed in a hierarchy. Finding all of these prices surely is matter of research and not computation!\n\nThe buy-side enterprise database has three major entities: security, portfolio and position. The position entity is the many-to-many relationship between securities and portfolios. Many of the tables in this database are devoted to these three entities. Usually tables devoted to security attributes are in the majority.",
    "ItemText": null,
    "CreateDate": "1999-08-11T19:34:01.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-11T19:34:01.0000000",
    "DocumentId": "-1000786574",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4848",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "GETTING THE MOST OUT OF THE VITAMIN C-RICH FOODS YOU EAT",
    "SortOrdinal": null,
    "ItemChar": "Oxygen and heat easily destroy vitamin C. Because it is a water-soluble vitamin, it can also leach out into cooking liquids. \n\nFoods high in vitamin C include strawberries, citrus juices, red and green peppers, broccoli, kale, Brussels sprouts, and baked potatoes. \n\nTo get the most vitamin C from the foods you buy: \n\n* Eat foods rich in vitamin C raw. \n\n* Store vitamin C-rich fruits and vegetables in the refrigerator and cut just before using. \n\n* Cut food into large, rather than small, pieces to minimize exposure to oxygen. \n\n* Keep cooking times short and use a minimum amount of water in cooking. Steaming and stir-frying are good cooking methods to use. \n\n* Leave skins on potatoes and use some potato cooking water when preparing mashed potatoes. \n\n* Cook vitamin C-rich vegetables in casseroles.",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.4930000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.4930000",
    "DocumentId": "-973293277",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4849",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "HOW TO REPORT WHAT YOU'RE GLAD YOU DIDN'T EAT",
    "SortOrdinal": null,
    "ItemChar": "Although we all hope it never happens, it helps to know where to turn when it does---finding those \"things\" that just don't belong in your packaged food. Well, here are the numbers you'll need to know:  \n\nCall 1-800-535-4555, the U.S. Department of Agriculture Meat and Poultry Hotline, to report UFOs (unidentified or identified foreign objects) in meat, poultry, or egg-based foods. For the USDA to investigate a problem, you must be able to provide the original packaging or container, the foreign object, and any uneaten portion of the food.  \n\nCall the Food and Drug Administration to report problems with non-meat products (such as a sugar-coated bug in your cereal) or seafood. To find an FDA office near you, look under U.S. Government, Health and Human Services in your local phone directory. The Seafood Hotline is 1-800-332-4010.",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.5430000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.5430000",
    "DocumentId": "-949209287",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4850",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "NUTRITIONAL LABELING VERSUS NUTRITIONAL NEEDS",
    "SortOrdinal": null,
    "ItemChar": "Confused over how the percent daily value (%DV) on food and supplement labels relates to your nutritional needs? Here's some help. \n\nThe background: Nutritional needs are influenced by a variety of factors, including age, gender, and caloric intake, which means that charts of recommended dietary allowances (RDAs) are quite large and too complex for use on food labels. On the other hand, the daily values (DVs) are a single value for each nutrient. The DV for vitamins, minerals, and protein was generally set at the highest recommended level in place when nutrition labeling went into practice. \n\nThe DVs for food components, such as fat and fiber, which have general recommendations for health but no established RDAs, are based on a 2,000-calorie diet. So, for example, the recommendation that no more than 30 percent of total calories come from fat translates to about 65 grams of fat per day (30 percent of 2,000 calories divided by nine calories per gram of fat). \n\nHere are the \"nutrient numbers\" behind the %DV found on food labels: \n\n* Total fat (65 grams) \n* Saturated fat (20 grams) \n* Cholesterol (300 milligrams) \n* Fiber (25 grams) \n* Sodium (2.4 grams) \n* Protein (50 grams) \n* Vitamin A (5000 IU) \n* Vitamin C (60 milligrams) \n* Iron (18 milligrams) \n* Calcium (1000 milligrams)",
    "ItemText": null,
    "CreateDate": "1999-09-20T21:02:42.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-20T21:02:42.0000000",
    "DocumentId": "-907791026",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4851",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT: Making a Boot Floppy",
    "SortOrdinal": null,
    "ItemChar": "These are the files needed for a boot floppy:\n\nBoot.ini \nNtdetect.com \nBootsect.dos (for dual startup installations) \nNTLDR \nNtbootdd.sys (if it's in the root folder, copy it)",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:30:24.3030000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:30:24.3030000",
    "DocumentId": "-852844377",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4852",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MUSCLES--PART 4 OF 4: MUSCULAR ENDURANCE",
    "SortOrdinal": null,
    "ItemChar": "Muscular endurance is the ability of the muscles to perform a physical activity over a period of time without muscle fatigue. It involves the support of the circulatory and respiratory systems for the production of energy. Energy is needed by the contracting muscles to sustain the repetitions of the physical activity. The oxygen and nutrients for this energy are delivered by the respiratory and circulatory systems to the muscles. These systems also remove the toxic waste by-products from the muscle cells. \n\nUsing light weights and performing many repetitions of an exercise (low resistance, high repetitions) will increase muscular endurance. This form of exercise is often referred to as muscle toning or body sculpturing.",
    "ItemText": null,
    "CreateDate": "1999-09-20T21:04:30.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-20T21:04:30.0000000",
    "DocumentId": "-763268425",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4853",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT Registry: Making An X-Window-Like Mouse Pointer",
    "SortOrdinal": null,
    "ItemChar": "By editing the Registry, you can make an X-Window-like Mouse Pointer that will get the focus of any window under its \"pointing pixel.\" The following Registry Key must be Merged from a properly formatted *.REG file:\n\n    HKEY_CURRENT_USER\n        \\Control Panel\\Mouse            \"ActiveWindowTracking\"=\"1\"\n\nSecondly, you can \"snap\" your mouse pointer to the default button when a dialog appears. The following Registry Key must be Merged from a properly formatted *.REG file:\n\n    HKEY_CURRENT_USER\n        \\Control Panel\\Mouse            \"SnapToDefaultButton\"=\"1\"\n\nThe current user should log off and log on before these changes take effect. As of this writing, Microsoft has a complete discussion of this topic at:\n\n    http://msdn.microsoft.com/\n        library/periodic/period99/html/ewn9915.htm",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:28:21.8070000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:28:21.8070000",
    "DocumentId": "-710988297",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4854",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript: FORM Validation; the submit() Method of the form Object",
    "SortOrdinal": null,
    "ItemChar": "If you must validate a FORM before it is sent to the server, you will have to depend on the browser to faithfully execute the submit() method of the form object. Most Mozilla 3.x/4.x browsers support this method.\n\nFor example we can set up a function called \"jsSendForm()\" that takes a form object as an argument. So if the FORM element name is \"frmOne\" we can then call:\n\n    jsSendForm(window.document.frmOne)\n\nor, if frmOne is the only form in the document, we alternatively have:\n\n    jsSendForm(window.document.forms[0])\n\nor, if frmOne is being called from an event (usually the onClick event) in an element inside frmOne we have:\n\n    jsSendForm(this.form)\n\nwhere jsSendForm() looks like this:\n\n    function jsSendForm(vForm) {\n        vFrmValid\n        //Form validation code goes here.\n        //If validation fails, vFrmValid=False\n        if (vFrmValid) {\n            vForm.submit\n            window.document.close\n        }\n        else { \\\\Do something for invalid data. }\n    }\n\nOne technique is to call this function from the onClick event of the INPUT element. Instead of using an INPUT element of TYPE \"submit\" we can use the following:\n\n    <INPUT\n        TYPE=button\n        VALUE=\"Send\"\n        onCLick=\"jsSendForm(this.form)\">\n\nNOTE: Some browsers (namely some Netscape browsers) will ignore the submit() method of a form object where the FORM elements ACTION property contains \"mailto:\" protocol. This is done for security reasons.",
    "ItemText": null,
    "CreateDate": "1999-03-05T11:04:57.0000000",
    "EndDate": null,
    "ModificationDate": "1999-03-05T11:04:57.0000000",
    "DocumentId": "-701874391",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4855",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL: Values Stored in Sybase/Microsoft Sysobjects Table",
    "SortOrdinal": null,
    "ItemChar": "When browsing a Microsoft or Sybase SQL Server database, looking for system objects, use a query of form:\n\n    SELECT name FROM sysobjects\n    WHERE type = '<type>'\n\nwhere <type> can be one of the following:\n\nC - CHECK constraint \nD - Default or DEFAULT constraint\nF - FOREIGN KEY constraint \nK - PRIMARY KEY or UNIQUE constraint \nL  - Log\nP - Stored procedure\nR - Rule\nRF - Stored procedure for replication\nS - System table\nTR - Trigger\nU - User table\nV - View\nX - Extended stored procedure",
    "ItemText": null,
    "CreateDate": "1999-02-09T11:37:47.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-09T11:37:47.0000000",
    "DocumentId": "-621649463",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4856",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Adobe Photoshop: 3.0; Tutorial; Lesson 4; Notes",
    "SortOrdinal": null,
    "ItemChar": "Selected features introduced:\n(i) the Color Range command;\n(ii) linking layers for use with the Move tool;\n(iii) the Preserve Transparency option in the Fill command;\n(iv) the ability to Apply a Layer Mask before deleting it to save memory. \n\nProcedures:\n(i) the Defringe command does not detect contrasting colors on other layers (I suppose they must be merged first), this is probably why the tutorial has us erase areas of a layers composition that could be \"defringed\" (defringing can occur on a floating selection before it become a static layer);\n(ii) shadows can be made quickly by using a duplicate layer filled with black (transparency preserved), performing a Gaussian blur, using the move tool for shadow offset and dropping the opacity less than 100%.",
    "ItemText": null,
    "CreateDate": "1999-08-24T20:10:51.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-24T20:10:51.0000000",
    "DocumentId": "-596330534",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4857",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "GETTING VITAMIN C FROM FOODS, NOT PILLS",
    "SortOrdinal": null,
    "ItemChar": "Although there is current discussion to more than double the current 60 milligram recommendation for vitamin C to help protect against some diseases and degenerative effects of aging, you should turn to fruits and vegetables instead of supplements to bump up your intake.   \n\nMany fruits and vegetables are naturally rich in vitamin C, as well as other important vitamins, minerals, and fiber. So go natural--make consuming five servings of fruits and vegetables a daily commitment.  \n\nFoods naturally rich in vitamin C: \n\nStrawberries: 1 cup, sliced; 95 mg \nRed or green pepper, raw: 1/2 cup; 65 mg  \nPapaya: 1 cup, cubed; 85 mg \nRed or green pepper, cooked: 1/2 cup; 50 mg  \nKiwi: 1 medium; 75 mg \nBroccoli, cooked: 1/2 cup; 60 mg \nOrange: 1 medium; 70 mg \nKale, cooked: 1 cup; 55 mg \nCantaloupe: 1/4 medium; 60 mg \nBrussels sprouts, cooked: 1/2 cup; 50 mg \nOrange juice: 1/2 cup; 50 mg \nPotato, baked, with skin: 1 medium; 25 mg \nMango: 1 cup, sliced; 45 mg \nGrapefruit: 1/2 medium; 40 mg \nGrapefruit juice: 1/2 cup; 35 mg \n\nIn addition to easily providing between 100 to 200 milligrams of vitamin C, consuming five servings of fruits and vegetables each day provides other important and disease-fighting vitamins, minerals, and fiber. Studies have shown that people who consume diets providing 200 milligrams of vitamin C per day through fruits and vegetables have a lower incidence of some cancers, especially cancers of the oral cavity, esophagus, stomach, colon, and lung. However, people who simply consume vitamin C supplements do not appear to experience the same protective effect.",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.4830000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.4830000",
    "DocumentId": "-590504244",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4858",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "OLE Automation: Using Fully Qualified References for Libraries Considered \"Default\"",
    "SortOrdinal": null,
    "ItemChar": "I have decided to use fully qualified references to OLE Automation Libraries---even those considered \"default\" like the VB, VBA and Application objects. I do this because Microsoft says it does not hurt (it may improve performance slightly) and it allows me to take advantage of the \"Intelligent\" features of my IDEs. It is also an ongoing educational tool.\n\nSo in my Visual Basic 6.0 code, something like following will not be uncommon:\n\n    If VBA.VarType(StartCol) <> vbLong Then\n        VBA.Err.Raise 450\n    End If\n\nBy using fully qualified references, I can also see some of the \"mystery\" objects out there. For example, Debug is not a VBA object. And I thought for sure that the Open statement for file access was VBA method. But this does not seem to be the case.",
    "ItemText": null,
    "CreateDate": "1999-02-05T09:59:32.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-05T09:59:32.0000000",
    "DocumentId": "-589421703",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4859",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL: Notes on the Outer Join",
    "SortOrdinal": null,
    "ItemChar": "Borrowing heavily from the writings of Microsoft, please consider TableA and TableB with ColumnA and ColumnB respectively. Here are the two outer joins in a WHERE clause:\n\n    TableA.ColumnA *= TableB.ColumnB\n\nThis means, \"Show all values in ColumnA but only the values in ColumnB where they are equal to those in ColumnA.\"\n\n    TableA.ColumnA =* TableB.ColumnB\n\nThis means, \"Show all values in ColumnB but only the values in ColumnA where they are equal to those in ColumnB.\"\n\nAn Outer Join cannot be used in the same SQL statement with an Equijoin. The prescence of Null values in columns used in an outer join produces unexpected results.",
    "ItemText": null,
    "CreateDate": "1999-08-11T20:15:35.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-11T20:15:35.0000000",
    "DocumentId": "-556144079",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4860",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CSS: Netscape 4.x Browsers and CSS Level 1",
    "SortOrdinal": null,
    "ItemChar": "Netscape Navigator 4.x browsers implement Cascading Style Sheets Level 1 (CSS Level 1) based on an \"explicit simple selector relationship.\" This means that in the following HTML:\n\n    <BODY STYLE=\"font-family: Helvetica, sans-serif;\">\n     This text will appear in the specified BODY style.\n    <TABLE>\n    <TR>\n    <TD>\n        This text will not \"inherit\" the specified BODY style.\n    </TD>\n    </TR>\n    </TABLE>\n    This text is not \"explicitly\" associated with an HTML tag.\n\nThe text inside the TD tags will not inherit the style specified in the BODY tag. This lack of inheritance does not occur in Microsoft Internet Explorer 4.x browsers (3.x as well). The text following the closing TABLE tag \"implicitly\" is part of the BODY markup. In some Netscape 4.x browsers, I have noticed that such a line of text will not appear in the style specified in the BODY tag.\n\nIt was my previous custom to minimize the TR and TD (and P) tags, but, after extensive tests, I find that it is best to use both the opening and closing TR, TD and P tags with style sheets. Hopefully in future versions of the Netscape browsers all of this will be a thing of the past.\n\nAs of now, to use the style in TD that is used in BODY, it must be applied explicitly:\n\n    <BODY STYLE=\"font-family: Helvetica, sans-serif;\">\n     This text will appear in the specified BODY style.\n    <TABLE>\n    <TR>\n    <TD STYLE=\"font-family: Helvetica, sans-serif;\">\n        This text will not \"inherit\" the specified BODY style.\n    </TD>\n    </TR>\n    </TABLE>\n    <P>\n        This text is \"explicitly\" associated with the P tags.\n    </P>\n\nOf course, to actually use style sheets (instead of the inline styles used in this article) we can use the following:\n\n    BODY, P, TD { \"font-family: Helvetica, sans-serif;\" }\n\nwhere the simple selectors BODY, P and TD are grouped.\n\nOne of the worst problems in these Netscape browsers is its strict use of the line-height property. Netscape browsers use the line-height property as an absolute value---not as a minimum value. This means that, if you specify a line-height of 24px for text with a font-size of 17px, any in-line images \"taller\" than 24px will overlap on previous lines of text.",
    "ItemText": null,
    "CreateDate": "2000-12-19T21:50:20.7100000",
    "EndDate": null,
    "ModificationDate": "2000-12-19T21:50:20.7100000",
    "DocumentId": "-484742076",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4861",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ODBC SQL: The Syntax for Stored Procedure Execution",
    "SortOrdinal": null,
    "ItemChar": "{call get_cust_dates(1,19993)}",
    "ItemText": null,
    "CreateDate": "2000-02-02T00:26:05.0000000",
    "EndDate": null,
    "ModificationDate": "2000-02-02T00:26:05.0000000",
    "DocumentId": "-463206374",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4862",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: Replication Synchronization Increases Size of Database",
    "SortOrdinal": null,
    "ItemChar": "Microsoft does a great job warning users that Replication Design Masters will be significantly larger in size than MDB files not in a Replication set. What is not underscored (at runtime) is the fact that the Tools > Replication > Synchronize Now... command will cause all MDBs involved in synchronization to grow in size as well.\n\nCompating the database helps but does not reduce the size of the database file to the size it was before replication. Here is a real-world example: to synchronize a change in one record in a Replica set all MDBs grow over ~100KBs! Running the compact command after synchonization may shave up to ~50KB off this size increase. I can only assume that this growth in file size is due to data being written to the hidden tables created by Replication.",
    "ItemText": null,
    "CreateDate": "1998-11-30T17:24:13.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-30T17:24:13.0000000",
    "DocumentId": "-462494696",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4863",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Book: Access 97 Power Programming; Chapter 3 Highlights (1/3): \"Working with Application Collections And Data Access Objects\"",
    "SortOrdinal": null,
    "ItemChar": "Declaring a Collection Variable\n\nA user-defined collection is a new instance of a collection object. Its \"instancing\" requires the New keyword. The abbreviated way of declaring a new collection object has the form:\n\n    Dim <my collection object variable> as New Collection\n\ne.g.\n\n    Dim colExample as New Collection\n\nThis form is useful at procedure level in the code module. However the non-abbreviated way of delcaring any new object uses two statements instead of one. The first statement is in the declarations section of the module:\n\n    Public p_colExample as Collection\n\nThis object variable is now avaible for use and re-use throughout the application. At the procedure level, we can Set this variable equal to a New Collection:\n\n    Set p_colExample = New Collection\n\nAlthough this appears redundant, it is now possible to quickly destroy the contents of a collection with the code:\n\n   Set p_colExample = Nothing\n\nNow this collection object variable can be reused in other modules.\n\n\nIndex Numbers in Collections\n\nIntrinsic Access collections are 0-based while user-defined collection indices are 1-based.\n\n\nFor a detailed discussion of how collections differ from arrays, please see \"Creating Custom Collections\" (pg. 67) and \"Comparing Custom Collections to Arrays\" (pg. 70).\n\n\nThe Access Object Model\n\nThe Access Object Model is a containment hierarchy that begins with the Application object. Please see \"Accessing the Access Object Model\" (pg. 73). Here are some noted methods of the Application object:\n\nApplication. Echo\nApplication.GetOption\nApplication.SetOption\n\n\nThe Screen Object\n\nThe Screen object is of the Application object. Here are some noted properties of the Screen object:\n\nScreen. ActiveForm\nScreen.ActiveReport\nScreen.ActiveControl\nScreen.PreviousControl\n\nNote that there is no need to specify the Application keyword in code within Access.",
    "ItemText": null,
    "CreateDate": "1998-10-01T13:42:08.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-01T13:42:08.0000000",
    "DocumentId": "-443345831",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4864",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "HTML: Setting the Width of SELECT Widgets for both Netscape and Microsoft 4.x Browsers",
    "SortOrdinal": null,
    "ItemChar": "Netscape 4.x Browsers do not apply width values to SELECT tags via CSS. The proprietary WIDTH attribute must be used in the SELECT tag. Netscape 4.x and Microsoft 4.x browsers respond appropriately to the inline STYLE attribute shown below:\n\n    <SELECT\n        NAME=test\n        SIZE=1\n        STYLE=\"width: 250px;\"\n        WIDTH=250>\n\n    <OPTION VALUE=\"1\">This is 1</OPTION>\n    <OPTION VALUE=\"2\">This is two</OPTION>\n    <OPTION VALUE=\"3\">This is 3</OPTION>\n\n    </SELECT>",
    "ItemText": null,
    "CreateDate": "2000-12-31T10:16:54.2430000",
    "EndDate": null,
    "ModificationDate": "2000-12-31T10:16:54.2430000",
    "DocumentId": "-443158331",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4865",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "GOING FOR 400 HELPS WEIGHT LOSS STICK",
    "SortOrdinal": null,
    "ItemChar": "GOING FOR 400 HELPS WEIGHT LOSS STICK\n\nIndividuals who are most successful at long-term weight loss burn an average of 400 calories per day through exercise in addition to keeping their caloric intake in check, says the National Weight Control Registry (NWCR). \n\nAccording to the scientists who maintain the registry, walking is the most popular form of exercise among the more than 2,000 successful \"losers\" being tracked. Since most individuals burn about 100 calories per mile walked, these folks are hoofing it about four miles per day. \n\nThe former heavyweights being tracked by the NWCR are no dieting lightweights. To qualify for the registry, individuals must have lost a minimum of 30 pounds and kept it off for at least a year. But according to the registry researchers, the average \"loser\" on the registry has shed 60 pounds and kept it off for five years. \n\nSo, no more excuses that you don't have time for the gym. Slap on those shoes and start walking!",
    "ItemText": null,
    "CreateDate": "1999-10-14T22:57:42.0000000",
    "EndDate": null,
    "ModificationDate": "1999-10-14T22:57:42.0000000",
    "DocumentId": "-413585561",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4866",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "DON'T GET RUSTY ON IRON NEEDS",
    "SortOrdinal": null,
    "ItemChar": "Although too much iron, like too much of many nutrients, can cause problems, too little can leave you with that run-down feeling. \n\nIron is part of hemoglobin, a compound found in red blood cells that transports oxygen from your lungs to your body's cells. The current dietary iron recommendations are 15 milligrams per day for women of childbearing age and ten milligrams per day for everyone else. Women, rapidly growing children, and vegetarians are at greatest risk for iron-deficiency anemia. \n\nAlthough your body absorbs iron better from animal sources, eating iron-rich vegetables with a bit of animal protein or with a food rich in vitamin C aids plant-based iron absorption. On the other hand, calcium, coffee, and tea inhibit iron absorption. \n\nLow-fat animal protein iron sources include: \n\n* 3 oz. lean beef--2 1/2 milligrams \n* 1 dz. large shrimp--2 to 3 milligrams \n* 3 oz. light poultry--1 milligram \n* 3 oz. dark meat--3 milligrams \n* eggs--1 milligram per yolk  \n\nGood plant sources include: \n\n*1/2 cup raw tofu--7 milligrams \n*1 T. blackstrap molasses--3 milligrams \n*1/2 cup lentils--3 milligrams \n*1/2 cup prune juice--1 1/2 milligrams \n*10 dried apricot halves--1 1/2 milligrams \n*1 cup tomato juice--1 milligram",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.5030000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.5030000",
    "DocumentId": "-368103920",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4867",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Email Blurb: Acceptance Letter (HTML)",
    "SortOrdinal": null,
    "ItemChar": "Thanks:\n\nThank you for your submission to the kinte space! We would like to present your work on our WWW site. The form of the presentation will be an HTML page \"type set\" with Cascading Style Sheets. This is the most versitile way of publishing your work on the World Wide Web.\n\n\nRights:\n\nYou have the right to duplicate the www.kintespace.com page(s) marked with your copyright. Duplication includes printing hard copies. You do not have the right to change its contents or sell it without written permission from Bryan Wilhite.\n\n\nPublication Date:\n\nYou will be notified along with other Haley's Comet recipients when your presentation is ready for publication. Choose a time scale like that of traditional publishing when you judge how far away your publication date is.\n\n\nAdditional Material:\n\nWe strongly suggest that you provide us with a bio or background prose about your submitted work. Please provide any published books or audio CDs that you found inspiring. If you are a published writer (meaning you have bound material with an ISBN number assigned to it) please let us know!\n\n\nSelf-Promotion:\n\nIf you are in the healthy habit of self-promotion (remember it's not bragging if you can back it up), please mention where some of your online work is---especially your work published in the kinte space!\n\n\nThanks again!",
    "ItemText": null,
    "CreateDate": "2002-05-23T10:09:04.2300000",
    "EndDate": null,
    "ModificationDate": "2002-05-23T10:09:04.2300000",
    "DocumentId": "-255839861",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4868",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Access to VB: Enums",
    "SortOrdinal": null,
    "ItemChar": "Enumerated constants are not supported in Access 97. These were introduced in Visual Basic 5.0.",
    "ItemText": null,
    "CreateDate": "2004-05-18T21:38:57.9270000",
    "EndDate": null,
    "ModificationDate": "2004-05-18T21:38:57.9270000",
    "DocumentId": "-253764156",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4869",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: Linked Table from Remote Database Can't Show Records; Rows with \"#Error\" Shown",
    "SortOrdinal": null,
    "ItemChar": "When an Access .MDB is linked to a table from a remote database (e.g. SQL MS Server) that is known to be valid (not dropped or locked) and the rows in the table are full of \"#Error\" strings then try to SELECT * from the table via an Access Pass-Through Query. If you get an error like \"Record too large\" then the table you are linking to has columns that exceed the 2K limit reserved for the \"data page.\"\n\nTo avoid this problem, delete the linked table and use a Pass-Through Query that shows the only fields you need. For more information, as of this writing, Microsoft touches upon this issue in their Knowledge Base article \"DOC: Additional Jet Database Record Size Information\" (Q198660):\n\n    http://support.microsoft.com\n        /support/kb/articles/Q198/6/60.ASP",
    "ItemText": null,
    "CreateDate": "1999-09-07T22:06:05.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-07T22:06:05.0000000",
    "DocumentId": "-199004323",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4870",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: Other X-Windows \"Filcker\" When Focus Changes to Netscape Navigator Session",
    "SortOrdinal": null,
    "ItemChar": "Netscape Navigator cannot share the default colormap with other X applications as it uses so many colors. This problem shows up when running Navigator and other windowing applications at the same time: when shifting focus from one window to another the window losing focus may flash and lose its color (change to black and white). By using the netscape -install option you can force Navigator to use its own color map. (This may cause more problems so keep in mind the -no-install command line option as well!)\n\nFor a complete list of Navigator command-line options refer to the following URL:\n\nhttp://help.netscape.com/kb/client/960514-75.html",
    "ItemText": null,
    "CreateDate": "1998-10-09T09:20:50.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-09T09:20:50.0000000",
    "DocumentId": "-197838901",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4871",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PERSONAL SELF-CONTROL",
    "SortOrdinal": null,
    "ItemChar": "People who are successful in their exercise programs are generally highly committed to their programs. They have developed a psychological hardiness that helps them to meet challenges that might have pushed other people to the sidelines. One of the keys to this type of self-motivation is the concept of internal locus of control.\n \nPeople with an internal locus of control believe the rewards of life are the results of their own actions, not some external force beyond their control. Because of this belief, they become passionate about obtaining their fitness goals. They seek out challenges and see change as opportunity, not as a threat. They take credit for their successes. \n\nAchieving our fitness goals requires us to become self-directed individuals. We must individualize our fitness program to meet our needs and abilities. We must choose to be in charge of our fitness and not a victim of our own whims. We cannot see fitness as a matter of luck or chance but as a result of our own actions. The process of self-motivation begins and continues with each exercise session. We are our own number-one fans.",
    "ItemText": null,
    "CreateDate": "1999-10-14T22:50:20.0000000",
    "EndDate": null,
    "ModificationDate": "1999-10-14T22:50:20.0000000",
    "DocumentId": "-181541205",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4872",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: A Seconds Delay with DoEvents; basDelaySec()",
    "SortOrdinal": null,
    "ItemChar": "Public Sub basDelaySec(ByVal Seconds As Long)\n\n    Dim dtmDate as Date\n\n    dtmDate = DateAdd(\"s\", Seconds, Now)\n    \n    Do\n        DoEvents\n    Loop Until Now > dtmDate\n\nEnd Sub",
    "ItemText": null,
    "CreateDate": "1998-10-29T12:39:10.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-29T12:39:10.0000000",
    "DocumentId": "-165293778",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4873",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual InterDev and Seagate Crystal Reports: Notes on Data Definition Files and the Convert Database Driver... Command",
    "SortOrdinal": null,
    "ItemChar": "Crystal Web Reporting services have proven themselves to be somewhat \"ok\" in my Visual InterDev Solutions. My design uses an MTS package that provides data services to pass recordsets to Crystal Report objects. These objects are passed via very expensive (but required) Session-level object variables to the Viewer. (I am using Crystal's Java viewer by the way: it runs very slow on Netscape 4.x but \"mysteriously\" fast in IE 4.x.)\n\nThe Crystal *.RPT files must be prepared for this kind of service. These *.RPT files are made \"server independent\" with the use of Data Definition Files (.TTX files). Since I am working in a team environment on machines with different versions of Crystal Reports, I built a tool called the Crystal DDF Utility that can make .TTX files without running the Designer application. All this utility needs is database logon information a .TTX file to write to and SQL to generate a Recordset. You can find this utility in a self-extracting .CAB file at:\n\nhttp://www.kintespace.com/kb/util/CrystDDF/CrystDDF.EXE\n\nAfter the .TTX file is created, we need to prepare the .RPT file. Here is a summary of the steps involved:\n\n* Make sure File > Save Data with Report is disabled.\n\n* Verify that there are no database server references under Location in the Set Location dialog (Database > Set Location...).\n\n* Select Database > Convert Database Driver...\n\n* Select Convert Database Driver on next Refresh.\n\n* Select To: > pdsmon.dll [ADO, RDO, DAO]\n\n* When the Select Data Source dialog appears, select Data Definition.\n\n* Enter the .TTX file you created.\n\n* Answer yes to \"Fix Up\" the report.\n\n* Save and Close.\n\nWARNING: There is a bug involved with the Select Data Source dialog. It seems to only run once per 32-bit designer session. You may have to close and open the Designer application several times to prepare several reports.",
    "ItemText": null,
    "CreateDate": "1999-04-22T20:48:30.0000000",
    "EndDate": null,
    "ModificationDate": "1999-04-22T20:48:30.0000000",
    "DocumentId": "-93314486",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4874",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "\"OUT OF BREATH\"",
    "SortOrdinal": null,
    "ItemChar": "The feeling of being \"out of breath\" is not due to a lack of oxygen but to the inability of the heart to pump enough blood to the muscle cells. The cells of the body need more oxygen during vigorous exercise. The result is an increase of waste products from the cells.\n \nThe circulatory system works harder to increase the blood flow to the cells and to remove the level of carbon dioxide and lactic acid in the body. The heart responds by pumping faster and increasing its stroke volume--that is, its volume for each beat. \n\nIn some people, the heart is unable to pump the large amounts of blood necessary to keep the muscle cells working during exercise. The stroke volume is insufficient. Waste products begin to build up in the muscle tissues, and the lack of oxygen causes the muscles to become fatigued. \n\nThe feeling of being \"out of breath\" is the result.",
    "ItemText": null,
    "CreateDate": "1999-10-14T22:53:55.0000000",
    "EndDate": null,
    "ModificationDate": "1999-10-14T22:53:55.0000000",
    "DocumentId": "-66225967",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4875",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "BENEFITS OF TEA TREE OIL",
    "SortOrdinal": null,
    "ItemChar": "By Brigitte Mars, for healthshop.com  \n\nTea tree oil's antibacterial properties have been documented by researchers since the 1920s. It was a standard ingredient in Australian first aid kits until World War II. At home, tea tree oil can be applied to disinfect cuts, pimples, and fungal infections. \n\nGargling with two drops in a glass of warm water improves sore throats and a few drops rubbed on the chest or back helps relieve nasal congestion. It is one of the few essential oils that can be applied directly to the skin without dilution.",
    "ItemText": null,
    "CreateDate": "1999-08-26T21:19:52.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-26T21:19:52.0000000",
    "DocumentId": "-39093093",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4876",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "YOUR CHILD'S NUTRITION",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n\nParents have many opinions on how and what to feed their children, most of which stem from how they were raised. In fact, most parents believe that they must control their children's eating habits. It's up to them to decide what foods to buy and even how these foods are prepared and served. However, research suggests that children are naturally able to regulate how they eat, without intervention from adults. How? \n\nFirst, research suggests that children whose parents are less controlling of how much they eat are better able to control their own weight. When you tell your children how much to eat, you are telling them to ignore their own body signals, such as a growling belly. Teach your children to listen to their bodies and eat as much or as little as necessary to be satisfied. \n\nSecond, it has been proven that children are more likely to try new foods when they exist in an environment that is free of pressure from their parents. As a result, they will learn to like new foods more easily. \n\nSo, parents, take note. Trust your children to know how much to eat and give them the opportunity to learn to like new foods without pressuring them.",
    "ItemText": null,
    "CreateDate": "2000-01-17T00:12:16.0000000",
    "EndDate": null,
    "ModificationDate": "2000-01-17T00:12:16.0000000",
    "DocumentId": "-35660759",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4877",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "POTENT ZINC NEEDED IN SMALL AMOUNTS",
    "SortOrdinal": null,
    "ItemChar": "Our bodies contain almost as much zinc as it does iron. Yet, few of us give this mineral, usually associated with galvanized tubs and pipes, much of a thought. But, maybe we should. \n\nZinc is concentrated in the eye, kidney, brain, liver, muscle, and male reproductive organs, where it works as an essential activator\" for many enzymes. A shortfall of zinc can cause a weakening of the immune system, slow wound healing, impaired eyesight, and a loss of the sense of smell and taste, which can affect appetite. A deficiency during childhood can impair growth, while during pregnancy, a shortfall can cause birth defects. \n\nFortunately, the amount of zinc needed to prevent health problems is small. Zinc is found in many common foods, such as meat, dried beans, nuts, eggs, and milk. Because this mineral is so important, when our dietary intake does slip a bit, our bodies can compensate by absorbing more of it from our food. \n\nAlthough we need very little zinc in our diets, some folks do have trouble getting enough zinc. Strict vegetarians and those who limit the amount of animal products they consume need to be zinc-aware. Meat-averse pregnant and nursing women need to be faithful in taking their prenatal vitamin and mineral supplements, which contain extra zinc. Pregnancy increases a woman's zinc needs by 25 percent, and nursing increases it by more than 50 percent.",
    "ItemText": null,
    "CreateDate": "1999-10-26T08:36:05.0000000",
    "EndDate": null,
    "ModificationDate": "1999-10-26T08:36:05.0000000",
    "DocumentId": "-28021313",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4878",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Recording: Microphones \"Buyer's Guide\"; the Purpose of Headphones",
    "SortOrdinal": null,
    "ItemChar": "Videomaker Magazine 7/95 p.60: an entry-level mic is dynamic and unidirectional. Rec brands: Azden DX-431 ($30); Audio-Technica ATR30 ($60).\n\nThe Shure SM-57 is a durable and versatile microphone. The Shure SM-58 is another inexpensive choice for recording vocals.\n\nThe quality of headphones is not really an issue if the are meant as a \"reference monitor\" for the vocalist. Any decent pair of headphones will do this job.\n\nsamash.com: AKG C1000S Microphone. Excellent vocal microphone works perfect even from a greater distance, e.g. for picking up choirs and so on. Outstanding performance when used for instruments. Ideal for home recording applications. A special converter (PPC 1000) turns the microphone characteristics from cardioid into hypercardioid, if it is mounted on the mic top. The new PB 1000 Presence Boost Adapter provides an additional 5-dB high-frequency peak in the cardioid mode adding brilliance in the 5 to 9 kHz range.",
    "ItemText": null,
    "CreateDate": "2000-03-07T20:38:16.0000000",
    "EndDate": null,
    "ModificationDate": "2000-03-07T20:38:16.0000000",
    "DocumentId": "-24999984",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4879",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Caligari trueSpace: Boolean Operations with Primitive Objects of Equal Longitude",
    "SortOrdinal": null,
    "ItemChar": "To make the most seamless boolean union possible, the objects should be aligned and of equal longitude such that vertices \"touch.\" In the simple case of an aligned sphere and cylinder of the same longitude, the vertical lines of the cylinder will appear tangential to the sphere longitude lines when the are both placed at the origin via the Primitives panel. Using snap to grid helps facilitate alignment.",
    "ItemText": null,
    "CreateDate": "1999-08-24T19:27:30.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-24T19:27:30.0000000",
    "DocumentId": "-24999983",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4880",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Caligari trueSpace: Mapped vs. Ray Traced Shadows",
    "SortOrdinal": null,
    "ItemChar": "Hesitate to use ray traced shadows as this may slow down rendering and produce shadows that are too \"perfect looking.\" Try mapped shadows and do not make shadow casting objects too large with respect to the grid extents as mapped shadows tend to break into large pixel blocks under large objects. ",
    "ItemText": null,
    "CreateDate": "1999-08-24T19:27:43.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-24T19:27:43.0000000",
    "DocumentId": "-24999982",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4881",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 3.1: CD Audio; MCI Drivers",
    "SortOrdinal": null,
    "ItemChar": "If no CD-ROM drive is detected in Windows 3.1, check to see if the setting is changed to \"0,\" in MPLAYER.INI. If the setting has changed, then set it to \"17.\" This setting can change when the operating system checks for a CD-ROM drive during a WinSetup driver installation or when the SYSTEM.INI is updated.",
    "ItemText": null,
    "CreateDate": "1999-02-10T08:46:51.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-10T08:46:51.0000000",
    "DocumentId": "-24999981",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4882",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Creative Labs AWE32: Vienna 2.0; Avoiding Multiple Samples And Names in SF2 Files.",
    "SortOrdinal": null,
    "ItemChar": "When the user mistakenly gives the same names to User Samples, Instruments and Presets, Vienna 2.0 may \"keep the names unique\" by adding 1, 2, 3, etc. after each multiple name. Vienna will also duplicate the samples (adding 1, 2, 3, etc. after each duplicate) increasing the file size of the bank unnecessarily.\n\nTo avoid this and other errors (which may occur when trying to load the bank in the AWE32 Control Panel), use prefixes for each hierarchy. So for a user sample called BASSDRUM, use SMPL_BASSDRUM for the Sample, INST_BASSDRUM for the Instrument and BASSDRUM for the Preset. The Preset name appears in the AWE32 Control Panel.",
    "ItemText": null,
    "CreateDate": "1999-02-10T08:29:56.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-10T08:29:56.0000000",
    "DocumentId": "-24999980",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4883",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Creative Labs AWE32: Vienna 2.0; Making Mono Samples Stereo",
    "SortOrdinal": null,
    "ItemChar": "Vienna 2.0 supports stereo sound samples by using the mono 16-bit CD quality samples required in previous versions. When a stereo sound file is imported, it is split into its left and right channels in two separate files. A stereo effect can be achieved by using more than one zone under an Instrument. Each zone can be panned and delayed to make some interesting stereo effects.",
    "ItemText": null,
    "CreateDate": "1999-02-10T08:30:03.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-10T08:30:03.0000000",
    "DocumentId": "-24999979",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4884",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Creative Labs AWE32: Voyetra MIDI Orchestrator Plus; Using AWE Control Panel Effects in a Score; Vienna Sound Fonts, Level 2",
    "SortOrdinal": null,
    "ItemChar": "Since AWE Control Panel Effects (like Room 3 and Plate) are global effects they are not useful when you only want one or two tracks to have Panning Delay. A solution would be to record that particular instrument with the Control Panel effect (using a WAV file recorder) and then load it in a SF2 sound bank. Level 2 Sound Fonts support stereo samples. ",
    "ItemText": null,
    "CreateDate": "1999-02-10T08:29:25.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-10T08:29:25.0000000",
    "DocumentId": "-24999978",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4885",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "HTML: America Online; Page Hit (CGI) Counter",
    "SortOrdinal": null,
    "ItemChar": "Each screen name hierarchy can maintain a single counter, which will display on your web page as an 8-digit odometer. The hypertext markup\n\n<IMG SRC=\"/cgi-bin/counter?screenname\">\n\nwhere screenname is the AOL screen name of the owner of this page.",
    "ItemText": null,
    "CreateDate": "1999-03-14T21:01:16.0000000",
    "EndDate": null,
    "ModificationDate": "1999-03-14T21:01:16.0000000",
    "DocumentId": "-24999975",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4886",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Date: 1/7/95 10:57 PM; AOL Prescence Recorded",
    "SortOrdinal": null,
    "ItemChar": "I've been narrowcasting since on or about 12/17. I have 10 downloads so far. I think that is pretty good in view of the Mac-dominated AOL Writers Club. I've secured the self-proclaimed megalomaniac Roland X for a future show.",
    "ItemText": null,
    "CreateDate": "2001-10-28T16:44:51.9000000",
    "EndDate": null,
    "ModificationDate": "2001-10-28T16:44:51.9000000",
    "DocumentId": "-24999974",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4887",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Browsers Not Supporting HTTP Downloads; Netscape, Internet Explorer 2.x",
    "SortOrdinal": null,
    "ItemChar": "Netscape and Microsoft Internet Explorer 2.x do not support HTTP downloads. This probably applies to AOL 2.x for both Mac and PC. The symptoms of this is when a URL pointing to a binary file in an HTTP serviced directory jumps to a new page and starts loading ASCII garbage instead of proceeding to a file transfer dialog. ",
    "ItemText": null,
    "CreateDate": "1998-06-09T13:29:36.0000000",
    "EndDate": null,
    "ModificationDate": "1998-06-09T13:29:36.0000000",
    "DocumentId": "-24999973",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4888",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Netcom Shell; SMTP; MAPI Client Cannot Transfer Mail",
    "SortOrdinal": null,
    "ItemChar": "At times transferring mail from the Netcom Shell to a MAPI client like Outlook Express mail fail due to an SMTP server failure on Netcom. By changing the server specification from netcom2.nectom.com through netcom22.netcom may solve this problem.",
    "ItemText": null,
    "CreateDate": "1998-06-09T13:46:18.0000000",
    "EndDate": null,
    "ModificationDate": "1998-06-09T13:46:18.0000000",
    "DocumentId": "-24999967",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4889",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Date: 12/07/94 5:53 PM; On-line?",
    "SortOrdinal": null,
    "ItemChar": "I am waiting for AOL to approve my submission. It has strong language (just as strong as Caffeine's e-zine) but my language might not be as PC as Caffeine's grunge language.",
    "ItemText": null,
    "CreateDate": "2001-10-28T16:44:39.3930000",
    "EndDate": null,
    "ModificationDate": "2001-10-28T16:44:39.3930000",
    "DocumentId": "-24999965",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4890",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Netcom Shell: Setting up a PPP Session on a Power Macintosh; System 7.x",
    "SortOrdinal": null,
    "ItemChar": "1. Install Open Transport (OT 1.1.2). You may want to turn off virus detection during installation.\n\n2. Install Open Transport PPP (1.0)\n\n3. Run Control Panel TCP/IP with the following settings: Connect Via = PPP; Configure = Manually; IP Address/ Name Server Domains = 199.182.120.203\n\n4. Run Control Panel PPP: enter name and password; Number = 9,1-310-815-4000; Options... Protocol = Connect to a command-line host = Use terminal window.\n\n5. Run modem control panel and choose modem.",
    "ItemText": null,
    "CreateDate": "1998-08-18T21:08:28.0000000",
    "EndDate": null,
    "ModificationDate": "1998-08-18T21:08:28.0000000",
    "DocumentId": "-24999964",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4891",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Netcom Shell; Viewing the FTP Directory",
    "SortOrdinal": null,
    "ItemChar": "The command\n\nls -al /ftp/pub/ra/rasx\n\ndisplays a listing of the files in my ftp directory.",
    "ItemText": null,
    "CreateDate": "1998-06-09T13:48:38.0000000",
    "EndDate": null,
    "ModificationDate": "1998-06-09T13:48:38.0000000",
    "DocumentId": "-24999962",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4892",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Netcom Shell; Egrep; Reading FTP Transfer Logs",
    "SortOrdinal": null,
    "ItemChar": "The command \n\negrep 'rasx' /ftp/logs/xferlog\n\nsearches the huge xferlog files for hits to the ftp directory. It is referenced by an alias in my .cshrc file.",
    "ItemText": null,
    "CreateDate": "1998-06-09T13:42:47.0000000",
    "EndDate": null,
    "ModificationDate": "1998-06-09T13:42:47.0000000",
    "DocumentId": "-24999961",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4893",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Netcom Shell; Custom 'Modemload' Command; Eudora; News",
    "SortOrdinal": null,
    "ItemChar": "My 'modemload' alias is really 'rup localhost' which checks the level resources used for dial-in users. If the values get around 10 then mail and news might not be accessible via ppp (SLiRP clients). ",
    "ItemText": null,
    "CreateDate": "1998-05-22T10:25:41.0000000",
    "EndDate": null,
    "ModificationDate": "1998-05-22T10:25:41.0000000",
    "DocumentId": "-24999958",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4894",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Netcom Shell; Inserting a Text File Into a Pine Message",
    "SortOrdinal": null,
    "ItemChar": "Trying to cut and paste text into pine causes Netcom's server to suspend the connection and even send e-mail with accusations of multiple logins! To avoid this, paste text into a pico editing session and save a file. Then run pine and type Ctrl-R to read in this file. This pico session technique is especially useful for the .addressbook file. ",
    "ItemText": null,
    "CreateDate": "1998-06-09T13:47:19.0000000",
    "EndDate": null,
    "ModificationDate": "1998-06-09T13:47:19.0000000",
    "DocumentId": "-24999955",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4895",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Uploading Macintosh .HQX Files From An IBM Compatible PC",
    "SortOrdinal": null,
    "ItemChar": "To upload HQX files from a PC use binary file transfer as Macinotsh text is different from PC text. (HQX files are text encoded.) ",
    "ItemText": null,
    "CreateDate": "1998-06-09T13:41:50.0000000",
    "EndDate": null,
    "ModificationDate": "1998-06-09T13:41:50.0000000",
    "DocumentId": "-24999954",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4896",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Iomega; Zip Drive; Windows 95 Plug And Play Procedure for Turning on And Off",
    "SortOrdinal": null,
    "ItemChar": "Since the Zip's AC adapter gets hot if left on (and the drive is not needed all the time) it should be turned off.\n\nThe straight-forward method involves turning the drive off, and rebooting Windows 95. Because the drive is turned off, Windows 95 fails to detect the drive and disables the driver with a \"device not functioning properly\" message in the Device Manager. Unfortunately, turning the drive on after Win95 has deemed the driver function invalid generates more errors and the Zip will not function.\n\nTo turn the Zip drive off (and on) without errors, the driver must be disabled in the Device Manager by unchecking the Original Configuration box under Device Usage in the Properties... section of the Device Manager while the Zip is powered on. After Windows 95 disables the driver the Zip drive can be powered off.\n\nTo activate the driver and the drive, turn the Zip on, put in a disk and check the Original Configuration box in the Device Manager.",
    "ItemText": null,
    "CreateDate": "1998-11-28T17:09:34.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-28T17:09:34.0000000",
    "DocumentId": "-24999953",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4897",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Money: Balancing",
    "SortOrdinal": null,
    "ItemChar": "Money GW Account Balance = Actual Balance - Money Pseudo Savings Balance; the actual balance is reduced by the pseudo account; plain and simple. ",
    "ItemText": null,
    "CreateDate": "1999-08-24T19:30:49.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-24T19:30:49.0000000",
    "DocumentId": "-24999930",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4898",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Money: Getting a Credit Report",
    "SortOrdinal": null,
    "ItemChar": "TRW Inc.\nP.O. Box 749029\nDallas, Texas 75374\n\nTransUnion Corp.\n25249 Country Club Blvd.\nP.O. Box 7000\nNorth Oimstead, Ohio 4470\n\nEquifax Inc. Information Service Center\nP.O. Box 740241\nAtlanta, GA 30374",
    "ItemText": null,
    "CreateDate": "1999-08-24T19:31:01.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-24T19:31:01.0000000",
    "DocumentId": "-24999929",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4899",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Auto32ld; Adding Custom Controls by Default",
    "SortOrdinal": null,
    "ItemChar": "Use the Auto32ld Visual Basic Project file in the VB4 application directory to load custom controls by default that are usually loaded per project via the Custom Controls dialog box. In fact you may need to manually add the controls then view the corresponding project file in a text editor to see what the \"Object=\" entry is. Cut and paste this entry into Auto32ld. ",
    "ItemText": null,
    "CreateDate": "1998-02-10T15:48:42.0000000",
    "EndDate": null,
    "ModificationDate": "1998-02-10T15:48:42.0000000",
    "DocumentId": "-24999927",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4900",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "OLE Server; \"Object Server Not Correctly Registered\" Message",
    "SortOrdinal": null,
    "ItemChar": "The \"Object server not correctly registered\" message appears after Tools > Custom Controls... is selected when one of the .OCX files in the Windows\\System directory corresponding to the control listed in the Custom Controls dialog is not present. To stop the message from appearing delete the \"appropriate\" registry entry. Of course deleting a CLSID key is risky so be careful! A relatively safer option is to run Microsoft Regclean. It is in the \\Tools\\Pss directory of the VB4 Standard Edition CD-ROM. Make sure to restart the system immediately after using it.",
    "ItemText": null,
    "CreateDate": "1998-02-10T15:48:42.0000000",
    "EndDate": null,
    "ModificationDate": "1998-02-10T15:48:42.0000000",
    "DocumentId": "-24999926",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4901",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 95: Apple QuickTime Legacy Issues; Install Both the 16- And 32-bit Version",
    "SortOrdinal": null,
    "ItemChar": "Certain CD-ROM Multimedia applications built before Windows 95 will not recognize the 32-bit version of QuickTime. To remedy this a separate 16 bit version must be installed. ",
    "ItemText": null,
    "CreateDate": "2003-07-31T14:45:52.0000000",
    "EndDate": null,
    "ModificationDate": "2003-07-31T14:45:52.0000000",
    "DocumentId": "-24999921",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4902",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 95; Lucasarts X-Wing Collectors CD-ROM; EMM386 Considerations",
    "SortOrdinal": null,
    "ItemChar": "The following line in CONFIG.SYS allows X-Wing to run properly: \n\ndevice=c:\\windows\\emm386.exe 4096 RAM D=256\n\nThe NOEMS parameter prevents X-Wing from running properly. (Any alternative EMM386 settings are to accomodate the Media Vision ProMovie card.) Also there will still not be enough conventional memory to run this game if standard system applications are not \"optimized.\" Here is the current default DOS configuration:\n\nCONFIG.SYS listing:\n\nDOS=HIGH,UMB\nDevice=C:\\WINDOWS\\Himem.Sys\nDeviceHigh=C:\\WINDOWS\\Emm386.Exe 4096 RAM D=256\nDEVICEHIGH=C:\\WINDOWS\\COMMAND\\DRVSPACE.SYS /MOVE\n\nAUTOEXEC.BAT listing:\n\n@echo off\nPATH D:\\PROGRA~1\\MICROS~4\\OFFICE;C:\\WINDOWS;C:\\WINDOWS\\COMMAND;C:\\QTW\\BIN;C:\\WINDOWS\\COMMAND\\CDROM;C:\\UTIL\n\nSET TMP=C:\\WINDOWS\\TEMP\nSET TEMP=C:\\WINDOWS\\TEMP\nSET winbootdir=C:\\WINDOWS\nSET PROMPT=$p$g\n\nSET CTCM=C:\\WINDOWS\nSET MIDI=SYNTH:1 MAP:E MODE:0\nSET SOUND=C:\\PROGRA~1\\CREATIVE\\CTSND\nSET BLASTER=A220 I5 D1 H5 P330 E640 T6 \n\nrem LH C:\\WINDOWS\\CTCM\nrem LH C:\\PROGRA~1\\SBCD\\DOSDRV\\CTLOAD C:\\PROGRA~1\\SBCD\\DOSDRV\\SBIDE.SYS /D:MSCD001 /V /P:168,10,36e\nrem LH C:\\WINDOWS\\COMMAND\\MSCDEX /D:MSCD001 /V /M:8\n\nSET SQLANY=d:\\program files\\sqlany50 \n\nWhat is also very important is the shortcut settings for X-Wing:\n\nProgram > Advanced... > Prevent MS-DOS-based programs from detecting Windows is enabled.\n\nProgram > Advanced... > Suggest MS-DOS mode as necessary is enabled.\n\nScreen > Usage > Full Screen is checked.\n\nScreen > Performance > Dynamic memory allocation is NOT checked.\n\nMisc > Foreground > Allow screen saver is NOT checked.\n\nMisc > Mouse > Exclusive mode is enabled.\n\nMisc > Idle sensitivity is set to the lowest possible value.",
    "ItemText": null,
    "CreateDate": "1998-11-28T17:57:28.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-28T17:57:28.0000000",
    "DocumentId": "-24999917",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4903",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 95: Registry; Making Thumbnails of .BMP Images Into Icons",
    "SortOrdinal": null,
    "ItemChar": "In REGEDIT.EXE:\n\nSelect HKEY_CLASSES_ROOT\\Paint.Picture\\DefaultIcon.\n\nDouble-click on default in the left pane.\n\nNote the existing value which should be C:\\WINDOWS\\SYSTEM\\cool.dll,41.\n\nReplace this value with '%1' (a percent sign and arabic numeral 1)\n\nReboot Windows 95 and look for BMP file icons.",
    "ItemText": null,
    "CreateDate": "2003-07-31T14:46:18.0000000",
    "EndDate": null,
    "ModificationDate": "2003-07-31T14:46:18.0000000",
    "DocumentId": "-24999914",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4904",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CPU; Intel's Pentium Bug c. 1994",
    "SortOrdinal": null,
    "ItemChar": "Compute the following division formula: (4195835*256)/(3145727/256). A flawed Pentium chip will return 87407.9 while a healthy chip return 87413.3.",
    "ItemText": null,
    "CreateDate": "1998-11-28T17:37:39.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-28T17:37:39.0000000",
    "DocumentId": "-24999906",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4905",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Pacrim Syquest 105; Copying Files \"Safer\" Than Moving Files",
    "SortOrdinal": null,
    "ItemChar": "It appears that copying files is safer than moving them in Windows when a Syquest disk is involved. I have not found an error since I have engaged in this practice and files can be easily verified this way as well. ",
    "ItemText": null,
    "CreateDate": "1998-02-10T15:48:42.0000000",
    "EndDate": null,
    "ModificationDate": "1998-02-10T15:48:42.0000000",
    "DocumentId": "-24999904",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4906",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Pacrim Syquest 105; Loading Drivers Without Syquest Disks Inserted",
    "SortOrdinal": null,
    "ItemChar": "The only solution I have is to go ahead and load the Syquest driver in config.sys then disable it in autoexec.bat. ",
    "ItemText": null,
    "CreateDate": "1998-02-10T15:48:42.0000000",
    "EndDate": null,
    "ModificationDate": "1998-02-10T15:48:42.0000000",
    "DocumentId": "-24999903",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4907",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Pacrim Syquest 105; Microsoft Windows 95; Explorer",
    "SortOrdinal": null,
    "ItemChar": "Do not try to format a Syquest disk from the Explorer window. Try it from the My Computer window instead. ",
    "ItemText": null,
    "CreateDate": "1998-02-10T15:48:42.0000000",
    "EndDate": null,
    "ModificationDate": "1998-02-10T15:48:42.0000000",
    "DocumentId": "-24999902",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4908",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Pacrim Syquest 105; SMARTDrive 4.0",
    "SortOrdinal": null,
    "ItemChar": "As with previous versions of SMARTDrive, version 4.0 is not compatible with Syquest removable storage devices.\"--Microsoft KB ",
    "ItemText": null,
    "CreateDate": "1998-02-10T15:48:42.0000000",
    "EndDate": null,
    "ModificationDate": "1998-02-10T15:48:42.0000000",
    "DocumentId": "-24999901",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4909",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Pacrim Syquest 105; the Importance of the SHARE Utility",
    "SortOrdinal": null,
    "ItemChar": "SHARE prevents two processes from writing to the same file simultaneously. This can happen when moving files between disks in the File Manager. See current AUTOEXEC.BAT file for more info. SHARE is essential in multitasking environs! ",
    "ItemText": null,
    "CreateDate": "1998-02-10T15:48:42.0000000",
    "EndDate": null,
    "ModificationDate": "1998-02-10T15:48:42.0000000",
    "DocumentId": "-24999900",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4910",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Using the FreeFile Function",
    "SortOrdinal": null,
    "ItemChar": "The following code fragment demonstrates how the FreeFile function searches for a free file number when opening a file:\n\nDim i As Integer\n    i = FreeFile\n    Open <file> For Input As #i\n        Do Until EOF(i)\n            <stuff>\n        Loop\n    Close #i\n\nUse this technique when there is uncertainty about about the file numbers in use.",
    "ItemText": null,
    "CreateDate": "1998-05-19T09:17:43.0000000",
    "EndDate": null,
    "ModificationDate": "1998-05-19T09:17:43.0000000",
    "DocumentId": "-24999875",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4911",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Kensington Expert Mouse; PC Concepts Wave Keyboard; Loose Pin Connections Cause Mouse Problems",
    "SortOrdinal": null,
    "ItemChar": "If the mouse arrow jumps to the upper right-hand corner of the screen or if Windows fails to detect a mouse at start up, check the connections of the mouse serial port in the system unit and the plug into the Kensington mouse. These connections are uncommonly sensitive to stress.\n\nUPDATE: I have contacted Kensington and they sent me a replacement cable free of charge. This solved the problem.",
    "ItemText": null,
    "CreateDate": "1998-11-28T17:12:32.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-28T17:12:32.0000000",
    "DocumentId": "-24999874",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4912",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 95; Lucasarts Rebel Assault CD-ROM; Shortcut Settings",
    "SortOrdinal": null,
    "ItemChar": "For more details please see \"Microsoft Windows 95; Lucasarts X-Wing Collectors CD-ROM; EMM386 considerations.\" Current shortcuts settings are:\n\nProgram > Advanced... > MS-DOS mode is enabled.\n\nProgram > Advanced... > Use current MS-DOS configuration  is enabled. The current configuration is listed in the subject mentioned above.\n\nScreen > Usage > Full Screen is checked.\n\nScreen > Performance > Dynamic memory allocation is NOT checked.\n\nMisc > Foreground > Allow screen saver is NOT checked.\n\nMisc > Mouse > Exclusive mode is enabled.\n\nMisc > Idle sensitivity is set to the lowest possible value.",
    "ItemText": null,
    "CreateDate": "1998-11-28T17:56:56.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-28T17:56:56.0000000",
    "DocumentId": "-24999872",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4913",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 95: Setting the System-level Parameters for Direct Cable Connection",
    "SortOrdinal": null,
    "ItemChar": "Direct cable connection is very complicated. It involves only two Control Panel Applets (Network and perhaps Passwords) but has several variables to be dealt with. This is the sketch of how to get it to work based on the assumption that we have two computers not connected to a network:\n\nUse the Network applet to install the Microsoft Networks client, the Microsoft File and Printer Sharing service and the IPX/SPX-compatible protocol on both the host and guest computer.\n\nFor the Microsoft Networks client select Quick logon under Properties > Network logon options.\n\nFor the IPX/SPX-compatible protocol select Client for Microsoft Networks and File and printer sharing for Microsoft Networks under the Bindings tab.\n\nFor Microsoft File and Printer Sharing set Browse Master to Automatic (I'm not sure if this helps). Leave LM Announce set to No.\n\nUnder Primary Network Logon in the Network applet Configuration page select Windows Logon.\n\nIn the Network applet Identification page use simple computer names (short names with no spaces), and use the same Workgroup name (e.g. \"Default\") on both the host and guest computers (again, I'm not sure if this helps). When logging in the guest compter you may be prompted for the host computer name.\n\nIn the Passwords applet, on the Remote Administration page make sure Enable Remote Administration of this server is selected for both the host and guest computers. Also (this might be overkill) use the same password on both computers.\n\nOn the host computer make sure that folders are being shared, not entire disk volumes (I'm not sure if this helps).",
    "ItemText": null,
    "CreateDate": "2003-07-31T14:46:29.0000000",
    "EndDate": null,
    "ModificationDate": "2003-07-31T14:46:29.0000000",
    "DocumentId": "-24999871",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4914",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 95: Changing the MenuShowDelay Line in the Registry to Make the Start Menu Cascading Menus Appear More Quickly",
    "SortOrdinal": null,
    "ItemChar": "As the mouse pointer  moves among the menus and submenus under the Start Menu in the Explorer shell, submenus automatically cascade after a set amount of time the mouse arrow rests at a location with a solid-black right-pointing arrow.\n\nThis time is set in milliseconds in the MenuShowDelay line of the Registry. The path is\n\nHKEY_CURRENT_USER\\Control Panel\\desktop\\MenuShowDelay\n\nSomehow this value was set to over 65,000 which led me to believe that something was wrong with my mouse!",
    "ItemText": null,
    "CreateDate": "2003-07-31T14:45:58.0000000",
    "EndDate": null,
    "ModificationDate": "2003-07-31T14:45:58.0000000",
    "DocumentId": "-24999870",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4915",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Netcom Shell; Installing \"ppp\"",
    "SortOrdinal": null,
    "ItemChar": "INSTRUCTIONS ON SETTING UP A SHELL ACCOUNT\nWITH GRAPHICAL WEB ACCESS\n--------------------------------------------------------------------\nThis will give you PPP emulation with access to\nwww, news, mail, and Real Audio on a NETCOM Unix shell account.\n\nThe most recent version of this document is located at\n/ftp/pub/be/beh/setup95.txt\n\nThis How-To is for Windows 95 users.\n\nWindows 3.1 and WFW 3.11 users should use the document located at \n/ftp/pub/be/beh/setup.txt\n\nMac users should use the document located at\n/ftp/pub/tr/trygve/webpages/slirp-and-macppp.txt\n\nThis document is broken into 5 parts\n\na  Setting up SLIRP\nb  Configuring the Windows95 Dial-Up Networking\nc  Installing the Netscape World Wide Web browser\nd  Making it all work!       \ne  Problem solving and other stuff\n\n\nSetting up SLIRP\n\na1. Login to NETCOM\na2. Enter the following commands at the NETCOM prompt:\n    cd\n    ln -s /u2/beh/pub/slirp\n    cp /ftp/pub/be/beh/www/.slirprc95 .slirprc\n    cp /ftp/pub/be/beh/www/ppp95 ppp\n\nNOTE: If your communications program supports Zmodem, use \"sz\"\n    instead of \"sx\" in the next step. Terminal supports \"sx\".\n    You may already have a browser (MS PLUS pack, etc.) and not\n    need this step. This is Netscape 1.0 16-bit. See \"e7\" about 32-bit \n    Netscape.   \n\n    sz /ftp/pub/be/beh/www/ns16-100.exe\n\na3. Type \"slirp\", you should see the message:\n    Slirp v1.0c (RELEASE)\n    Copyright (c) 1995,1996 Danny Gasparovski and others.\n    All rights reserved.\n    This program is copyrighted, free software.          \n    -------------- STUFF DELETED --------------------------\n    [autodetect SLIP/CSLIP, MTU 1500, MRU 1500, 57600 baud]\n    SLiRP Ready ...\na4. Type five zeroes (0) to exit. This should bring you back to the \n    NETCOM prompt. You may have to do this a few times to get to the  \n    prompt. \na5. Type \"ppp\", you should see the message:\n    Slirp v1.0c (RELEASE)\n    Copyright (c) 1995,1996 Danny Gasparovski and others.\n    All rights reserved.\n    This program is copyrighted, free software.      \n    -------------- STUFF DELETED --------------------------    \n    [talking PPP, 57600 baud]\n    SLiRP Ready ...\na6. Because the \"ppp\" file starts Slirp with the \"exec\" command, your \n    shell proccess may have been terminated. You may not be able to\nreturn\n    to the NETCOM prompt with the \"0\"'s thing. If so, just hangup the\nmodem\na7. We have now successfully setup and tested SLIRP.\na8. \"a8\" is for reference. You do not NEED any of \"a8\" for section\n\"b\".\n    Your PPP setings are:\n    IP Address = 10.0.2.15\n    Subnet Mask = 255.255.255.0\n    gateway = 192.100.81.254\n    host name = beh  (your login name, \"beh\" is mine)\n    domain name = netcom.com\n    dns servers = 199.182.120.203 199.182.120.202 (thanks to\nnetcruiser) \n    domain suffix = netcom.com\n    host IP = 10.0.2.2  (use telnet://10.0.2.2 for a local host\nprompt)\n\n    The next 3 items are very useful in setting up Netscape 2.0\n\n    NNTP server = 10.0.2.1  (news server)   \n    SMTP server = 10.0.2.2  (mail server) or smtp.ix.netcom.com\n    POP  server = 10.0.2.2  (post office)\n\nConfiguring the Windows95 Dial-Up Networking\n\nb1. Eliminating other WINSOCK.DLLs\n\n   1. Click the Start button in Windows 95. \n   2. Click Find. \n   3. Select Files or Folders. \n   4. Type WINSOCK.DLL in the Named Box. \n   5. Make sure Look In is set to the C: Drive. \n   6. Click Find Now. \n\nThe Microsoft WINSOCK.DLL is in the \\WINDOWS\\ Directory. \nAll other WINSOCK.DLL files should be renamed to WINSOCK.OLD by\nclicking on the filename and selecting Rename from the File pull-down\nmenu. \n\nb2. Making sure Dial-Up Networking is installed\n\n   1. Click Start. \n   2. Select Settings. \n   3. Select Control Panel. \n   4. Double-click the Add/Remove Programs Icon. \n   5. Select the Windows Setup Tab. \n   6. Single-click Communications, then press the Details button. \n   7. The Dial-Up Networking item should be checked. If it isn't,\ncheck\n      it. You may be prompted for your Windows95 Disks or CD-ROM.\n      Click OK. \n\nNote: The following steps assumes you have the Dial-Up Networking\nsupport installed. \n\nb3. Making sure the Dial-Up Adapter and TCP/IP Protocol are\ninstalled\n\n   1. Click Start. \n   2. Select Settings. \n   3. Select Control Panel. \n   4. Double-click the Network Icon. \n   5. Verify the Dial-Up Adapter is present. If it isn't: \n          Click Add. \n          Double-Click Adapter. \n          Scroll down the list and select Microsoft. \n          Choose the Dial-Up Adapter and click OK.\n          You may be prompted for your Windows95 Disks or CD-ROM.\n          Click OK. \n   6. Verify the TCP/IP Protocol is present. If it isn't: \n          Click Add. \n          Double-Click Protocol. \n          Scroll down the list and select Microsoft. \n          Choose TCP/IP and click OK.\n          You may be prompted for your Windows95 Disks or CD-ROM.\n          Click OK. \n   7. Click OK until you are asked to restart the system. After you\n      restart, proceed to the next step.\n\nb4. Setting up the connection\n\n   1. Double-click the My Computer Icon. \n   2. Double-click the Dial-Up Networking Icon. \n   3. Type in Netcom for the name of the computer you want to connect\nto \n   4. Your modem should already be displayed. If it isn't, consult\nyour\n      Windows95 documentation for information on how to set up your\nmodem\n      for use with Windows95. \n   5. Click Next>. \n   6. Leave the Area Code field BLANK. \n      Type in the phone number for your local Netcom access point,\n      putting in any special codes to disable call waiting or to get\nan\n      ouside line. Most people will just need to put in the 7-digit\nphone\n      number with no other modifications. \n   7. Click Next>, then Finish. \n   8. Single-click the new Netcom icon with the RIGHT mouse button,\nand\n      select Properties. \n   9. In the Phone Number section, make sure the Use Country Code and\n      Area Code option is not checked. \n  10. Click the Server Type Button. \n  11. The Type of Dial-Up Server should be set to PPP: Windows95,\n      WindowsNT 3.5, Internet \n  12. In the Advanced Options Section, make sure: \n          Enable Software Compression should be Checked \n          Log On to Network should NOT be Checked \n          Require Encrypted Password should NOT be Checked \n          TCP/IP should be the only protocol enabled. Disable IPX and\n          NetBUEI. \n  13. Click on TCP/IP Settings. \n  14. Make sure Server Assigned IP Address is selected. \n  15. Make sure Specify Name Server Addresses is selected. \n  16. Put in the following DNS Server IP Addresses: \n    (These are the DNS addresses from the Netcruiser FAQ & work great) \n          199.182.120.203 - Primary DNS Server \n          199.182.120.202 - Secondary DNS Server \n  17. For the Primary and Secondary WINS configuration, leave them\n      at 0.0.0.0\n  18. Use IP Header Compression should be Checked. \n  19. Use Default Gateway on Remote Network should be Checked. \n  20. Click OK twice. \n  21. Click the Configure Button\n  22. Click Options\n  23. Make sure Bring up terminal window after dialing is selected.\n  24. Click General \n  25. Make sure Maximaum speed is set at 57600\n  26. Click OK twice\n\nInstalling the Netscape World Wide Web browser\n(Skip this if you already have a browser, i.e Plus Pack)\n\nc1. Create sub-directory c:\\temp in Windows\nc2. Copy ns16-100.exe to an empty directory\nc3. \"Run\" ns16-100.exe \nc4. \"Run\" setup.exe to install Netscape in the desired directory\n\n\nMaking it all work!\n\nd1. Double-click the new Netcom Icon. You will be prompted for your\n    username and password.\nd2. Click Connect\nd3. Post Dial Terminal Screen should come up\nd4. Login with your username and password\nd5. At the Netcom prompt type \"ppp\" and enter\nd6. After \"Slirp ready ...\" appears, click on \"continue\"\nd7. Now click on the Netscape icon\nd8. When your ready to exit NETCOM, close all of your winsock \n    applications (Netscape, Telnet, etc.) and disconnect\n\n\nProblem solving and other stuff\n\ne1. Windows 95 has a very good Telnet program in the Windows\n    directory. After setting it up with \"Options\" in Netscape.\n    Do telnet://10.0.2.2/ to get to a NETCOM prompt. Because we\n    started Slirp with the exec command, you should not receive\n    any \"multiple login\" nasty grams from NETCOM.\ne2. Most pictures on the Web have a higher color resolution than\n    256 colors. Do My Computer -> Control Panel -> Display ->\n    Settings and select a color pallet with higher color resolution\n    for advanced video cards, such as 16 bit. \ne3. If you get hard DNS lookup errors try this\n    http://198.95.249.77/  This is the same as\nhttp://www.netscape.com/\n    If it works, look at your DNS server entries. Use the shell\ncommand\n    \"ping -s\" for other IP addresses to test. Ping is in /usr/etc\ne4. Netcom doesn't support Slirp. Check out \n/ftp/pub/be/beh/policy.txt\n    You should post problems to netcom.shell.general,\nnetcom.shell.www,\n    alt.dcom.slip-emulators newsgroups or e-mail me at beh@netcom.com\ne5. You just can't get Slirp to work. You click on the NETCOM icon, \n    \"Connect\", do \"ppp\", \"continue\", and it just hangs. There may be\nsome \n    values in the \"master\" TCP/IP settings. Do My Computer -> Control\n    Panel -> Network -> TCP/IP -> Properties. There should be no\nentries. \n    Everything should be \"Disable\", \"none\", or \"obtain automatically\".\ne6. If Auto Dial (Plus Pack only feature?) stops working, check that \n    url.dll hasn't been deleted from the windows\\system directory.\n    Sometimes when you un-install Netscape, it will delete this file.\ne7. More goodies:\n\n    My bookmark file on NETCOM (don't \"ftp.netcom.com\", just \"cd\")\n    /ftp/pub/be/beh/bookmark.html\n\n    My Windows 95 dial-up script on NETCOM (for the Plus Pack version)\n    /ftp/pub/be/beh/www/netcom.scp\n\n    Advanced scripting tool URL (same as Plus Pack)\n    http://www.microsoft.com/kb/softlib/mslfiles/dscrpt.exe\n\n    The latest Netscape software URL\n    (1.0 is old 16-bit, get the new 32-bit stuff, 2.0 is super)\n    http://www.netscape.com/\n\n    Real Audio URL (ABC, NPR, VOA are just waiting to be listened to)\n    Version 1.0 and 2.0 should work without modifing the .slirprc file\n    http://www.realaudio.com/\n\n    News Xpress URL (Great for decoding pictures)\n    ftp://ftp.hk.super.net/pub/windows95/wskutil/\n\n    CWS Apps List\n    http://cws.wilmington.net/\n\n    Text files on creating web pages, slirp binaries, I-phone, etc.\n    /u2/beh/pub/how-to\n\n    Widgets for Microsoft Exchange (if you must, ugh)\n    http://www.halcyon.com/goetter/widgets.htm\n\nSpecial thanks to seligman@netcom.com for writing the NNTP program\nthat\nenables us to read NETCOM's news spool. This file is pointed to in the\n.slirprc file and I have put a copy at /u2/beh/pub/nntpd\n\nLast updated 03/15/96\n\nSuggestions and corrections welcomed\nbeh@netcom.com\n\n<OTHER STUFF>\ncd\n rm slirp\n link -s /u1/nuglops/bin/slirp\n\nTo change your NNTPD link (so you can read the NETCOM news spool),\ndo the following at the NETCOM shell prompt\n\n cd\n pico .slirprc\n\n Change the line that is     add exec /u2/beh/pub/nntpd:nntp\n to                          add exec /u13/seligman/bin/nntpd:nntp\n\n<MORE OTHER STUFF>\n\npub/be/beh/setup95.txt\n\na1. Login to NETCOMa2.\n\nEnter the following commands at the NETCOM prompt:\n\ncd    ln -s /u2/beh/pub/slirp\ncp /ftp/pub/be/beh/www/.slirprc95 .slirprc\ncp /ftp/pub/be/beh/www/ppp95 ppp\n\na3. Type \"slirp\", you should see the message:\n    Slirp v1.0c (RELEASE)\n    Copyright (c) 1995,1996 Danny Gasparovski and others.\n    All rights reserved.\n    This program is copyrighted, free software.\n    -------------- STUFF DELETED --------------------------\n    [autodetect SLIP/CSLIP, MTU 1500, MRU 1500, 57600 baud]\n    SLiRP Ready ...\na4. Type five zeroes (0) to exit. This should bring you back to the\n    NETCOM prompt. You may have to do this a few times to get to the\n    prompt.\na5. Type \"ppp\", you should see the message:\n    Slirp v1.0c (RELEASE)\n    Copyright (c) 1995,1996 Danny Gasparovski and others.\n    All rights reserved.\n    This program is copyrighted, free software.",
    "ItemText": "INSTRUCTIONS ON SETTING UP A SHELL ACCOUNT\nWITH GRAPHICAL WEB ACCESS\n--------------------------------------------------------------------\nThis will give you PPP emulation with access to\nwww, news, mail, and Real Audio on a NETCOM Unix shell account.\n\nThe most recent version of this document is located at\n/ftp/pub/be/beh/setup95.txt\n\nThis How-To is for Windows 95 users.\n\nWindows 3.1 and WFW 3.11 users should use the document located at \n/ftp/pub/be/beh/setup.txt\n\nMac users should use the document located at\n/ftp/pub/tr/trygve/webpages/slirp-and-macppp.txt\n\nThis document is broken into 5 parts\n\na  Setting up SLIRP\nb  Configuring the Windows95 Dial-Up Networking\nc  Installing the Netscape World Wide Web browser\nd  Making it all work!       \ne  Problem solving and other stuff\n\n\nSetting up SLIRP\n\na1. Login to NETCOM\na2. Enter the following commands at the NETCOM prompt:\n    cd\n    ln -s /u2/beh/pub/slirp\n    cp /ftp/pub/be/beh/www/.slirprc95 .slirprc\n    cp /ftp/pub/be/beh/www/ppp95 ppp\n\nNOTE: If your communications program supports Zmodem, use \"sz\"\n    instead of \"sx\" in the next step. Terminal supports \"sx\".\n    You may already have a browser (MS PLUS pack, etc.) and not\n    need this step. This is Netscape 1.0 16-bit. See \"e7\" about 32-bit \n    Netscape.   \n\n    sz /ftp/pub/be/beh/www/ns16-100.exe\n\na3. Type \"slirp\", you should see the message:\n    Slirp v1.0c (RELEASE)\n    Copyright (c) 1995,1996 Danny Gasparovski and others.\n    All rights reserved.\n    This program is copyrighted, free software.          \n    -------------- STUFF DELETED --------------------------\n    [autodetect SLIP/CSLIP, MTU 1500, MRU 1500, 57600 baud]\n    SLiRP Ready ...\na4. Type five zeroes (0) to exit. This should bring you back to the \n    NETCOM prompt. You may have to do this a few times to get to the  \n    prompt. \na5. Type \"ppp\", you should see the message:\n    Slirp v1.0c (RELEASE)\n    Copyright (c) 1995,1996 Danny Gasparovski and others.\n    All rights reserved.\n    This program is copyrighted, free software.      \n    -------------- STUFF DELETED --------------------------    \n    [talking PPP, 57600 baud]\n    SLiRP Ready ...\na6. Because the \"ppp\" file starts Slirp with the \"exec\" command, your \n    shell proccess may have been terminated. You may not be able to\nreturn\n    to the NETCOM prompt with the \"0\"'s thing. If so, just hangup the\nmodem\na7. We have now successfully setup and tested SLIRP.\na8. \"a8\" is for reference. You do not NEED any of \"a8\" for section\n\"b\".\n    Your PPP setings are:\n    IP Address = 10.0.2.15\n    Subnet Mask = 255.255.255.0\n    gateway = 192.100.81.254\n    host name = beh  (your login name, \"beh\" is mine)\n    domain name = netcom.com\n    dns servers = 199.182.120.203 199.182.120.202 (thanks to\nnetcruiser) \n    domain suffix = netcom.com\n    host IP = 10.0.2.2  (use telnet://10.0.2.2 for a local host\nprompt)\n\n    The next 3 items are very useful in setting up Netscape 2.0\n\n    NNTP server = 10.0.2.1  (news server)   \n    SMTP server = 10.0.2.2  (mail server) or smtp.ix.netcom.com\n    POP  server = 10.0.2.2  (post office)\n\nConfiguring the Windows95 Dial-Up Networking\n\nb1. Eliminating other WINSOCK.DLLs\n\n   1. Click the Start button in Windows 95. \n   2. Click Find. \n   3. Select Files or Folders. \n   4. Type WINSOCK.DLL in the Named Box. \n   5. Make sure Look In is set to the C: Drive. \n   6. Click Find Now. \n\nThe Microsoft WINSOCK.DLL is in the \\WINDOWS\\ Directory. \nAll other WINSOCK.DLL files should be renamed to WINSOCK.OLD by\nclicking on the filename and selecting Rename from the File pull-down\nmenu. \n\nb2. Making sure Dial-Up Networking is installed\n\n   1. Click Start. \n   2. Select Settings. \n   3. Select Control Panel. \n   4. Double-click the Add/Remove Programs Icon. \n   5. Select the Windows Setup Tab. \n   6. Single-click Communications, then press the Details button. \n   7. The Dial-Up Networking item should be checked. If it isn't,\ncheck\n      it. You may be prompted for your Windows95 Disks or CD-ROM.\n      Click OK. \n\nNote: The following steps assumes you have the Dial-Up Networking\nsupport installed. \n\nb3. Making sure the Dial-Up Adapter and TCP/IP Protocol are\ninstalled\n\n   1. Click Start. \n   2. Select Settings. \n   3. Select Control Panel. \n   4. Double-click the Network Icon. \n   5. Verify the Dial-Up Adapter is present. If it isn't: \n          Click Add. \n          Double-Click Adapter. \n          Scroll down the list and select Microsoft. \n          Choose the Dial-Up Adapter and click OK.\n          You may be prompted for your Windows95 Disks or CD-ROM.\n          Click OK. \n   6. Verify the TCP/IP Protocol is present. If it isn't: \n          Click Add. \n          Double-Click Protocol. \n          Scroll down the list and select Microsoft. \n          Choose TCP/IP and click OK.\n          You may be prompted for your Windows95 Disks or CD-ROM.\n          Click OK. \n   7. Click OK until you are asked to restart the system. After you\n      restart, proceed to the next step.\n\nb4. Setting up the connection\n\n   1. Double-click the My Computer Icon. \n   2. Double-click the Dial-Up Networking Icon. \n   3. Type in Netcom for the name of the computer you want to connect\nto \n   4. Your modem should already be displayed. If it isn't, consult\nyour\n      Windows95 documentation for information on how to set up your\nmodem\n      for use with Windows95. \n   5. Click Next>. \n   6. Leave the Area Code field BLANK. \n      Type in the phone number for your local Netcom access point,\n      putting in any special codes to disable call waiting or to get\nan\n      ouside line. Most people will just need to put in the 7-digit\nphone\n      number with no other modifications. \n   7. Click Next>, then Finish. \n   8. Single-click the new Netcom icon with the RIGHT mouse button,\nand\n      select Properties. \n   9. In the Phone Number section, make sure the Use Country Code and\n      Area Code option is not checked. \n  10. Click the Server Type Button. \n  11. The Type of Dial-Up Server should be set to PPP: Windows95,\n      WindowsNT 3.5, Internet \n  12. In the Advanced Options Section, make sure: \n          Enable Software Compression should be Checked \n          Log On to Network should NOT be Checked \n          Require Encrypted Password should NOT be Checked \n          TCP/IP should be the only protocol enabled. Disable IPX and\n          NetBUEI. \n  13. Click on TCP/IP Settings. \n  14. Make sure Server Assigned IP Address is selected. \n  15. Make sure Specify Name Server Addresses is selected. \n  16. Put in the following DNS Server IP Addresses: \n    (These are the DNS addresses from the Netcruiser FAQ & work great) \n          199.182.120.203 - Primary DNS Server \n          199.182.120.202 - Secondary DNS Server \n  17. For the Primary and Secondary WINS configuration, leave them\n      at 0.0.0.0\n  18. Use IP Header Compression should be Checked. \n  19. Use Default Gateway on Remote Network should be Checked. \n  20. Click OK twice. \n  21. Click the Configure Button\n  22. Click Options\n  23. Make sure Bring up terminal window after dialing is selected.\n  24. Click General \n  25. Make sure Maximaum speed is set at 57600\n  26. Click OK twice\n\nInstalling the Netscape World Wide Web browser\n(Skip this if you already have a browser, i.e Plus Pack)\n\nc1. Create sub-directory c:\\temp in Windows\nc2. Copy ns16-100.exe to an empty directory\nc3. \"Run\" ns16-100.exe \nc4. \"Run\" setup.exe to install Netscape in the desired directory\n\n\nMaking it all work!\n\nd1. Double-click the new Netcom Icon. You will be prompted for your\n    username and password.\nd2. Click Connect\nd3. Post Dial Terminal Screen should come up\nd4. Login with your username and password\nd5. At the Netcom prompt type \"ppp\" and enter\nd6. After \"Slirp ready ...\" appears, click on \"continue\"\nd7. Now click on the Netscape icon\nd8. When your ready to exit NETCOM, close all of your winsock \n    applications (Netscape, Telnet, etc.) and disconnect\n\n\nProblem solving and other stuff\n\ne1. Windows 95 has a very good Telnet program in the Windows\n    directory. After setting it up with \"Options\" in Netscape.\n    Do telnet://10.0.2.2/ to get to a NETCOM prompt. Because we\n    started Slirp with the exec command, you should not receive\n    any \"multiple login\" nasty grams from NETCOM.\ne2. Most pictures on the Web have a higher color resolution than\n    256 colors. Do My Computer -> Control Panel -> Display ->\n    Settings and select a color pallet with higher color resolution\n    for advanced video cards, such as 16 bit. \ne3. If you get hard DNS lookup errors try this\n    http://198.95.249.77/  This is the same as\nhttp://www.netscape.com/\n    If it works, look at your DNS server entries. Use the shell\ncommand\n    \"ping -s\" for other IP addresses to test. Ping is in /usr/etc\ne4. Netcom doesn't support Slirp. Check out \n/ftp/pub/be/beh/policy.txt\n    You should post problems to netcom.shell.general,\nnetcom.shell.www,\n    alt.dcom.slip-emulators newsgroups or e-mail me at beh@netcom.com\ne5. You just can't get Slirp to work. You click on the NETCOM icon, \n    \"Connect\", do \"ppp\", \"continue\", and it just hangs. There may be\nsome \n    values in the \"master\" TCP/IP settings. Do My Computer -> Control\n    Panel -> Network -> TCP/IP -> Properties. There should be no\nentries. \n    Everything should be \"Disable\", \"none\", or \"obtain automatically\".\ne6. If Auto Dial (Plus Pack only feature?) stops working, check that \n    url.dll hasn't been deleted from the windows\\system directory.\n    Sometimes when you un-install Netscape, it will delete this file.\ne7. More goodies:\n\n    My bookmark file on NETCOM (don't \"ftp.netcom.com\", just \"cd\")\n    /ftp/pub/be/beh/bookmark.html\n\n    My Windows 95 dial-up script on NETCOM (for the Plus Pack version)\n    /ftp/pub/be/beh/www/netcom.scp\n\n    Advanced scripting tool URL (same as Plus Pack)\n    http://www.microsoft.com/kb/softlib/mslfiles/dscrpt.exe\n\n    The latest Netscape software URL\n    (1.0 is old 16-bit, get the new 32-bit stuff, 2.0 is super)\n    http://www.netscape.com/\n\n    Real Audio URL (ABC, NPR, VOA are just waiting to be listened to)\n    Version 1.0 and 2.0 should work without modifing the .slirprc file\n    http://www.realaudio.com/\n\n    News Xpress URL (Great for decoding pictures)\n    ftp://ftp.hk.super.net/pub/windows95/wskutil/\n\n    CWS Apps List\n    http://cws.wilmington.net/\n\n    Text files on creating web pages, slirp binaries, I-phone, etc.\n    /u2/beh/pub/how-to\n\n    Widgets for Microsoft Exchange (if you must, ugh)\n    http://www.halcyon.com/goetter/widgets.htm\n\nSpecial thanks to seligman@netcom.com for writing the NNTP program\nthat\nenables us to read NETCOM's news spool. This file is pointed to in the\n.slirprc file and I have put a copy at /u2/beh/pub/nntpd\n\nLast updated 03/15/96\n\nSuggestions and corrections welcomed\nbeh@netcom.com\n\n<OTHER STUFF>\ncd\n rm slirp\n link -s /u1/nuglops/bin/slirp\n\nTo change your NNTPD link (so you can read the NETCOM news spool),\ndo the following at the NETCOM shell prompt\n\n cd\n pico .slirprc\n\n Change the line that is     add exec /u2/beh/pub/nntpd:nntp\n to                          add exec /u13/seligman/bin/nntpd:nntp\n\n<MORE OTHER STUFF>\n\npub/be/beh/setup95.txt\n\na1. Login to NETCOMa2.\n\nEnter the following commands at the NETCOM prompt:\n\ncd    ln -s /u2/beh/pub/slirp\ncp /ftp/pub/be/beh/www/.slirprc95 .slirprc\ncp /ftp/pub/be/beh/www/ppp95 ppp\n\na3. Type \"slirp\", you should see the message:\n    Slirp v1.0c (RELEASE)\n    Copyright (c) 1995,1996 Danny Gasparovski and others.\n    All rights reserved.\n    This program is copyrighted, free software.\n    -------------- STUFF DELETED --------------------------\n    [autodetect SLIP/CSLIP, MTU 1500, MRU 1500, 57600 baud]\n    SLiRP Ready ...\na4. Type five zeroes (0) to exit. This should bring you back to the\n    NETCOM prompt. You may have to do this a few times to get to the\n    prompt.\na5. Type \"ppp\", you should see the message:\n    Slirp v1.0c (RELEASE)\n    Copyright (c) 1995,1996 Danny Gasparovski and others.\n    All rights reserved.\n    This program is copyrighted, free software.",
    "CreateDate": "1998-11-25T12:24:36.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-25T12:24:36.0000000",
    "DocumentId": "-24999869",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4916",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Creative Labs AWE32: Using the Digital Output on the Sound Blaster AWE32; Sony/Phillips Digital Interface (SP-DIF)",
    "SortOrdinal": null,
    "ItemChar": "The AWE32 was the first consumer-level sound card to include a Sony/Philips Digital Interface (SP-DIF) output. The output from this interface can go directly to DAT, DCC (Digital Compact Cassette) or even a digital-signal-ready amplifier. SP-DIF is an internationally recognized standard for audio I/O.\n\nThere are, however, two major drawbacks to Creative Labs' implementation of AWE32 SP-DIF output:\n\n(i) Only the data from the E-mu8000 synthesizer chip is output via SP-DIF. This implies that digitized audio samples (not loaded into Sound Fonts) or CD audio are not output.\n\n(ii) The physical output port is not easily accessible from a closed system unit. This implies that you must open the case of your computer to get to the SP-DIF pins on your installed AWE32 sound card.\n\nHere are some suggestions attempting to solve these problems:\n\n(i) Increase the 36-pin memory capacity on your soundcard. This will allow larger Sound Fonts to be loaded into AWE32 memory. By composing only with Sound Fonts and MIDI messages you can successfully use the SP-DIF port as a key component in a high quality sample playback system. There should be an enhanced clarity and sharpness in the music, almost no white noise and a significantly larger dynamic range.\n\n(ii) Mount your own female RCA jack into a \"back plane\" plate at the back of your PC. The female RCA  jack should be connected to a 0.1\" header connector. This connector will be connected to the SP-DIF connection (JP8). The AWE32 SP-DIF connection has two jumper pins labeled 0 (signal) and 1 (ground). The details of this assembly are beyond the scope of this document. The opinion here is that you will have to familiar with a solder gun.",
    "ItemText": null,
    "CreateDate": "1999-02-10T08:29:48.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-10T08:29:48.0000000",
    "DocumentId": "-24999868",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4917",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Book: Access 97 Power Programming; Chapter 1 Highlights (1/2): \"Coding in Access 97 Using VBA\"",
    "SortOrdinal": null,
    "ItemChar": "Private | Public\n\nUse the Private and Public keywords to declare variables. This can be done at the module level only. At the module level, the keyword Private replaces keyword Dim. The old keyword Global is completely replaced by Public.\n\n\nVBA Naming Conventions\n\nRefer to Appendix C for Leszynski Naming conventions.\n\n\nDeclaring Functions\n\nProcedures that return a value (functions) can be delcared and typed just like variables with the form:\n\n    Public Function MyFunction(intArg As Integer) As Long\n        <stuff>\n    End Function\n\n\nPassing by Value or by Reference\n\nBy default, parameters are passed to functions by reference.\n\n\nOptional Function Arguments\n\nVBA's use of optional function arguments take the form:\n\n    Public Function MyFunction(intArg As Integer, _ \n        Optional varOpt as Variant) As Long\n        <stuff>\n    End Function\n\nOptional parameters are always of type variant and are always last in the argument list.\n\n\nParameterized Arrays\n\nParameterized Arrays allow functions to take in any number of values and have the form:\n\n    Public Function MyFunction(ParamArray varMyArray() _\n         as Varaint) As Long\n        <stuff>\n    End Function\n\n\nThe For Each...Next Structure\n\nThe For Each...Next structure can be used to iterate over the members of a collection. This includes moving through standard Access object collections including controls and forms.\n\n\nReferences\n\nUse the References command in the Tools menu to add other object libraries to VBA running under Access. This command is available when viewing code. One great use of this feature is to add the RDO object library to Access, which will allow DSN-less connections to ODBC data sources.\n\n\nNamed Function Parameters\n\nSpecify named parameters when function arguments must be listed out of order. This has the form:\n\nObjectName.MethodName Parameter:=expression, ParameterN: expression",
    "ItemText": null,
    "CreateDate": "1998-10-01T13:41:27.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-01T13:41:27.0000000",
    "DocumentId": "-24999867",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4918",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Email Blurb: Poetry Rejection Letter",
    "SortOrdinal": null,
    "ItemChar": "I have received your submission. The style and tone of these poems in particular are outside the scope of the kinte space. Your previous submission will not be published in the kinte space.\n\nAccording to Yahoo!(TM) there are over 500 poetry WWW sites that publish on the web. You may want to see these sites at\n\nhttp://www.yahoo.com/Arts/Humanities/Literature/Poetry/Web_Published_Poetry/\n\nIn any case, please do not feel kinte-space alienated! Show your strength by visiting us anyway, to watch, listen and read what is going on here! Equally, I encourage you to continue writing and sending new  submissions to our little terrestrial project!",
    "ItemText": null,
    "CreateDate": "2002-05-23T10:07:28.4400000",
    "EndDate": null,
    "ModificationDate": "2002-05-23T10:07:28.4400000",
    "DocumentId": "-24999864",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4919",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Promotion: Site Description",
    "SortOrdinal": null,
    "ItemChar": "A whirl of ideas wake out of a world pool with words, sounds, motions and stills. Come by and take a dip into the \"deep.\"",
    "ItemText": null,
    "CreateDate": "2002-05-23T10:07:54.7570000",
    "EndDate": null,
    "ModificationDate": "2002-05-23T10:07:54.7570000",
    "DocumentId": "-24999863",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4920",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MS-SQL and T-SQL: Deleting Records Not in Another Table",
    "SortOrdinal": null,
    "ItemChar": "Suppose Table1 has records that are not in Table2. Also suppose that Table1 and Table2 have a column named \"IndexColumn\" which can be used for an outer join.\n\nWe want an outer join because we want to delete the records in Table1 that are not in Table2. In MS-SQL we have:\n\n    DELETE Table1.*\n    FROM Table1 LEFT JOIN Table2\n    ON Table1.IndexColumn = Table2.IndexColumn\n    WHERE ((Table2.IndexColumn Is Null));\n\nDo not do this in t-SQL. Use the following instead:\n\n    DELETE Table1\n    WHERE IndexColumn\n    NOT IN (SELECT IndexColumn FROM Table2)",
    "ItemText": null,
    "CreateDate": "1999-02-09T11:36:41.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-09T11:36:41.0000000",
    "DocumentId": "-24999853",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4921",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: Passing Data between SQL And Access Tables",
    "SortOrdinal": null,
    "ItemChar": "I have had problems using stored delete/update queries that involve changing data in SQL tables. The query would run without returning any error. It would also indicate SQL table rows have been deleted or changed. But when the SQL table is re-opened the records would reappear or revert to their original state.\n\nTo avoid this issue entirely I have  written code that uses DAO objects instead of stored queries (other than SELECT queries). The following is a sketch of this technique:\n\nModule Level:\n'\n'NOTE: This procedure contains line break characters\n'for readability. These characters are not supported\n'in Access Basic.\n'\nOption Compare Database   'Use database order for string comparisons\nOption Explicit\n\nDim m_wsDAO As WorkSpace\nDim m_dbDAO As Database\n\nDim m_varReturn As Variant\nDim m_Transaction As Integer\nDim m_intObj As Integer\n\nDim m_strMsgBox  As String, m_strFileName As String\n\nSub DailyCalc_CleanSQLtbls ()\n    '\n    'This sub clears out temporary Shaw CUSIPs from SQL Server\n    'tables ejv_cusip and output_oas. Without this procedure\n    'duplicate Security Names can show up\n    'in qselPortfolio* queries.\n    '\n    Dim dbSQLServer As Database, rsDAO As Recordset\n    Dim tSQL As String\n\n    On Error GoTo DailyCalc_CleanSQLtbls_Err\n\n    m_intObj = m_wsDAO Is Nothing\n    If m_intObj Then\n        MsgBox \"This sub needs workspace and database objects!\"\n        Exit Sub\n    End If\n\n    m_intObj = m_dbDAO Is Nothing\n    If m_intObj Then\n        MsgBox \"This sub needs a database object!\"\n        Exit Sub\n    End If\n    \n    Set dbSQLServer = m_wsDAO.OpenDatabase(\"\", _\n        False, False, ODBC_CONNECT_STRING)\n    Set rsDAO = m_dbDAO.OpenRecordset(\"qselOA_not_Taz\", _\n        DB_OPEN_DYNASET, DB_READONLY)\n    \n    While Not rsDAO.EOF\n\n        tSQL = \"delete from ejv_cusip \"\n        tSQL = tSQL & \"where cusip = '\" & rsDAO(\"cusip\") & \"'\"\n\n        dbSQLServer.Execute tSQL, DB_SQLPASSTHROUGH\n\n        rsDAO.MoveNext\n    Wend\n\n    Set rsDAO = m_dbDAO.OpenRecordset(\"qselOA_not_Taz\", _\n        DB_OPEN_DYNASET, DB_READONLY)\n\n    While Not rsDAO.EOF\n\n        tSQL = \"delete from output_oas \"\n        tSQL = tSQL & \"where cusip = '\" & rsDAO(\"cusip\") & \"'\"\n\n        dbSQLServer.Execute tSQL, DB_SQLPASSTHROUGH\n\n        rsDAO.MoveNext\n    Wend\n    \nDailyCalc_CleanSQLtbls_Exit:\n    m_intObj = dbSQLServer Is Nothing\n    If Not (m_intObj) Then dbSQLServer.Close\n    Exit Sub\n\nDailyCalc_CleanSQLtbls_Err:\n    Select Case Err\n        Case Else\n            MsgBox Err & \": \" & Error$(Err), 16, _\n                \"DailyCalc_CleanSQLtbls Error\"\n            Resume DailyCalc_CleanSQLtbls_Exit\n\n    End Select\nEnd Sub",
    "ItemText": null,
    "CreateDate": "1999-09-09T15:25:59.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-09T15:25:59.0000000",
    "DocumentId": "-24999846",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4922",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: Procedure That Reads in a Text File and Updates the SysCmd() Progress Meter;basReadTextFile()",
    "SortOrdinal": null,
    "ItemChar": "Private Sub basReadTextFile()\n    '\n    'This sub reads a text file line by line.\n    'It updates the progress meter as it reads the file.\n    'The LOF() function is used as the known value\n    'the progress meter refers to. The lineCounter variable\n    'stores the total number of characters in the file.\n    'The theory is that the total number of characters \n    'in a text file (including carriage returns) equals\n    'the value in bytes returned by LOF().\n    '\n    'Recall that 1 character is equal to 1 byte (8 bits).\n    '\n    Dim varReturn As Variant\n    Dim lngCounter As Long\n    Dim strData As String\n    '\n    'Note that varReturn is of datatype Variant since\n    'SysCmd() returns numerical values (error values)\n    'and the Null (indicating successful execution).\n    'lngCounter is of datatype Long; its maximum\n    ' positive range is 2,147,483,647 which\n    'implies that it can be used to read files as\n    'large as 2 GB.\n    '\n    Open \"c:\\windows\\desktop\\pine_addressbook.txt\" _\n        For Input Access Read As #1\n    \n    varReturn = Application.SysCmd(acSysCmdInitMeter, _\n        \"Reading File...\", VBA.LOF(1))\n    \n    Do Until VBA.EOF(1)\n        Line Input #1, strData\n        varReturn = Application.SysCmd(acSysCmdUpdateMeter, _\n            lngCounter)\n        lngCounter = VBA.Len(lineData) + lngCounter + 2\n        '\n        'We add 2 to lngCounter to account for the length\n        'of a carriage return: VBA.Len(vbCrLf) = 2\n        'where vbCrLf is sequentially ASCII char's 13 and 10.\n        '\n    Loop\n    \n    varReturn = Application.SysCmd(acSysCmdRemoveMeter)\n    \n    Close #1\n\nEnd Sub",
    "ItemText": null,
    "CreateDate": "1999-09-09T15:45:46.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-09T15:45:46.0000000",
    "DocumentId": "-24999843",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4923",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Storing a Query Without Its Underlying Table(s)",
    "SortOrdinal": null,
    "ItemChar": "By saving a stored query in SQL View you can store a query without its underlying tables. This is often useful when you need to keep queries in a temporary database used as a \"palette\" for a database under development.",
    "ItemText": null,
    "CreateDate": "1998-02-10T15:48:42.0000000",
    "EndDate": null,
    "ModificationDate": "1998-02-10T15:48:42.0000000",
    "DocumentId": "-24999820",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4924",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBA Can't Tell What Day It Is?",
    "SortOrdinal": null,
    "ItemChar": "Wrong. VBA can tell what day it is. VBA has the Weekday() function.",
    "ItemText": null,
    "CreateDate": "1998-05-19T09:14:05.0000000",
    "EndDate": null,
    "ModificationDate": "1998-05-19T09:14:05.0000000",
    "DocumentId": "-24999817",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4925",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: Shading Alternating Groups of Rows in a Report",
    "SortOrdinal": null,
    "ItemChar": "The rows produced in the detail (Section(0)) of an MS Access report can be formatted on the fly using code in the Format event of the report. The \"secret\" is the economical use of the modulo function:\n\nSub Detail2_Format (Cancel As Integer, FormatCount As Integer)\n\n    lngCountRows = lngCountRows + 1\n\n    If lngCountRows Mod 5 = 0 Then ShadeRows (YELLOW)\n\n    If lngCountRows Mod 10 = 0 Then ShadeRows (WHITE)\n\nEnd Sub\n\nWhere ShadeRows() is a user-defined procedure that takes the form:\n\nSub ShadeRows (lngColor As Long)\n    Section(0).BackColor = lngColor\n    Me![<control name>].BackColor = lngColor\n    'etc.\nEnd Sub\n\nNote that YELLOW and WHITE are declared as Long datatype constants at the module level:\n\n    Dim lngCountRows As Long\n    Const YELLOW& = 65535\n    Const WHITE& = 16777215",
    "ItemText": null,
    "CreateDate": "1998-02-11T13:57:07.0000000",
    "EndDate": null,
    "ModificationDate": "1998-02-11T13:57:07.0000000",
    "DocumentId": "-24999815",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4926",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: RepairCompact()",
    "SortOrdinal": null,
    "ItemChar": "Function RepairCompact (strDatabase As String) As Integer\n'\n'NOTE: This procedure contains line break characters\n'for readability. These characters are not supported\n'in Access Basic.\n'\n    '\n    'This function repairs databases. It is recommended to compact\n    'them afterwards. Automating the compacting of databases\n    'seems a bit risky but here we are:\n    '\n    Dim strTempFile As String, varReturn As Variant\n\n    On Error GoTo RepairCompact_Err\n    \n    varReturn = SysCmd(SYSCMD_SETSTATUS, \"Looking for \" _\n        & strDatabase & \"...\")\n    \n    If Mid$(strDatabase, InStr(strDatabase, \".\"), 4) = \".MDB\" Then\n        strTempFile = strDatabase\n        Mid$(strTempFile, InStr(strTempFile, \".\"), 4) = \".NEW\"\n    Else\n        MsgBox \"Can't handle the filename of this file.\", 64,_\n            \"Application Services\"\n        varReturn = SysCmd(SYSCMD_CLEARSTATUS)\n        GoTo RepairCompact_Exit\n    End If\n\n    varReturn = SysCmd(SYSCMD_SETSTATUS, \"Repairing \" & _\n        strDatabase & \"...\")\n    \n    DBEngine.RepairDatabase strDatabase\n\n    varReturn = SysCmd(SYSCMD_SETSTATUS, \"Compacting \" & _\n        strDatabase & \"...\")\n    \n    DBEngine.CompactDatabase strDatabase, strTempFile\n    '\n    'Here's the risky but necessary part:\n    '\n    Kill strDatabase: Name strTempFile As strDatabase\n\n    varReturn = SysCmd(SYSCMD_CLEARSTATUS)\n    RepairCompact = True\n\nRepairCompact_Exit:\n    \n    Exit Function\n\nRepairCompact_Err:\n    Select Case Err\n        Case Else\n            MsgBox Err & \": \" & Error$(Err), 16, _\n                \"RepairCompact Error\"\n            m_varReturn = SysCmd(SYSCMD_SETSTATUS, Error$(Err))\n            RepairCompact = False\n            GoTo RepairCompact_Exit\n    End Select\nEnd Function",
    "ItemText": null,
    "CreateDate": "1999-09-09T15:29:49.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-09T15:29:49.0000000",
    "DocumentId": "-24999813",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4927",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: dbAvailable() -- Checking for Exclusivity",
    "SortOrdinal": null,
    "ItemChar": "Function dbAvailable (strDatabase As String) As Integer\n'\n'This function checks to see if a database can\n'be opened exclusively.\n'\n'NOTE: This procedure contains line break characters\n'for readability. These characters are not supported\n'in Access Basic.\n'\n    Dim DAO_WorkSpace As WorkSpace\n    Dim DAO_Database As Database\n    \n    On Error GoTo dbAvailable_Err\n\n    Set DAO_WorkSpace = DBEngine.Workspaces(0)\n    Set DAO_Database = _\n        DAO_WorkSpace.OpenDatabase(strDatabase, True, True)\n    '\n    'Return -1 on no errors.\n    '\n    dbAvailable = True\n\ndbAvailable_Exit:\n    '\n    'If an object variable is Nothing it\n    'has not been Set or initialized.\n    '\n    If Not (DAO_WorkSpace Is Nothing) Then DAO_WorkSpace.Close\n\n    If Not (DAO_Database Is Nothing) Then DAO_Database.Close\n\n    Exit Function\n\ndbAvailable_Err:\n    '\n    'On error let the function return the error code.\n    'Recall that Err returns Integers.\n    '\n    dbAvailable = Err\n    GoTo dbAvailable_Exit\n\nEnd Function",
    "ItemText": null,
    "CreateDate": "2000-08-14T20:52:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-08-14T20:52:00.0000000",
    "DocumentId": "-24999812",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4928",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: txtCopies_Exit() -- Data Validation on Exit",
    "SortOrdinal": null,
    "ItemChar": "Sub txtCopies_Exit (Cancel As Integer)\n'\n'NOTE: This procedure contains line break characters\n'for readability. These characters are not supported\n'in Access Basic.\n'\n    '\n    'This sub checks txtCopies for smart-ass values.\n    'We don't want txtCopies to have negative values\n    'or fractional values.\n    '\n    If IsNumeric(Me![txtCopies]) Then\n        If Me![txtCopies] >=1 Then Me![txtCopies] = _\n            CInt(Abs(Me![txtCopies]))\n    Else\n        Me![txtCopies] = 1\n    End If\nEnd Sub",
    "ItemText": null,
    "CreateDate": "1999-09-09T15:36:59.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-09T15:36:59.0000000",
    "DocumentId": "-24999811",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4929",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: Selected API Calls.",
    "SortOrdinal": null,
    "ItemChar": "'------------------------------------------------------------------------\n'\n' MODULE\n'\n'   Windows API Utilities\n'\n' PURPOSE\n'\n'   Provides routines for manipulating Microsoft Access forms and\n'   windows through the Window API.\n'\n' NOTES\n'\n'   Most of the symbols in this module are prefixed with 'WU_',\n'   in an attempt to avoid naming conflicts with library databases.\n'\n'------------------------------------------------------------------------\nOption Compare Text     ' Non case sensitive compares\n\n'\n' Type WU_RECT.\n'\nType WU_RECT\n    x1 As Integer\n    y1 As Integer\n    x2 As Integer\n    y2 As Integer\nEnd Type\n\n\n'\n' Windows API Declarations.\n'\nDeclare Function wu_CheckMenuItem Lib \"User\" Alias \"CheckMenuItem\" (ByVal hMenu%, ByVal idEnableItem%, ByVal uEnable%) As Integer\nDeclare Sub wu_DrawMenuBar Lib \"User\" Alias \"DrawMenuBar\" (ByVal hwnd%)\nDeclare Function wu_EnableMenuItem Lib \"User\" Alias \"EnableMenuItem\" (ByVal hMenu%, ByVal idEnableItem%, ByVal uEnable%) As Integer\nDeclare Function wu_GetActiveWindow Lib \"User\" Alias \"GetActiveWindow\" () As Integer\nDeclare Function wu_GetClassName Lib \"User\" Alias \"GetClassName\" (ByVal hwin%, ByVal stBuf$, ByVal cch%) As Integer\nDeclare Function wu_GetClientRect Lib \"User\" Alias \"GetClientRect\" (ByVal hwin%, rectangle As WU_RECT) As Integer\nDeclare Function wu_GetDC Lib \"User\" Alias \"GetDC\" (ByVal hw%) As Integer\nDeclare Function wu_GetDesktopWindow Lib \"User\" Alias \"GetDesktopWindow\" () As Integer\nDeclare Function wu_GetDeviceCaps Lib \"GDI\" Alias \"GetDeviceCaps\" (ByVal hDC%, ByVal iCapability%) As Integer\nDeclare Function wu_GetFocus Lib \"User\" Alias \"GetFocus\" () As Integer\nDeclare Function wu_GetMenu Lib \"User\" Alias \"GetMenu\" (ByVal hwnd%) As Integer\nDeclare Function wu_GetMenuState Lib \"User\" Alias \"GetMenuState\" (ByVal hMenu%, ByVal idItem%, ByVal fuFlags%) As Integer\nDeclare Function wu_GetParent Lib \"User\" Alias \"GetParent\" (ByVal hwin%) As Integer\nDeclare Function wu_GetSubMenu Lib \"User\" Alias \"GetSubMenu\" (ByVal hMenu%, ByVal nPos%) As Integer\nDeclare Function wu_GetWindow Lib \"User\" Alias \"GetWindow\" (ByVal hw%, ByVal nRelationship%) As Integer\nDeclare Function wu_GetWindowRect Lib \"User\" Alias \"GetWindowRect\" (ByVal hwin%, rectangle As WU_RECT) As Integer\nDeclare Function wu_IsZoomed Lib \"User\" Alias \"IsZoomed\" (ByVal hwnd%) As Integer\nDeclare Function wu_MoveWindow Lib \"User\" Alias \"MoveWindow\" (ByVal hwin%, ByVal x%, ByVal y%, ByVal dx%, ByVal dy%, ByVal fRepaint%) As Integer\nDeclare Function wu_SetFocus Lib \"User\" Alias \"SetFocus\" (ByVal hwin%) As Integer\nDeclare Function wu_ShowWindow Lib \"User\" Alias \"ShowWindow\" (ByVal hwnd%, ByVal i%) As Integer\n\n'\n' Constants used in the functions above.\n'\nConst WU_SW_RESTORE = 9\nConst WU_GW_HWNDFIRST = 0\nConst WU_GW_HWNDLAST = 1\nConst WU_GW_HWNDNEXT = 2\nConst WU_GW_HWNDPREV = 3\nConst WU_GW_OWNER = 4\nConst WU_GW_CHILD = 5\nConst WU_LOGPIXELSX = 88\nConst WU_LOGPIXELSY = 90\n\nConst WU_MF_BYCOMMAND = &H0\nConst WU_MF_BYPOSITION = &H400\nConst WU_MF_ENABLED = &H0\nConst WU_MF_GRAYED = &H1\nConst WU_MF_DISABLED = &H2\nConst WU_MF_MENUBREAK = &H40\nConst WU_MF_CHECKED = &H8\nConst WU_MF_UNCHECKED = &H0\n\n'\n' Microsoft Access Window Classes.\n'\nGlobal Const WU_WC_ACCESS = \"OMain\"\nGlobal Const WU_WC_ACCESSDBC = \"ODb\"\nGlobal Const WU_WC_ACCESSTBL = \"OTable\"\nGlobal Const WU_WC_ACCESSQRY = \"OQRY\"\nGlobal Const WU_WC_ACCESSFRM = \"OForm\"\nGlobal Const WU_WC_ACCESSRPT = \"OReport\"\nGlobal Const WU_WC_ACCESSMAC = \"OScript\"\nGlobal Const WU_WC_ACCESSMOD = \"OModule\"\nGlobal Const WU_WC_ACCESSFRMPOPUP = \"OFormPopup\"\nGlobal Const WU_WC_ACCESSTOOLBAR = \"OToolbar\"\nGlobal Const WU_WC_ACCESSMDICLIENT = \"MDIClient\"\n\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_ActiveFormName\n'\n' PURPOSE     : Returns the active form's name.\n'\n' NOTES       : If the form is loaded but not yet visible (e.g. it's\n'               in the OnOpen or initial OnCurrent event, this routine\n'               will return the null string.  This is a handy way of\n'               determining if you're in the initialization stage of\n'               a form (like the initial OnCurrent).\n'------------------------------------------------------------------------\nFunction wu_ActiveFormName () As String\n    On Error Resume Next\n\n    stName$ = Screen.ActiveForm.FormName\n    If (Err = 0) Then\n        wu_ActiveFormName = stName$\n    Else\n        wu_ActiveFormName = \"\"\n    End If\n\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_CenterDoc\n'\n' PURPOSE     : Centers a Microsoft Access form.\n'------------------------------------------------------------------------\nFunction wu_CenterDoc (hwnd%) As Integer\n    Dim r As WU_RECT, rDesk As WU_RECT\n    Dim dx As Integer, dy As Integer, dxDesk As Integer, dyDesk As Integer\n\n    If (hwnd% = 0) Then hwnd = wu_GetCurrentDoc(True)\n    hwndDesk% = wu_GetParent(hwnd%)\n    stClass$ = wu_StWindowClass(hwnd%)\n\n    ' Special case for forms: Move them to 0,0 and do a SizeToFitForm\n\n    If (stClass$ = WU_WC_ACCESSFRM) Then\n        DoCmd MoveSize 0, 0\n        On Error Resume Next\n        DoCmd DoMenuItem A_FORMBAR, 4, 5\n        On Error GoTo 0\n    End If\n\n    ' If this is a popup, use the WindowRect of the desktop.  Otherwise,\n    ' use the client rect.\n\n    f% = wu_GetWindowRect(hwnd%, r)\n    If (stClass$ = WU_WC_ACCESSFRMPOPUP) Then\n        f% = wu_GetWindowRect(hwndDesk%, rDesk)\n    Else\n        f% = wu_GetClientRect(hwndDesk%, rDesk)\n    End If\n    dx% = r.x2 - r.x1\n    dy% = r.y2 - r.y1\n    dxDesk% = rDesk.x2 - rDesk.x1\n    dyDesk% = rDesk.y2 - rDesk.y1\n    If (wu_StWindowClass(hwnd%) = WU_WC_ACCESSFRMPOPUP) Then\n        f% = wu_MoveWindow(hwnd%, rDesk.x1 + (dxDesk% - dx%) / 2, rDesk.y1 + (dyDesk% - dy%) / 2, dx%, dy%, True)\n    Else\n        f% = wu_MoveWindow(hwnd%, (dxDesk% - dx%) / 2, (dyDesk% - dy%) / 2, dx%, dy%, True)\n    End If\n    wu_CenterDoc = f%\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_ConvertTwipsToPixels\n'\n' PURPOSE     : Converts twips to pixels, calling Windows for\n'               the current device's Logical Pixels in the\n'               Horizontal or Vertical direction.\n'\n' ARGUMENTS   : nTwips%     - The number in twips (will be converted)\n'               nDirection% - 0=Horizontal, 1=Vertical.\n'------------------------------------------------------------------------\nFunction wu_ConvertTwipsToPixels (nTwips%, nDirection%) As Integer\n    Const nTwipsPerInch = 1440\n\n    hDC% = wu_GetDC(wu_GetAccessHwnd())\n    If (nDirection% = 0) Then       'Horizontal\n        nPixelsPerInch% = wu_GetDeviceCaps(hDC%, WU_LOGPIXELSX)\n    Else                            'Vertical\n        nPixelsPerInch% = wu_GetDeviceCaps(hDC%, WU_LOGPIXELSY)\n    End If\n    wu_ConvertTwipsToPixels = (nTwips% / nTwipsPerInch%) * nPixelsPerInch%\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_FIsDocument\n'\n' PURPOSE     : Determines whether the given window handle specifies a\n'               valid Access document.\n'------------------------------------------------------------------------\nFunction wu_FIsDocument (hwnd As Integer) As Integer\n    wu_FIsDocument = False\n    stClass$ = wu_StWindowClass(hwnd%)\n    If (stClass$ = WU_WC_ACCESSDBC) Then wu_FIsDocument = True\n    If (stClass$ = WU_WC_ACCESSTBL) Then wu_FIsDocument = True\n    If (stClass$ = WU_WC_ACCESSQRY) Then wu_FIsDocument = True\n    If (stClass$ = WU_WC_ACCESSFRM) Then wu_FIsDocument = True\n    If (stClass$ = WU_WC_ACCESSRPT) Then wu_FIsDocument = True\n    If (stClass$ = WU_WC_ACCESSMAC) Then wu_FIsDocument = True\n    If (stClass$ = WU_WC_ACCESSMOD) Then wu_FIsDocument = True\n    If (stClass$ = WU_WC_ACCESSFRMPOPUP) Then wu_FIsDocument = True\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_FMenuChecked\n'\n' PURPOSE     : Returns True if the specified menu item has a check\n'               mark next to it.\n'\n' ARGUMENTS   : iMenu% - The index of the drop down menu\n'               iItem% - The index of the item on the menu\n'\n'               Both of these arguments are zero based.\n'------------------------------------------------------------------------\nFunction wu_FMenuChecked (iMenu%, iItem%) As Integer\n    \n    ' If the current form is Zoomed, account for the system menu.\n\n    If (wu_IsZoomed(Screen.ActiveForm.hwnd)) Then\n        iMenu% = iMenu% + 1\n    End If\n\n    hMainMenu% = wu_GetMenu(wu_GetAccessHwnd())\n    hMenu% = wu_GetSubMenu(hMainMenu%, iMenu%)\n    fuFlags% = WU_MF_BYPOSITION Or WU_MF_CHECKED\n    wu_FMenuChecked = (wu_GetMenuState(hMenu%, iItem%, fuFlags%) <> 0)\n\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_FMenuEnabled\n'\n' PURPOSE     : Returns True if the specified menu item is enabled.\n'\n' ARGUMENTS   : iMenu% - The index of the drop down menu\n'               iItem% - The index of the item on the menu\n'\n'               Both of these arguments are zero based.\n'------------------------------------------------------------------------\nFunction wu_FMenuEnabled (iMenu%, iItem%) As Integer\n    \n    ' If the current form is Zoomed, account for the system menu.\n\n    If (wu_IsZoomed(Screen.ActiveForm.hwnd)) Then\n        iMenu% = iMenu% + 1\n    End If\n\n    hMainMenu% = wu_GetMenu(wu_GetAccessHwnd())\n    hMenu% = wu_GetSubMenu(hMainMenu%, iMenu%)\n    fuFlags% = WU_MF_BYPOSITION Or WU_MF_GRAYED\n    wu_FMenuEnabled = (wu_GetMenuState(hMenu%, iItem%, fuFlags%) = 0)\n\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_GetAccessHwnd()\n'\n' PURPOSE     : Returns a handle the the Access window.\n'------------------------------------------------------------------------\nFunction wu_GetAccessHwnd () As Integer\n    hwnd% = wu_GetActiveWindow()\n    While ((wu_StWindowClass(hwnd%) <> WU_WC_ACCESS) And (hwnd% <> 0))\n        hwnd% = wu_GetParent(hwnd%)\n    Wend\n    wu_GetAccessHwnd = hwnd%\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_GetCurrentDoc\n'\n' PURPOSE     : Retrieves the handle to the active Access document.\n'               If the fPopup flag is specified as TRUE, popup forms\n'               will be included.  If the fPopup flag is FALSE, Access\n'               will be activated first (a side effect).\n'------------------------------------------------------------------------\nFunction wu_GetCurrentDoc (fPopup%) As Integer\n    If (Not fPopup%) Then\n        hwnd% = wu_GetAccessHwnd()\n        If (hwnd% <> 0) Then hwnd% = wu_SetFocus(hwnd%)\n    End If\n    hwnd% = wu_GetFocus()\n    While (Not (wu_FIsDocument(hwnd%)) And (hwnd% <> 0))\n        hwnd% = wu_GetParent(hwnd%)\n    Wend\n    wu_GetCurrentDoc = hwnd%\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_GetMDIClientHwnd()\n'\n' PURPOSE     : Returns a handle the the Access MDIClient window.\n'------------------------------------------------------------------------\nFunction wu_GetMDIClientHwnd () As Integer\n    Dim hwnd As Integer\n    hwnd = wu_GetAccessHwnd()\n    hwnd = wu_GetWindow(hwnd, WU_GW_CHILD)\n    While ((wu_StWindowClass(hwnd) <> WU_WC_ACCESSMDICLIENT) And (hwnd <> 0))\n        hwnd = wu_GetWindow(hwnd, WU_GW_HWNDNEXT)\n    Wend\n    wu_GetMDIClientHwnd = hwnd\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_GetScreenSize\n'\n' PURPOSE     : Stores the screen size in r (a rectangle)\n'------------------------------------------------------------------------\nFunction wu_GetScreenSize (r As WU_RECT) As Integer\n    hwnd% = wu_GetDesktopWindow()\n    f% = wu_GetWindowRect(hwnd%, r)\n    wu_GetScreenSize = f%\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_GetToolbarHwnd\n'\n' PURPOSE     : Returns the handle of the toolbar if it is open.\n'------------------------------------------------------------------------\nFunction wu_GetToolbarHwnd () As Integer\n    hwnd% = wu_GetAccessHwnd()\n    hwnd% = wu_GetWindow(hwnd%, WU_GW_CHILD)\n    While ((wu_StWindowClass(hwnd%) <> WU_WC_ACCESSTOOLBAR) And (hwnd% <> 0))\n        hwnd% = wu_GetWindow(hwnd%, WU_GW_HWNDNEXT)\n    Wend\n    wu_GetToolbarHwnd = hwnd%\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_SetAccessSize\n'\n' PURPOSE     : Sizes the Access window to the specified coordinates.\n'               Coordinates should be given in pixels.\n'------------------------------------------------------------------------\nFunction wu_SetAccessSize (x%, y%, dx%, dy%) As Integer\n    hwnd% = wu_GetAccessHwnd()\n    If (wu_IsZoomed(hwnd%)) Then\n        f% = wu_ShowWindow(hwnd%, WU_SW_RESTORE)\n    End If\n    f% = wu_MoveWindow(hwnd%, x%, y%, dx%, dy%, True)\n    wu_SetAccessSize = f%\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_SetMenuChecked\n'\n' PURPOSE     : Sets the checkmark next to a menu item on or off.\n'\n' ARGUMENTS   : iMenu% - The index of the drop down menu\n'               iItem% - The index of the item on the menu\n'                           Both of these arguments are zero based.\n'               fChecked% - True to show the checkmark, false otherwise.\n'------------------------------------------------------------------------\nFunction wu_SetMenuChecked (iMenu%, iItem%, fChecked%) As Integer\n\n    ' If the current form is Zoomed, account for the system menu.\n\n    If (wu_IsZoomed(Screen.ActiveForm.hwnd)) Then\n        iMenu% = iMenu% + 1\n    End If\n\n    hMainMenu% = wu_GetMenu(wu_GetAccessHwnd())\n    hMenu% = wu_GetSubMenu(hMainMenu%, iMenu%)\n    If (fChecked%) Then\n        fuFlags% = WU_MF_BYPOSITION Or WU_MF_CHECKED\n    Else\n        fuFlags% = WU_MF_BYPOSITION Or WU_MF_UNCHECKED\n    End If\n    f% = wu_CheckMenuItem(hMenu%, iItem%, fuFlags%)\n    wu_DrawMenuBar wu_GetAccessHwnd()\n    wu_SetMenuChecked = f%\n\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_SetMenuEnabled\n'\n' PURPOSE     : Enables or disables a menu item.\n'\n' ARGUMENTS   : iMenu% - The index of the drop down menu\n'               iItem% - The index of the item on the menu\n'                           Both of these arguments are zero based.\n'               fEnabled% - True to show the checkmark, false otherwise.\n'------------------------------------------------------------------------\nFunction wu_SetMenuEnabled (iMenu%, iItem%, fEnabled%) As Integer\n    ' If the current form is Zoomed, account for the system menu.\n\n    If (wu_IsZoomed(Screen.ActiveForm.hwnd)) Then\n        iMenu% = iMenu% + 1\n    End If\n\n    hMainMenu% = wu_GetMenu(wu_GetAccessHwnd())\n    hMenu% = wu_GetSubMenu(hMainMenu%, iMenu%)\n    If (fEnabled%) Then\n        fuFlags% = WU_MF_BYPOSITION Or WU_MF_ENABLED\n    Else\n        fuFlags% = WU_MF_BYPOSITION Or WU_MF_GRAYED\n    End If\n    f% = wu_EnableMenuItem(hMenu%, iItem%, fuFlags%)\n    wu_DrawMenuBar wu_GetAccessHwnd()\n    wu_SetMenuEnabled = f%\n\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_StWindowClass\n'\n' PURPOSE     : A simple cover function to the Windows API call.\n'------------------------------------------------------------------------\nFunction wu_StWindowClass (hwnd As Integer) As String\n    Const cchMax = 255\n    Dim stBuff As String * cchMax\n    cch% = wu_GetClassName(hwnd, stBuff, cchMax)\n    If (hwnd% = 0) Then\n        wu_StWindowClass = \"\"\n    Else\n        wu_StWindowClass = (Left$(stBuff, cch%))\n    End If\nEnd Function",
    "ItemText": "'------------------------------------------------------------------------\n'\n' MODULE\n'\n'   Windows API Utilities\n'\n' PURPOSE\n'\n'   Provides routines for manipulating Microsoft Access forms and\n'   windows through the Window API.\n'\n' NOTES\n'\n'   Most of the symbols in this module are prefixed with 'WU_',\n'   in an attempt to avoid naming conflicts with library databases.\n'\n'------------------------------------------------------------------------\nOption Compare Text     ' Non case sensitive compares\n\n'\n' Type WU_RECT.\n'\nType WU_RECT\n    x1 As Integer\n    y1 As Integer\n    x2 As Integer\n    y2 As Integer\nEnd Type\n\n\n'\n' Windows API Declarations.\n'\nDeclare Function wu_CheckMenuItem Lib \"User\" Alias \"CheckMenuItem\" (ByVal hMenu%, ByVal idEnableItem%, ByVal uEnable%) As Integer\nDeclare Sub wu_DrawMenuBar Lib \"User\" Alias \"DrawMenuBar\" (ByVal hwnd%)\nDeclare Function wu_EnableMenuItem Lib \"User\" Alias \"EnableMenuItem\" (ByVal hMenu%, ByVal idEnableItem%, ByVal uEnable%) As Integer\nDeclare Function wu_GetActiveWindow Lib \"User\" Alias \"GetActiveWindow\" () As Integer\nDeclare Function wu_GetClassName Lib \"User\" Alias \"GetClassName\" (ByVal hwin%, ByVal stBuf$, ByVal cch%) As Integer\nDeclare Function wu_GetClientRect Lib \"User\" Alias \"GetClientRect\" (ByVal hwin%, rectangle As WU_RECT) As Integer\nDeclare Function wu_GetDC Lib \"User\" Alias \"GetDC\" (ByVal hw%) As Integer\nDeclare Function wu_GetDesktopWindow Lib \"User\" Alias \"GetDesktopWindow\" () As Integer\nDeclare Function wu_GetDeviceCaps Lib \"GDI\" Alias \"GetDeviceCaps\" (ByVal hDC%, ByVal iCapability%) As Integer\nDeclare Function wu_GetFocus Lib \"User\" Alias \"GetFocus\" () As Integer\nDeclare Function wu_GetMenu Lib \"User\" Alias \"GetMenu\" (ByVal hwnd%) As Integer\nDeclare Function wu_GetMenuState Lib \"User\" Alias \"GetMenuState\" (ByVal hMenu%, ByVal idItem%, ByVal fuFlags%) As Integer\nDeclare Function wu_GetParent Lib \"User\" Alias \"GetParent\" (ByVal hwin%) As Integer\nDeclare Function wu_GetSubMenu Lib \"User\" Alias \"GetSubMenu\" (ByVal hMenu%, ByVal nPos%) As Integer\nDeclare Function wu_GetWindow Lib \"User\" Alias \"GetWindow\" (ByVal hw%, ByVal nRelationship%) As Integer\nDeclare Function wu_GetWindowRect Lib \"User\" Alias \"GetWindowRect\" (ByVal hwin%, rectangle As WU_RECT) As Integer\nDeclare Function wu_IsZoomed Lib \"User\" Alias \"IsZoomed\" (ByVal hwnd%) As Integer\nDeclare Function wu_MoveWindow Lib \"User\" Alias \"MoveWindow\" (ByVal hwin%, ByVal x%, ByVal y%, ByVal dx%, ByVal dy%, ByVal fRepaint%) As Integer\nDeclare Function wu_SetFocus Lib \"User\" Alias \"SetFocus\" (ByVal hwin%) As Integer\nDeclare Function wu_ShowWindow Lib \"User\" Alias \"ShowWindow\" (ByVal hwnd%, ByVal i%) As Integer\n\n'\n' Constants used in the functions above.\n'\nConst WU_SW_RESTORE = 9\nConst WU_GW_HWNDFIRST = 0\nConst WU_GW_HWNDLAST = 1\nConst WU_GW_HWNDNEXT = 2\nConst WU_GW_HWNDPREV = 3\nConst WU_GW_OWNER = 4\nConst WU_GW_CHILD = 5\nConst WU_LOGPIXELSX = 88\nConst WU_LOGPIXELSY = 90\n\nConst WU_MF_BYCOMMAND = &H0\nConst WU_MF_BYPOSITION = &H400\nConst WU_MF_ENABLED = &H0\nConst WU_MF_GRAYED = &H1\nConst WU_MF_DISABLED = &H2\nConst WU_MF_MENUBREAK = &H40\nConst WU_MF_CHECKED = &H8\nConst WU_MF_UNCHECKED = &H0\n\n'\n' Microsoft Access Window Classes.\n'\nGlobal Const WU_WC_ACCESS = \"OMain\"\nGlobal Const WU_WC_ACCESSDBC = \"ODb\"\nGlobal Const WU_WC_ACCESSTBL = \"OTable\"\nGlobal Const WU_WC_ACCESSQRY = \"OQRY\"\nGlobal Const WU_WC_ACCESSFRM = \"OForm\"\nGlobal Const WU_WC_ACCESSRPT = \"OReport\"\nGlobal Const WU_WC_ACCESSMAC = \"OScript\"\nGlobal Const WU_WC_ACCESSMOD = \"OModule\"\nGlobal Const WU_WC_ACCESSFRMPOPUP = \"OFormPopup\"\nGlobal Const WU_WC_ACCESSTOOLBAR = \"OToolbar\"\nGlobal Const WU_WC_ACCESSMDICLIENT = \"MDIClient\"\n\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_ActiveFormName\n'\n' PURPOSE     : Returns the active form's name.\n'\n' NOTES       : If the form is loaded but not yet visible (e.g. it's\n'               in the OnOpen or initial OnCurrent event, this routine\n'               will return the null string.  This is a handy way of\n'               determining if you're in the initialization stage of\n'               a form (like the initial OnCurrent).\n'------------------------------------------------------------------------\nFunction wu_ActiveFormName () As String\n    On Error Resume Next\n\n    stName$ = Screen.ActiveForm.FormName\n    If (Err = 0) Then\n        wu_ActiveFormName = stName$\n    Else\n        wu_ActiveFormName = \"\"\n    End If\n\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_CenterDoc\n'\n' PURPOSE     : Centers a Microsoft Access form.\n'------------------------------------------------------------------------\nFunction wu_CenterDoc (hwnd%) As Integer\n    Dim r As WU_RECT, rDesk As WU_RECT\n    Dim dx As Integer, dy As Integer, dxDesk As Integer, dyDesk As Integer\n\n    If (hwnd% = 0) Then hwnd = wu_GetCurrentDoc(True)\n    hwndDesk% = wu_GetParent(hwnd%)\n    stClass$ = wu_StWindowClass(hwnd%)\n\n    ' Special case for forms: Move them to 0,0 and do a SizeToFitForm\n\n    If (stClass$ = WU_WC_ACCESSFRM) Then\n        DoCmd MoveSize 0, 0\n        On Error Resume Next\n        DoCmd DoMenuItem A_FORMBAR, 4, 5\n        On Error GoTo 0\n    End If\n\n    ' If this is a popup, use the WindowRect of the desktop.  Otherwise,\n    ' use the client rect.\n\n    f% = wu_GetWindowRect(hwnd%, r)\n    If (stClass$ = WU_WC_ACCESSFRMPOPUP) Then\n        f% = wu_GetWindowRect(hwndDesk%, rDesk)\n    Else\n        f% = wu_GetClientRect(hwndDesk%, rDesk)\n    End If\n    dx% = r.x2 - r.x1\n    dy% = r.y2 - r.y1\n    dxDesk% = rDesk.x2 - rDesk.x1\n    dyDesk% = rDesk.y2 - rDesk.y1\n    If (wu_StWindowClass(hwnd%) = WU_WC_ACCESSFRMPOPUP) Then\n        f% = wu_MoveWindow(hwnd%, rDesk.x1 + (dxDesk% - dx%) / 2, rDesk.y1 + (dyDesk% - dy%) / 2, dx%, dy%, True)\n    Else\n        f% = wu_MoveWindow(hwnd%, (dxDesk% - dx%) / 2, (dyDesk% - dy%) / 2, dx%, dy%, True)\n    End If\n    wu_CenterDoc = f%\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_ConvertTwipsToPixels\n'\n' PURPOSE     : Converts twips to pixels, calling Windows for\n'               the current device's Logical Pixels in the\n'               Horizontal or Vertical direction.\n'\n' ARGUMENTS   : nTwips%     - The number in twips (will be converted)\n'               nDirection% - 0=Horizontal, 1=Vertical.\n'------------------------------------------------------------------------\nFunction wu_ConvertTwipsToPixels (nTwips%, nDirection%) As Integer\n    Const nTwipsPerInch = 1440\n\n    hDC% = wu_GetDC(wu_GetAccessHwnd())\n    If (nDirection% = 0) Then       'Horizontal\n        nPixelsPerInch% = wu_GetDeviceCaps(hDC%, WU_LOGPIXELSX)\n    Else                            'Vertical\n        nPixelsPerInch% = wu_GetDeviceCaps(hDC%, WU_LOGPIXELSY)\n    End If\n    wu_ConvertTwipsToPixels = (nTwips% / nTwipsPerInch%) * nPixelsPerInch%\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_FIsDocument\n'\n' PURPOSE     : Determines whether the given window handle specifies a\n'               valid Access document.\n'------------------------------------------------------------------------\nFunction wu_FIsDocument (hwnd As Integer) As Integer\n    wu_FIsDocument = False\n    stClass$ = wu_StWindowClass(hwnd%)\n    If (stClass$ = WU_WC_ACCESSDBC) Then wu_FIsDocument = True\n    If (stClass$ = WU_WC_ACCESSTBL) Then wu_FIsDocument = True\n    If (stClass$ = WU_WC_ACCESSQRY) Then wu_FIsDocument = True\n    If (stClass$ = WU_WC_ACCESSFRM) Then wu_FIsDocument = True\n    If (stClass$ = WU_WC_ACCESSRPT) Then wu_FIsDocument = True\n    If (stClass$ = WU_WC_ACCESSMAC) Then wu_FIsDocument = True\n    If (stClass$ = WU_WC_ACCESSMOD) Then wu_FIsDocument = True\n    If (stClass$ = WU_WC_ACCESSFRMPOPUP) Then wu_FIsDocument = True\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_FMenuChecked\n'\n' PURPOSE     : Returns True if the specified menu item has a check\n'               mark next to it.\n'\n' ARGUMENTS   : iMenu% - The index of the drop down menu\n'               iItem% - The index of the item on the menu\n'\n'               Both of these arguments are zero based.\n'------------------------------------------------------------------------\nFunction wu_FMenuChecked (iMenu%, iItem%) As Integer\n    \n    ' If the current form is Zoomed, account for the system menu.\n\n    If (wu_IsZoomed(Screen.ActiveForm.hwnd)) Then\n        iMenu% = iMenu% + 1\n    End If\n\n    hMainMenu% = wu_GetMenu(wu_GetAccessHwnd())\n    hMenu% = wu_GetSubMenu(hMainMenu%, iMenu%)\n    fuFlags% = WU_MF_BYPOSITION Or WU_MF_CHECKED\n    wu_FMenuChecked = (wu_GetMenuState(hMenu%, iItem%, fuFlags%) <> 0)\n\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_FMenuEnabled\n'\n' PURPOSE     : Returns True if the specified menu item is enabled.\n'\n' ARGUMENTS   : iMenu% - The index of the drop down menu\n'               iItem% - The index of the item on the menu\n'\n'               Both of these arguments are zero based.\n'------------------------------------------------------------------------\nFunction wu_FMenuEnabled (iMenu%, iItem%) As Integer\n    \n    ' If the current form is Zoomed, account for the system menu.\n\n    If (wu_IsZoomed(Screen.ActiveForm.hwnd)) Then\n        iMenu% = iMenu% + 1\n    End If\n\n    hMainMenu% = wu_GetMenu(wu_GetAccessHwnd())\n    hMenu% = wu_GetSubMenu(hMainMenu%, iMenu%)\n    fuFlags% = WU_MF_BYPOSITION Or WU_MF_GRAYED\n    wu_FMenuEnabled = (wu_GetMenuState(hMenu%, iItem%, fuFlags%) = 0)\n\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_GetAccessHwnd()\n'\n' PURPOSE     : Returns a handle the the Access window.\n'------------------------------------------------------------------------\nFunction wu_GetAccessHwnd () As Integer\n    hwnd% = wu_GetActiveWindow()\n    While ((wu_StWindowClass(hwnd%) <> WU_WC_ACCESS) And (hwnd% <> 0))\n        hwnd% = wu_GetParent(hwnd%)\n    Wend\n    wu_GetAccessHwnd = hwnd%\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_GetCurrentDoc\n'\n' PURPOSE     : Retrieves the handle to the active Access document.\n'               If the fPopup flag is specified as TRUE, popup forms\n'               will be included.  If the fPopup flag is FALSE, Access\n'               will be activated first (a side effect).\n'------------------------------------------------------------------------\nFunction wu_GetCurrentDoc (fPopup%) As Integer\n    If (Not fPopup%) Then\n        hwnd% = wu_GetAccessHwnd()\n        If (hwnd% <> 0) Then hwnd% = wu_SetFocus(hwnd%)\n    End If\n    hwnd% = wu_GetFocus()\n    While (Not (wu_FIsDocument(hwnd%)) And (hwnd% <> 0))\n        hwnd% = wu_GetParent(hwnd%)\n    Wend\n    wu_GetCurrentDoc = hwnd%\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_GetMDIClientHwnd()\n'\n' PURPOSE     : Returns a handle the the Access MDIClient window.\n'------------------------------------------------------------------------\nFunction wu_GetMDIClientHwnd () As Integer\n    Dim hwnd As Integer\n    hwnd = wu_GetAccessHwnd()\n    hwnd = wu_GetWindow(hwnd, WU_GW_CHILD)\n    While ((wu_StWindowClass(hwnd) <> WU_WC_ACCESSMDICLIENT) And (hwnd <> 0))\n        hwnd = wu_GetWindow(hwnd, WU_GW_HWNDNEXT)\n    Wend\n    wu_GetMDIClientHwnd = hwnd\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_GetScreenSize\n'\n' PURPOSE     : Stores the screen size in r (a rectangle)\n'------------------------------------------------------------------------\nFunction wu_GetScreenSize (r As WU_RECT) As Integer\n    hwnd% = wu_GetDesktopWindow()\n    f% = wu_GetWindowRect(hwnd%, r)\n    wu_GetScreenSize = f%\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_GetToolbarHwnd\n'\n' PURPOSE     : Returns the handle of the toolbar if it is open.\n'------------------------------------------------------------------------\nFunction wu_GetToolbarHwnd () As Integer\n    hwnd% = wu_GetAccessHwnd()\n    hwnd% = wu_GetWindow(hwnd%, WU_GW_CHILD)\n    While ((wu_StWindowClass(hwnd%) <> WU_WC_ACCESSTOOLBAR) And (hwnd% <> 0))\n        hwnd% = wu_GetWindow(hwnd%, WU_GW_HWNDNEXT)\n    Wend\n    wu_GetToolbarHwnd = hwnd%\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_SetAccessSize\n'\n' PURPOSE     : Sizes the Access window to the specified coordinates.\n'               Coordinates should be given in pixels.\n'------------------------------------------------------------------------\nFunction wu_SetAccessSize (x%, y%, dx%, dy%) As Integer\n    hwnd% = wu_GetAccessHwnd()\n    If (wu_IsZoomed(hwnd%)) Then\n        f% = wu_ShowWindow(hwnd%, WU_SW_RESTORE)\n    End If\n    f% = wu_MoveWindow(hwnd%, x%, y%, dx%, dy%, True)\n    wu_SetAccessSize = f%\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_SetMenuChecked\n'\n' PURPOSE     : Sets the checkmark next to a menu item on or off.\n'\n' ARGUMENTS   : iMenu% - The index of the drop down menu\n'               iItem% - The index of the item on the menu\n'                           Both of these arguments are zero based.\n'               fChecked% - True to show the checkmark, false otherwise.\n'------------------------------------------------------------------------\nFunction wu_SetMenuChecked (iMenu%, iItem%, fChecked%) As Integer\n\n    ' If the current form is Zoomed, account for the system menu.\n\n    If (wu_IsZoomed(Screen.ActiveForm.hwnd)) Then\n        iMenu% = iMenu% + 1\n    End If\n\n    hMainMenu% = wu_GetMenu(wu_GetAccessHwnd())\n    hMenu% = wu_GetSubMenu(hMainMenu%, iMenu%)\n    If (fChecked%) Then\n        fuFlags% = WU_MF_BYPOSITION Or WU_MF_CHECKED\n    Else\n        fuFlags% = WU_MF_BYPOSITION Or WU_MF_UNCHECKED\n    End If\n    f% = wu_CheckMenuItem(hMenu%, iItem%, fuFlags%)\n    wu_DrawMenuBar wu_GetAccessHwnd()\n    wu_SetMenuChecked = f%\n\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_SetMenuEnabled\n'\n' PURPOSE     : Enables or disables a menu item.\n'\n' ARGUMENTS   : iMenu% - The index of the drop down menu\n'               iItem% - The index of the item on the menu\n'                           Both of these arguments are zero based.\n'               fEnabled% - True to show the checkmark, false otherwise.\n'------------------------------------------------------------------------\nFunction wu_SetMenuEnabled (iMenu%, iItem%, fEnabled%) As Integer\n    ' If the current form is Zoomed, account for the system menu.\n\n    If (wu_IsZoomed(Screen.ActiveForm.hwnd)) Then\n        iMenu% = iMenu% + 1\n    End If\n\n    hMainMenu% = wu_GetMenu(wu_GetAccessHwnd())\n    hMenu% = wu_GetSubMenu(hMainMenu%, iMenu%)\n    If (fEnabled%) Then\n        fuFlags% = WU_MF_BYPOSITION Or WU_MF_ENABLED\n    Else\n        fuFlags% = WU_MF_BYPOSITION Or WU_MF_GRAYED\n    End If\n    f% = wu_EnableMenuItem(hMenu%, iItem%, fuFlags%)\n    wu_DrawMenuBar wu_GetAccessHwnd()\n    wu_SetMenuEnabled = f%\n\nEnd Function\n\n'------------------------------------------------------------------------\n' FUNCTION    : wu_StWindowClass\n'\n' PURPOSE     : A simple cover function to the Windows API call.\n'------------------------------------------------------------------------\nFunction wu_StWindowClass (hwnd As Integer) As String\n    Const cchMax = 255\n    Dim stBuff As String * cchMax\n    cch% = wu_GetClassName(hwnd, stBuff, cchMax)\n    If (hwnd% = 0) Then\n        wu_StWindowClass = \"\"\n    Else\n        wu_StWindowClass = (Left$(stBuff, cch%))\n    End If\nEnd Function",
    "CreateDate": "1998-02-11T13:38:22.0000000",
    "EndDate": null,
    "ModificationDate": "1998-02-11T13:38:22.0000000",
    "DocumentId": "-24999808",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4930",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: Error Handling Base Structure on the Procedure Level.",
    "SortOrdinal": null,
    "ItemChar": "Function MyFunction () As Integer\n'\n'NOTE: This procedure contains line break characters\n'for readability. These characters are not supported\n'in Access Basic.\n'\n    '\n    'Write any local declarations here. \n    '\n    On Error GoTo MyFunction_Err\n    '\n    'Write code here.\n    '\nMyFunction_Exit:\n    '\n    'Write any \"clean up\" lines here.\n    '\n    Exit Function\n\nMyFunction_Err:\n    Select Case Err\n        '\n        'Enter known error number cases here.\n        '\n        Case Else\n            MsgBox Err & \": \" & Error$(Err), 16, _\n                \"MyFunction Error\"\n            Resume MyFunction_Exit\n    End Select\nEnd Function",
    "ItemText": null,
    "CreateDate": "1999-09-09T15:20:21.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-09T15:20:21.0000000",
    "DocumentId": "-24999807",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4931",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Sizing the Form Window to Fit the Form",
    "SortOrdinal": null,
    "ItemChar": "In order for the following sub-routine to work, a custom menu must be assigned to the form with the DoMenuItem action Size Window to Fit Form.\n\nSub Form_Load ()\n    '\n    'Among other things, this event uses the custom menu\n    'to size the Window via old-fashioned SendKeys crap.\n    '\n    SendKeys \"%MW\"\nEnd Sub\n\nNOTE: In Access 97, there is the acCmdSizeToFitForm parameter of the RunCommand method of the DoCmd object.",
    "ItemText": null,
    "CreateDate": "1998-08-07T13:36:58.0000000",
    "EndDate": null,
    "ModificationDate": "1998-08-07T13:36:58.0000000",
    "DocumentId": "-24999805",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4932",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Linked Tables; Referential Integrity Enforced for Native Jet Tables",
    "SortOrdinal": null,
    "ItemChar": "For attached tables in native Jet format (Access attached tables), referential integrity rules are enforced in the originating .MDB file. You cannot \"re-establish\" a relationship between linked tables that already have referential integrity defined elsewhere.\n\nIn the Relationship window the nature of their link will be deemed \"Indeterminate\" instead of many-to-many or one-to-one. Recall that, in general, indeterminate relationships are due to one or more tables having no indexes defined.",
    "ItemText": null,
    "CreateDate": "1998-06-17T21:04:05.0000000",
    "EndDate": null,
    "ModificationDate": "1998-06-17T21:04:05.0000000",
    "DocumentId": "-24999804",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4933",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "How to Completely Uninstall Access 97",
    "SortOrdinal": null,
    "ItemChar": "Assuming Microsoft never changes its knowledge base cataloging system, refer to Q163997.",
    "ItemText": null,
    "CreateDate": "1998-06-17T21:01:30.0000000",
    "EndDate": null,
    "ModificationDate": "1998-06-17T21:01:30.0000000",
    "DocumentId": "-24999803",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4934",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL: SELECTing Duplicates",
    "SortOrdinal": null,
    "ItemChar": "Let's project Column1 in Table1 and look for duplicates. The SQL syntax for this is:\n\n    SELECT Column1 FROM Table1\n    GROUP BY Column1\n    HAVING Count(*) > 1\n\nNOTE: the argument of Count() relates to the projections of GROUP BY.",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:52:36.6900000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:52:36.6900000",
    "DocumentId": "-24999775",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4935",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Definitions of Introductory, Intermediate And Advanced Skills",
    "SortOrdinal": null,
    "ItemChar": "According to Applications Developers (www.appdev.com), these are the skill levels:\n\nIntroductory\n>The IDE\n> Controls\n> Events\n> Compiliation and Distribution\n> VBA\n> Forms\n> Menus\n\nIntermediate\n> Objects\n> DAO\n> Multi-User Applications\n> Class Module Techniques\n> MDI Applications\n> Windows API\n> Printing\n> Crystal Reports\n> Optimization Techniques\n> On-Line Help\n> Writing to the Registry\n\nAdvanced\n> Concepts of ActiveX\n> Automation\n> Distributed COM\n> Building ActiveX Controls\n> RDO\n> Internet Related Functionality",
    "ItemText": null,
    "CreateDate": "1998-05-19T09:16:53.0000000",
    "EndDate": null,
    "ModificationDate": "1998-05-19T09:16:53.0000000",
    "DocumentId": "-24999769",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4936",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MOPPING UP HIGH CHOLESTEROL",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nWouldn't it be nice to eat what you like and still lower your blood cholesterol level and the risk of heart disease? All of you oatmeal lovers are on the right track. When included in a diet that's also low in saturated fat, oatmeal lowers your cholesterol because it contains soluble fiber. But, the benefits don't stop there. Oatmeal is also low in calories, full of iron, magnesium, and fiber; it's cholesterol free and low in saturated fat and sodium. So confident is the Food and Drug Administration that it has given oatmeal manufacturers the OK to boast of its healthy benefits on their product labels. \n\nWhat's the catch? To reap all the benefits of oatmeal, you need to eat approximately one-and-a-half cups of cooked oatmeal everyday to get the amount of soluble fiber necessary to substantially lower your cholesterol. If you can't imagine eating that much oatmeal day after day, then try adding oatmeal to other meals and snacks. Oats are a good substitute for breadcrumbs in meatloaf and can also be used in homemade pancakes and breads. Even oats toasted in the oven and tossed with a little brown sugar make a tasty, crunchy topping for yogurt and cereal. \n\nIf oatmeal just isn't your thing, there are other foods that contain soluble fiber. These foods include dried beans, such as kidney beans, and certain fruits and vegetables. Like oats, these foods are low in saturated fat.",
    "ItemText": null,
    "CreateDate": "2000-08-14T20:54:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-08-14T20:54:00.0000000",
    "DocumentId": "-19901868",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4937",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: Replication Data Errors Are Generated by Replicable Tables with AutoNumber Fields",
    "SortOrdinal": null,
    "ItemChar": "When you convert an Access database to a design master with a replicable table that has data type AutoNumber with the NewValue property set to Increment, this property will be changed to Random. The random number will range in value from -2,147,483,648 to 2,147,483,647.\n\nIf for some reason you manage to change this field's NewValue property back to Increment and proceed to add rows in the design master and its replica, data errors will be generated upon replica-master synchronization.\n\nSOLUTION: Set the NewValue property to Random for a field of data type AutoNumber when designing a table that means to be replicable.\n\nNOTE: (Excerpt from Access 97 Help)\n\n\"AutoNumber fields and replication\n\n\"If you plan to replicate your database, you need to consider what field size is appropriate for the AutoNumber field used as a table's primary key. If you use an AutoNumber field as the primary key for a table in the replicated database, set its FieldSize property to either Long Integer or Replication ID.\n\n>> \"If fewer than 100 records are routinely added between synchronizing replicas, use a Long Integer setting for the FieldSize property to take up less disk space.\n\n>> \"If more than 100 records are routinely added between synchronizing replicas, you should use Replication ID for the FieldSize property setting to prevent records from being assigned the same primary key value in each replica. Note, however, that an AutoNumber field with a Replication ID field size produces a 128-bit value that will require more disk space.\"",
    "ItemText": null,
    "CreateDate": "1998-05-12T12:54:41.0000000",
    "EndDate": null,
    "ModificationDate": "1998-05-12T12:54:41.0000000",
    "DocumentId": "25904967",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4938",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: Linked SQL Server Tables Pad Spaces at the End of Text Values",
    "SortOrdinal": null,
    "ItemChar": "Linked SQL Server Tables in Microsoft Access 97 represent the SQL definition of the table defined in the remote database. This implies that if a column is defined with type char(10), Access will show in Datasheet View 10 characters per row in the column. This in turn implies that when there are only two characters of \"useful\" data in the row, Access will \"pad\" 8 spaces after the two characters.\n\nThere are two ways to deal with this problem: (i) use the more expensive varchar() data type on the tables in the remote database; or (ii) use the VBA.Trim() (or VBA.RTrim()) function on values taken out of the column.",
    "ItemText": null,
    "CreateDate": "1999-03-27T22:53:53.0000000",
    "EndDate": null,
    "ModificationDate": "1999-03-27T22:53:53.0000000",
    "DocumentId": "26900681",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4939",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ByVal and ByRef; Functions and Classes",
    "SortOrdinal": null,
    "ItemChar": "When a variable is passed to a function, by default (since VB 4.0) it is passed by reference. If the variable is local to the procedure calling the function, an error will be generated if the function does not use the ByVal keyword in the argument list. However, module-level or Public variables can be passed.\n\nThe opinion here is that the explicit use of ByRef against variables that are not object variables ultimately means that there will be several Public or module variables having their values changed in many different procedures. Logically managing these variables seems more difficult than using the Classes available in any OLE Automation object hosting VBA 5.0 and above (e.g. VB 4.0 and above or Access 95 and above).\n\nBefore the advent of Visual Basic objects (in VB 3.x) ByVal was the default method of passing a variable to a function. To make the use of object variables \"easier,\" I suppose Microsoft was led to switch over to ByRef being default in the object-oriented world of Visual Basic.",
    "ItemText": null,
    "CreateDate": "1999-01-11T21:34:33.0000000",
    "EndDate": null,
    "ModificationDate": "1999-01-11T21:34:33.0000000",
    "DocumentId": "81051056",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4940",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "HTML: Stupid Non-Breaking Space Tricks",
    "SortOrdinal": null,
    "ItemChar": "Yes, style sheets have the padding-top and margin-top attributes, but if there is a concern about a browser (like Netscape Navigator 3.x) that may not support style sheets, try using the non-breaking space entity (&nbsp;). To force line spacing above data in a table cell, try this:\n\n    <TABLE>\n    <TR>\n        <TD>This text is in row one of this table.</TD>\n    </TR>\n    <TR>\n        <TD>&nbsp;<BR><BR>This text is in row two.</TD>\n    </TR>\n    </TABLE>\n\nwhere the text in the second row of the table has a little more \"padding\" on the top thanks to the non-breaking space. The second TD block has a \"hidden\" line of text consisting of the single non-breaking space character. The <BR> tags then \"break\" this hidden line.",
    "ItemText": null,
    "CreateDate": "1999-02-09T18:10:13.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-09T18:10:13.0000000",
    "DocumentId": "90350456",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4941",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "What the New StartUpPosition Property Replaces; Centering a Form",
    "SortOrdinal": null,
    "ItemChar": "'The following has been replaced with the StartUpPosition\n'property where StartUpPosition = vbCenter can\n'be set at design time or runtime:\n\n    Public Sub basFrmCenter(ByRef Frm As Form)\n\n        With Frm\n            .Move (Screen.Width - .Width) / 2, _\n                (Screen.Height - .Height) / 2\n        End With\n\n    End Sub",
    "ItemText": null,
    "CreateDate": "1999-04-03T23:21:15.0000000",
    "EndDate": null,
    "ModificationDate": "1999-04-03T23:21:15.0000000",
    "DocumentId": "91093392",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4942",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Middleware, A Definition",
    "SortOrdinal": null,
    "ItemChar": "The following is from the PC Webopaedia (http://www.pcwebopaedia.com/TERM/m/middleware.html):\n\nSoftware that connects two otherwise separate applications. For example, there are a number of middleware products that link a database system to a Web server. This allows users to request data from the database using forms displayed on a Web browser, and it enables the Web server to return dynamic Web pages based on the user's requests and profile. \n\nThe term middleware is used to describe separate products that serve as the glue between two applications. It is, therefore, distinct from import and export features that may be built into one of the applications. Middleware is sometimes called plumbing because it connects two sides of an application and passes data between them. In a three-tier architecture, middleware occupies the middle tier. Common middleware categories include: \n\nTP monitors \nDCE environments \nRPC systems \nObject Request Brokers (ORBs) \nDatabase access systems \nMessage Passing",
    "ItemText": null,
    "CreateDate": "1999-08-29T20:51:29.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-29T20:51:29.0000000",
    "DocumentId": "92595221",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4943",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 95: Clearing the Run... List Under the Start Menu",
    "SortOrdinal": null,
    "ItemChar": "You can make this change by editing the Registry. (As always, be sure to back up your Registry files--system.dat and user.dat--first.) To open the Registry Editor, click the Start button, select Run, type \n\nregedit \n\nand click OK. \n\nNavigate your way to \nHKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/Explorer/RunMRU, and in the right pane, you'll see all the items that currently appear in your Run list. To delete an item, right-mouse-click its letter under Name, then select Delete. Click Yes to confirm, and the item disappears. Repeat these same steps for the rest of the items you want to delete (you can select more than one at a time by holding down Ctrl as you click each item), being sure not to delete the items named MRUList and (Default). Close the Registry Editor, restart the computer, check out your Run list, and you'll find that it's clean as a whistle!",
    "ItemText": null,
    "CreateDate": "2003-07-31T14:46:09.0000000",
    "EndDate": null,
    "ModificationDate": "2003-07-31T14:46:09.0000000",
    "DocumentId": "102762646",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4944",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Windows 95: Core Installation",
    "SortOrdinal": null,
    "ItemChar": "This install is approximately 28.6 MB.\n\nBoot from DOS 6.x floppy (for Windows 95 Upgrade CD-ROM access). Run Setup.\n\nWindows 95 Setup Wizard:\n    Other Directory: C:\\WIN95\n    Setup Options > Custom\n    (Do not allow Setup to analyze the computer.)\n    Get Connected: not selected\n    Accessibility Options: not selected\n    Accessories: only Calculator is selected\n    Communications: not selected\n    Disk Tools: only Defrag is selected\n    Multimedia: defaults settings kept plus Volume Control\n    \nDo not allow Network Configuration, Computer Settings, Startup Disk and Add Printer Wizard.\n\nNOTE: PNP will install Creative Labs Devices; if there is a problem (like a partial install of the drivers) go Device Manager > Sound, Video and Game Controllers > [driver] > Change Driver..., where [driver] is the Windows 95 driver having problems.\n\nApply Windows 95 SP1, Kernel Update and OLE Update.\n\nGo to Display Properties > Settings > Change Display Type > Monitor Type > Change... > Standard Monitor Types > Super VGA 1024x768; check Monitor is Energy Star Compliant.\n\nInstall Guest 95.\n\nInstall Sound Software.",
    "ItemText": null,
    "CreateDate": "1998-11-28T20:29:45.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-28T20:29:45.0000000",
    "DocumentId": "105652584",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4945",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Perl: Listing the Environment Variables Exposed to a CGI Session",
    "SortOrdinal": null,
    "ItemChar": "#!/path/to/perl\nprint \"Content-type: text/html\\n\\n\";\nprint \"<HTML>\\n\";\nprint \"<PRE>\\n\";\n@keys = keys %ENV;\n@values = values %ENV;\nforeach $key (sort(keys %ENV)) { print \"$key = $ENV{$key}\\n\" };\nprint \"</PRE>\\n\";\nprint \"</HTML>\\n\";",
    "ItemText": null,
    "CreateDate": "1998-12-17T08:56:12.0000000",
    "EndDate": null,
    "ModificationDate": "1998-12-17T08:56:12.0000000",
    "DocumentId": "117029555",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4946",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: basRenLinkTbls()",
    "SortOrdinal": null,
    "ItemChar": "Public Sub basRenLinkTbls()\n'\n'This procedure renames all tables starting with \"dbo_\".\n'\n    Dim DAOTblDef As DAO.TableDef\n    \n    With Application\n    \n        For Each DAOTblDef In CurrentDb.TableDefs\n            If VBA.InStr(1, DAOTblDef.Name, _\n                \"dbo_\",  vbTextCompare) > 0 Then\n                DAOTblDef.Name = VBA.Mid$(DAOTblDef.Name, 5)\n            End If\n        Next\n        \n        .CurrentDb.TableDefs.Refresh\n        .RefreshDatabaseWindow\n        \n    End With\n\nEnd Sub",
    "ItemText": null,
    "CreateDate": "1999-09-07T22:21:49.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-07T22:21:49.0000000",
    "DocumentId": "140818643",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4947",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB PROBLEM: The Empty Keyword Causes Compilation Errors in ActiveX DLLs",
    "SortOrdinal": null,
    "ItemChar": "Use vbNullString instead.",
    "ItemText": null,
    "CreateDate": "2000-02-02T00:27:49.0000000",
    "EndDate": null,
    "ModificationDate": "2000-02-02T00:27:49.0000000",
    "DocumentId": "157075603",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4948",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CELERY'S HIGH WATER CONTENT IS A BENEFIT",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nFoods with a high water content can play an important role in keeping your fluid levels up, which can help reduce fatigue and improve your physical performance and overall health. \n\nAlong with that bottle of water you keep in your backpack or the cup of water you sip at your desk, add some of these water-rich foods to your daily meals and snacks: lettuce, watermelon, grapes, cantaloupe, honeydew, oranges, tangerines, grapefruit, apples, pears, peaches, plums, jicama, broccoli, carrots, fruit and vegetable juices, cucumbers, celery, and radishes. \n\nEven foods that aren't obviously juicy can provide your body with \nneeded liquids. Baked potatoes, canned tuna, cooked pasta, rice, \nbeans, and even lean roasted chicken and beef are more than 50 percent water by weight.",
    "ItemText": null,
    "CreateDate": "2000-04-15T17:32:48.0000000",
    "EndDate": null,
    "ModificationDate": "2000-04-15T17:32:48.0000000",
    "DocumentId": "218600428",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4949",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript and Java; How They \"Talk\" to Each Other",
    "SortOrdinal": null,
    "ItemChar": "Javascript talks to Java Applets by calling the public methods of the Applet and changing its public properties. Java talks to Javascript using third-party interfaces from Microsoft (stuff in VJ++ 6.x) and Netscape (special java packages). I am not aware of any standard way for a Java applet to access the object model of a browser.",
    "ItemText": null,
    "CreateDate": "2001-03-31T08:43:53.3430000",
    "EndDate": null,
    "ModificationDate": "2001-03-31T08:43:53.3430000",
    "DocumentId": "278183433",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4950",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The 99 Billion Limit for Non-Integer Numeric Data",
    "SortOrdinal": null,
    "ItemChar": "The note under Microsoft Visual Basic for Applications entitled \"Review of the Data Type Summary: Floating Point Numbers\" concludes that 99 billion is the highest decimal number that can be stored in an Access (DAO) database. This is true only under the following conditions:\n\nThe use of the CCur() is ruled out because its behavior changes with the Regional Settings of the operating system.\n\nOne or more numbers in the database will require accuracy out to four decimal places.\n\nThe use of CDbl() cannot be ruled out because the design requires a type conversion function.",
    "ItemText": null,
    "CreateDate": "1998-06-12T23:21:26.0000000",
    "EndDate": null,
    "ModificationDate": "1998-06-12T23:21:26.0000000",
    "DocumentId": "360101780",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4951",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Limitations of the Do Loop",
    "SortOrdinal": null,
    "ItemChar": "Using multiple conditions in the Do Loop structure with the Like operator do not always evaluate properly. In such cases, the use of Exit Do helps. For example, the following Do Loop condition is never true:\n\n    Do Until g_str Like \"*PAGE*\" Or g_str Like \"*[#]*[#]*[#]*\"\n        g_str = .ReadLine 'This method is inside a With block.\n\n        'Other stuff goes here.\n\n    Loop\n\nHowever, the following works as planned:\n    Do\n        g_str = .ReadLine 'This method is inside a With block.\n        \n        If g_str Like \"*PAGE*\" _ \n            Or g_str Like \"*[#]*[#]*[#]*\" Then Exit Do\n\n        'Other stuff goes here.\n\n    Loop",
    "ItemText": null,
    "CreateDate": "1998-10-29T12:54:50.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-29T12:54:50.0000000",
    "DocumentId": "362287989",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4952",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The Difference Between the Value and Text Properties in a Bound Control; the OldValue Property",
    "SortOrdinal": null,
    "ItemChar": "Access 97 online Help explains in detail the difference between Value and Text for data bound controls. This difference may be very important in the case of Combo Boxes where text displayed in the control is not the value stored in the bound column (ControlSource) of the control. It could also be used when the Input Mask Property is specified.\n\nIt seems not unreasonable to recall the OldValue Property of data-bound controls in this context. Remembering this property may be critical in a design manipuliating the Text property.\n\nREMINDER: If txtBox is the name of a Text Box Control then\n\n    txtBox.Value = txtBox\n\nso the \"default value\" of the control is its Value property.",
    "ItemText": null,
    "CreateDate": "1998-10-31T22:13:55.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-31T22:13:55.0000000",
    "DocumentId": "450133044",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4953",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Serial Copy Management System (SCMS)",
    "SortOrdinal": null,
    "ItemChar": "SCMS is an acronym (pronounced \"scums\") standing for Serial Copy Management System. This technology permits only one generation of digital-to-digital copying.\n\nThe following is from Sweetwater Sound (www.sweetwater.com):\n\n\"This nefarious little \"feature\" was designed by the ever-paranoid record labels to prevent evil-doers from digitally cloning CDs. Usually found on the S/PDIF ports of \"consumer\" (was there ever REALLY such a thing?) and \"semi-pro\" DAT recorders, SCMS is a bit flagging system that prevents digital copies from being made of digital copies. This means you can make as many digital copies of your original DAT tapes as you like, but you cannot digitally make copies of any of those copies. Beware of SCMS if you are sending backup DAT copies of your master tapes to a CD duplicator, or a collaborator. They may not be able to digitally transfer your work to another tape or media!\"",
    "ItemText": null,
    "CreateDate": "1999-10-02T10:20:04.0000000",
    "EndDate": null,
    "ModificationDate": "1999-10-02T10:20:04.0000000",
    "DocumentId": "458984172",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4954",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB: ADO; Using the Properties Collection of the Connection Object",
    "SortOrdinal": null,
    "ItemChar": "I use the Properties Collection of the Connection object to enter custom log information during a database connection. For example the sub LogSession is called (repeatedly) during the ConnectComplete Event:\n\nPrivate Sub pADOcnn_ConnectComplete(ByVal pError As ADODB.Error, _\n        adStatus As ADODB.EventStatusEnum, _\n        ByVal pConnection As ADODB.Connection)\n    \n        If adStatus = adStatusOK Then\n            Call LogSession(\"Data Connection established (\" _\n                & VBA.Now & \")\")\n            Call LogSession(VBA.Space$(4) _\n                & \"User ID:                      \" _\n                & pConnection.Properties.Item(\"User ID\"))\n            If pConnection.Provider Like \"SQLOLEDB*\" Then _\n            Call LogSession(VBA.Space$(4) _\n                & \"Workstation ID:               \" _\n                & pConnection.Properties.Item(\"Workstation ID\"))\n            Call LogSession(VBA.Space$(4) _\n                & \"Data Source DBMS Name:        \" _\n                & pConnection.Properties.Item(\"DBMS Name\"))\n            Call LogSession(VBA.Space$(4) _\n                & \"Data Source DBMS Version:     \" _\n                & pConnection.Properties.Item(\"DBMS Version\"))\n            Call LogSession(VBA.Space$(4) _\n                & \"Data Source Current Catalog:  \" _\n                & pConnection.Properties.Item(\"Current Catalog\"))\n            Call LogSession(VBA.Space$(4) _\n                & \"Data Source Provider Name:    \" _\n                & pConnection.Properties.Item(\"Provider Name\"))\n            Call LogSession(VBA.Space$(4) _\n                & \"Data Source Provider Version: \" _\n                & pConnection.Properties.Item(\"DBMS Version\"))\n        ElseIf adStatus = adStatusErrorsOccurred Then\n            Call EnvironmentErr(pError)\n            Call LogSession(\"ERROR (\" & VBA.Now & \"):\" _\n                & p_strErrMsg)\n        End If\n    End Sub\n\nThe Key strings for the Properties Collection is based on MS KB article Q193135 (\"INFO: Initialization Properties for SQLOLEDB OLE DB Provider\").",
    "ItemText": null,
    "CreateDate": "2000-02-09T22:51:03.0000000",
    "EndDate": null,
    "ModificationDate": "2000-02-09T22:51:03.0000000",
    "DocumentId": "566367175",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4955",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Adobe PageMaker 6.5: Using the 10-Key Pad to Navigate Text",
    "SortOrdinal": null,
    "ItemChar": "With the Num Lock key off we have:\n\n1 To the end of the current line  \n2 One line down  \n3 One screen down  \n4 One character to the left  \n6 One character to the right  \n7 To the beginning of the current line  \n8 One line up  \n9 One screen up\n\nCtrl/Command-1 To the end of the current sentence  \nCtrl/Command-2 One paragraph down  \nCtrl/Command-4 One word to the left  \nCtrl/Command-6 One word to the right \nCtrl/Command-7 To the beginning of the current sentence  \nCtrl/Command-8 One paragraph up",
    "ItemText": null,
    "CreateDate": "2001-12-25T23:08:48.5870000",
    "EndDate": null,
    "ModificationDate": "2001-12-25T23:08:48.5870000",
    "DocumentId": "588096113",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4956",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Adobe Photoshop: 3.0; Tutorial; Lesson 1; Notes",
    "SortOrdinal": null,
    "ItemChar": "Selected features introduced:\n(i) monitor calibration;\n(ii) features of the status bar;\n(iii)  zooming in/out on an image with an active selection;\n(iv) the Erased to Saved option;\n(v) treating an active selection like a static layer.\n\nProcedures:\n(i) percentages in palettes can be entered by using the 10-key pad, where 5 means 50% and 0 means 100%.",
    "ItemText": null,
    "CreateDate": "1999-08-24T20:10:44.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-24T20:10:44.0000000",
    "DocumentId": "594672087",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4957",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: a Delay with DoEvents",
    "SortOrdinal": null,
    "ItemChar": "'Note that Access Basic does not have a Date data type.\n'Dates are stored as double-precision, floating point\n'numbers. For more information please see the following\n'Microsoft Knowledge Base Articles:\n'Q130514: \"ACC: Storing, Calculating, and Comparing\n'Date/Time Data\"\n'Q88657: \"ACC: Functions for Calculating and Displaying\n'Date/Time Values\"\n'\nSub basCountDown (argDate As Variant)\n\n    If IsDate(argDate) Then\n    \n        Do\n\n            If g_intStopWaiting Then\n                Exit Sub\n            End If\n\n            DoEvents\n        Loop Until Now > argDate\n        \n    Else\n\n        MsgBox \"Invalid Date!\", 16, \"basCountDown Error\"\n        g_intStopWaiting = True\n\n    End If\n\nEnd Sub\n'\n'Here is a sample procedure passing an argument\n'to this function:\n'\nFunction basFreshenData (argStr As String) As Integer\n\n    On Error GoTo basFreshenData_Err\n\n    g_intIsRunning = True\n\n    Select Case argStr\n        Case \"Weekday\"\n            g_varReturn = Date + TimeSerial(23, 59, 0)\n\n        Case \"Weekend\"\n            'The last day of current week:\n            g_varReturn = Date - Weekday(Date) + 7\n            g_varReturn = g_varReturn + TimeSerial(23, 59, 0)\n\n    End Select\n\n    basFreshenData = True\n\n    Forms!frmMain.Caption = \"Waiting for \" & g_varReturn & \"...\"\n\n    basCountDown (g_varReturn)\n\n    'etc....\n\n    End Function\n'\n'Notice how a variant is used to store date values\n'in Acces Basic. Also note how no strings are used\n'to handle dates. This procedure should be immune\n'to regional settings.\n'",
    "ItemText": null,
    "CreateDate": "1998-11-30T08:59:56.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-30T08:59:56.0000000",
    "DocumentId": "605362455",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4958",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Adobe Photoshop: 3.0; Tutorial; Lesson 2; Notes",
    "SortOrdinal": null,
    "ItemChar": "Selected features introduced:\n(i) the Unsharp Mask command;\n(ii) the Dust & Scratches command;\n(iii) the From Saved option in the Rubber Stamp tool;\n(iv) the Dodge/Burn/Sponge tool.\n\nProcedures:\n(i) when an image is reduced in size, scanned or rotated it could appear \"soft\"; use Sharpen > Unsharp Mask from the filter menu;\n(ii) use Hue/Saturation or the Sponge tool to make colors more intense;\n(iii) lighten and darken areas of an image with the Levels command (more sophisticated than the Brightness/Contrast command).",
    "ItemText": null,
    "CreateDate": "1999-08-24T20:10:49.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-24T20:10:49.0000000",
    "DocumentId": "608179404",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4959",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBScript and ASP: The \"Brute Force\" Debugging of ASP Pages",
    "SortOrdinal": null,
    "ItemChar": "At this time in my life, I find it convenient to debug my ASP pages directly in the web browser window. This probably comes from my \"traditional\" building of ASP pages with only a text editor. I am sure I am missing out on the code breaking features of Visual InterDev. But for now, when I want to see the contents of a variable (e.g. vReturn), I would use the following lines of code:\n\n    Response. Write \"My Variable: \" & vReturn\n    Response.End\n\nThese lines are placed in the same manner that VB's Stop statement was heavily used in the \"old days.\" And they should be feared in the same way as well!\n\nAnother more subtle technique is to Write HTML comments with the form:\n\n    Response. Write \"<!-- My Variable: \" & vReturn & \"-->\"",
    "ItemText": null,
    "CreateDate": "1999-12-23T14:56:36.0000000",
    "EndDate": null,
    "ModificationDate": "1999-12-23T14:56:36.0000000",
    "DocumentId": "636904405",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4960",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Adobe Photoshop: 3.0; Tutorial; Lesson 3; Notes",
    "SortOrdinal": null,
    "ItemChar": "Selected features introduced:\n(i) the Quick Mask mode and Standard Mode buttons;\n(ii) saving/retrieving selections from a channel with the Channels Palette;\n(iii) the Paste Into command;\n(iv) the Color Balance command;\n(v) the Defringe command.\n\nProcedures:\n(i) toggling between Standard Mode and Quick Mask mode is useful when making precise selections;\n(ii) adding and subtracting from selections with key commands and the mouse, quickly make precise selections (also use the tab key to hide palettes and the zoom keyboard shortcut);\n(iii) pasting into a selection more than once may be needed for special effects;\n(iv) Use the Color Balance to cool images off  or warm them up;\n(v) use the Defringe command to remove \"halos\" (a fringe of a contrasting color against a background) from composite images.",
    "ItemText": null,
    "CreateDate": "1999-08-24T20:10:50.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-24T20:10:50.0000000",
    "DocumentId": "687009757",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4961",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP: Performance Hits When Using the Application Object?",
    "SortOrdinal": null,
    "ItemChar": "Yes. I have heard many many times about not using the Session object for performance and load-balancing reasons, but no one seems to talk about these things when it comes to the Application object.\n\nIn fact, Microsoft demos its VB6 WebClass by plugging it directly into the Application.Contents() collection as an Object variable! (BTW: when I try to do this with a VB ActiveX DLL it fails when loaded a second time but that is another story.) Isn't this a performance hit? This is not a rhetorical question. Tom Baastad answers (from tek-tips.com):\n\n\"The main reason for not using the Application object is that it forces IIS into single thread mode for the time consumed starting with locking the application object, manipulating the variable, etc until the object is unlocked.\"\n\n\"Another potential problem is the scope of an object in application mode, where it has been known to create both memory leaks and weird crashes of the IIS application.\"\n\n\"As a rule of thumb one should open an object on the same page that is being used and close it before that page is exited. This should help you steer clear of the dreaded ASP0115 error that is often associated with objects not being properly closed, etc.\"",
    "ItemText": null,
    "CreateDate": "2002-01-05T08:57:32.1330000",
    "EndDate": null,
    "ModificationDate": "2002-01-05T08:57:32.1330000",
    "DocumentId": "703600558",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4962",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB: ADO; Code; Reading and Writing Strings to a DAO Table",
    "SortOrdinal": null,
    "ItemChar": "Public Function basGetString(KeyName As String, ColumnName As String) As String\n    \n    On Error GoTo basGetString_Err\n    \n    Set m_rsADO = New ADODB.Recordset\n    m_rsADO.Open Source:=\"tblStrings\", _\n        ActiveConnection:=m_cnnADO, _\n        CursorType:=adOpenKeyset, _\n        LockType:=adLockReadOnly, _\n        Options:=adCmdTable\n\n    With m_rsADO\n        .Find Criteria:=\"name = '\" & KeyName & \"'\", _\n            SearchDirection:=adSearchForward\n        If Not .EOF Then _\n            basGetString = .Fields(ColumnName) & Empty\n    End With\n    \nbasGetString_Exit:\n    m_rsADO.Close\n    Set m_rsADO = Nothing\n    Exit Function\n    \nbasGetString_Err:\n    Select Case Err\n        Case Else\n            MsgBox Err & \": \" & Err.Description, vbCritical, \"basGetString Error\"\n            Resume basGetString_Exit\n    End Select\n    \nEnd Function\n\nPublic Sub basWriteString(KeyName As String, NewStr As String)\n    \n    Dim strSQL As String\n    \n    On Error GoTo basWriteString_Err\n    \n    strSQL = \"UPDATE tblStrings SET tblStrings.string = \"\"\" & NewStr & \"\"\"\" _\n        & \" WHERE tblStrings.name = \"\"\" & KeyName & \"\"\"\"\n    \n    Set m_cmdADO = New ADODB.Command\n    \n    With m_cmdADO\n        .ActiveConnection = m_cnnADO\n        .CommandType = adCmdText\n        .CommandText = strSQL\n        .Execute\n    End With\n    \nbasWriteString_Exit:\n    Set m_cmdADO = Nothing\n    Exit Sub\n    \nbasWriteString_Err:\n    Select Case Err\n        Case Else\n            MsgBox Err & \": \" & Err.Description, vbCritical, \"basWriteString Error\"\n            Resume basWriteString_Exit\n    End Select\n    \nEnd Sub",
    "ItemText": null,
    "CreateDate": "1999-03-01T13:35:47.0000000",
    "EndDate": null,
    "ModificationDate": "1999-03-01T13:35:47.0000000",
    "DocumentId": "715694788",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4963",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB Code: General Structure for an IIS Application",
    "SortOrdinal": null,
    "ItemChar": "'Since I am very untrusting of VB 6 Web Classes,\n'I start IIS Applications with an ActiveX DLL Project.\n'I have one Class (called WebApp) \n'that talks directly to the server\n'and the other Classes support the WebApp Class.\n'This is the code that builds WebApp:\n'\n'For more details about this technique please see\n'MS KB article Q238274\n'(\"Q238274 - HOWTO: Obtain ObjectContext with\n'ObjectControl Inside VB COM DLL From ASP and MTS\")\n'\n'and\n'\n'MSDN Article \"Instancing for Classes Provided by ActiveX Components\"\n'(http://msdn.microsoft.com/library/devprods/vs6/vbasic\n'/vbcon98/vbconinstancingforolecomponentclasses.htm)\n'\nImplements ObjectControl\n\nPrivate MTSObjectContext As MTxAS.ObjectContext\nPrivate ASPApplication As ASPTypeLibrary.Application\nPrivate ASPRequest As ASPTypeLibrary.Request\nPrivate ASPResponse As ASPTypeLibrary.Response\nPrivate ASPServer As ASPTypeLibrary.Server\nPrivate ASPSession As ASPTypeLibrary.Session\n\nPrivate p_strHTML As String\nPrivate p_ADOrst As ADODB.Recordset\n\n'These statements refer to the Classes that\n'support\" the WebApp Class:Public objHTML As HTMLServices\nPublic objADO  As ADOServices\nPublic objExcel As ExcelServices\nPublic objStr  As StringServices\nPublic objTextFile As TextFileHandler\n\nPrivate Sub ObjectControl_Activate()\n    'The MTSObjectContext object variable is access to MTS.\n    Set MTSObjectContext = MTxAS.GetObjectContext()\n    Set ASPApplication = MTSObjectContext.Item(\"Application\")\n    Set ASPRequest = MTSObjectContext.Item(\"Request\")\n    Set ASPResponse = MTSObjectContext.Item(\"Response\")\n    Set ASPServer = MTSObjectContext.Item(\"Server\")\n    \n    'TIP: Avoid using the Session object for Stateless\n    'high performance.\n    'The @EnableSessionState Directive is set to False.\n    'If a Session is needed then uncomment this line:\n    'Set ASPSession = MTSObjectContext.Item(\"Session\")\n    \n    Set objHTML = _\n        MTSObjectContext.CreateInstance(VB.App.EXEName _\n            & \".HTMLServices\")\n    'Note that we are using CreateInstance.\n    'To use VBA object-creation methods would instantiate \n    'these objects outside of MTS context.\n    \nEnd Sub\n\nPrivate Sub ObjectControl_Deactivate()\n    \n    Set ASPApplication = Nothing\n    Set ASPRequest = Nothing\n    Set ASPResponse = Nothing\n    Set ASPServer = Nothing\n    Set ASPSession = Nothing\n    \n    Set objHTML = Nothing\n    \n    Set MTSObjectContext = Nothing\n\nEnd Sub\n\nPrivate Function ObjectControl_CanBePooled() As Boolean\n    ObjectControl_CanBePooled = False\nEnd Function\n\nPublic Sub Command(Optional ByVal Cmd = vbNullString)\n\n    If ASPRequest.QueryString.Count > 0 Then\n        Cmd = ASPRequest.QueryString.Item(\"Cmd\")\n    End If\n    \n    Select Case Cmd\n        Case \"SayHello\"\n            Call ASPResponse.Write(objHTML.GetPage(\"Hello World!\"))\n        Case Else\n            p_strHTML = \"<H1>IIS Web Application</H1>\" & vbCrLf _\n                & \"<UL>\" & vbCrLf _\n                & VBA.Space$(4) & \"<LI>Application Name: \" _\n                & App.ProductName & \"</LI>\" & vbCrLf _\n                & VBA.Space$(4) & \"<LI>Copyright: \" _\n                & VB.App.LegalCopyright & \"</LI>\" & vbCrLf _\n                & VBA.Space$(4) & \"<LI>Company Name: \" _\n                & VB.App.CompanyName & \"</LI>\" & vbCrLf _\n                & VBA.Space$(4) & \"<LI>Comments: \" _\n                & VB.App.Comments & \"</LI>\" & vbCrLf\n            Call ASPResponse.Write(objHTML.GetPage(p_strHTML))\n    End Select\n\nEnd Sub\n\n* * *\n\nWhat follows is the ASP code that calls the IIS Application:\n\n<%@ EnableSessionState=False Language=VBScript %>\n<%\n    Set obj = Server.CreateObject(\"Default.WebApp\")\n    \n    obj.Command()\n%>",
    "ItemText": null,
    "CreateDate": "2000-04-11T22:55:17.0000000",
    "EndDate": null,
    "ModificationDate": "2000-04-11T22:55:17.0000000",
    "DocumentId": "745182366",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4964",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "HTML: The \"Combo Box\" in SELECT Markup",
    "SortOrdinal": null,
    "ItemChar": "<!-- What Microsoft calls the \"combo box\"... -->\n<FORM>\n    <SELECT NAME=\"MyOptionGroup\">\n        <OPTION VALUE=MyStringValue1, SELECTED>MyItem1\n        <OPTION>MyItem2\n        <!-- more group items appear here... -->\n        <OPTION>MyItemN\n    </SELECT>\n</FORM>",
    "ItemText": null,
    "CreateDate": "1998-08-06T19:01:54.0000000",
    "EndDate": null,
    "ModificationDate": "1998-08-06T19:01:54.0000000",
    "DocumentId": "805218111",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4965",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT: Running the ODBC Administrator From the Command Line",
    "SortOrdinal": null,
    "ItemChar": "Enter the command\n\n    odbcad32\n\nin the CMD console or Run dialog to run ODBCAD32.EXE in the %SystemRoot%\\SYSTEM32 directory. This is especially useful if the current user logged in to their desktop does not have rights to the Control Panel applets.",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:29:50.8370000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:29:50.8370000",
    "DocumentId": "842192290",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4966",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript: Conditional Expressions",
    "SortOrdinal": null,
    "ItemChar": "In Javascript, a variable value can be set based on a condition. This \"shorthand\" avoids writing an if/else structure:\n\n    <variable> = (<condition>) ? <value1> : <value2>\n\nWhere <variable> is set to <value1> if <condition> returns True or <value2> if <condition> returns false.",
    "ItemText": null,
    "CreateDate": "1998-12-13T14:23:14.0000000",
    "EndDate": null,
    "ModificationDate": "1998-12-13T14:23:14.0000000",
    "DocumentId": "864381846",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4967",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Using Queries to Handle Replication Errors",
    "SortOrdinal": null,
    "ItemChar": "All replication synchronization data errors are stored in a hidden system table called MSysErrors. It has column (or field name) called RowGUID that can be used in joins with the table generating the error.\n\nThe join between the MSysErrors and the table in question is between the fields RowGUID and s_GUID respectively. This information can be used to build temporary queries in the QDE.\n\nRecall that in order to see system tables like MSysErrors select Tools > Options > Show > System Objects from the Menu Bar.",
    "ItemText": null,
    "CreateDate": "1998-03-06T14:03:16.0000000",
    "EndDate": null,
    "ModificationDate": "1998-03-06T14:03:16.0000000",
    "DocumentId": "889221288",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4968",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL: DELETEing Rows Based on a Date Column; Use of DATEADD() And GETDATE()",
    "SortOrdinal": null,
    "ItemChar": "The following t-SQL deletes rows from a table named \"output_wal_ytm_detail\" where its column calc_date contains values over 10 days old:\n\n    DELETE output_wal_ytm_detail\n    WHERE calc_date < DATEADD( dd , -10 , GETDATE() )",
    "ItemText": null,
    "CreateDate": "1999-02-09T11:35:25.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-09T11:35:25.0000000",
    "DocumentId": "890074141",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4969",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Songhay 3; Hardware Setup Checklist",
    "SortOrdinal": null,
    "ItemChar": "Songhay 3\n\nInstall Hardware:\n> ATX Class Minitower\n    >> Cirrus Logic PCI Graphics Card\n        >> CL-GD5440-J-QC-B; 63391-596BG; 9645 A; TAIWAN-D\n    >> Intel Advanced/ML Motherboard\n        >> BIOS Version 1.00.08.D130\n    >> Intel Pentium 133\n        >> A80502133 SY022; ICOMP 2#=111; L6485005-0332\n        >> INTEL `92 `93\n    >> Fujitsu 4.42 GB Hard Drive\n        >> MODEL: MPB3043AT\n        >> 4.32 GB; CYL: 8940; H: 15; S: 63\n        >> PART#: CA01630-B341\n        >> SERIAL#: 05007777\n        >> DATE: 1997-11\n        >> G.S.E.: 97103862\n        >> DNA: 1398-33885\n    >> Panasonic 24X CD-ROM\n        >> 7Y14CSB96907 CK; MANUFACTURED: NOV 1997; BWB\n        >> MODEL#: CR-585-B\n        >> ATAPI\n        >> Had trouble with cable.\n    >> Sony 3.5 Floppy Disk\n        >> 9712 1/31; MPF920-1; 50835011\n        >> 34-pin cable (floppy end is \"twisted\"; controller end has 3rd hole missing)\n    >> SB AWE32 Sound Card\n> External Modem\n> Samsung Synchmaster 17\" Monitor\n\nTweak Motherboard Settings and Review Jumpers\n\nFormat Hard Drive:\n> Boot from DOS 6.x Floppy\n> Use FDISK with the following partitions:\n        >> 800MB primary DOS partition\n        >> 800MB extended DOS partition\n        >> 800MB extended DOS partition\n        >> make an extended DOS partition of the remaining space\n> FORMAT /s the primary DOS partition\n> FORMAT the rest of the partitions\n\nInstall real-mode ATAPI CD-ROM driver\n> Download driver from Panasonic (ftp.panasonic.com)\n\nBuild a DOS 6.22 AUTOEXEC.BAT and CONFIG.SYS\n\nInstall Windows 95 Upgrade\n> Use the Windows NT setup disk for a \"qualifying product\"\n> Install Direct Cable Connection\n> Install Quarterdeck Cleansweep on logical D: drive\n        >> Cleansweep will monitor all installations where possible\n> Install service packs and OEM downloadable components\n> Install Microsoft Plus! to D: drive.\n> Install Soundblaster AWE drivers\n        >> Windows 95 setup will detect the sound card and install lowest-level drivers\n        >> Use the Creative CD-ROM to install the AWE Control Panel (find the installation files by exploring the CD-ROM; do not let the AutoPlay install take place)\n> Install all software that will not run in Windows NT to the D: drive (e.g. Quake)\n> Establish direct cable connection with Songhay 2 and get user files, major application directories and recent downloads.\n\nInstall Windows NT Workstation\n> Place the WINNT directory in the same partition as the Windows 95 directory.\n> Install Service Pack 3 (this is available on the IE4 CD)\n> Move all of the files in D: to E: and turn D: into an NTFS partition\n> Move the \"major application directories\" back to D: from E:\n> Install Quarterdeck Cleansweep to drive D: (again)\n        >> When Windows 95 starts up again (choose \"DOS\" during the NT boot) it will see what's on drive E: as drive D: (the NTFS partition will be invisible. This means Cleansweep must be installed twice for both NT and 95.\n> Reinstall all of the \"major applications\" using Cleansweep watch. Point the install paths to the existing directories in D:",
    "ItemText": null,
    "CreateDate": "1998-11-28T17:33:19.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-28T17:33:19.0000000",
    "DocumentId": "890158768",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4970",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Importing .MBX And .IDX Files From Internet Mail to Outlook Express",
    "SortOrdinal": null,
    "ItemChar": "IE4's Outlook Express does not import Windows 95 Internet Mail .MBX and .IDX files directly. It does import the Windows 3.1 files. It may \"automatically\" upgrade the Windows 95 version.\n\nBut in the case of transferring .MBX and .IDX files from an existing Internet Mail installation to Outlook take the following steps.\n\n> Create a new folder in Outlook. When this folder is created, regardless of its name, Outlook will create two files: Folder1.MBX and Folder1.IDX (where the 1 in these file names implies this is the first folder created in Outlook). WARNING: do not select this new folder.\n\n> Find Folder1.MBX and Folder1.IDX on your hard disk and delete these files.\n\n> Find your old IE3.x Internet Mail .IDX and .MDX files. If you made an Internet Mail folder called MyFolder, for example, you would be looking for the files MyFolder.IDX and MyFolder.MDX.\n\n> Rename your Internet Mail files to Folder1.MBX and Folder1.IDX (with respect to their .MBX and .IDX extensions) and place them in the directory Oulook is using to store your folder files, inbox, etc.\n\n> Select your new folder in Outlook. Outlook will display a message telling you that it is \"repairing\" the folder. When the repair is complete your should see your old messages.\n\nIf you need to convert another Internet Mail folder, repeat the steps above looking for Folder2.MBX and Folder2.IDX.\n\nSee the Microsoft KB article \"How to Import Internet Mail Messages into Outlook Express\" (Article ID: Q176523) for more details.",
    "ItemText": null,
    "CreateDate": "1998-10-20T19:41:50.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-20T19:41:50.0000000",
    "DocumentId": "890762873",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4971",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Working with the RDO Object Model",
    "SortOrdinal": null,
    "ItemChar": "The root of the RDO Object Model is the rdoEngine object. Below rdoEngine is the rdoEnvironments collection. One rdoEnvironment object contains an rdoConnections collection.\n\nMost of real-world RDO programming deals with the rdoConnection object.",
    "ItemText": null,
    "CreateDate": "1998-05-19T08:58:14.0000000",
    "EndDate": null,
    "ModificationDate": "1998-05-19T08:58:14.0000000",
    "DocumentId": "890864872",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4972",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Iterating Through a 0-Based Or 1-Based \"Logical Group\" Via the Number of Items in the Group",
    "SortOrdinal": null,
    "ItemChar": "You will always have to subtract one from a zero-based group when iterating via the number of items in the group. For example, to iterate through the Fields collection of a TableDef object based on the Count property, you need to subtract 1 from the Count property as this collection is 0-based.\n\nHowever a user-defined collection is 1-based and does not require subtracting by one.\n\nRecall that the For - Each Next structure eliminates the need of using the Count property when iterating through the items in a collection.",
    "ItemText": null,
    "CreateDate": "1998-03-27T23:36:00.0000000",
    "EndDate": null,
    "ModificationDate": "1998-03-27T23:36:00.0000000",
    "DocumentId": "891062485",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4973",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Book: Access 97 Power Programming; Chapter 1 Highlights (2/2): \"Coding in Access 97 Using VBA\"",
    "SortOrdinal": null,
    "ItemChar": "Assigning Objects to Variables\n\nAssign objects to a variable by using the Set statement.\n\n\nGeneric Object Types\n\nOne advanced VBA programming technique is the use of generic object types. There are two types of generic objects specified by the declaration keywords Object and Control.\n\n\nThe TypeOf Operator\n\nUse the TypeOf operator to identify an object's type. It only works in the If Then structure with form:\n\n    If TypeOf <Object> is <ClassName> Then\n        <stuff>\n    End If\n\nNote that Access 97 objects have a ControlType property.\n\n\nThe Concept of Collections\n\nCollections are similar to arrays. Collections are superior to arrays in many ways. Collections can have unique string names as well as the numerical index used in arrays.\n\n\nIterating through the Members of a Collection\n\nUse the For Each...Next structure. There is no need to determine the number of elements in the collection.\n\n\nWriting Custom Properties\n\nDeclaring a variable Public in a form at module level creates a user-defined property for this form. By using Property Get and Property Let, we can add more functionality than just setting a public property. We can associate a procedure with the manipulation of the property.\n\nPlease see \"Customizing a Form\" (pg. 45) for further discussion.\n\n\nObject-Valued Properties and the Property Set Statement\n\nAn object-valued property contains object instead of an integer, boolean, long, etc. You can create custom properties that return objects using the Property Set keywords.\n\n\nWhen to Use Property Procedures and Public Functions\n\nPublic variables do not have all the functionality of property procedures. Property procedures also have an advantage over public functions. Functions can return values but they do not store the current state of the values they are associated with.\n\n\nVBA Classes\n\nProperty procedures go a long way to make the classes used in VBA actually useful. VBA Classes are an aid for programmers, allowing them to package their code and add them to projects and be recognized in the object browser.\n\nTo see classes in action please see \"Coding Access 97 Class Modules\" (pg. 50).",
    "ItemText": null,
    "CreateDate": "1998-10-01T13:41:40.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-01T13:41:40.0000000",
    "DocumentId": "891118918",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4974",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Access to VB: Replacing DLOOKUP And Other Domain Lookup Functions with DAO Objects",
    "SortOrdinal": null,
    "ItemChar": "'\n'This code replaces the use of DLOOKUP and other\n'domain lookup functions (e.g. DFIRST or DLAST) not\n'available in VB.\n'\nDim strSQL As String, rsDAO As Recordset\nDim varReturn\n            \nstrSQL = \"SELECT Subject FROM tblKBSubjects\"\n            \nSet rsDAO = DBEngine(0)(0).OpenRecordset(strSQL)\n            \nrsDAO.FindFirst \"Subject = 'Access 97'\"\n            \nMsgBox rsDAO.Fields(\"Subject\")\n'\n'The key is using the criteria argument\n'in the FindFirst method. The methods\n'of the Recordset object replace\n'the domain lookup functions.\n'",
    "ItemText": null,
    "CreateDate": "1999-01-11T22:19:51.0000000",
    "EndDate": null,
    "ModificationDate": "1999-01-11T22:19:51.0000000",
    "DocumentId": "891156366",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4975",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT: Paging File Size",
    "SortOrdinal": null,
    "ItemChar": "In System Properties, under the Performance tab, select Virtual Memory to make sure that Virtual Memory > Initial Size is set to a value that is equal to the amount of physical RAM plus 12 MB. Set Virtual Memory > Maximum Size to a value equal to or greater than the Initial Size.",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:32:13.6900000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:32:13.6900000",
    "DocumentId": "891832920",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4976",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Book: Access 97 Power Programming; Chapter 2 Highlights: \"Making the Switch From Macros to VBA\"",
    "SortOrdinal": null,
    "ItemChar": "To promote scalability and portability of custom code within the VBA/VB world, Access macros should be replaced by code modules whenever possible. Macros can be replaced by code modules except in the following cases:\n\nAn AutoExec macro can be used when the database is first opened. Much of the use of such a macro as been replaced by the Tools > Startup... command.\n\nAn AutoKeys macro can create custom key combinations.\n\nWhen Access is used as a DDE server, macros are neeeded.\n\nWhen a user-defined procedure is called from a toolbar, a macro must be called.\n\nA RunCode macro can be used to call VBA routines. The macro allows storing a user-defined procedure in a variable.",
    "ItemText": null,
    "CreateDate": "1998-10-01T13:41:57.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-01T13:41:57.0000000",
    "DocumentId": "892253368",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4977",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Book: Level 2: Programming Visual Basic 5.0; Chapter 15 Highlights (1/2): An Introduction to Objects",
    "SortOrdinal": null,
    "ItemChar": "Objects exist only in temporary memory (RAM). To persist any changes to object properties in permanent memory, use database or text files, or Registry entries.\n\n\nSystem Objects\n\nThese are the system objects available to Visual Basic at run time:\n\nApp\nClipboard\nForms\nPrinters\nScreen\n\nFor more details, please see \"System Objects\" (pg. 15-5).\n\n\nDeriving Pixel Values from the Screen Object\n\nThe Width and Height properties of the Screen object return twip values. This unit of measurement is logical. To derive the physical pixel values for a given display adapter, use the TwipsPerPixelX and TwipsPerPixelY properties of the Screen object.\n\nFor example, to store the x and y values of the screen resolution in variables lngResX and lngResY respectively we have:\n\n    With Screen\n        lngResX = .Width \\ .TwipsPerPixelX\n        lngResY = .Width \\ .TwipsPerPixelY\n    End With\n\nNote the use of integer division.\n\n\nPopulating cboMousePointers on frmScreenInfo\n\nThe following form is the preferred way to populate cboMousePointers (please see \"Changing the Mouse Pointer\" on page 15-10 and frmScreenInfo code):\n\n    With cboMousePointers\n        .AddItem strText\n        .ItemData(.NewIndex) = lngItem\n    End With\n\nThis is in contrast to the For-Next form:\n\n    For intI = 0 to ItemsToAdd -1\n        cboTest.AddItem \"SomeText\"\n        cboTest.ItemData(intI) = SomeNumericValue\n    Next intI\n\nUnlike the For-Next method of populating cboMousePointers, the use of the NewIndex property above has no regard for the total number of items to be added (contained in ItemsToAdd). It is also immune to unexpected results if the index of ItemData changes when the Sorted property of the combo box is set to True.\n\nNOTE: VB is in control of the index specified in ItemData(<index>), List(<index>), AddItem <string>, <index>, et al. When the Sorted property of the control is set to True, Visual Basic handles almost all necessary string processing to maintain alphabetic order, including changing the index numbers for items as required by the addition or removal of items. You cannot change the Sorted property at run time.",
    "ItemText": null,
    "CreateDate": "1998-10-01T13:39:34.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-01T13:39:34.0000000",
    "DocumentId": "892437961",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4978",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: The \"Are You Sure?\" Message in an If...Then Structure",
    "SortOrdinal": null,
    "ItemChar": "    If VBA.MsgBox(\"Are you sure?\", vbYesNo + _\n        vbDefaultButton2 + vbQuestion) = vbNo Then\n        'User is not sure.\n    End If",
    "ItemText": null,
    "CreateDate": "1998-10-29T12:48:31.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-29T12:48:31.0000000",
    "DocumentId": "892576584",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4979",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL: The Differences Beteween HAVING and WHERE",
    "SortOrdinal": null,
    "ItemChar": "When HAVING appears in a SQL statement, this implies that there is a GROUP BY clause in the statement. If WHERE is also in the statement, the WHERE clause creates the first subset. The HAVING clause makes a \"second pass\" after the GROUP BY clause and makes a sub-sub-set.",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:50:17.9100000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:50:17.9100000",
    "DocumentId": "892587086",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4980",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: Changing the Connect Properties of All Tables And Queries",
    "SortOrdinal": null,
    "ItemChar": "Sub basChangeConnect (argSession As String)\n'\n'NOTE: This procedure contains line break characters\n'for readability. These characters are not supported\n'in Access Basic.\n'\n    Set m_dbDAO = DBEngine(0)(0)\n\n    Select Case argSession\n\n        Case \"Production\"\n    \n            For m_intObj = 1 To m_dbDAO.TableDefs.Count - 1\n\n                If m_dbDAO.TableDefs(m_intObj).Connect _\n                    Like \"ODBC*\" Then\n                    m_dbDAO.TableDefs(m_intObj).Connect _\n                        = ODBC_TBLCONNECT_STRING_PROD\n                    m_dbDAO.TableDefs(m_intObj).RefreshLink\n                End If\n\n            Next m_intObj\n\n            For m_intObj = 1 To m_dbDAO.QueryDefs.Count - 1\n\n                If m_dbDAO.QueryDefs(m_intObj).Connect _\n                    Like \"ODBC*\" Then\n                    m_dbDAO.QueryDefs(m_intObj).Connect _\n                        = ODBC_QRYCONNECT_STRING_PROD\n                    m_dbDAO.QueryDefs.Refresh\n                End If\n\n            Next m_intObj\n        \n        Case \"Test\"\n            For m_intObj = 1 To m_dbDAO.TableDefs.Count - 1\n\n                If m_dbDAO.TableDefs(m_intObj).Connect _\n                    Like \"ODBC*\" Then\n                    m_dbDAO.TableDefs(m_intObj).Connect _\n                        = ODBC_TBLCONNECT_STRING_TEST\n                    m_dbDAO.TableDefs(m_intObj).RefreshLink\n                End If\n\n            Next m_intObj\n\n\n            For m_intObj = 1 To m_dbDAO.QueryDefs.Count - 1\n\n                If m_dbDAO.QueryDefs(m_intObj).Connect _\n                    Like \"ODBC*\" Then\n                    m_dbDAO.QueryDefs(m_intObj).Connect_\n                        = ODBC_QRYCONNECT_STRING_TEST\n                    m_dbDAO.QueryDefs.Refresh\n                End If\n\n            Next m_intObj\n    \n    End Select\nEnd Sub",
    "ItemText": null,
    "CreateDate": "2002-08-19T13:10:27.2470000",
    "EndDate": null,
    "ModificationDate": "2002-08-19T13:10:27.2470000",
    "DocumentId": "893193804",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4981",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Limitations of the Timer Function",
    "SortOrdinal": null,
    "ItemChar": "The Timer function resets itself at 12 midnight each day. Its value never exceeds 86,400 (24hrs/day * 60mins/hr * 60sec/min).",
    "ItemText": null,
    "CreateDate": "1998-04-22T16:41:30.0000000",
    "EndDate": null,
    "ModificationDate": "1998-04-22T16:41:30.0000000",
    "DocumentId": "893286145",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4982",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT: Startup Logo",
    "SortOrdinal": null,
    "ItemChar": "WINNT.BMP and WINNT256.BMP are located in the folder assigned to %SystemRoot%. To change the default startup logo, change these files. The pixel dimensions of the file is limited by the resolution of the display.\n\nTo see any changes to the startup logo, restart the system. Logging on as \"another user\" does not guarantee a change to the logo.",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:28:40.4930000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:28:40.4930000",
    "DocumentId": "893823429",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4983",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Access to VB: Combo And List Boxes",
    "SortOrdinal": null,
    "ItemChar": "The ItemData(<index>) property in Visual Basic is an array of long integers corresponding with the List(<index>) property of the combo box or list box. For an unbound list or combo box control in Access, ItemData(<index>) returns the first column of the query, table or dynamic SQL specified in the RowSource property assignement. (Note that if the ColumnHeads property is True, ItemData(0) will return the column heading.)\n\nWith the above in mind, we can design an Access project being aware of the following:\n\nThink of VB combo and list boxes as having a two-column \"RowSource,\" where the first column---represented by ItemData(<index>)---is \"hidden\" (in Access this would be a column of width zero). The second column, containing strings, is displayed and is represented by the List(<index>) property.\n\nVB has no run-time equivalent to the RowSource property in Access. VB's AddItem method must be used to populate the combo or list box.\n\nIn Access, fill combo and list boxes from data sources with an ID column in data type long integer. In VB, the AddItem method can be wrapped in a Do loop reading from the same or a similar data source.\n\nVB has no intrinsic equivalent to Columns(<index>). VB and Access both have the ListIndex property.",
    "ItemText": null,
    "CreateDate": "1998-10-31T22:25:31.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-31T22:25:31.0000000",
    "DocumentId": "894430404",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4984",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Book: Level 2: Programming Visual Basic 5.0; Chapter 15 Highlights (2/2): An Introduction to Objects",
    "SortOrdinal": null,
    "ItemChar": "The Difference between Simple Variables and Object Variables\n\nSimple variables actually store the data they represent. Object variables always store a reference to the physical location of the data. This difference can be seen in the use of the Set keyword when assigning values to object variables:\n\n    Set m_frmComboBox = frmTest.cboStates\n\nWe cannot use this object variable without declaring it. The declaration is of the form:\n\n   Private m_frmComboBox As ComboBox\n\n\nVisual Basic Object Types\n\nObject hierarchy for forms:\nObject > Form > <user-defined class name of form>\n\nObject hierarchy for controls:\nObject > Control > TextBox | List Box | Combo Box\n\nBoth specific object types, Form and Control, descend from the generic Object. The use of Object causes VB to implement \"late binding\" during compilation. The use of specific object types promotes \"early binding\" (and faster code). For more details please see page 15-21.\n\n\nReferring to Objects on Forms\n\nHere are three ways to refer to the combo box, cboStates, on the form frmTest:\n\nfrmTest.cboStates 'dot syntax\nfrmTest!cboStates 'bang syntax\nfrmTest(\"cboStates\") 'collection object syntax\n\nThere is actually an advantage in using the bang syntax. For more details please see page 15-19.\n\n\nThe Concept of Collections\n\nCollections are similar to arrays. Collections are superior to arrays in many ways. Collections can have unique string names as well as the numerical index used in arrays.\n\n\nIterating through the Members of a Collection\n\nUse the For Each...Next structure. There is no need to determine the number of elements in the collection.",
    "ItemText": null,
    "CreateDate": "1998-10-01T13:39:46.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-01T13:39:46.0000000",
    "DocumentId": "894922808",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4985",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Access to VB: Open Forms with the Show Method in VB; Close Forms with the Unload Method",
    "SortOrdinal": null,
    "ItemChar": "Use the Show method to open VB forms. This is quite different from the robust functionality available in Access' OpenForm method of the DoCmd object. There is only one optional parameter in the Show method, Owner.\n\nNote: Using the Show or Hide method on a form is the same as setting the form's Visible property in code to True or False, respectively.\n\nTo close a form, use the Unload method of the VB object. The form is:\n\n    VB.Unload <object name>\n\nin most cases a form's Exit button would have a Click event like the following:\n\n    Private Sub cmdExit_Click()\n        VB.Unload Me\n    End Sub",
    "ItemText": null,
    "CreateDate": "1998-10-20T14:25:49.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-20T14:25:49.0000000",
    "DocumentId": "895269295",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4986",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The \"Full Duplex\" Sound Card; Creative Labs AWE32",
    "SortOrdinal": null,
    "ItemChar": "A \"Full Duplex\" sound card has the ability to record and play digital audio simultaneously. Some sound cards compromise on sample rates when they go into full duplex mode. In such a case, full duplex mode is marketed as a telephony feature. The AWE32, however, was not marketed as a device with telephony features but it does drop down into 8-bit mode when it is \"forced\" to record and play at the same time.\n\nTo verify this, I used Digital Orchestrator Plus (DOP) to play digital audio (along with MIDI data) and Cool Edit to record input from a microphone. In order for the AWE32 to record sound at all, I had to prevent DOP from taking control of the input. This means that Device Driver is set to \"(None)\" under Options > Digital Audio Port Setup > Digital Audio Input > Port(1).\n\nDOP had control of digital audio playback because Device Driver is set to \"SB16 Wave Out 220\" under Options > Digital Audio Port Setup > Digital Audio Output > Port(1). Setting these two options are not enough. Additionally, we have the following:\n\n    Options > Stereo Playback (checked)\n    Options > Device Can Play and Record Simultaneously (checked)\n    Options > Enable Wave Sync (checked)\n    Options > Play Buffer Seconds (15)\n    Options > Record Buffer Seconds (4)\n    Options > Default Sample Rate (44100)",
    "ItemText": null,
    "CreateDate": "1999-03-03T15:13:25.0000000",
    "EndDate": null,
    "ModificationDate": "1999-03-03T15:13:25.0000000",
    "DocumentId": "895437339",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4987",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Book: Level 2: Programming Visual Basic 5.0; Chapter 16 Highlights (1/3): Managing Data with Data Access Objects",
    "SortOrdinal": null,
    "ItemChar": "DAO: Data Access Object\n\nA DAO is an automation interface for Accessing the Jet Database engine. In fact, Access is an IDE/GUI for Jet. DAO is described by a containment hierarchy beginning with the DBEngine object. The DAO object hierarchy is shown on page 16-5. To access DAO from VB, its object library must be loaded in via the Project References dialog. Currently the Microsoft DAO 3.5 Object Library is used.\n\n\nThe Recordset Object\n\nVB interacts with DAO data sets via the Recordset object. This object can be instanced using the TableDef object, the QueryDef object or a SQL string against a valid Database object. There are three types of record sets: table-, snapshot-, and dynaset-type record sets. The most commonly used record set is the dynaset type.\n\n\nThe OpenDatabase Method\n\nUse the OpenDatabase method to open a Jet .MDB or compatible Indexed Sequential Access Method (ISAM) file. The opening (and closing) has the general form:\n\n    Set g_dbDAO = DBEngine.Workspaces(0).OpenDatabase(\"C:\\MyData.MDB\")\n    'Use database object.\n    Set g_dbDAO = Nothing\n\nwhere MyData.MDB is opened against the default DAO Workspace object. An alternative way to close the database object is to use the Close method. This has the form:\n\n    g_dbDAO.Close\n\nThis method is \"better\" if the programmer wishes to recognize the specific qualities of the object instead of handling the object variable itself.\n\n\nThe RecordCount Property of the Recordset Object\n\nThe RecordCount property does not return the number of rows in the record set. It only provides the current number of rows accessed. However, it can always be used to determine if a given record set contains any rows at all. This is very useful  because any operations on zero-row record sets will generate runtime errors.\n\nThis is one form of checking for zero-row record sets:\n\n    Set g_rsDAO = g_dbDAO.OpenRecordset(\"qselZeroRows\", dbOpenDynaset)\n\n    With g_rsDAO\n        If .Recordcount Then\n            'Operate on record set.\n        Else\n            'Do not operate on record set.\n        End If\n    End With\n\n    Set g_rsDAO = Nothing\n    Set g_dbDAO = Nothing\n\nAnother form implicitly checks for zero-row record sets. This code fragment uses the MoveNext method of the Reocrdset object to move through all of the rows of the record set. The Boolean EOF property of the Recordset object is used to stop this loop:\n\n    With m_rsDAO\n        Do Until .EOF\n           'Operate on record set.\n            .MoveNext\n        Loop\n    End With\n\nIf a design calls for the MovePrevious method, the BOF property of the Recordset object should be used as well.",
    "ItemText": null,
    "CreateDate": "1998-10-01T13:40:01.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-01T13:40:01.0000000",
    "DocumentId": "895521620",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4988",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The Importance of VBA",
    "SortOrdinal": null,
    "ItemChar": "Do not trivialize or underestimate the importance of VBA in Visual Basic 5.0. Every default VB project must contain the following libraries:\n\nVisual Basic for Applications (VBA; VBA5.DLL)\nVisual Basic Runtime Objects and Procedures (VBRUN; MSVBVM50.DLL)\nVisual Basic Objects and Procedures (VB; VB5.OLB)\n\nMany VB users are surprised to find out how much of VB is in VBA. For example, the Err object is instanced by the class VBA.ErrObject. Most of the VBRUN library are constants. Classes that instance controls make up a large part of the VB library. Almost everything else is in VBA.",
    "ItemText": null,
    "CreateDate": "1998-05-19T09:11:32.0000000",
    "EndDate": null,
    "ModificationDate": "1998-05-19T09:11:32.0000000",
    "DocumentId": "895593546",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4989",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Book: Level 2: Programming Visual Basic 5.0; Chapter 16 Highlights (2/3): Managing Data with Data Access Objects",
    "SortOrdinal": null,
    "ItemChar": "Using the MoveLast Method to Count Number of Rows\n\nSince the RecordCount property only returns the number of rows accessed, we need to use the MoveLast method of the Recordset object to access all of the records. By moving to the last record in the record set, RecordCount will store the number of rows in the entire record set.\n\n\nUsing MS-SQL to Count Number of Rows\n\nMoving to the last record in a recordset may take significantly longer than executing a dynamic MS-SQL query against the Database object. If this is the case, MS-SQL can be used to count the number of records. This is one form:\n\n    m_strSQL = \"SELECT Count (*) As RecCount \" _\n                        & \"FROM tblMytable\"\n    Set m_rsDAO = m_dbDAO.OpenRecordset(m_strSQL)\n\n    g_varReturn = m_rsDAO.Fields(\"RecCount\")\n\nwhere g_varReturn is a Public variant variable that will not generate a runtime error if the Fields property returns Null. In the above example, Null will never be returned but it is better to be safe than sorry!\n\n\nMore Use of MS-SQL Strings\n\nPlease see pages 16-17 to 16-19 for more ways to use MS-SQL strings.\n\n\nUsing the FindFirst and FindNext Methods to Find Data\n\nThe FindFirst and FindNext methods can be used to find all of the data in a given set of records. Below is a code fragment that finds the first order date for CustomerID =100 and then continues through the recordset until all order dates are found:\n\n    strCriteria = \"CustomerID = 100\"\n    With m_rsDAO\n        .FindFirst strCriteria\n        strList = .Fields(\"OrderDate\")\n        Do Until .NoMatch\n            strList = strList & vbNewLine & .Fields(\"OrderDate\")\n            .FindNext strCriteria\n        Loop\n    End With\n\nThe Boolean NoMatch property of the Recordset object makes up the Do...Loop condition.\n\n\nGeneral Form for Modifying Data\n\nUse the Edit and Update methods to change data in a Recordset:\n\n    With m_rsDAO\n        .Edit\n        .Fields(\"MyField\") = \"Some new string value.\"\n        .Update\n    End With\n\nNote that omitting Update and then moving off of the row will cause data to be lost.",
    "ItemText": null,
    "CreateDate": "1998-10-01T13:40:23.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-01T13:40:23.0000000",
    "DocumentId": "895685057",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4990",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL: Domain Aggregate Record Sets Are Not Updatable",
    "SortOrdinal": null,
    "ItemChar": "SQL Statements containing references to views based on domain aggregate functions are by definition not updateable.",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:48:52.6770000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:48:52.6770000",
    "DocumentId": "895694248",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4991",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "material@kintespace.com: Automatic Reply to E-mail",
    "SortOrdinal": null,
    "ItemChar": "Welcome to the kinte space: cyberverse for the masses... and volumes. Out here, a whirl of ideas wake out of a world pool, beyond the kente fabric of reality... beyond all thang we dream about!\n\n\nOn Poetry Submissions\n\nIf you submitted original verse to us, thank you. Please make sure you have sent more than one piece so we can give your voice a fair hearing. Judgement will be passed on your work. To get an idea on how ideas are expressed in the kinte space please see\n\nhttp://www.kintespace.com/kpoetry.html\n\nwe even provide books you may want to read or review giving some depth to the deep in the kinte space. When submitting work to the kinte space, do not let all the computer stuff fool you. We still take a long time (just like any paper literary publication) to review your work. How large is \"a long time\"? It could be months or a week---or a day. Sorry about the uncertainty.\n\n\nOn \"threads\" Submissions\n\nIf you have sent a comment to the kinte threads, we will review and reserve our thanks once we see how constructive your critique or praise will be. We are aware of the automated \"guest book\" but such technology does not censor hate mongers. Only us humans can do that.\n\nWhen submitting threads posts to the kinte space, do not let all the computer stuff fool you. We still take a long time (just like any paper literary publication) to review your work. How large is \"a long time\"? It could be months or a week---or a day. Sorry about the uncertainty. Please see\n\nhttp://www.kintespace.com/kthreads.html\n\nto see if your comment appeared in the kinte threads.\n\n\nNOTE: All e-mail addresses sent to kintespace.com will be placed on our mailing list. This list is used about every other month to inform you of new additions to this site and events or topics of interest. If you do not want to be on this mailing list please write rasx@kintespace.com.",
    "ItemText": null,
    "CreateDate": "1998-12-06T09:26:03.0000000",
    "EndDate": null,
    "ModificationDate": "1998-12-06T09:26:03.0000000",
    "DocumentId": "896193729",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4992",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The Importance of the Call Keyword",
    "SortOrdinal": null,
    "ItemChar": "If you have ever wondered why a VBA design-time error is generated when passing arguments wrapped in parentheses to a Sub procedure, then you have forgotten about the importance of the Call keyword.\n\nFor example,\n\n    MySub(arg1, arg2) 'will generate an error if this is a Sub\n\n    Call MySub(arg1, arg2) 'will not generate an error.\n\nThe opinion here is the Call keyword should be used at all times. The temptation is too great to wrap Sub arguments in parentheses since it is done all the time for Function arguments.\n\nAnother noteable feature of the Call keyword is that functions can have their return values discarded when the Call keyword is used in a statement of the form:\n\n    Call MyFunc(arg1, arg2)\n\nwhere MyFunc() is a user-defined function.",
    "ItemText": null,
    "CreateDate": "1999-04-24T23:00:13.0000000",
    "EndDate": null,
    "ModificationDate": "1999-04-24T23:00:13.0000000",
    "DocumentId": "896215984",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4993",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Book: Level 2: Programming Visual Basic 5.0; Chapter 16 Highlights (3/3): Managing Data with Data Access Objects",
    "SortOrdinal": null,
    "ItemChar": "General Form for Deleting Data\n\nThis With and Do...Loop structure can be used to scan a recordset and delete records using the Delete method:\n\n    With rsDAO\n        .FindFirst strCriteria\n        Do Until .NoMatch\n            .Delete\n            .FindNext strCriteria\n        Loop\n    End With\n\nwhere strCriteria is a string containing the specified deletion criteria.\n\n\nGeneral Form for Inserting Rows\n\nUse the AddNew method to insert a new row:\n\n    With m_rsDAO\n        .AddNew\n        .Fields(\"MyField\") = \"Some new string value.\"\n        'More fields can be specified. Nulls will be inserted\n        'in unspecified fields or an error will be generated\n        'if the Required property is set to True for any field\n        'not assigned a value here.\n        .Update\n    End With\n\nNote that omitting Update and then moving off of the row will cause data to be lost.\n\n\nCreating Query Definitions\n\nAppending a compiled query to the QueryDefs collection should be done when the query (even is if is a parameter query) needs to be built on the fly and run several times. This will increase application performance. For more information see the CreateQueryDef method in Microsoft's DAO reference.\n\n\nReferencing Stored Queries\n\nIf the query does not need to be built on the fly then use the QDE grid in Access 97 to design and store the query. Now the general form for referencing and opening a stored SELECT query without parameters is:\n\n    'Set the module-level QueryDef type variable m_qdDAO.\n    Set m_qdDAO = m_dbDAO.QueryDefs(\"MyStoredQry\")\n\n    'Now open a recordset based on the query.\n    Set m_rsDAO = m_qdDAO.OpenRecordset()\n\nThe general form for referring to and running a stored action query is:\n\n    Set m_qdDAO = m_dbDAO.QueryDefs(\"MyStoredQry\")\n    m_qdDAO.Execute\n\nRecall that the style here is to use module-level variables and share them among the procedures in the module where logically possible. This requires that these variables be set to nothing after the procedure runs where logically possible.",
    "ItemText": null,
    "CreateDate": "1998-10-01T13:40:39.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-01T13:40:39.0000000",
    "DocumentId": "896218239",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4994",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Amazon.com HREF",
    "SortOrdinal": null,
    "ItemChar": "http://www.amazon.com/exec/obidos/ISBN=<enter book ISBN here>/thekintespacec00A/\n\nor\n\nhttp://www.amazon.com/exec/obidos/ASIN/<enter ASIN here>/thekintespacec00A/",
    "ItemText": null,
    "CreateDate": "1999-07-26T17:46:34.0000000",
    "EndDate": null,
    "ModificationDate": "1999-07-26T17:46:34.0000000",
    "DocumentId": "896359799",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4995",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Email Blurb: Acceptance Letter (PDF)",
    "SortOrdinal": null,
    "ItemChar": "Thanks:\n\nThank you for your submission to the kinte space! We would like to present your work on our WWW site. The form of the presentation will be an Adobe Acrobat PDF file. At the kinte space we call this file a \"virtual chapbook.\" This is the most portable, relatively secure and versatile way to digitize your verse.\n\n\nAbout Adobe Acrobat:\n\nFor the latest information on this document format please see:\n\nhttp://www.adobe.com/acrobat/readstep.html\n\n\nRights:\n\nYou have the right to duplicate the virtual chapbook. Duplication includes printing hard copies. You do not have the right to change its contents or sell it without written permission from Bryan Wilhite.\n\n\nPublication Date:\n\nYou will be notified along with other Haley's Comet recipients when your presentation is ready for publication. Choose a time scale like that of traditional publishing when you judge how far away your publication date is.\n\n\nAdditional Material:\n\nWe strongly suggest that you provide us with a bio or background prose about your submitted work. Please provide any published books or audio CDs that you found inspiring. If you are a published writer (meaning you have bound material with an ISBN number assigned to it) please let us know!\n\n\nSelf-Promotion:\n\nIf you are in the healthy habit of self-promotion (remember it's not bragging if you can back it up), please mention where some of your online work is---especially your work published in the kinte space!\n\n\nThanks again!",
    "ItemText": null,
    "CreateDate": "2002-05-23T10:09:16.4800000",
    "EndDate": null,
    "ModificationDate": "2002-05-23T10:09:16.4800000",
    "DocumentId": "896387122",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4996",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Office: Start Menu Shortcuts",
    "SortOrdinal": null,
    "ItemChar": "Name: Open Office Document\nPath: \"D:\\Program Files\\Microsoft Office\\Office\\OSA.EXE\" -f\nIcons: D:\\Program Files\\Microsoft Office\\Office\\OSA.EXE\n\nName: New Office Document\nPath: \"D:\\Program Files\\Microsoft Office\\Office\\OSA.EXE\" -n\nIcons: D:\\Program Files\\Microsoft Office\\Office\\OSA.EXE",
    "ItemText": null,
    "CreateDate": "2002-03-10T09:24:10.7630000",
    "EndDate": null,
    "ModificationDate": "2002-03-10T09:24:10.7630000",
    "DocumentId": "897010587",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4997",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Book: Level 2: Programming Visual Basic 5.0; Chapter 17 Highlights: Data Access Objects And Forms",
    "SortOrdinal": null,
    "ItemChar": "Opening the Database and Instancing the Recordset\n\nTo open the database and instance the Recordset object behind one unbound form, the following design is recommended:\n\nUse module-level variables of type Recordset and Database.\n\nThe load event of the form should call one or more functions of type boolean that return true when the .MDB file (the database) is opened sucessfully and when a record set is ready. When these conditions are met, a procedure should be called to display the data. The form on page 17-2 shows only one record at a time. This design avoids the complex issues associated with showing several rows of editable data.\n\nThe form should have navigation buttons.\n\nThe form should have \"find,\" \"new record,\" \"delete,\" and \"close\" buttons.\n\nThere should be module-level variables of type Boolean that track when data is being changed or added.\n\n\nDisplaying Data on the Form\n\nPage 17-7 shows the procedure used to display data one record at a time. Note that database records can contain Null values, but VB TextBox controls cannot handle Nulls. The way to avoid this problem is to concatenate a zero-length string to the value of Recordset.Fields(<index>). Since the value Empty is equivalent to a zero-length string we have the form\n\n    With rsDAO\n        If .RecordCount Then\n            txtControl1.Text = .Fields(\"Field1\") & Empty\n            txtControl2.Text = .Fields(\"Field2\") & Empty\n            txtControl3.Text = .Fields(\"Field3\") & Empty\n        End If\n    End With\n\nOr, using the style in the book, we have the form\n\n    With rsDAO\n        If .RecordCount >0 Then\n            txtControl1.Text = !Field1 & Empty\n            txtControl2.Text = !Field2 & Empty\n            txtControl3.Text = !Field3 & Empty\n        End If\n    End With\n\nwhich does not reflect the fact that database fields are part of a collection. To quickly verifiy that this concatenation actually works, type the following in the Immediate (Debug) Window:\n\n    ?Null & Empty = Empty\n\nThis should return True.",
    "ItemText": null,
    "CreateDate": "1998-10-01T13:40:49.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-01T13:40:49.0000000",
    "DocumentId": "897085614",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4998",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: the \"Are You Sure?\" Message",
    "SortOrdinal": null,
    "ItemChar": "'To review the constants used here, review\n'the Access Basic online help for MsgBox.\n    If MsgBox(\"Are you sure?\", 4 + 256 + 32) = 7 Then\n        'Prepare to exit procedure.\n        Exit Sub\n    End If",
    "ItemText": null,
    "CreateDate": "1998-06-08T10:55:14.0000000",
    "EndDate": null,
    "ModificationDate": "1998-06-08T10:55:14.0000000",
    "DocumentId": "897328220",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "4999",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Getting the Time Stamp From a File",
    "SortOrdinal": null,
    "ItemChar": "The FileDateTime(<path string>) function returns a Variant of sub-type Date that is the time stamp of the file specified in <path string>.",
    "ItemText": null,
    "CreateDate": "1998-06-11T09:40:21.0000000",
    "EndDate": null,
    "ModificationDate": "1998-06-11T09:40:21.0000000",
    "DocumentId": "897583026",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5000",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: 1 Or More Key Violations Executing An Action Query",
    "SortOrdinal": null,
    "ItemChar": "This problem may not always be caused by a duplicate value trying to enter a unique index. There may also be a one-to-many relationship defined in the Relationships window where a change to the index on the one side of the relationship causes a key violation. Check the Relationships Window for such one-to-many relationships. Remove them (by deleting their link---not by hiding the tables) if necessary.",
    "ItemText": null,
    "CreateDate": "1998-08-07T08:50:51.0000000",
    "EndDate": null,
    "ModificationDate": "1998-08-07T08:50:51.0000000",
    "DocumentId": "897660496",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5001",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL: Measuring How Long a Query Takes",
    "SortOrdinal": null,
    "ItemChar": "By wrapping the query (or queries) to be tested in GETDATE() commands, you can estimate how long it takes for the tSQL to run. This form is\n\n    SELECT GETDATE()\n    -- Enter t-SQL to be tested here.\n    SELECT GETDATE()\n    GO",
    "ItemText": null,
    "CreateDate": "1999-02-09T11:35:15.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-09T11:35:15.0000000",
    "DocumentId": "897948023",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5002",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: a Column with \"Numbers\" And Text Is Not Sorting Correctly",
    "SortOrdinal": null,
    "ItemChar": "Suppose you have a function bound to a field in a query or form. This function performs calculations and then returns the number as a string. This will be the case when you want to use the Format() function in the bound function or return custom text messages as well as numerical values.\n\nThe subsequent column of data based on the bound function will now be sorted as String data. To make sure that numbers sort properly, format numerical output with leading zeros. This is not too unattractive with percentages. For example, when MyValue = 0.05,\n\n   Format(MyValue, \"000.000%\") = \"005.000%\"\n\nmakes only two leading zeros. However to make numbers larger than Integer sort properly, this method is not recommended.",
    "ItemText": null,
    "CreateDate": "1998-06-19T11:32:12.0000000",
    "EndDate": null,
    "ModificationDate": "1998-06-19T11:32:12.0000000",
    "DocumentId": "898280413",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5003",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: the Default Instance of a Form Is Not Found",
    "SortOrdinal": null,
    "ItemChar": "If the default instance of a form is not found, this most likely means that it does not have a Class Module. For example, suppose you have two forms in a database, frmMain and fsubOther, where frmMain has a module and fsubOther does not. Also suppose that this database has no user-defined classes. In this example, only one class (besides globals) will appear in the Object Browser for the Project/Library defined for the current database. This class will be called Form_frmMain.\n\nThis implies that fsubOther cannot be manipulated programmatically. Any attempts to manipulate fsubOther directly will generate run-time errors. If, however, fsubOther is a sub-form of frmMain then it can be manipulated through code. Suppose that the Name property of the Sub Form is fsubOther. We can make sure its FilterOn property is False with the line\n\n    Form_frmMain.fsubOther.Form.FilterOn = False\n\nWe now can use the Form property of the Sub Form object to manipulate fsubOther. Note that there are some limitations: the most glaring constraint is need to use the Controls collection to refer to the sub-form controls. For example, the following code incorrectly attempts to refer to the ControlSource property of the Text Box txt1 on fsubOther:\n\n    'This is incorrect:\n    With Form_frmMain\n        .fsubOther.Form.txt1.ControlSource = \"[Fname]\"\n    End With\n\nIn this example, we can only refer to txt1 via the Controls collection with the lines\n\n    'This is correct:\n    With Form_frmMain\n        .fsubOther.Form.Controls(\"txt1\").ControlSource = \"[Fname]\"\n    End With\n\nNote that VBA does not \"know\" whether this particular member of the Controls collection has a ControlSource property. The use of the Controls collection may noticeably reduce performance due to late-binding issues. If this is the case simply set the Has Module property of the form to Yes and refer to the default instance of the form directly.",
    "ItemText": null,
    "CreateDate": "1998-06-29T18:02:51.0000000",
    "EndDate": null,
    "ModificationDate": "1998-06-29T18:02:51.0000000",
    "DocumentId": "899143924",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5004",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: the Column Headings in the Datasheet View of a Form Are Field Names",
    "SortOrdinal": null,
    "ItemChar": "The Column Headings in the Datasheet View of a form or subform are equal to the Name properties of their respective Controls. By default, the Name properties of bound controls are their respective Field Names from the underlying table or query. (The Caption property of an table Access table is ignored.) The Name property of controls can only be changed at design time.",
    "ItemText": null,
    "CreateDate": "1998-06-29T18:15:11.0000000",
    "EndDate": null,
    "ModificationDate": "1998-06-29T18:15:11.0000000",
    "DocumentId": "899168609",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5005",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Protecting Type Conversion Functions From Null Values",
    "SortOrdinal": null,
    "ItemChar": "To avoid Run-time Error 94 (Invalid Use of Null) when using type conversion functions, \"protect\" them by concatenating \"default\" values where logically possible. Suppose that g_varReturn is a variant. We can use type conversion functions on g_varReturn with the forms:\n\n    <variable of type Double> = CDbl(0 & g_varReturn)\n\n    <variable of type String> = CStr(g_varReturn & \"\")\n\n    <variable of type String> = CStr(g_varReturn & Empty)\n\nNote that in the CDbl() example above the zero is concatenated in front of g_varReturn. Do not concatenate the zero after g_varReturn!",
    "ItemText": null,
    "CreateDate": "1998-06-30T10:12:05.0000000",
    "EndDate": null,
    "ModificationDate": "1998-06-30T10:12:05.0000000",
    "DocumentId": "899226217",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5006",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Windows NT 4.0: Selective Backup of the NT Installation",
    "SortOrdinal": null,
    "ItemChar": "Financial resources do not permit me to have a tape backup system as well as all the other toys I need. It follows that I need to be \"surgical\" when I back up data. The principle driving this surgery is that operating system, application files and even registry entries are not to be worried about. They can easily be replaced on demand, where my core system is the Windows NT operating system, Microsoft Access, Microsoft Money and Microsoft Word---everything else can appear as needed.\n\nWhat is paramount is saving the data created by users (my data). Following the lead of unix directory structures, all of the user data produced by each user will be under one respective directory. Currently, Microsoft does not allow all the data stored per user in %SystemRoot%\\Profiles to be relocated under my special directory. For example, the Address Book or the Favorites folder cannot be moved without a fight. So before back up, I have written CMD scripts to copy the Profiles user data to my central directory.\n\nWith all these words I say, Backing up data per user involves one folder!",
    "ItemText": null,
    "CreateDate": "1998-11-26T20:08:06.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-26T20:08:06.0000000",
    "DocumentId": "899348967",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5007",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "\"Stupid\" Mod Operator Tricks",
    "SortOrdinal": null,
    "ItemChar": "Mod in Ordinal Extractions\n\nIn the same manner that sub-strings can be extracted from strings with the Left() function, the Mod operator can be used to extract digits from integer values:\n\n    (19984 - (19984 Mod 10))/10 = 1998\n\nThe Mod operator used like the Right() function:\n\n    19984 Mod 10 = 4\n\nThanks to the Mod operator, more traditional scalar operators can be used in concatenation-like operations:\n\n    1998 * 10 + 4 = 19984\n\n\nMod in Boolean Evaluations\n\nTest for an odd number with Long lngTest against the Boolean blnTest:\n\n    blnTest = (lngTest Mod 2 = 1)\n\nTest for an even number with Long lngTest against the Boolean blnTest:\n\n    blnTest = (lngTest Mod 2 = 0)\n\nTest for a multiple of six with Long lngTest against the Boolean blnTest:\n\n    blnTest = (lngTest Mod 6 = 0)\n\nIMPORTANT: Recall that Mod operations return the remainder in integer division. When the Long variable (lngTest) becomes involved in a Mod operation, it makes explicit the use of integers. Without lngTest, there is implicit rounding. For example:\n\n    (13.4 Mod 2 = 13 Mod 2) = True\n\nand\n\n    (13.5 Mod 2 = 14 Mod 2) = True",
    "ItemText": null,
    "CreateDate": "2000-01-10T21:20:01.0000000",
    "EndDate": null,
    "ModificationDate": "2000-01-10T21:20:01.0000000",
    "DocumentId": "900911580",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5008",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: Using the BeforeUpdate Form Event to \"Undo\" Changes",
    "SortOrdinal": null,
    "ItemChar": "Private Sub Form_BeforeUpdate(Cancel As Integer)\n\n    Dim strMsg As String\n\n    strMsg = \"Are you sure you want to change this data?\"\n\n    If VBA.MsgBox(strMsg, vbYesNo + vbDefaultButton2 _\n        + vbQuestion) = vbNo Then\n        Me.Undo\n        Exit Sub\n    End If\n\nEnd Sub",
    "ItemText": null,
    "CreateDate": "1998-10-29T13:34:45.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-29T13:34:45.0000000",
    "DocumentId": "901129341",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5009",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: Tab Control Does Not Recognize Alt-Key Combinations",
    "SortOrdinal": null,
    "ItemChar": "Using Alt-key combinations for the Tab Control may not work all the time in Access 97. What I have noticed is when the access keys are pressed, the focus does not change but the application \"beeps.\" This problem is intermittent. It appears to work correctly for tabs with fewer controls on them (three controls or less perhaps).\n\nOne work-around for this problem is responding to the KeyDown event:\n\n    Private Sub Form_KeyDown(KeyCode As Integer, _\n        Shift As Integer)\n\n        Dim blnAltDwn As Boolean\n        blnAltDwn = (Shift And acAltMask) > 0\n    \n        With Me\n            If blnAltDwn And KeyCode = vbKeyD Then\n                'Tab Caption: \"Import Ownership &Data\"\n                .pagImport.SetFocus\n            ElseIf blnAltDwn And KeyCode = vbKeyG Then\n                'Tab Caption: \"Build/Edit Ownership &Groups\"\n                .pagGrouping.SetFocus\n            ElseIf blnAltDwn And KeyCode = vbKeyP Then\n                'Tab Caption: \"Build Ownership Re&port\"\n                .pagRpt.SetFocus\n            End If\n        End With\n    End Sub\n\nUsing this code, the beeps eventually stop while the Alt-key combinations are pressed.\n\nMSKB Article Q156222 (\"ACC95: Access Keys Do Not Work with Tabs on TabStrip Control\") states \"Microsoft has confirmed this to be a problem in Microsoft Access 7.0. This problem no longer occurs in Microsoft Access 97.\"",
    "ItemText": null,
    "CreateDate": "1999-04-28T18:39:44.0000000",
    "EndDate": null,
    "ModificationDate": "1999-04-28T18:39:44.0000000",
    "DocumentId": "901212257",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5010",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Access to VB: Use the Visible Property Instead of IsLoaded()",
    "SortOrdinal": null,
    "ItemChar": "Replace the IsLoaded() function that was available from Microsoft since Access 2.x with the Visible property of the default instance of an Access 97 form. For example, if the form frmMain has a module and is open then\n\n    Form_frmMain.Visible = True\n\nSuppose frmMain does not have a module and is open, now frmMain has no default instance because it has no class module. However the Application object is available wherein lies the Forms Collection. It follows that:\n\n    Application.Forms(\"frmKB\").Visible = True\n\nThis syntax is preferable but the older \"bang\" syntax still applies:\n\n    Forms!frmKB.Visible = True\n\nWARNING: It has been my experience that accessing the Visible property through the Application of object is more reliable than via the default instance of a form. I recommend using the Immediate Window to test both objects (one may return False while the other returns True). I am sure Microsoft is working on this.",
    "ItemText": null,
    "CreateDate": "1998-07-28T17:18:33.0000000",
    "EndDate": null,
    "ModificationDate": "1998-07-28T17:18:33.0000000",
    "DocumentId": "901432393",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5011",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Filter by Form Events; VBA Filter Property; Order of Events; Constants",
    "SortOrdinal": null,
    "ItemChar": "Filter by Form (applying the filter):\n    Filter Event; FilterType = acFilterByForm = 0\n    Apply Filter Event; ApplyType = acApplyFilter = 1\n    Current Event\n\nDuring this Apply Filter event, Access changes the FilterOn property to True. This implies that the Filter property has been changed to a valid SQL WHERE clause.\n\nRemoving a form filter:\n    Apply Filter Event; ApplyType = acShowAllRecords = 0\n    Current Event\n\nDuring this Apply Filter event, Access changes the FilterOn property to False and leaves the Filter property unchanged.\n\nFilter by Form (closing the filter form):\n    Filter Event; FilterType = 0\n    Apply Filter Event; ApplyType = acCloseFilterWindow = 2\n    Current Event\n\nUsing VBA to change the Filter property does not cause any filter related events to fire (the Current event does not fire either) if and only if the FilterOn property equals False.\n\nHowever changing the Filter property to a valid SQL WHERE clause when FilterOn = True causes the following:\n    Current Event\n    Apply Filter Event; ApplyType = 1\n    Current Event\n\nUsing VBA to change the FilterOn property to False causes the Current event to fire if and only if the Filter property is not equal to Empty.\n\nUsing VBA to change the FilterOn property to True (when the Filter is not equal to Empty) causes the following events:\n    Apply Filter Event; ApplyType = 1\n    Current Event\n\nSetting Cancel = True inside the ApplyFilter event with VBA prevents the Filter by Form window from \"closing.\" This is not very useful. Setting the FilterOn property to False (and setting the TimerInterval property > 0) during the ApplyFilter event may prove to be very useful. One caveat: we have seen that changing the FilterOn property against a valid filter causes the Current event to fire.",
    "ItemText": null,
    "CreateDate": "1998-07-29T13:48:50.0000000",
    "EndDate": null,
    "ModificationDate": "1998-07-29T13:48:50.0000000",
    "DocumentId": "901549424",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5012",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: Filter by Form Event is Not Working",
    "SortOrdinal": null,
    "ItemChar": "If Filter by Form does not work in the Run-Time version of Access 97 then please see MSKB article Q172090 (\"ODE97: Filter-By-Form Not Available in Run-Time Applications\") for more information.",
    "ItemText": null,
    "CreateDate": "1998-07-29T13:50:54.0000000",
    "EndDate": null,
    "ModificationDate": "1998-07-29T13:50:54.0000000",
    "DocumentId": "901745356",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5013",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The Call Keyword Used with SysCmd()",
    "SortOrdinal": null,
    "ItemChar": "Quite often the return value supplied by the Application object's SysCmd() Method is not needed. Instead of wasting a variable to store these values, use the Call keyword. Recall that when the Call keyword is used on a function (or a method that returns a value), its return value is discarded.\n\nFor example, the following call to SysCmd() returns Empty if successful:\n\n    Call Application.SysCmd(acSysCmdClearStatus)\n\nby using the Call statement, the value of Empty is ignored.",
    "ItemText": null,
    "CreateDate": "1999-04-24T23:12:14.0000000",
    "EndDate": null,
    "ModificationDate": "1999-04-24T23:12:14.0000000",
    "DocumentId": "901830774",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5014",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: Return only Numbers and Digits (Optional) from a String; basGetDigits()",
    "SortOrdinal": null,
    "ItemChar": "Public Function basGetDigits(ByVal Literal as String, _\n    Optional ByVal InclDec = False) As String\n\n    Dim lngCount As Long\n    Dim strChar As String\n    Dim strRet As String\n    Dim strCmp As String\n\n    If InclDec Then\n        strCmp = \"1234567890.\"\n    Else\n        strCmp = \"1234567890\"\n    End If\n\n    For lngCount = 1 To VBA.Len(str)\n        strChar = VBA.Mid$(str, lngCount, 1)\n        If VBA.InStr(strCmp, strChar) > 0 Then\n            strRet = strRet & strChar\n        End If\n    Next\n\n    basGetDigits = strRet\n  \nEnd Function",
    "ItemText": null,
    "CreateDate": "1999-01-11T21:35:05.0000000",
    "EndDate": null,
    "ModificationDate": "1999-01-11T21:35:05.0000000",
    "DocumentId": "901832194",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5015",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Folio Notepad: Basic Connections; Overview",
    "SortOrdinal": null,
    "ItemChar": "Important Concept to Understand:\n\nThe mixer sits between the inputs and the speakers/monitors (outputs). All connections should show an understanding of this concept.\n\n\nImportant Items from the Manual:\n\nMeters (page 9) --- 'AVG' (average) LEDs indicate normal output; 'PK' (Peak) indicate overload.\n\nMic Power (page 9) --- press this button when using condenser microphones.\n\n\nWild Guesses:\n\nCalibrate the mixer's peak level against the \"red\" levels of the computer's level meters (software). I generated a sound that peaks at -6dB and adjusted levels on the mixer to \"almost\" go into the red when this sound is playing.\n\nUse the Pre-Amp knobs before resorting to volume knobs: keep volume at zero.\n\n\nUnwanted Noise:\n\nSo far I am very pleased with this tool. The only time I heard it hum was when I set the Power Pack (AC Adapter) too close to the main console. So now I try to keep the Power Pack away from the main console.",
    "ItemText": null,
    "CreateDate": "2000-09-23T08:07:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-09-23T08:07:00.0000000",
    "DocumentId": "902037412",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5016",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript: Using External *.js Files",
    "SortOrdinal": null,
    "ItemChar": "Use external JavaScript files (*.js) files when you want to separate lengthy JavaScript routines from HTML. This is a convenience for the programmer.\n\nThe following HTML demonstrates usage and syntax:\n\n    <HTML>\n    <HEAD>\n        <TITLE>js test</TITLE>\n        <SCRIPT LANGUAGE=\"JavaScript\" SRC=\"module.js\">\n        </SCRIPT>\n    </HEAD>\n\n    </HTML>\n\nwhere the following content is in a text file called module.js:\n\n    //\n    // (c)1998 Bryan Wilhite\n    // All rights reserved.\n    // rasx@kintespace.com\n    //\n    // This JavaScript file kicks much ass.\n    //\n    alert(\"hello\")",
    "ItemText": null,
    "CreateDate": "1999-01-13T10:29:06.0000000",
    "EndDate": null,
    "ModificationDate": "1999-01-13T10:29:06.0000000",
    "DocumentId": "902444144",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5017",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: The Print Dialog Box Lists the Name of the Report Object and Not a User-Friendly Name",
    "SortOrdinal": null,
    "ItemChar": "When a report---say rptSales---is printed, the print dialog may show the user \"Now Printing 'rptSales' to LPT1\" if there is no caption property specified in the report.\n\nThe name rptSales is useful to the developer but not the user! Specify a more user-friendly name for the report by setting the Caption property of the report.",
    "ItemText": null,
    "CreateDate": "1998-08-07T13:36:01.0000000",
    "EndDate": null,
    "ModificationDate": "1998-08-07T13:36:01.0000000",
    "DocumentId": "902521619",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5018",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Overview of Internetworking",
    "SortOrdinal": null,
    "ItemChar": "When a network of computers exchanges information with another network via a communications protocol called TCP/IP, we have what can be called Internetworking---the productive activity on the Internet.\n\nTCP/IP or Transmission Control Protocol/Internet Protocol is the abstract \"middle layer\" that supports specialized protocols designed for different needs. These specialized protocols include Simple Mail Transfer Protocol (SMTP), News Network Transfer Protocol (NNTP), File Transfer Protocol (FTP) and HyperText Transfer Protocol (HTTP).\n\nThe HTTP layer is known popularly as the World Wide Web.",
    "ItemText": null,
    "CreateDate": "1998-08-18T21:29:52.0000000",
    "EndDate": null,
    "ModificationDate": "1998-08-18T21:29:52.0000000",
    "DocumentId": "903500098",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5019",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: General Error Handling Structure for a Function",
    "SortOrdinal": null,
    "ItemChar": "Public Function basMyFunc() As Boolean\n\nOn Error Goto basMyFunc_Err\n\n    basMyFunc = True\n\n    'Code for function goes here.\n\nbasMyFunc_Exit:\n\n    'Clean-up code goes here.\n\n    Exit Function\n\nbasMyFunc_Err:\n    Select Case VBA.Err\n        'Case <Err number>\n            'Add custom Error handling per case here.\n            basMyFunc = False\n            Resume basMyFunc_Exit\n        Case Else\n            VBA.MsgBox VBA.Err & \": \" & VBA.Err.Description, _\n                vbCritical, \"basMyFunc Error\"\n            basMyFunc = False\n            Resume basMyFunc_Exit\n    End Select\nEnd Function",
    "ItemText": null,
    "CreateDate": "1998-10-29T12:50:40.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-29T12:50:40.0000000",
    "DocumentId": "904007897",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5020",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL: AND and OR Operate on True, False and Null",
    "SortOrdinal": null,
    "ItemChar": "These equations are derived from the so-called \"Truth Tables\":\n\n    True AND True = True\n    True AND False = False\n    True AND Null = Null\n\n    False AND True = False\n    False AND False = False\n    False AND Null = False\n\n    Null AND True = Null\n    Null AND False = False\n    Null AND Null = Null\n\n    True OR True = True\n    True OR False = True\n    True OR Null = True\n\n    False OR True = True\n    False OR False = False\n    False OR Null = Null\n\n    Null OR True = True\n    Null OR False = Null\n    Null OR Null = Null\n\nNote that:\n    !(A OR B) = !A AND !B\n\nSome database administrators do not like the use of Nulls in tables. Heavy dependence on Nulls often implies violation(s) of normalization rules. You can see how these truth tables are made very complicated by the prescence of Nulls. In the place of Null the term Unknown is often used.",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:47:33.5970000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:47:33.5970000",
    "DocumentId": "904268905",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5021",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "When to Use the Tag Property of Controls",
    "SortOrdinal": null,
    "ItemChar": "If you find yourself using a lot of Boolean variables to flag states and you do not feel the need to build a class, consider using the various Tag properties for controls (including Form objects).",
    "ItemText": null,
    "CreateDate": "1998-09-02T15:23:12.0000000",
    "EndDate": null,
    "ModificationDate": "1998-09-02T15:23:12.0000000",
    "DocumentId": "904774793",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5022",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: \"Can't Execute a Non-Action Query\" Error with Pass-Through Queries",
    "SortOrdinal": null,
    "ItemChar": "A compiled Pass-Through Query in the QueryDefs collection of a DAO database can be referenced in code like the following:\n\n    Set qdDAO = dbDAO.QueryDefs(\"qsptTaz3Test00\")\n    qdDAO.Execute DB_FAILONERROR\n\nwhere \"qsptTaz3Test00\" is the name of the compiled Pass-Through query and \"qdDAO\" is the name of a QueryDef object. Calling the Execute method of the QueryDef object may generate the error, \"Can't Execute a Non-Action Query.\" This error will occur when the Returns Records property of the Pass-Through query is set to Yes.\n\nNote: multiple SQL commands can be placed in an Access Pass-Through query but it is not recommended to mix select statements with SQL that does not return records like update statements.",
    "ItemText": null,
    "CreateDate": "1998-09-03T12:19:21.0000000",
    "EndDate": null,
    "ModificationDate": "1998-09-03T12:19:21.0000000",
    "DocumentId": "904850341",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5023",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Money: Tax Reports; Earnings Statement; Group Term Life",
    "SortOrdinal": null,
    "ItemChar": "If Microsoft Money reports income that does not reconcile with W2 forms, it is possible that the Group Term Life benefits were not properly accounted for.",
    "ItemText": null,
    "CreateDate": "1999-08-24T19:31:17.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-24T19:31:17.0000000",
    "DocumentId": "906080787",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5024",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Unix to NT: Environment Variables",
    "SortOrdinal": null,
    "ItemChar": "The \"set\" command displays current environment settings. \nThe use of environment variables is yet another way to make this \"New Technology\" OS more Unix-like. Windows NT Help has more information about the \"set\" command and environment variables.",
    "ItemText": null,
    "CreateDate": "1998-12-05T09:25:25.0000000",
    "EndDate": null,
    "ModificationDate": "1998-12-05T09:25:25.0000000",
    "DocumentId": "906445054",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5025",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Java in VB Terms: Fundamentals of the AWT",
    "SortOrdinal": null,
    "ItemChar": "Perhaps it is not too dangerous to think of the AWT in VB terms. Let's try. The VB form should translate to the Container and the form's grid could somehow make it to Java's Layout Manager. VB Form Controls are answered in Java by Components. The Component Peers would lead to the operating system in the same way as the Windows Operating System lies behind VB. So here is our ill-fated summary:\n\nWindows Operating System ---> ComponentPeer\nForm ---> Container (namely the Panel or Frame subclasses)\nForm Grid (VB Design Mode) ---> Layout Manager\nControl ---> Component",
    "ItemText": null,
    "CreateDate": "1998-09-22T19:59:41.0000000",
    "EndDate": null,
    "ModificationDate": "1998-09-22T19:59:41.0000000",
    "DocumentId": "906518287",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5026",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Book: \"UNIX in a Nutshell\"; Summary of Unix Commands",
    "SortOrdinal": null,
    "ItemChar": "Common DOS commands translated back to UNIX:\n\ncd ---exactly like cd\n\nclear ---exactly like cls\n\ncp ---very much like copy\n\nls -al; df -k | more ---kind of like dir /p\n\nmv ---very much like move\n\nuname -sr ---kind of like ver\n\n\nOther Unix commands I really need right about now:\n\ncat ---concatenate files\n\nchgrp -R <group name> <folder name>/* ---changes the group of <folder name> to <group name> and all of its sub-folders/files\n\nchmod a+r <filename> ---makes <filename> readable to all\n\nchmod a+x <filename> ---makes <filename> executable to all\n\nchmod -R g+w <folder name>/* ---adds group-level write privileges to <folder name> and all sub-folders/files\n\nchown -R <user name> <folder name>/* ---changes the owner of <folder name> to <user name> and all of its sub-folders/files\n\ndu -sk <path name> ----returns the amount of disk space <path name> occupies in KBs\n\nfind .  -name  \"*.html\" -print | sort ---displays a sorted list of files with \".html\" in their names in the directory (and any subdirectories) where the command is executed\n\nkill -9 <process ID> ---\"really\" stops a process with id <process ID>\n\npasswd <user name> ---changes the password of <user name>\n\nps -fu<user name> ---returns the processes run by <user name>\n\nrm -r <folder name> ---remove <folder name> and all of its sub-folders/files\n\nsort -o <destination file> <source file> ---e.g.: sort -o .newsrc .newsrc\n\nsu <user name> ---creates the shell of <user name>; to terminate this session and return to the original login enter EOF (usually Ctrl+d)\n\ntar -xvf <archive name(s)> ---extracts one or more tape archive files (tar files) and prints the name(s) of the file(s) stored in the archive to the console\n\nwhich <command name(s)> ---determines which file is associated with <command name(s)> (separated by spaces)\n\nwho ---determines who's logged in the system\n\nSearch for literals with grep and fgrep (\"fast\" grep).\n\nTo shutdown the system use the command \n\n/usr/sbin/shutdown -y -g0 -i0\n\nTo start the system use boot.\n\nDon't forget all those kick-ass compression commands like pack and compress! Also note that .tgz implies .tar.gz---which in turn implies the compression application gunzip.\n\nUse the vacation command for vacations.",
    "ItemText": null,
    "CreateDate": "1999-01-07T23:10:06.0000000",
    "EndDate": null,
    "ModificationDate": "1999-01-07T23:10:06.0000000",
    "DocumentId": "906760910",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5027",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB: Orange County Visual Basic Users Group Seminar; VB 6.0 Data Controls",
    "SortOrdinal": null,
    "ItemChar": "The ADO Data Control promises to actually be useful in VB 6.0. The control can connect to a database and retrieve or modify data without code. The control only needs ConnectionString and RecordSource properties specified to run.\n\nSeveral VB controls are \"data aware.\" On text boxes, for example, the DataField and DataSource properties are used to bind to the ADO Recordset object. With Combo Box or List Box the properties are DataSource, ListField, DataField, BoundColumn, RowSource, Description, etc. This 6.0 design very much rivals the conveniences available in Microsoft Access.\n\nThe concept of events associated with a VB data control is a new concept. These are are Data Control Events:\n\n    Error\n    WillChangeField\n    FieldChangeComplete\n    WillMove\n    MoveComplete\n    WillChangeRecord\n    RecordChangeComplete\n    WillChangeRecordSet\n    RecordSetChangeComplete\n\n\nMiscellaneous Notes\n\nAt design time with the DataGrid Control, use the Retrieve Fields command to get more columns from the underlying RecordSet.\n\nOption Buttons cannot be bound to and ADO Data Control.\n\nThe Error event of the Data Control allows a centralized Error handler for Data Errors (just like in an Access form). Use Booleans to avoid cascading errors.\n\n\nMiscellaneous Code\n\nTesting an ADO Recordset's EditMode property:\n\n    blnAdding = (adoCtrl.Recordset.EditMode = adEditAdd)\n    If blnAdding Then\n        'Adding a record...\n    Else\n        'Not adding a record...\n    End If\n\nThis form is slightly faster than the If Then structure testing .EditMode directly.\n\nRolling your own record position caption:\n\n    With adoCtrl.Recordset\n        Me.lbl1.Caption = \"Record \" .AbosolutePosition _\n            & \" of \" & .Recordcount\n    End With",
    "ItemText": null,
    "CreateDate": "1999-03-01T13:48:06.0000000",
    "EndDate": null,
    "ModificationDate": "1999-03-01T13:48:06.0000000",
    "DocumentId": "907000936",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5028",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB: Orange County Visual Basic Users Group Seminar; Internet Information Server Applications; Web Classes",
    "SortOrdinal": null,
    "ItemChar": "Internet Information Server Applications in VB6 is an \"alternative\" to Visual Interdev. Use relative paths; Deployment Wizard \"sucks\"; avoid the Session object and wcRetainInstance; use POST not GET; use generated URLs; do not store ADO Recorsets in Session object.\n\nSet NextItem = <Template>\n\nWebClass Events: BeginRequest/EndRequest; Initialize/Terminate; FatalErrorReponse (write custom error message to client); Start\n\nWebItem Events: Respond; ProcessTag; UserEvent\n\nWeb Class has Templates and WebItems\n\nTemplates have tags; tags can be associated with custom events (Connect to Custom Event) or WebItem (Connect to WebItem).\n\nUse the WriteTemplate method to render page.\n\nURLFor() is a keyword to take note of...",
    "ItemText": null,
    "CreateDate": "1999-04-21T20:54:26.0000000",
    "EndDate": null,
    "ModificationDate": "1999-04-21T20:54:26.0000000",
    "DocumentId": "907007523",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5029",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Sun SPARCstation5; Performing a Dangerous Warm Boot",
    "SortOrdinal": null,
    "ItemChar": "Pressing the Stop key and then the A key will bring up a prompt. Typing sync; shutdown; boot at the prompt will cause the system to reboot without power cycling. This procedure is dangerous because files can become corrupted if they are open due to running processes.",
    "ItemText": null,
    "CreateDate": "1998-10-02T14:36:02.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-02T14:36:02.0000000",
    "DocumentId": "907355995",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5030",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "appdev.com Seminar Notes",
    "SortOrdinal": null,
    "ItemChar": "Be aware of the values of App.Path. It can be in long file name format or short file name format. The file name format can be lost when the File > Open command is not used to open a Visual Basic Project file (*.VBP).\n\nScreen.Fonts(<index>) returns system fonts names not font objects. This is an array (for now) not a collection.\n\nBe aware of the TypeName() function and the VarType() function. They are useful for finding sub-types of Variants.\n\nfrm.Unload removes UI but not module-scope variables from memory. Set frm = Nothing removes all Form attributes of frm from memory.",
    "ItemText": null,
    "CreateDate": "1998-10-04T17:26:57.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-04T17:26:57.0000000",
    "DocumentId": "907537923",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5031",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SPARCstation 5; PROBLEM: Can't Unlock the CDE",
    "SortOrdinal": null,
    "ItemChar": "It seems that locking the CDE while logged in as root (or equivalent) prevents unlocking the CDE. I have had to use Stop A to restart the system (which is not a good idea). One work-around is to login as a user and then \"su\" to a super-user shell. When the CDE is locked it will be locked by the user login and not the \"su'ed\" super-user session.",
    "ItemText": null,
    "CreateDate": "1998-10-06T13:03:40.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-06T13:03:40.0000000",
    "DocumentId": "907692390",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5032",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SPARCstation 5; PROBLEM: admintool Fails to Start Returning a Segmentation Fault",
    "SortOrdinal": null,
    "ItemChar": "The admintool failed to start returning a segmentation fault (and dumping its core) when I edited passwd and shadow by hand. To recover from this blunder (DO NOT edit these files by hand!), I ran pwconv to create and update /etc/shadow with data from /etc/passwd (/etc/oshadow and /etc/opasswd should not be forgotten as well).\n\nHopefully running pwconv is the one and only solution to this problem. For more information on pwconv, see Sun man pages.",
    "ItemText": null,
    "CreateDate": "1998-10-06T12:47:28.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-06T12:47:28.0000000",
    "DocumentId": "907702562",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5033",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT Registry: Hiding the Network Neighborhood Icon",
    "SortOrdinal": null,
    "ItemChar": "The following Registry Key must be Merged from a properly formatted *.REG file:\n\nHKEY_CURRENT_USER\n    \\Software\\Microsoft\\Windows\n        \\CurrentVersion\\Policies\\Explorer\n            \"NoNetHood\"=dword:00000001\n\nNote that NoNetHood is of type DWORD.",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:27:59.1670000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:27:59.1670000",
    "DocumentId": "907727558",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5034",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: Can't open display: [name]:0.0 Error Message; X-Window Applications",
    "SortOrdinal": null,
    "ItemChar": "When running an X-Window application from a command prompt the GUI never shows and the following message is returned:\n\n    Xlib: connection to \"<name>:0.0\" refused by server\n    Xlib: Client is not authorized to connect to Server\n    Error: Can't open display: <name>:0.0\n\nwhere <name> is a machine or user name (or it could be blank indicating some kind of root access). This error message is most likely due to the DISPLAY environment variable not being set. This variable should refer to the machine's X-Server. From the command line this variable can be set with the csh/tcsh form:\n\n    setenv DISPLAY <name>:0.0\n\nwhere <name> is the name of the machine providing X graphical services. In csh, for example, this line could be in the .cshrc file.",
    "ItemText": null,
    "CreateDate": "1999-01-13T19:14:29.0000000",
    "EndDate": null,
    "ModificationDate": "1999-01-13T19:14:29.0000000",
    "DocumentId": "907947826",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5035",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT: The \"Correct\" Way to Place the Control Panel on the Start Menu",
    "SortOrdinal": null,
    "ItemChar": "Create a new folder in your Start Menu. To be able to do this you can run a command like:\n\n    C:\\WINNT\\Profiles\\rasx\\Start Menu\n\nif your system root directory is C:\\WINNT and your user name is \"rasx.\" Create a new folder inside the Start Menu folder. Copy the following string:\n\n   Control Panel.{21EC2020-3AEA-1069-A2DD-08002B30309D} \n\nand paste it over the \"New Folder\" default name during the Rename mode---which appears by default when you create a new folder.",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:33:52.3230000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:33:52.3230000",
    "DocumentId": "908257690",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5036",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript: Testing for an Instantiated Object; Constructor Functions",
    "SortOrdinal": null,
    "ItemChar": "Because of low-bandwidth loading problems, a variable may be declared but not yet set to a \"new\" instance of a Constructor Function's object. In such a limbo state the variable will be null. As a precaution, test for null. For example, \n\n    if (objAgent != null) {\n        if (objAgent.cool) { //do stuff }\n    }\n\nchecks for the instantiation of objAgent before its \"cool\" property is tested. This often happens while a page is loading and the page has an OnLoad event that binds one or more variables to an object. (Recall that the OnLoad event does not fire until all elements on the page are completely loaded.) If an element on the loading page refers to an object that is not yet instantiated (because the OnLoad event has not fired yet) and no precautions are taken, a \"not an object\" error will occur.",
    "ItemText": null,
    "CreateDate": "1999-02-09T18:15:19.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-09T18:15:19.0000000",
    "DocumentId": "908380600",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5037",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Netscape Enterprise Server 3.5.1 Administration: Allowing 128-bit (and Greater) Access to the Server; Verisign",
    "SortOrdinal": null,
    "ItemChar": "Once SSL is enabled you can specify which client ciphers will be allowed. By eliminating both SSL 2.0 and SSL 3.0 ciphers that are less than 128 bits, you can ensure that only \"stronger ciphers\" can access the server.\n\nSpecify preferred ciphers under Server Preferences > Encryption Preferences. If you disallow all ciphers below 128 bits, when a 40-bit client hits the server the following error will be logged:\n\n    [<time stamp>] failure: Error receiving connection (SSL_ERROR_NO_CYPHER_OVERLAP)\n\nPlease do not confuse Encryption Preferences with the Stronger Ciphers commands under Server Preferences. Here the \"secret key size\" of the browser/server session is queried. This is exactly the same as watching the HTTPS_SECRETKEYSIZE environment variable during a secured CGI session.",
    "ItemText": null,
    "CreateDate": "1999-01-13T16:09:32.0000000",
    "EndDate": null,
    "ModificationDate": "1999-01-13T16:09:32.0000000",
    "DocumentId": "908401142",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5038",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB: From DAO to ADO; Notes",
    "SortOrdinal": null,
    "ItemChar": "ADO Objects are not found in a hierarchy; they logically lie side by side. For example, the Command, Connection and Recordset objects can open a connection to a database. It is up to the programmer to decide the \"best\" way to open the connection.\n\nThere is no FindFirst method inside the Recordset object. There is only the Find method. Moreover there is no NoMatch property: when an ADO Recordset cannot find a row it moves to EOF (making EOF = True). WARNING: when specifying criteria strings in a Find, use single quotes only.\n\nIt appears that ADO cannot see DAO objects. It follows that you cannot treat a DAO query like a stored procedure. I beleive I am confined to using MS-SQL strings.\n\nThe AbsolutePosition property in DAO is zero-based; in ADO it is one-based.",
    "ItemText": null,
    "CreateDate": "1999-03-26T18:53:20.0000000",
    "EndDate": null,
    "ModificationDate": "1999-03-26T18:53:20.0000000",
    "DocumentId": "908495718",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5039",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Access to VB: The TabStrip Control in the Microsoft Windows Common Controls 6.0 Library",
    "SortOrdinal": null,
    "ItemChar": "The TabStrip Control in the Microsoft Windows Common Controls 6.0 library (MSCOMCTL.OCX) is not as \"robust\" as the Tab Control native to Access. The greatest difference appears to be that the VB TabStrip Control is not a container. This means that at design time you cannot see your objects \"inside\" each tab. As of this writing, the VB developer must use Container Controls to group Controls on a \"page\" and the Visible property for the Container can be manipulated whenever a tab is clicked.\n\nNow Microsoft does provide the Microsoft Tabbed Dialog Control (TABCTL32.OCX) and its design-time \"container\" features do match those of the the Access Tab control. But Container controls are still needed when you want to place a Control Array on a Tabbed Dialog page.",
    "ItemText": null,
    "CreateDate": "1998-11-05T13:25:35.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-05T13:25:35.0000000",
    "DocumentId": "908580227",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5040",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript PROBLEM: \"Property or Method Not Supported\" Error in IE 3.x Browsers When Using the window or document Objects",
    "SortOrdinal": null,
    "ItemChar": "The window and document objects are not fully supported in IE 3.x browsers. This error is frequently encountered when the open() method is called from the window object. I have even seen errors related to window.open() with some versions of Internet Explorer 4.x.",
    "ItemText": null,
    "CreateDate": "1998-12-13T14:17:25.0000000",
    "EndDate": null,
    "ModificationDate": "1998-12-13T14:17:25.0000000",
    "DocumentId": "908841414",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5041",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Attaching to Outlook and Not Being Able to Attach to Outlook Express",
    "SortOrdinal": null,
    "ItemChar": "The Microsoft KB details how to attach to a Microsoft Outlook folder in \"ACC97: Sample Procedure to Attach a Microsoft Outlook Folder\" (Article ID Q161174). I found dealing with MSIE4's Outlook Express a different matter. \n\nSince I could not get the proper connection string, I resorted to exporting the desired folder to Windows Messaging (during this process Outlook Express should not be the default Simple MAPI client). I then attached to the folder using the following connection string:\n\n    'Source database type:\n    strConn = \"Exchange 4.0;\"\n    'Table name (MAPILEVEL=<storage|folders>):\n    strConn = strConn & \"MAPILEVEL=Personal Folders|;\"\n    'Source table type (0 for folders, 1 for address books):\n    strConn = strConn & \"TABLETYPE=0;\"\n    'Database name (DATABASE=<path>):\n    strConn = strConn & \"DATABASE=\" & m_dbDAO.Name & \";\"\n    'Profile name (optional):\n    strConn = strConn & \"PROFILE=Bryan D. Wilhite;\"\n    'Password (optional):\n\nThe greatest challenge to getting a sucessful connection was setting MAPILEVEL correctly: \"MAPILEVEL=Personal Folders|;\".",
    "ItemText": null,
    "CreateDate": "1998-10-24T11:25:45.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-24T11:25:45.0000000",
    "DocumentId": "909252811",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5042",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The Like Operator",
    "SortOrdinal": null,
    "ItemChar": "The Like operator is case sensitive when Option Compare Database is used (in my locale). This of course means that if strTest = \"foo\" then\n\n    (strTest Like \"fo*\") = True\n\nand\n\n    (strTest Like \"Fo*\") = False",
    "ItemText": null,
    "CreateDate": "1998-10-29T13:16:25.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-29T13:16:25.0000000",
    "DocumentId": "909695763",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5043",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Actually Treating a Form (with HasModule = True) as a Class",
    "SortOrdinal": null,
    "ItemChar": "It was difficult for me to unify my understanding of my user-defined classes with the idea of a Form as a class. I used to draw a blank when I saw that Access calls a form code module a \"Class Module.\" But now I have an understanding:\n\nThe code behind forms is not only continually compliled (assuming Compile on Demand is enabled under Tools > Options... > Coding Options) but it is also continually instantiated. User defined classes are not so lucky as they must be Set with the keyword New before they create objects.\n\nAn unbound text box control in a form with a Class Module should be thought of as a class Property of type Variant. This implies that this Form is the graphical interface of an instantiated class. So an unbound text box in a form without a class module (HasModule = False) is truly unbound. But a form that has a module implicitly \"binds\" its text boxes to referable memory locations for the duration of its instance.",
    "ItemText": null,
    "CreateDate": "1998-11-30T08:47:07.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-30T08:47:07.0000000",
    "DocumentId": "909887455",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5044",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: When a DoCmd Action is Called from Code but Cancelled By the User a Runtime Error Occurs; Error 2501",
    "SortOrdinal": null,
    "ItemChar": "When a DoCmd Action is called from VBA code but cancelled by user a runtime error occurs. This is error 2501. I usually trap this VBA.Err and Resume to the exit line label in my error handling structure.",
    "ItemText": null,
    "CreateDate": "1998-11-01T10:12:45.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-01T10:12:45.0000000",
    "DocumentId": "909943719",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5045",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Research: Harris Papyrus",
    "SortOrdinal": null,
    "ItemChar": "The Harris Papyrus\n\nI am thy first sister\nAnd thou art to me as the garden\nWhich I have planted with flowers\nAnd all sweet-smelling herbs\nI directed a canal into it\nThat thou mightest dip thy hand into it\nWhen the north wind blows cool\nThe beautiful place where we take a walk\nWhen thy hand rests within mine\nWith thoughtful mind and joyous heart\nBecause we walk together\nIt is intoxicating to me to hear thy voice\nAnd my life depends upon hearing thee whenever I see thee\nIt is better to me than food or drink\n\n\nThe Beautiful Joyous Songs\nof Thy Sister Whom Thy Heart Loves\nWho Walks in the Fields\n\nThe love of my beloved leaps on the bank of the stream\nA crocodile lies in the shadows\nYet\nI go down into the water and breast the wave\nMy courage is high on the stream\nAnd the water is as land to my feet\nIt is her love that makes me strong\nShe is a book of spells to me\nWhen I behold my beloved coming my heart is glad\nMy arms are spread apart to embrace her\nMy heart rejoices forever...since my beloved came\nWhen I embrace her I am as one who is in Incense Land\nAs one who carries perfumes\nWhen I kiss her, her lips are opened and I am merry without beer\nWould that I were her servant who is in attendance on her\nSo should I behold the hue of all her limbs",
    "ItemText": null,
    "CreateDate": "2004-05-05T01:26:58.5170000",
    "EndDate": null,
    "ModificationDate": "2004-05-05T01:26:58.5170000",
    "DocumentId": "909992888",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5046",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Core Data Services for DAO; Migration to ADO from DAO; Access 2000",
    "SortOrdinal": null,
    "ItemChar": "Every application that I build means to reflect the three-tier abstract model within Microsoft's software design guidelines. One of those tiers is Data Services. With Access 2000 and ADO in mind, I have distilled the core data services of a DAO (native ISAM) Access application.\n\nHere are the current tools:\n\nOne Private, module-level, Recordset Object Variable\n\nAll of the procedure designs that take advantage of Recordset objects see this variable. Frequently in my designs, the procedure needs to loop through a set of records or add records to a table---here I find such a variable useful.\n\n\nOne Function, Returning a Recordset Object\n\nThis function serves the Module-level Object Variable. Currently it passes arguments for only one Parameter (for parameterized queries). It needs to distinguish between tables and compiled queries.\n\n\nOne Function That Executes Action Queries\n\nThis function returns a value of type Long, indicating the number of records affected by the Action Query. This function replaces the \"seductive\" functionality of the DoCmd.RunSQL() method of the Application object.\n\n\nOne Function, Returning a Single Value from a Database Object\n\nThis function replaces the Dlookup() method of the Application object. It takes a SQL WHERE clause among its arguments and returns a Variant.\n\n\nOne Function, Returning String from tblStrings\n\nAll of my Visual Basic applications store their String Literals in a DAO table called tblStrings. I built a \"special\" function that is optimized to read from this table. This function features the Seek method of the DAO.Recordset object.",
    "ItemText": null,
    "CreateDate": "1998-11-30T08:38:59.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-30T08:38:59.0000000",
    "DocumentId": "910149149",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5047",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL: When to Use Dynamic SQL and When to Use Stored Procedures; Views and SELECT Stored Procedures",
    "SortOrdinal": null,
    "ItemChar": "* Dynamic SQL and Stored Procedures\n\nFundamentally, use Dynamic SQL (that is, SQL built \"on the fly\" in code) when it is impossible to use Stored Procedures. Many SQL servers cannot use late binding on database objects. In such servers, stored procedures cannot represent table names or column names as variables. When the tables and columns change on the fly, Dynamic SQL is the way to display or affect data.\n\nBeyond this fundamental, the use of stored proc's or Dyamic SQL is matter of code management style. Do you want to deal with hundreds of mysterious stored proc's on the server? Do you want to \"hard code\" or store SQL strings in \"meta-data\" tables or client-side application files?\n\n\n* Views and SELECT Stored Procedures\n\nIn short, a View is just another table compared to a Stored Procedure. To show a View, a SQL SELECT statement must be used which is compiled on demand. This is very much unlike a Stored Procedure, which is pre-compiled and \"planned\" (if, say, WITH RECOMPILE is used for Sybase SQL Servers).\n\nSELECT Stored Procedures are smaller and faster than Views. They are also more complex than Views. They can run loops, decision structures and other logic a View was not designed to handle.\n\nThe following is an example of a SELECT Stored Procedure for a Sybase SQL Server:\n\n    IF OBJECT_ID('rpt_get_field_names') IS NOT NULL\n        BEGIN\n        DROP PROCEDURE rpt_get_field_names\n    IF OBJECT_ID('rpt_get_field_names') IS NOT NULL\n        PRINT '<<< FAILED DROPPING PROCEDURE rpt_get_field_names >>>'\n    ELSE\n        PRINT '<<< DROPPED PROCEDURE rpt_get_field_names >>>'\n    END\n    GO\n\n    CREATE PROCEDURE rpt_get_field_names\n\n    WITH RECOMPILE\n\n    AS\n\n    SELECT\n      t_field.field_id\n    , t_field.name\n    , t_field_lookup.value\n\n    FROM \n      t_field\n    , t_field_lookup\n\n    WHERE t_field.field_id = t_field_lookup.field_id\n\n    ORDER BY\n      t_field.name\n    , t_field_lookup.value\n    GO\n\n    GRANT EXECUTE ON rpt_get_field_names TO public\n    GO\n    IF OBJECT_ID('rpt_get_field_names') IS NOT NULL\n    PRINT '<<< CREATED PROCEDURE rpt_get_field_names >>>'\n    ELSE\n    PRINT '<<< FAILED CREATING PROCEDURE rpt_get_field_names >>>'\n    GO",
    "ItemText": null,
    "CreateDate": "2007-11-19T15:15:47.0000000",
    "EndDate": null,
    "ModificationDate": "2007-11-19T15:15:47.0000000",
    "DocumentId": "910205312",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5048",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB: ADO; Code; Connecting to an Access .MDB File",
    "SortOrdinal": null,
    "ItemChar": "Public Function basDataConnection(Optional CloseConn = False) As Boolean\n    \n    On Error GoTo basDataConnection_Err\n    \n    If VBA.VarType(CloseConn) <> vbBoolean Then VBA.Err.Raise 450\n    \n    If CloseConn Then\n        If Not m_cnnADO Is Nothing Then\n            m_cnnADO.Close\n            Set m_cnnADO = Nothing\n        End If\n        GoTo basDataConnection_Exit\n    End If\n    \n    basDataConnection = basFileExists(App.Path & c_dbName)\n    If Not basDataConnection Then VBA.Err.Raise 76\n    \n    Set m_cnnADO = New ADODB.Connection\n    With m_cnnADO\n        .Open _\n        ConnectionString:=\"Provider=Microsoft.Jet.OLEDB.3.51;\" _\n            & \"Persist Security Info=False;\" _\n            & \"User ID=Admin;\" _\n            & \"Data Source=\" & VB.App.Path & \"\\DSAPL.mdb;\" _\n            & \"Mode=Share Deny None;\" _\n            & \"Extended Properties=\"\";\" _\n            & \"COUNTRY=0;\" _\n            & \"CP=1252;\" _\n            & \"LANGID=0x0409\"\";\" _\n            & \"Locale Identifier=1033;\" _\n            & \"Jet OLEDB:System database=\"\"\"\";\" _\n            & \"Jet OLEDB:Registry Path=\"\"\"\";\" _\n            & \"Jet OLEDB:Database Password=\"\"\"\";\" _\n            & \"Jet OLEDB:Global Partial Bulk Ops=2\"\n        .CursorLocation = adUseClient\n    End With\nbasDataConnection_Exit:\n    Exit Function\n    \nbasDataConnection_Err:\n    Select Case Err\n        Case 76 'Path not found\n            MsgBox \"The Application Table file \" & c_dbName & \" cannot be found.\", vbCritical\n            basDataConnection = False\n            Resume basDataConnection_Exit\n        Case Else\n            MsgBox Err & \": \" & Err.Description, vbCritical, \"basDataConnection Error\"\n            basDataConnection = False\n            Resume basDataConnection_Exit\n    End Select\n    \nEnd Function",
    "ItemText": null,
    "CreateDate": "1999-03-01T13:35:15.0000000",
    "EndDate": null,
    "ModificationDate": "1999-03-01T13:35:15.0000000",
    "DocumentId": "910209711",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5049",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB Code: Synchronizing the DriveListBox with the DirListBox and FileListBox Controls",
    "SortOrdinal": null,
    "ItemChar": "Private Sub fsDevice_Change()\n    'fsDevice is the DriveListBox.\n    'fsRoot is the DirListBox.\n    'fsFile is the FileListBox.\n    With Me\n        .fsRoot.Path = fsDevice.List(.fsDevice.ListIndex)\n        .fsFile.Path = .fsRoot.Path\n    End With\nEnd Sub\n\nPrivate Sub fsRoot_Change()\n    With Me\n        .fsFile.Path = .fsRoot.Path\n    End With\nEnd Sub",
    "ItemText": null,
    "CreateDate": "1999-03-01T13:47:44.0000000",
    "EndDate": null,
    "ModificationDate": "1999-03-01T13:47:44.0000000",
    "DocumentId": "910298753",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5050",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "System Design: Multiple Installs of Windows NT; FAT and NTFS Partitions",
    "SortOrdinal": null,
    "ItemChar": "Multiple copies of Windows NT should be installed when there is ample drive space. This disk should have a bootable drive C: as FAT with a Compact install of NT. The balance of drive space should be NTFS. The very first logical reason to have NTFS is for its security features (setting permissions per user per path).\n\nThe FAT NT install serves as a maintenance copy of NT. This \"meta\" system can be useful for, say, starting a service that prevents the NTFS copy of NT from starting (via loading the appropriate NTFS hive in the FAT copy of REGEDT32.EXE).",
    "ItemText": null,
    "CreateDate": "1998-11-26T20:18:17.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-26T20:18:17.0000000",
    "DocumentId": "911162552",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5051",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: Scanning A Root for Files and Directories",
    "SortOrdinal": null,
    "ItemChar": "Public Function basScan() As Boolean\n    \n    Dim strPath As String, strName As String\n    \n    On Error GoTo basScan_Err\n\n    basScan = True    \n\n    strPath = \"C:\\\"\n    \n    strName = VBA.Dir(strPath, vbDirectory)\n    \n    Do While strName <> Empty\n        'Ignore file system directories.\n        If strName <> \".\" And strName <> \"..\" Then\n            ' Use bitwise comparison to make sure strName is a directory.\n            If (VBA.GetAttr(strPath & strName) And vbDirectory) > 0 Then\n                Debug.Print \"Directory: \" & strName\n            ' Use bitwise comparison to make sure strName is a file.\n            ElseIf (VBA.GetAttr(strPath & strName) And vbDirectory) = 0 Then\n                Debug.Print \"File: \" & strName\n            End If\n        End If\n        ' Get next entry for current path.\n        strName = VBA.Dir\n    Loop\n            \nbasScan_Exit:\n    Exit Function\n    \nbasScan_Err:\n    Select Case VBA.Err\n        Case Else\n            VBA.MsgBox VBA.Err & \": \" & VBA.Err.Description, _           \n                 vbCritical, \"basScan Error\"\n            basScan = False\n            Resume basScan_Exit\n    End Select\nEnd Function",
    "ItemText": null,
    "CreateDate": "1998-11-30T18:36:08.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-30T18:36:08.0000000",
    "DocumentId": "911637588",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5052",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Windows NT 4.0: Dial-Up Networking Settings for Netcom Unix Shell",
    "SortOrdinal": null,
    "ItemChar": "A Dial-Up Networking Phonebook has been created and stored in my Home Directory. From my Administrator session I select Start > Programs > Accessories > Dial-Up Networking. These are the settings within Dial-Up Networking:\n\nMore > Edit entry and modem properties...\n    Basic > Entry name: \"Netcom\"\n    Basic > Use Telephony dialing properties: (not checked)\n    Basic > Use another port if busy: (not checked)\n    Server > Dial-up server type: \"PPP:...\"\n    Server > Network Protocols > TCP/IP: (checked)\n    Server > Network Protocols > IPX/SPX... : (not checked)\n    Server > Network Protocols > NetBEUI: (not checked)\n    Server > Network Protocols > TCP/IP Settings...\n        Server assigned IP address: (selected)\n        Specify name server addresses\n            > Primary DNS: 199.182.203\n            > Secondary DNS: 199.182.202\n        Use IP header compression: (checked)\n        Use default gateway on remote network: (checked)\n    Server > Enable software compression: (checked)\n    Server > Enable PPP LCP extensions: (not checked)\n    Script > Pop up a terminal window",
    "ItemText": null,
    "CreateDate": "1998-11-26T20:07:42.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-26T20:07:42.0000000",
    "DocumentId": "911995361",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5053",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Windows NT 4.0: Core Installation",
    "SortOrdinal": null,
    "ItemChar": "Context: DOS 6.22 is required to install Windows 95; Windows 95 is required to install Windows NT.\n\nInstall Windows NT from Windows 95 command prompt:\n\nE:\\i386\\WINNT /B\n\nChoose C:\\WINNT for installation directory. Select a Custom installation. Computer Name is \"Songhay.\" Do not make an Emergency Repair Disk.\n\nSelect Components (different from defaults):\n    Accessibility Options: (unchecked)\n    Accessories > Imaging: (unchecked)\n    Accessories > Object Packager: (unchecked)\n    Accessories > Paint: (unchecked)\n    Accessories > Communications: (unchecked)\n    Windows Messaging > Microsoft Mail: (unchecked)\n\nChoose \"Do not connect this computer to a network at this time\" and continue leaving defaults.\n\n\nLogged in as Administrator for the first time:\n\nDelete the My Briefcase Icon.\n\nNote: Ports COM1 and COM2 were created by this installation. Ports > Settings > Advanced show \"Default\" for addresses and interrupts.\n\nUser Manager:\n    Rename the users \"Administrator\" and \"Guest.\"\n    Disable the Guest account.\n    Add a new user to the Power Users group.\n    Set a Home Directory for the new user.\n\nFrom the User Manager, select Policies > User Rights Policy > Show Advanced User Rights. The Administrators and Power Users groups can \"Access this computer from a network\"; the Administrators, Power Users and Backup Operators groups can \"Log on locally.\"\n\nApply SP3 from MSIE4 CD-ROM. Select Install from PNPISA.INF; PNP will load Diamond SupraExpress 56i Voice V.90 with modem jumpers set to COM1 (03F8, IRQ4); PNP will install Creative Labs AWE 32 (IRQ5, DMA 1, DMA 5, 0220-022F, 0330-0331, 0388-038B); PNP will attempt to install IDE CD-ROM Controller on AWE 32 card (Do not install a driver); PNP will install Creative Labs Advanced Wave Effects Synthesis (0620-0623, 0A20-0A23, 0E20-0E23); PNP will install Microsoft Joystick Port Enabler (0200-0207).\n\nREGEDT32.EXE: set Registry to clear log in user name and swap file.",
    "ItemText": null,
    "CreateDate": "1998-11-26T20:06:56.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-26T20:06:56.0000000",
    "DocumentId": "912015905",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5054",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBScript and ASP: ADO Connection String for Sybase System 11 ODBC Data Source",
    "SortOrdinal": null,
    "ItemChar": "The form is:\n\n    vADOstr = \"Driver={Sybase System 11};\"\n    vADOstr = vADOstr & \"SRVR=<your server name here>;\"\n    vADOstr = vADOstr & \"DB=<your database name here>;\"\n    vADOstr = vADOstr & \"UID=<your user ID here>;\"\n    vADOstr = vADOstr & \"SRVR=<your password here>;\"\n\nIn my designs I pass user ID and password through Session-level scalar variables. It would follow that the form would change to:\n\n    vADOstr = \"Driver={Sybase System 11};\"\n    vADOstr = vADOstr & \"SRVR=<your server name here>;\"\n    vADOstr = vADOstr & \"DB=<your database name here>;\"\n    vADOstr = vADOstr & \"UID=\" & Session(\"dbUserID\")\n    vADOstr = vADOstr & \";\"\n    vADOstr = vADOstr & \"SRVR= & Session(\"dbPassword\")\n    vADOstr = vADOstr & \";\"\n\nwhere the values Session(\"dbUserID\") and Session(\"dbPassword\") are set before the value of vADOstr is set.",
    "ItemText": null,
    "CreateDate": "1999-03-12T17:48:14.0000000",
    "EndDate": null,
    "ModificationDate": "1999-03-12T17:48:14.0000000",
    "DocumentId": "912197236",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5055",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Initial Idea of a Network Installation",
    "SortOrdinal": null,
    "ItemChar": "NIC Cards: 3COM (3C905B-TX-NM) with \"Remote Wake-Up\"; these cards use Twisted Pair (RJ-45) cables (much bigger than the RJ-11 cables used on phones).\n\nHUB: Linksys (Etherfast 100 Base-TXPORT).\n\nSOFTWARE: Use TCP/IP (no DHCP; no WINS); assign arbitrary IP address (200.100.100.10, 200.100.100.20, 200.100.100.30, etc.).\n\nNOTE: A larger network requires a Router---this is beyond the scope and expertise of a developer like myself!",
    "ItemText": null,
    "CreateDate": "1998-11-28T20:08:01.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-28T20:08:01.0000000",
    "DocumentId": "912283235",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5056",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: MSysCmdBars Error Message; Replication",
    "SortOrdinal": null,
    "ItemChar": "The following error message may occur after selecting Tools > Replication > Create Replica...: \"Microsoft Access can't convert the database to a Design Master. Cannot make the MSysCmdBars object in Tables container replicable.\" This problem is most likely due to a version of replication dynamic-link library, MSREPL35.DLL, less than 3.51.0623.0.\n\nTo obtain updated DLLs from Microsoft please refer to the following Microsoft Knowledge Base articles: \"ACC97: Updated Version of Microsoft Jet 3.5 Available on MSL\" (Q172733); \"ACC97: Error Converting Database To Design Master\" (Q173775).",
    "ItemText": null,
    "CreateDate": "1998-11-30T08:21:11.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-30T08:21:11.0000000",
    "DocumentId": "912442279",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5057",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "HTML: The Difference between DIV and SPAN",
    "SortOrdinal": null,
    "ItemChar": "Both DIV and SPAN are \"Generic Containers\" as they do not apply any visible formatting without the use of the CLASS attribute and Cascading Style Sheets (CSS). The difference between DIV and SPAN is that the former is a block-level element and the latter is an in-line element.\n\nThe use of DIV and SPAN with CSS is quite successful with many web browsers. Using SPAN---and especially DIV---with client-side scripting is not very successful with many web browsers at this proprietary moment in time.",
    "ItemText": null,
    "CreateDate": "1999-01-13T09:58:37.0000000",
    "EndDate": null,
    "ModificationDate": "1999-01-13T09:58:37.0000000",
    "DocumentId": "912631251",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5058",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft  Office: Backing Up User Settings for Access and Word",
    "SortOrdinal": null,
    "ItemChar": "When the \"power\" end user makes many custom changes to Office Applications, it is possible to save these changes using REGEDIT.EXE (not REGEDT32.EXE for Windows NT users) in a .REG file. For Microsoft Access 97, export this key:\n\n    HKEY_CURRENT_USER\n        \\Software\\Microsoft\\Office\\8.0\\Access\\Settings\n\nFor Microsoft Word 97, export these keys:\n\n    HKEY_CURRENT_USER\n        \\Software\\Microsoft\\Office\\8.0\\Word\\Data\n\n    HKEY_CURRENT_USER\n        \\Software\\Microsoft\\Office\\8.0\\Word\\Options\n\nFor more information please see the Microsoft Knowledge Base, \"WD: How to Rebuild User Preference and Options Settings\" (Q140097).",
    "ItemText": null,
    "CreateDate": "1999-08-24T20:19:08.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-24T20:19:08.0000000",
    "DocumentId": "912709293",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5059",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT Registry: Changing the Default Location of the Windows NT Setup Folder",
    "SortOrdinal": null,
    "ItemChar": "The path to the Windows NT 4.0 Setup folder usually contains the letter of the CD-ROMdrive and \"I386\" for \"Wintel\" machines. So, for example, if drive D: is the CD-ROM drive, then D:\\I386 would be the Setup path.\n\nTo change the default location of the setup files, edit the string value SourcePath found at:\n\n    HKEY_LOCAL_MACHINE\n        \\SOFTWARE\\Microsoft\n            \\Windows NT\\CurrentVersion\\Setup\n\nSo, for example, if the Windows NT setup directory changes to G:\\I386, set SourcePath to \"G:\" (do not be tempted to enter \"G:\\I386\").",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:27:37.5330000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:27:37.5330000",
    "DocumentId": "912818245",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5060",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT Registry: A \"Brave Attempt\" to Control the State of the Numlock Key",
    "SortOrdinal": null,
    "ItemChar": "The following Registry Keys must be Merged from a properly formatted *.REG file:\n\n    HKEY_USERS\n        \\.DEFAULT\\Control Panel\\Keyboard\n            \"InitialKeyboardIndicators\"=\"2\"\n\n    HKEY_CURRENT_USER\n        \\Control Panel\\Keyboard\n            \"InitialKeyboardIndicators\"=\"2\" \n\nNote that InitialKeyboardIndicators is of type REG_SZ (string). It has been said that this procedure may not work as planned. The opinion here is that this setting does not force an \"on\" or \"off\" state. I assume that it is saving the state that the Numlock Key is in before the user logs off.",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:29:24.5500000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:29:24.5500000",
    "DocumentId": "912850369",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5061",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT Registry: Starting a Disabled Copy of NT from a \"Satellite\" Copy of NT",
    "SortOrdinal": null,
    "ItemChar": "Windows NT may fail to start correctly because of an errant Registry setting. For example, disabling the Service that handles the keyboard is cruel and unusual punishment (trust me on this). In most of these software-related boot failures, disabled (or enabled) Services prevent NT from loading. In case of these fires, a \"satellite\" copy of Windows NT is useful. A compact (~70MB) install of NT can be used to revive the main install.\n\nThe rescue procedure involves using REGEDT32.EXE from the compact install to load the appropriate Hive of the main install. For more details on loading Hives and the ideas surrounding this procedure, please see the following Microsoft Knowledge Base Article: \"How to Disable a Service or Device that Prevents NT from Booting\" (Q165748).\n\nI must say that it is unfortunate that upwards of 70MB of files are needed to load one Registry-editing utility. Surely, Microsoft, there must be a better way! In the mean time, I note some \"cryptic\" infromation that will \"make sense\" once the MSKB article is recalled:\n\n    HKEY_LOCAL_MACHINE\n        <name of loaded hive>\\ControlSet00?\\Services\n            <name of faulty service>\n\nSummary of possible DWORDS:\n\n    Boot = 0x0\n    System = 0x1\n    Automatic = 0x2\n    Manual = 0x3\n    Disabled = 0x4",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:29:34.5630000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:29:34.5630000",
    "DocumentId": "912851386",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5062",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CSS: Linking to an External Style Sheet; LINK; @import; Using Style Sheets Locally",
    "SortOrdinal": null,
    "ItemChar": "At this proprietary moment in time, it is better to use LINK HTML markup instead of W3C's @import to refer to external style sheets. My tests show that Netscape browsers ignore the following W3C-recommended syntax:\n\n    <STYLE><!--\n        @import url(\"http://server/root.css\");\n    //-->\n    </STYLE>\n\nWhere root.css is the name of an external style sheet file. Both Microsoft and Netscape browsers have no trouble with the following:\n\n    <LINK\n        REL=\"StyleSheet\"\n        TYPE=\"text/css\"\n        HREF=\"./root.css\">\n\nwhere the HREF value is a relative URI.",
    "ItemText": null,
    "CreateDate": "1999-01-13T09:32:15.0000000",
    "EndDate": null,
    "ModificationDate": "1999-01-13T09:32:15.0000000",
    "DocumentId": "913399181",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5063",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Design Note: When an Online Database Connection is Needed",
    "SortOrdinal": null,
    "ItemChar": "An online database is needed when a user needs to retrieve any data they have submitted to a web site. An online database is also the best way to display the same data set different ways on demand on the client---without regard for the client's capabilities apart from HTML display. Finally, an online database seems to be the best option when its file-based equivalent gets too \"big\": One massive database \"file\" (drive partition) is easier to deal with than thousands of small static text files.\n\nThese are the only cases that I can think of where an online database is absolutely necessary. Any other use seems to be a matter of cultural or historical influences on the designers.",
    "ItemText": null,
    "CreateDate": "2001-03-31T08:05:01.8200000",
    "EndDate": null,
    "ModificationDate": "2001-03-31T08:05:01.8200000",
    "DocumentId": "913559128",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5064",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Perl: Returning the Last Five Errors from a Server Log",
    "SortOrdinal": null,
    "ItemChar": "#!/path/to/perl\nopen(CMDPIPE, \"tail -5 /path/to/server/error/log |\");\nprint \"Content-type: text/html\\n\\n\";\nprint \"<HTML>\\n\";\nprint \"<PRE>\\n\";\nprint <CMDPIPE>;\nclose (CMDPIPE);\nprint \"</PRE>\\n\";\nprint \"</HTML>\\n\";",
    "ItemText": null,
    "CreateDate": "1998-12-17T08:54:44.0000000",
    "EndDate": null,
    "ModificationDate": "1998-12-17T08:54:44.0000000",
    "DocumentId": "913913530",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5065",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PQMAGICT.EXE, the Text Version of Partition Magic 3.0 on Boot Floppy",
    "SortOrdinal": null,
    "ItemChar": "My MS-DOS 6.22 Boot Floppy contains the text version of Partition Magic 3.0. This file is called PQMAGIC.EXE. It follows that this floppy can be used against my Windows NT installation as Partition Magic requires DOS to work.",
    "ItemText": null,
    "CreateDate": "1998-12-29T18:28:07.0000000",
    "EndDate": null,
    "ModificationDate": "1998-12-29T18:28:07.0000000",
    "DocumentId": "914955827",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5066",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "HTML: Notes on the TABLE Element",
    "SortOrdinal": null,
    "ItemChar": "HTML 4.0 Transitional allows TABLE to have the attributes BORDER, CELLPADDING, CELLSPACING and WIDTH (among others). When a TABLE is being used for layout (not for presenting tabular data), a good \"default\" markup is\n\n    <TABLE\n        BORDER=0\n        CELLPADDING=0\n        CELLSPACING=0\n        WIDTH=\"100%\">\n\n    <!-- Table contents here -->\n\n    </TABLE>\n\nwhere the attributes set to 0 are prevented from rendering unexpected results when, say, setting \"margins\" with TD elements and transparent GIFs.\n\nTables can be nested inside tables. This is very useful when you want to make your own buttons using tables instead of those provided by the INPUT element. Also, table nesting, used with BGCOLOR attributes in TD and TH elements, is currently the safest way to format a block of text as a callout or sidebar. I have noticed that Netscape 4.x browsers place background colors (and borders) in TABLE elements far better than in P, DIV and other block-level tags.",
    "ItemText": null,
    "CreateDate": "2000-03-09T22:24:38.0000000",
    "EndDate": null,
    "ModificationDate": "2000-03-09T22:24:38.0000000",
    "DocumentId": "915303286",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5067",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MS SQL Server 6.5: ISQL/w Can Connect to Sybase Databases",
    "SortOrdinal": null,
    "ItemChar": "ISQL/w can read both Microsoft and Sybase SQL server databases. The SQL Client Configuration Utility can be used to add a Sybase SQL Server to the list of available servers. Under the Advanced > Client Configuration, type in a Sybase server name and select TCP/IP Sockets for DLL Name. Enter the server name, a comma and the port number the Sybase server answers.",
    "ItemText": null,
    "CreateDate": "1999-01-06T16:16:22.0000000",
    "EndDate": null,
    "ModificationDate": "1999-01-06T16:16:22.0000000",
    "DocumentId": "915667772",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5068",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Notes for Sweet Honey in the Rock Woman",
    "SortOrdinal": null,
    "ItemChar": "NOT KNOT-TYING (WRLD 7:30 am) \nhttp://www.wired.com/news/news/email/tip/story/17194.html \n\nIf marriage is the foundation of our society, as \nconservatives like to claim, we're headed for trouble. The \nCensus Bureau said Thursday that 56 percent of American \nadults were married and living with their partners in 1998, \ndown from 68 percent in 1970, 62 percent in 1980, and 59 \npercent in 1990. And more to disturb traditionalists: About \n28 percent of children now live with just one parent, a huge \nrise from 1970 when 12 percent were raised by \nsingle parents.",
    "ItemText": null,
    "CreateDate": "1999-01-07T18:32:22.0000000",
    "EndDate": null,
    "ModificationDate": "1999-01-07T18:32:22.0000000",
    "DocumentId": "915733924",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5069",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Adding the Visual Studio Text Editor to Context Menus",
    "SortOrdinal": null,
    "ItemChar": "From the Active Desktop by Internet Explorer 4.x-based systems, choose View > Folder Options > File Types > Edit... > Actions: > New... > New Action:\n    Action: Edit with Visual Studio\n    Application used to perform action:\n        \"C:\\Program Files\\Microsoft Visual Studio            Common\\IDE\\IDE98\\devenv.exe\" \"%1\"\n    Use DDE: (checked)\n    DDE Message: Open(\"%1\")\n    Application: vstudio\n    DDE Application Not Running: (empty)\n    Topic: system",
    "ItemText": null,
    "CreateDate": "1999-04-21T20:56:21.0000000",
    "EndDate": null,
    "ModificationDate": "1999-04-21T20:56:21.0000000",
    "DocumentId": "915821693",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5070",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "HTML: Notes on Relative URIs",
    "SortOrdinal": null,
    "ItemChar": "T. Berners-Lee and others (of The Internet Society) write of URIs: \"A Uniform Resource Identifier (URI) is a compact string of characters for identifying an abstract or physical resource.\" The URL is considered a \"subset\" of the URI, by the way. The syntax for relative URIs have escaped my understanding for a large time.\n\nWhat I see now centers upon understanding what the period ('.') and the double period ('..') means to Microsoft- or certain Unix-based command line syntax. In such syntax, the single period means \"the current directory\" and the double period means \"the directory immediately above this directory.\" When I apply this syntax to the relative URI, they begin make sense to me.\n\nIn the relative URI, the forward slash '/' is used as a delimeter, marking the number of directories above the current directory. The forward slash is the obvious choice because of its use in Unix shells.\n\nNow with the single period, double periods, and the forward slash, I have a \"relatively\" complete understanding of URIs. The following are examples of \"Normal\" URIs:\n\n    SRC=\"./bitmaps/foo.gif\" ---the source is the GIF image \"foo.gif\" in the \"bitmaps\" directory. This directory is immediately below the current directory.\n\n    SRC=\"../bitmaps/foo.gif\" ---the source is the GIF image \"foo.gif\" in the \"bitmaps\" directory. This directory is immediately above the current directory.\n\n    SRC=\"../../bitmaps/foo.gif\" ---the source is the GIF image \"foo.gif\" in the \"bitmaps\" directory. This directory is two directories above the current directory.\n\n\n\"Abnormal\" URIs:\n\nThe double period(s) and its delimiter(s) should always lead the URI. This means that SRC=\"bitmaps/../../foo.gif\" would be what the Internet Society calls \"abnormal.\"\n\nThe single period should only be used once so that \"././foo.gif\" would also be very abnormal. There can only be one current directory!\n\nFor a formal study, see \"Request for Comments: 2396\" (rfc2396) by the Internet Society. As of this writing, this document is located at http://info.internet.isi.edu/in-notes/rfc/files/rfc2396.txt.",
    "ItemText": null,
    "CreateDate": "1999-01-13T19:07:07.0000000",
    "EndDate": null,
    "ModificationDate": "1999-01-13T19:07:07.0000000",
    "DocumentId": "915838932",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5071",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Notes on Size Constraints of Access Databases",
    "SortOrdinal": null,
    "ItemChar": "According to the Microsoft Knowledge Base article Q101316 (\"ACC1x: 'Maximum Size Reached' Error Attempting to Import File\"), Access 1.0 databases had a definite maximum size of 128 megabytes (MB), or 131,072,000 bytes. Access 1.1 databases can reach up to 1 gigabyte (GB) in size.\n\nUnder the Jet 3.5 regime (Access 97), there is the temptation to proclaim that there is no size limit on .MDB files. However the Access 97 online help documents the specifications of .MDB files (search for \"size limits\" in the index). Moreover there is a Jet 3.5 reserved error 3036, \"Database has reached maximum size,\" which implies that there is a size limit.\n\nHere is the official word from Microsoft: the maximum size of Access databases is 1 gigabyte. But Microsoft goes on to say that, \"because your database can include linked tables in other files, its total size is limited only by available storage capacity.\"",
    "ItemText": null,
    "CreateDate": "1999-01-13T20:32:11.0000000",
    "EndDate": null,
    "ModificationDate": "1999-01-13T20:32:11.0000000",
    "DocumentId": "916184155",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5072",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Netscape Enterprise Server 3.5.1 Administration: Setting Up Restricted Access",
    "SortOrdinal": null,
    "ItemChar": "To set up Restricted Access we need to create the user(s) and groups (if applicable), specify a restricted path and set permissions for the path.\n\nCreating user(s) and groups: Choose General Administration > Users and Groups > New User. Under New User, you are required to specify Surname, Full Name and User ID. Entering a password is highly recommended. When this form is filled press the \"Create User\" button.\n\nSpecify a restricted path: Choose Servers Supporting General Administration > (your server name) > Server Preferences > Restrict Access.\n\nUnder Access Control List Management, click \"Browse…\" under heading \"A. Pick a resource.\" Select the directory in your web you want to restrict access to from the next display (\"Choose a Part of Your Server\").\n\nUnder Access Control List Management, click the \"Edit Access Control\" button under heading \"A. Pick a resource.\" When this Java applet starts, check the \"Access control is on\" box. This applet is a table with columns Action, Users/Groups, From Host, Rights, Extra…, Continue. For now, we can only be concerned with the first two columns.\n\nIn these two columns we first want to \"deny\" access to \"anyone\" ---this means the Action column is set to \"Deny\" and the Users/Groups is left as \"anyone.\" Please see your online help for more details. Press the \"New Line\" button. This will make a second row in this table. For the second row, we want to \"allow\" access to the user created earlier.\n\nWhen this is completed, press the \"Submit\" button. This will bring up the Save and Apply Changes display. Press the \"Save and Apply\" button to save these changes.",
    "ItemText": null,
    "CreateDate": "1999-01-13T16:40:20.0000000",
    "EndDate": null,
    "ModificationDate": "1999-01-13T16:40:20.0000000",
    "DocumentId": "916272579",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5073",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Javascript: Notes on Browser Sniffing",
    "SortOrdinal": null,
    "ItemChar": "\"Browser sniffing\" is scanning the userAgent property of the navigator object. The userAgent property is a text string that can be \"scanned\" with the indexOf() method of a String object variable. The indexOf() method can be applied directly to the userAgent property with the form:\n\n    navigator.userAgent.indexOf(<string>)\n\nbut, for the sake of designing efficiently, navigator.userAgent is usually set to a variable. A more elaborate but most compartmentalized design is to sniff for browsers with a class function. The following illustrates:\n\n    function jsAgent() {\n        \n        vAgent = window.navigator.userAgent\n\n        this.ms3x95 = (vAgent.indexOf(\"MSIE 3.02\") != -1 &&\n            vAgent.indexOf(\"Windows 95\") != -1) ? true:false\n\n        this.ms3xNT = (vAgent.indexOf(\"MSIE 3.02\") != -1 &&\n            vAgent.indexOf(\"Windows NT\") != -1) ? true:false\n\n        this.ieMac = (vAgent.indexOf(\"Mac\") != -1 &&\n            vAgent.indexOf(\"MSIE\") != -1) ? true:false\n                    \n        this.ieold = (vAgent.indexOf(\"Mozilla/1\") != -1 &&\n            vAgent.indexOf(\"MSIE\") != -1) ? true:false\n                    \n        this.ieX = (vAgent.indexOf(\"MSIE\") != -1 &&\n            vAgent.indexOf(\"Windows NT\") == -1 &&\n            vAgent.indexOf(\"Windows 95\") == -1 &&\n            vAgent.indexOf(\"Mac\") == -1) ? true:false\n\n        this.moz3or4 = (vAgent.indexOf(\"Mozilla/3\") != -1 ||\n            vAgent.indexOf(\"Mozilla/4\") != -1 ||\n            vAgent.indexOf(\"Mozilla/5\") != -1) ? true:false\n\n        this.mozold = (vAgent.indexOf(\"Mozilla/2\") != -1 &&\n            vAgent.indexOf(\"MSIE\") == -1) ? true:false\n                    \n        this.agentX = (vAgent.indexOf(\"Mozilla\") == -1 &&\n            vAgent.indexOf(\"MSIE\") == -1) ? true:false\n    }\n\nThis \"class function,\" jsAgent(), is looking for two types of browsers: Microsoft Browsers and Mozilla-Standard browsers. Because of Microsoft's historical behavior, the assumption here is that their early browsers may not contain the word \"Mozilla\" while Netscape browsers (being very intimate with mozilla.org) can be found by looking for \"Mozilla.\"\n\nThe sniffing takes place when jsAgent() is instantiated. Suppose a variable called objAgent is used to instantiate jsAgent(), we then have:\n\n    objAgent = new jsAgent()\n\nUsing objAgent, I will make a few remarks. Suppose the following:\n\n    objAgent.ieX == true\n\nThis means that we have found a Microsoft Internet Explorer browser on an operating system that is not Windows- or Macintosh-based. For more details on dealing with sniffing for other operating systems (and more), please search for the MS Word .DOC file \"Sniffing for Browsers, Java Virtual Machines, and Operating Systems\" by Michael Edwards (March 1998) at microsoft.com.\n\nAlso suppose that:\n\n    objAgent.agentX == true\n\nThis means that we have a browser that is not from Microsoft nor Mozilla-based. This is truly a strange-smelling browser!\n\nNow suppose that:\n\n    objAgent.moz3or4 == true\n\nThis means that we have found a browser that can handle CSS1 and HTML 4.0 Transitional without too many problems. As of this writing, such a browser is the best one can reasonably hope for at this proprietary moment in time.",
    "ItemText": null,
    "CreateDate": "1999-01-17T14:43:24.0000000",
    "EndDate": null,
    "ModificationDate": "1999-01-17T14:43:24.0000000",
    "DocumentId": "916579495",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5074",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Notes on SQL Server Standards and Guidelines",
    "SortOrdinal": null,
    "ItemChar": "These are reflections on the SQL standards and guidelines derived through my direct experience in the field. Currently I am not aware of any popular \"manuals of style\" published by independent third parties.\n\n\n* After the DBA Gives You a Database\n\nOnce a database is available, the time has come to fill it up! SQL server databases can be described by SQL in a text file. The custom that I have acquired is to place the SQL in separate text files: a file for each table, view, data INSERT and stored procedure. These text files are then separated into directories. The directory structure is like this:\n\n    <root database folder>\n        tables\n        data\n        views\n        procs\n\nThese folders are checked into a code repository (e.g. MS SourceSafe) regularly. These files are managed by tools like Embarcadero's Rapid SQL.\n\n\n* Code Presentation and Naming Conventions\n\nWithout going into too much detail, I will be terse: capitalize SQL key words. Indent and line up code (with spaces) for readablity. View code with a fixed-width typeface. Place commas at the beginning of a line of code and line them up.\n\nDo not use plural table names. Do not use underscores in table names; use mixed case names (e.g. MyTable). Here are the conventions used for stored procedures and views:\n\n    Procedure: DELETE one or more rows\n    Prefix: Del\n    \n    Procedure: INSERT one or more rows\n    Prefix: New\n\n    Procedure: INSERT many rows (e.g. from table to table)\n    Prefix: Load\n\n    Procedure: SELECT a row\n    Prefix: Get\n\n    Procedure: SELECT multiple rows\n    Prefix: List\n\n    Procedure: UPDATE or UPDATE/INSERT\n    Prefix: Set\n\n\n* CREATE Database Objects by DROPping Them\n\nAs it is very rare (for me) to create a database object correctly the first time, the SQL used to create it should include logic to drop it as well. This is a \"replace procedure\" that will \"overwrite\" any previous object of the same name. The following CREATE TABLE SQL illustrates this prudence:\n\n    IF EXISTS(SELECT * FROM sysobjects WHERE name = 'WebDomain' AND type = 'U')\n        DROP TABLE WebDomain\n;\n\n    CREATE TABLE WebDomain\n    (\n        WebDomainID NUMERIC(9,0) IDENTITY\n        , Name        VARCHAR(64)  NULL\n  \n        , CONSTRAINT WebDomainPK\n        PRIMARY KEY CLUSTERED (WebDomainID)\n  \n        , CONSTRAINT WebDomainIX00\n        UNIQUE NONCLUSTERED (Name)\n    )\n;\n\nThe EXISTS keyword handles the chore of looking for the old object. This is a brutal but effective alternative to ALTER TABLE or sp_rename stuff.",
    "ItemText": null,
    "CreateDate": "1999-02-02T10:30:21.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-02T10:30:21.0000000",
    "DocumentId": "917563494",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5075",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL: Renaming a Table Containing Data; Saving/Restoring Data from a Dropped Table; SELECT INTO",
    "SortOrdinal": null,
    "ItemChar": "Sometimes is is better to DROP a table instead of using the ALTER TABLE or sp_rename commands. If the table has data in it, use the SELECT INTO syntax to create a temporary table. For example:\n\n    SELECT *\n    INTO tmpTable\n    FROM MyTable\n\nwhen the table (\"MyTable\") is ready to have its data back use the INSERT statement. Following our example we have:\n\n    INSERT MyTable (Col1, Col2, Col3)\n    SELECT (Col1, Col2, Col3)\n    FROM tmpTable\n\nColumn lists are used here as omitting column lists may not be supported on all servers. Once the table (\"MyTable\") gets its data back, we would then DROP \"tmpTable.\"",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:57:04.3930000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:57:04.3930000",
    "DocumentId": "917916325",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5076",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBScript and ASP: No Like Operator in Version 3.0 and Earlier",
    "SortOrdinal": null,
    "ItemChar": "As of this writing, VBScript (3.0 and earlier) does not have the VBA Like operator. Use the Instr() function instead.",
    "ItemText": null,
    "CreateDate": "1999-02-03T08:59:54.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-03T08:59:54.0000000",
    "DocumentId": "918061055",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5077",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 95/NT: Location of the MIDI Mapper and the Sound Mapper",
    "SortOrdinal": null,
    "ItemChar": "In Windows 95 or Windows NT, the MIDI Mapper and the Sound Mapper interfaces have been rolled into the Multimedia Control Panel Applet. Sound Mapper controls are under the Audio tab. MIDI Mapper controls are under the MIDI tab.\n\nMicrosoft may have changed the marketing meaning of \"Sound Mapper\"; its documentation may imply that the Sounds Control Panel Applet of Windows 95/NT replaces the Sound Mapper. In this context, this information is misleading.",
    "ItemText": null,
    "CreateDate": "1999-02-10T08:28:10.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-10T08:28:10.0000000",
    "DocumentId": "918663446",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5078",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual InterDev: Avoiding the Visual InterDev CSS Editor",
    "SortOrdinal": null,
    "ItemChar": "In the rare case of a hard core VB Progammer actually having respect for the W3C's recommendations and publications, such a person will want to avoid the CSS GUI editor provided by Visual Interdev 6.0.\n\nIt is useful to have the CSS files in InterDev Solutions open as text files by default. One way to do this is to set the Default under Open With… in the Project Explorer Window. For example:\n\n    Choose Project > Add Item > New > StyleSheet\n    Choose View > Project Explorer\n\nVisual InterDev may create a new CSS file named StyleSheet1.CSS. Right-click on the new CSS file.\n\n    Choose Open With... > Source Code (Text) Editor\n    Click the Set as Default button\n    Click the Open button",
    "ItemText": null,
    "CreateDate": "1999-03-01T14:08:05.0000000",
    "EndDate": null,
    "ModificationDate": "1999-03-01T14:08:05.0000000",
    "DocumentId": "920325028",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5079",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript: Time Stamp Function",
    "SortOrdinal": null,
    "ItemChar": "//(c) 1998 Bryan Wilhite\n//All rights reserved.\n//rasx@kintespace.com\n\nfunction jsTimeStamp() {\n    dateobj = new Date(document.lastModified)\n    this.month = dateobj.getMonth() + 1\n    this.day = dateobj.getDate()\n    this.year = dateobj.getYear()\n}\n\nfunction jsGetTS() {\n    //This function intends to be backward-compatible\n    //with older browsers. It is not aware of the getFullYear() function!\n\n    var objTS = new jsTimeStamp()\n    vDate = \"\"\n\n    if(objTS.month == 1) { vDate = \"January \" }\n    if(objTS.month == 2) { vDate = \"February \" }\n    if(objTS.month == 3) { vDate = \"March \" }\n    if(objTS.month == 4) { vDate = \"April \" }\n    if(objTS.month == 5) { vDate = \"May \" }\n    if(objTS.month == 6) { vDate = \"June \" }\n    if(objTS.month == 7) { vDate = \"July \" }\n    if(objTS.month == 8) { vDate = \"August \" }\n    if(objTS.month == 9) { vDate = \"September \" }\n    if(objTS.month == 10) { vDate = \"October \" }\n    if(objTS.month == 11) { vDate = \"November \" }\n    if(objTS.month == 12) { vDate = \"December \" }\n            \n    vDate = vDate + objTS.day + \", \"\n            \n    if (0 >= objTS.year > 98) { vDate = vDate + (2000 + objTS.year) }\n    else { vDate = vDate + (1900 + objTS.year) }\n            \n    return vDate\n}",
    "ItemText": null,
    "CreateDate": "2000-12-21T09:33:52.8170000",
    "EndDate": null,
    "ModificationDate": "2000-12-21T09:33:52.8170000",
    "DocumentId": "920412834",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5080",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: RecordCount = 1 for a DAO Recordset with More than One Record",
    "SortOrdinal": null,
    "ItemChar": "If the .RecordCount property of DAO Recordset is equal to 1 and opens without error, then most likely this Recordset is based on Parameters. In order to get an accurate count you will have to resort to using .MoveLast and .MoveFirst in the following manner:\n\n    With m_rsDAO\n        .MoveLast\n        .MoveFirst\n        m_lngCount = m_rsDAO.RecordCount\n        'etc.\n    End With\n\nThis may be very costly on Recordsets with many rows. If you find this move too expensive, resort to a separate SQL query (or, if you are in a hurry, a Domain Aggregate Function) to return the count.",
    "ItemText": null,
    "CreateDate": "1999-03-05T09:07:10.0000000",
    "EndDate": null,
    "ModificationDate": "1999-03-05T09:07:10.0000000",
    "DocumentId": "920624328",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5081",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Maslow's Needs",
    "SortOrdinal": null,
    "ItemChar": "Almost 60 years ago, psychologist Abraham Maslow developed his \"hierarchy of needs,\" which explained what motivates people. According to Maslow, people can achieve their needs for self-actualization and psychological happiness only after they fulfill their basic survival and security needs, that is, money, food and shelter.",
    "ItemText": null,
    "CreateDate": "1999-09-06T19:27:16.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-06T19:27:16.0000000",
    "DocumentId": "921921707",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5082",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB: PROBLEM: Reference Lists  As \"MISSING\" in Project When Components Are Installed",
    "SortOrdinal": null,
    "ItemChar": "When you are certain that your DLLs for your reference are installed (because, perhaps, you properly used REGSVR32.EXE) but they still show up as \"MISSING...\" in Project > References... list, try editing the .VBP file associated with the project. \n\nClose the project (to be safe, close Visual Basic). Open the .VBP file in a text editor. Remove the lines that begin with \"Reference=*...\" referring to the missing References. Reopen the project file in Visual Basic. Choose Project > References... to select the components that you know are installed.\n\nAs of this writing, Microsoft has a complete discussion of this issue at the following URI:\n\n    http://msdn.microsoft.com/\n        library/devprods/vs6/vb/html/\n            vbconfixingmissingreferences.htm",
    "ItemText": null,
    "CreateDate": "2000-02-10T23:36:04.0000000",
    "EndDate": null,
    "ModificationDate": "2000-02-10T23:36:04.0000000",
    "DocumentId": "922575080",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5083",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The vbYesNoCancel Form with the VBA.MsgBox Statement",
    "SortOrdinal": null,
    "ItemChar": "'The following design should speak for itself:\n\n    Select Case VBA.MsgBox(\"Yes, No or Cancel?\", _\n        vbQuestion + vbYesNoCancel)\n        Case vbYes\n            'The Yes case.\n        Case vbNo\n            'The No case.\n        Case vbCancel\n            'The Cancel case.\n    End Select",
    "ItemText": null,
    "CreateDate": "1999-03-30T21:58:36.0000000",
    "EndDate": null,
    "ModificationDate": "1999-03-30T21:58:36.0000000",
    "DocumentId": "922826868",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5084",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL: The Difference between UNION and UNION ALL",
    "SortOrdinal": null,
    "ItemChar": "UNION ALL selects all records between two views including duplicates; whereas UNION takes the time to sort records in order to remove duplicates. To optimize the time a UNION query takes, using ALL may help.",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:49:41.7800000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:49:41.7800000",
    "DocumentId": "923177003",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5085",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB Code: The \"Are You Sure?\" Message Box During Form_Unload",
    "SortOrdinal": null,
    "ItemChar": "    Private Sub Form_Unload(Cancel As Integer)\n        '\n        'This sub makes sure the user really wants to quit.\n        'Note the use of the ProductName Property\n        'of the App object of the VB Library.\n        '\n        Cancel = (VBA.MsgBox(\"Are you sure you want \" _\n            & \"to quit?\",  vbYesNo + vbDefaultButton2 + _\n            vbQuestion, VB.App.ProductName) = vbNo)\n    End Sub",
    "ItemText": null,
    "CreateDate": "1999-04-22T20:40:49.0000000",
    "EndDate": null,
    "ModificationDate": "1999-04-22T20:40:49.0000000",
    "DocumentId": "924809741",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5086",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB Code: Sorting ListBox Items with a Two-Button Control Array",
    "SortOrdinal": null,
    "ItemChar": "Private Sub cmdFieldOrder_Click(Index As Integer)\n    '\n    'This sub responds to the click event of\n    'a two-button control array called cmdFieldOrder.\n    'It manipulates the items in the List Box lstFields.\n    '\n    Dim strList As String\n    Dim intListIndex As Integer\n    \n    Select Case Index\n        Case 0\n            With Me.lstFields\n                If .ListIndex > 0 Then\n                    strList = .List(.ListIndex)\n                    intListIndex = .ListIndex\n                    Call .RemoveItem(.ListIndex)\n                    Call .AddItem(strList, intListIndex - 1)\n                End If\n            End With\n        Case 1\n            With Me.lstFields\n                If 0 <= .ListIndex _\n                    And .ListIndex < .ListCount - 1 Then\n                    strList = .List(.ListIndex)\n                    intListIndex = .ListIndex\n                    Call .RemoveItem(.ListIndex)\n                    Call .AddItem(strList, intListIndex + 1)\n                    .ListIndex = intListIndex + 1\n                End If\n            End With\n    End Select\n    \nEnd Sub",
    "ItemText": null,
    "CreateDate": "1999-04-24T09:19:42.0000000",
    "EndDate": null,
    "ModificationDate": "1999-04-24T09:19:42.0000000",
    "DocumentId": "924941775",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5087",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB Code: Populating the ListBox Control",
    "SortOrdinal": null,
    "ItemChar": "Public Sub basPopLstBox(ByRef LstBox As ListBox, _\n    ByVal vArrayOrCollection As Variant)\n    '\n    'This sub takes the Items in a Collection (or the\n    'elements in an array) and adds them to a ListBox\n    'control. Of course we assume that vArrayOrCollection\n    'contains string values.\n    '\n    Dim v As Variant\n    \n    LstBox.Clear\n    \n    For Each v In vArrayOrCollection\n        \n        With LstBox\n            .AddItem (VBA.CStr(v))\n            .Refresh\n        End With\n    \n    Next\n\nEnd Sub",
    "ItemText": null,
    "CreateDate": "1999-04-24T22:01:59.0000000",
    "EndDate": null,
    "ModificationDate": "1999-04-24T22:01:59.0000000",
    "DocumentId": "924987497",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5088",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT: MSDN Article; \"Securing Microsoft Windows NT Installation\"",
    "SortOrdinal": null,
    "ItemChar": "The Microsoft Corporation has written an interesting overview of the security features of Windows NT. As of this writing, this article is available at the following URI:\n\n    http://msdn.microsoft.com/\n        library/backgrnd/html/msdn_secinst.htm\n\nThe table of contents of this article is as follows:\n\n    Abstract\n    Establishing Computer Security\n    High-Level Software Security Considerations\n    C2 Security",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:31:55.1070000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:31:55.1070000",
    "DocumentId": "925045597",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5089",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBScript and ASP PROBLEM: Dates with the Form mm/dd/yyyy Cannot Be Passed in Query String",
    "SortOrdinal": null,
    "ItemChar": "If your design demands passing dates in an HTTP Query String, you will quickly find that this is a badly formed URI:\n\n    http://localhost/MyPage.html?vDate=#01/02/1999#\n\nwhere the \"#\" characters imply that this is a date to be submitted to an .MDB file. You might be able to get by with this:\n\n    http://localhost/MyPage.html?vDate=X01-02-1999X\n\nwhere \"X\" is some dummy replacement character. But I find this unattractive. Instead of coming up with my own unattractive replacement characters, the ASP Server object has its URLEncode method, where:\n\n    \"http://localhost/MyPage.html?\" _\n        & \"vDate=\" & Server.URLEncode(\"#01/02/1999#\")\n\nyields\n\n    http://localhost/MyPage.html?vDate=%2301%2F02%2F1999%23\n\nStrangely, I would rather convert the date to its underlying numerical format. The following returns the number 36162:\n\n    CDbl(DateSerial(1999,01,02))\n\nwhich may lead to the question, How can I easily parse the year, month and day out of a \"date string\"? The answer is to use the Year, Month and Day functions respectively:\n\n    CDbl(DateSerial(Year(\"01/02/1999\"), _\n        Month(\"01/02/1999\"), _\n        Day(\"01/02/1999\")))\n\nAfter conversion, the URI now looks like the following:\n\n    http://localhost/MyPage.html?vDate=36162\n\nOf course, to convert a serial date double back to its locale value requires the CDate() function:\n\n    CDate(36162) = 01/02/1999\n\nAdditionally, we should recall the TimeSerial() function and CDate(), its use on TimeSerial() values as well. For more information, as of this writing, Microsoft's KB has the article \"HOWTO: Get Date or Serial Result from DateSerial or DateValue\" (Q95510) at:\n\n    http://support.microsoft.com/support\n        /kb/articles/Q95/5/10.ASP\n",
    "ItemText": null,
    "CreateDate": "2002-01-07T18:20:39.5530000",
    "EndDate": null,
    "ModificationDate": "2002-01-07T18:20:39.5530000",
    "DocumentId": "927051050",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5090",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The New Round() Function",
    "SortOrdinal": null,
    "ItemChar": "The version of VBA that comes with Visual Studio 6.0 has the Round() function. Previously rounding numbers was done with the Format() (or Format$()) function which produce non-numeric values.\n\nThe Round() function returns numeric values.",
    "ItemText": null,
    "CreateDate": "1999-05-20T20:40:53.0000000",
    "EndDate": null,
    "ModificationDate": "1999-05-20T20:40:53.0000000",
    "DocumentId": "927229048",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5091",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Songhay 4: Hardware Inventory",
    "SortOrdinal": null,
    "ItemChar": "AMD Athlon 1200-266Mhz\nABIT KT7A RAID\n\n1394 Bus Controller:\n    Adaptec FireConnect 4300\n    (Texas Instruments OHCI Compliant)\n    (DV capture rate: 250MB/minute)\n    6-to-4 pin FireWire/1394 cable\n    S/N: SX0A04600GF\n\nCD-ROM:\n    Plextor CD-R PX-W1210A\n\nDisk Drives:\n    Maxtor Diamond Max Plus 15GB\n    (7200 RPM; Ultra DMA 66MB/Sec; Buffer/Seek: 2MB/9ms)\n    KIT: ST0191500U\n    S/N: W604DRYA\n\n    Iomega Zip 100 ATAPI\n\nDisplay Adapter:\n    Diamond FireGL 1000 Pro\n\nNetwork Adapter:\n    D-Link DFE-530TX+ 10/100 PCI Fast Ethernet",
    "ItemText": null,
    "CreateDate": "2001-05-26T16:59:14.7770000",
    "EndDate": null,
    "ModificationDate": "2001-05-26T16:59:14.7770000",
    "DocumentId": "930076538",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5092",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Design Note: An ASP \"Data Environment\"; Code-Only Equivalents to Visual Studio Designers",
    "SortOrdinal": null,
    "ItemChar": "As far as I am concerned, the Data Environment (and its Designer) associated with VB6 is a graphical representation of a concept that can be designed entirely in code. I am sure that historically the code came first then Microsoft built this GUI in order to \"help\" me. But, as usual, I am working backwards: the Data Environment Designer has shown me how to build a similar solution in code. The advantage of building a code-only Data Environment is portability. I can easily transfer this solution to from VB to ASP:\n\nThe Data Environment stores all of the data access objects (stored procedures and T-SQL) in one logical location for my convenience. In the world of ASP, I use an ASP include file to store all such \"objects\" as string literals in the Session object.\n\nThe Data Environment uses several dialogs (Property Pages) as a generic way to handle parameterized queries. In the world of ASP, I use the '?' character and the Replace method of the VBA Library in my own generic functions.",
    "ItemText": null,
    "CreateDate": "2001-03-31T08:04:49.1530000",
    "EndDate": null,
    "ModificationDate": "2001-03-31T08:04:49.1530000",
    "DocumentId": "930477971",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5093",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB: ADO; Flippant Remarks on ADO Asynchronous Connections",
    "SortOrdinal": null,
    "ItemChar": "I can only see using an Asynchronous connection when implementing ADO for a desktop solution. For a stateless IIS Application there is no waiting. It seems very linear to me: get in and get out. For more information regarding this matter please see MS KB articles Q190991 (\"HOWTO: Trap for ADO Connection Errors Using WithEvents\") and Q194960 (\"HOWTO: Create an Asynchronous Connection in ADO\").",
    "ItemText": null,
    "CreateDate": "2000-02-09T22:54:30.0000000",
    "EndDate": null,
    "ModificationDate": "2000-02-09T22:54:30.0000000",
    "DocumentId": "932862797",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5094",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Start/End of Month Functions basSOM() and basEOM()",
    "SortOrdinal": null,
    "ItemChar": "Public Function basEOM(TheDate As Date)\n    \n    Dim dtmNextMonth As Date\n    \n    dtmNextMonth = VBA.DateAdd(\"m\", 1, TheDate)\n    '\n    'By subtracting all of the days out of dtmNextMonth\n    'for a given date (TheDate), the last day of the previous \n    'month is returned by the DateValue method\n    'of the VBA object.\n    '\n    basEOM = VBA.DateValue(dtmNextMonth - _ \n        VBA.DatePart(\"d\", dtmNextMonth))\n    \nEnd Function\n\nPublic Function basSOM(TheDate As Date)\n    '\n    'By subtracting all of the days out of TheDate\n    'and adding one, the first day of the month for TheDate\n    'is returned by the DateValue method of the VBA object.\n    '\n    basSOM = VBA.DateValue(TheDate - _\n        DatePart(\"d\", TheDate) + 1)\n\nEnd Function",
    "ItemText": null,
    "CreateDate": "1999-07-31T09:00:09.0000000",
    "EndDate": null,
    "ModificationDate": "1999-07-31T09:00:09.0000000",
    "DocumentId": "933407838",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5095",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "HOUSE PLANTS CAN CONTRIBUTE TO GOOD HEALTH",
    "SortOrdinal": null,
    "ItemChar": "By Brigitte Mars, for healthshop.com \n\nHouseplants can help filter environmental toxins out of the air. Ideally, you should have one or two medium-sized plants for every 100 square feet of space. Some of the best plants for this purpose include the Areca Palm, Dracaena, Peace lily, Rubber plant, and Spider plant. \n\nAreca Palms can clean toluene emitted from gasoline, permanent markers, perfume, and nail polish out of the air. Dracaenas help cleanse the carcinogen trichloroethylene, which is emitted from photocopiers, printers, correction fluid, and dry cleaning. Peace lilies help remove benzene, which is emitted through gasoline, oil-based paints, and dry-cleaned clothing. Rubber plants help remove formaldehyde emitted from new carpets, particle board, acrylic paints, and dry-cleaned clothing. Spider plants help remove carbon dioxide, which accumulates around poorly ventilated heaters and appliances.",
    "ItemText": null,
    "CreateDate": "2000-08-14T20:54:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-08-14T20:54:00.0000000",
    "DocumentId": "933620695",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5096",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL: Implicit Descision Structures Using substring(), sign() and charindex(); the Sybase isnull() System Function",
    "SortOrdinal": null,
    "ItemChar": "Database management systems like those made by Sybase do not support what Microsoft calls the \"Immediate If\" or IIF() functions in their implementation of SQL. Sybase does have the System function isnull() which effectively the VBA equivalent of:\n\n    IIF(<expression> is null, <value if true>, <value if false>)\n\nbut there is little else in the way of in-line decision structures (functions that can be projected in a SELECT statement that make if-then decisions).\n\nOne trick to get around using formal T-SQL if-then structures is to use what I call \"Charles Chen's Substring-Sign-Charindex Structure.\" Named after Charles Chen of Investlogic Systems. Here is how Charles constructs the CUSIP of a future (a CUSIP is a string of eight or nine characters used to identify a security; a future is a kind of security used in financial markets):\n\n    SELECT @cusip = \"0000\" + substring(@cusip_in, 2, 2)\n    + substring(\n        \"H\", 1, sign(\n            charindex(substring(@cusip_in, 4, 1), \"FGH\")\n        )\n    )\n    + substring(\n        \"M\", 1, sign(\n            charindex(substring(@cusip_in, 4, 1), \"JKM\")\n        )\n    )\n    + substring(\n        \"U\", 1, sign(\n            charindex(substring(@cusip_in, 4, 1), \"NQU\")\n        )\n    )\n    + substring(\n        \"Z\", 1, sign(\n            charindex(substring(@cusip_in, 4, 1), \"VXZ\")\n        )\n    )\n    + substring(@cusip_in, 5, 1)\n\n    SELECT cusip = @cusip\n\nI am not going to try to explain what Charles is doing with the CUSIP coming into his stored procedure as the variable @cusip_in (just know that this is an heroic hack done in an emergency and [hint-hint] the letters H, M, U and Z represent the quarter when the future was issued---do not try this at home). The scope here focuses on the combination of substring(), sign() and charindex().\n\nThe statement SELECT cusip = @cusip will project a string of eight characters where: the first four characters are \"0000\"; the fifth and sixth characters are extracted out of @cusip_in, its second and third char' positions; the seventh character is derived from Charles' decision structure; and the last character is in the fifth position of @cusip_in.\n\nNow the seventh character is either H, M, U or Z. The decision structure between the first and last substring() calls above says, \"If @cusip_in contains 'FGH' then return 'H'; else if @cusip_in contains 'JKM' then return 'M'; else if @cusip_in contains 'NQU' then return 'U'; else if @cusip_in contains 'VXZ' then return 'Z'.\"\n\nThis entire structure depends on the following:\n\n    substring(<string literal>, 1, 0) = \"\"\n\nwhich, in English, says,  \"Start at position one of the string literal and return a string of length zero.\" Fortunately Sybase 11.x Adaptive Server's implementation of substring() does not blow up when a zero is used for the length argument. (Also the Sybase Transact SQL Users Guide reminds us that 'one' + '' + 'two' = 'one two' where a space has been inserted in place of the zero-length string. But this does not seem to happen when, I assume, substring() returns a zero length string.) Beware...\n\nThe zero can show up in the length argument of substring() because of Charles' brilliant use of the sign() function: if the charindex() function nested within the sign() function can't find the string it is looking for it will return 0. If the condition is true, sign() returns 1. When sign() returns 1, it allows the substring() function it is nested in to return one character.",
    "ItemText": null,
    "CreateDate": "1999-08-15T09:56:33.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-15T09:56:33.0000000",
    "DocumentId": "934617904",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5097",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "FROM A TO ZINC",
    "SortOrdinal": null,
    "ItemChar": "By Brigitte Mars, for healthshop.com \n\nZinc is an important nutrient, but studies show that up to three quarters of Americans are zinc deficient, getting only 8 to 10 milligrams daily of a nutrient that is needed in doses of 15 mg daily. \n\nWhen zinc lozenges are sucked on in the early stages of a cold, the duration and cold symptoms are reduced. Besides combating cold rhinoviruses, zinc inhibits several other viruses, including Herpes Simplex. Good sources of zinc include oysters, meat, eggs, seafood, black-eyed peas, tofu, and wheat germ.",
    "ItemText": null,
    "CreateDate": "1999-08-15T17:57:06.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-15T17:57:06.0000000",
    "DocumentId": "934736171",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5098",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MODERATE PHYSICAL ACTIVITY",
    "SortOrdinal": null,
    "ItemChar": "According to the 1996 Surgeon's General Report on Physical Activity and Health, we need 30 minutes of moderate physical activity a day. \n\nThis is equal to expending approximately 150 calories of energy per day or 1,000 calories per week. The following are activities with the approximate time needed to fulfill the 150-calorie requirement:  \n\n* Washing and waxing a car for 45-60 minutes \n* Playing volleyball for 45 minutes \n* Gardening for 30-45 minutes \n* Wheeling self in wheelchair for 30-40 minutes \n* Walking 1 and three-fourths miles in 35 minutes \n* Bicycling 5 miles in 30 minutes \n* Pushing a stroller 1 and a half miles in 30 minutes \n* Water aerobics for 30 minutes \n* Basketball (playing game) for 15-20 minutes \n* Jumping rope for 15 minutes \n* Stairwalking for 15 minutes",
    "ItemText": null,
    "CreateDate": "1999-08-26T21:14:06.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-26T21:14:06.0000000",
    "DocumentId": "935698405",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5099",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "OpenGL, an Overview",
    "SortOrdinal": null,
    "ItemChar": "PC Graphics and Video, June 1996:\n\n\"OpenGL is an application programming interface (API), originally developed by Silicon Graphics (SGI) from its own GL (Graphics Library) API. It is hardware and operating system independent. The OpenGL standard is administered by the OpenGL Architecture Review Board, an industry group that includes SGI as well as DEC, Evans and Sutherland, IBM, Intel, Intergraph, and Microsoft.\"\n\nwww.OpenGL.org (08/29/1999):\n\"OpenGL is the premier environment for developing portable, interactive 2D and 3D graphics applications. Since its introduction in 1992, OpenGL has become the industry’s most widely used and supported 2D and 3D graphics application programming interface (API), bringing thousands of applications to a wide variety of computer platforms. OpenGL fosters innovation and speeds application development by incorporating a broad set of rendering, texture mapping, special effects, and other powerful visualization functions. Developers can leverage the power of OpenGL across all popular desktop and workstation platforms, ensuring wide application deployment.\"\n\n\nwww.pcwebopaedia.com (08/29/1999):\n\n\"OpenGL\"\n\n\"A 3-D graphics language developed by Silicon Graphics. There are two main implementations:\"\n\n\"Microsoft OpenGL, developed by Microsoft \nCosmo OpenGL, developed by Silicon Graphics \nMicrosoft OpenGL is built into Windows NT and is designed to improve performance on hardware that supports the OpenGL standard. Cosmo OpenGL, on the other hand, is a software-only implementation specifically designed for machines that do not have a graphics accelerator.\"\n\n\"Another standard that is popular for rendering 3-D images is Direct3D.\"",
    "ItemText": null,
    "CreateDate": "1999-08-29T20:28:22.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-29T20:28:22.0000000",
    "DocumentId": "935982308",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5100",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Bambara Sculpture",
    "SortOrdinal": null,
    "ItemChar": "Playing With Time : Art and Performance in Central Mali (Traditional Arts of Africa) \nby Mary Jo Arnoldi\nISBN: 025330900X \n\nAfrican Sculpture Speaks \nby Ladislas Segy \nISBN: 0306800187 \n\nVogel, Susan and N'Diaye, Francine - African Masterpieces from the Musee de L'Homme - 1985 - published by Center for African Art (LAPL: 730.996 V879)\n\nVansina, Jan - Art History in Africa - 1984 - publisher: Longman Group (LAPL:709.6 V279)\n\nImperato, Pascal - Mali: A Search for Direction - this book was very helpful in providing info on political history and cultural info.\n\nArnoldi, Mary Jo - Playing with Time - this book included extensive information about the Chi Wara dance.\n\nBambara Sculpture of  West Sudan - 1960 - Museum of Primitive Art/NY - University Publishers\n\nGillon, Werner - Collecting African Art - 1979 - Rizzoli Publishers - includes intro by William Fagg (LAPL: 709.6 G483)\n\nElisoff, Eliot - Sculpture of Africa - 1958 - text by William Fagg - pub. Thames & Hudson\n\nSieber, Roy and Rubin, Arnold - 1968 - Sculpture of Black Africa - pub. by L.A. County Musuem of Art (LAPL: 730.996 S571)\n\nMeauze, Pierre - African Art Sculpture - 1968 - pub. by World Publishing Co. - this man was curator of Arts Africains et Oceaniens in Paris\n\nSegy, Ladislas - African Sculpture Speaks - 3rd Edition - 1969 - pub. by Hill & Wang NY (LAPL: 730.996 S456b)",
    "ItemText": null,
    "CreateDate": "1999-09-07T19:13:58.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-07T19:13:58.0000000",
    "DocumentId": "936755788",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5101",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "BENEFITS OF SILICA",
    "SortOrdinal": null,
    "ItemChar": "By Brigitte Mars, for healthshop.com \n\nSilica is a trace mineral that helps relieve dry skin, brittle nails, thinning hair, and dandruff. It also seems to help the body develop a resistance to joint and cartilage inflammation and also supports the bones and helps to prevent gum and tooth loss. It's found in foods such as wheat, oats, and barley, but it's often lost in the refining process of many foods. Silica is found in the herb horsetail (Equisetum arvense). Silica is also available in a gel derived from quartz crystals. Healthy hair, clear skin, and strong nails--the results of using silica supplementation--are what give silica the reputation of being a beauty-enhancing mineral.",
    "ItemText": null,
    "CreateDate": "1999-09-11T15:58:09.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-11T15:58:09.0000000",
    "DocumentId": "937090658",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5102",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Labtec Speakers",
    "SortOrdinal": null,
    "ItemChar": "Okay, so I can't afford near-field monitors. I have two sets of Labtecs. I have the LCS-1030 which has a range from 50Hz to 18kHz and I have the LCS-2414, from 40Hz to 20kHz.\n\nNote that the 1030 has \"Dynamic Bass Equalization - Actively adjusts bass equalization for distortion-free sound at all listening levels\" which \"sounds like\" these \"studio reference\" speakers would be misleading. The 2414 gives no-nonsense low-budget bass.",
    "ItemText": null,
    "CreateDate": "1999-09-15T20:16:58.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-15T20:16:58.0000000",
    "DocumentId": "937451391",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5103",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "THE NUTRITION EVOLUTION",
    "SortOrdinal": null,
    "ItemChar": "We're in the middle of a nutrition evolution that's making many of the recommended dietary allowance (RDA) tables available on the Web \nobsolete. \n\nThat's because the Food and Nutrition Board (FNB) of the National Academy of Sciences updates its recommendations for all known nutrients on a regular basis. As part of the current cycle of revisions, the recommendations for calcium, phosphorus, magnesium, vitamin D, fluoride, thiamin, riboflavin, niacin, vitamin B-6, folate, vitamin B-12, pantothenic acid, biotin, and choline were evaluated and updated last year. Currently, the FNB and its advisors are assessing human needs for the antioxidant nutrients, such as vitamin C.\n\nDuring this update cycle, the FNB is also replacing the RDAs, which \nwere set at levels to prevent nutritional deficiencies, with a new set of standards called the Dietary Reference Intakes, or DRIs. The DRIs are expected to differ from the RDAs in that they will also address the role of nutrients in reducing the risk of chronic diseases, such as osteoporosis, cancer, and cardiovascular disease. Also being established are standards of tolerance, called the Upper Limit, or UL, which will be set at a level to guard against nutrient overload and toxicity from concentrated sources, such as supplements.",
    "ItemText": null,
    "CreateDate": "1999-09-20T20:59:11.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-20T20:59:11.0000000",
    "DocumentId": "937886240",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5104",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "BAGGING A SAFER SALAD",
    "SortOrdinal": null,
    "ItemChar": "Salad-in-a-bag is a real time-saver for time-stressed families, but does it need to be washed before use? \n\nNot if the bag is labeled \"prewashed\" or \"ready to eat,\" which indicates that the greens inside have been dipped in a bacteria-killing chlorine solution before packing. If these words aren't clearly marked on the package, there's no guarantee that the salad inside has been treated. In that case, it should be washed under cool, running water before use.\n\nAlthough the chlorine bath kills most of the bacteria in ready-to-eat and prewashed salads, it rarely gets all of them. So, be sure to store these convenient greens in the refrigerator and observe the \"use by\" date. \n\nMixed greens displayed in open containers on grocery store shelves, on the other hand, should always be washed before use, even if the box is labeled \"prewashed\" or \"ready to eat,\" because they've been left uncovered and exposed to the hands of shoppers.",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.4830000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.4830000",
    "DocumentId": "938652257",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5105",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Compaq: Support for Presario Models",
    "SortOrdinal": null,
    "ItemChar": "If Compaq does not make their web site worse than it is then the following URI ids valid:\n\nhttp://vcmproapp04.compaq.com/mypresario/\n\nFor their weak-ass SoftPaqs we have:\n\nhttp://www.compaq.com/support/files/allspidx.html",
    "ItemText": null,
    "CreateDate": "1999-10-03T11:22:49.0000000",
    "EndDate": null,
    "ModificationDate": "1999-10-03T11:22:49.0000000",
    "DocumentId": "938973690",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5106",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "EMU APS: The Disk Record Pot",
    "SortOrdinal": null,
    "ItemChar": "In the E-Control Mixer, on the Master Output Strip's Hard Disk Recording Panel is the Disk Record Pot. By default it is not turned all the way to the right (0dB). It is highly recommended to turn this all the way up and reduce levels as needed with faders in the mixer.",
    "ItemText": null,
    "CreateDate": "2004-04-19T14:55:56.8900000",
    "EndDate": null,
    "ModificationDate": "2004-04-19T14:55:56.8900000",
    "DocumentId": "939190588",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5107",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "FRUITS AND VEGGIES CAN BOOST YOUR ANTIOXIDANT STATUS",
    "SortOrdinal": null,
    "ItemChar": "Eating plenty of broccoli, or simply doubling your intake of fruits and vegetables from five servings a day to ten, can increase the antioxidant power of your bloodstream by about 13 to 25 percent, according to a recent study. \n\nThe study, which was conducted by researchers at the U.S. Department of Agriculture/Agricultural Research Service Center on Aging at Tufts University, examined the effect of fruits and vegetables ranking high in an antioxidant assay called ORAC. Although the role of antioxidants in health and disease prevention is not yet well defined, these active compounds are thought to reduce the risk of chronic diseases such as cancer, cardiovascular disease, and cataracts. \n\nThe following fruits and vegetables rank highest in ORAC antioxidant power: \n\nPrunes \nRaisins \nBlueberries \nBlackberries \nStrawberries \nRaspberries \nPlums \nOranges \nRed grapes \nCherries \nKale \nSpinach \nBrussels sprouts \nAlfalfa sprouts \nBroccoli florets \nBeets \nRed bell peppers \nOnions \nCorn \nEggplant",
    "ItemText": null,
    "CreateDate": "2004-04-16T17:45:38.1770000",
    "EndDate": null,
    "ModificationDate": "2004-04-16T17:45:38.1770000",
    "DocumentId": "939966325",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5108",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ZINC ZEALOTS MIGHT BE ROBBING THEIR BODIES OF COPPER",
    "SortOrdinal": null,
    "ItemChar": "People need zinc for everything from taste acuity to fighting infections, but taking high doses on a regular basis with the hope of shortening the duration of the common cold could be hazardous to your health. \n\nThat's because zinc competes with copper for absorption sites in the small intestine. Too much zinc could lead to too little copper, a mineral that plays a big role in enzyme function, the production ofhemoglobin, the formation and health of connective tissues, and the maintenance of nerves, among other things. \n\nAlso note that zinc and copper aren't the only minerals that have common pathways which can cause an imbalance when one arrives in large doses. Nutrient interdependencies are real and a big reason dietitians are rarely found in line at the supplement counter. Food is definitely the safer way to go. \n\nHowever, if you are a vegetarian or simply don't consume many \nmeat-based foods, you might be wise to look for zinc from supplements. But be sure to choose one that has no more than 15 milligrams of zinc unless you are pregnant, nursing a child, or are advised otherwise by your physician. Pregnant and nursing women are advised to take special prenatal vitamin and mineral supplements, which contain extra zinc and other important nutrients.",
    "ItemText": null,
    "CreateDate": "1999-10-26T08:33:24.0000000",
    "EndDate": null,
    "ModificationDate": "1999-10-26T08:33:24.0000000",
    "DocumentId": "940951926",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5109",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "COLORFUL KEYS TO ANTIOXIDANTS IN FOOD",
    "SortOrdinal": null,
    "ItemChar": "To bump up the amount of protective antioxidants in your diet, head to your grocery's produce department and let your eyes be your guide. \n\nThe pigments that make carrots and winter squash orange and tomatoes red are part of a group of antioxidant compounds known as carotenoids. \n\nCarrots and winter squash are orange, the color of beta-carotene. Beta-carotene has been recognized for many years as a precursor of vitamin A, which helps prevent night blindness. \n\nDark-green leafy vegetables, such as kale, spinach, mustard greens, collard greens, and turnip greens, are rich in lutein and zeaxanthin.\n\nHigh intakes of these two carotenoids have been linked with a decreased risk of age-related blindness due to macular degeneration. \n\nAlthough these compounds also exhibit the characteristic deep yellow to dark orange color of carotenoids, their color is overwhelmed by the plentiful amount of dark-green chlorophyll in these plants. Lycopene, another carotenoid, is responsible for the deep red-orange of tomatoes. Until recently, lycopene was thought only to be a pigment. \n\nBut, it is now being heavily studied as a possible anti-cancer compound. \n\nVitamin C is also a strong antioxidant and is thought to play a role in reducing cataract risk in aging women. Citrus fruit, berries, tomatoes, peppers, and leafy greens all provide vitamin C. \n\nSo, call your mother and tell her she was right. You really do need to eat your vegetables.",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.5130000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.5130000",
    "DocumentId": "942646172",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5110",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Email Blurb: Response to Remove Request",
    "SortOrdinal": null,
    "ItemChar": "The following address is not found in our database:\n\n<<???>>\n\nPlease supply an alternative address that somehow links us to you so we can remove the link per your request.",
    "ItemText": null,
    "CreateDate": "2007-01-08T17:07:41.0000000",
    "EndDate": null,
    "ModificationDate": "2007-01-08T17:07:41.0000000",
    "DocumentId": "942810701",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5111",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBScript and ASP Design: Minimizing the Size of Script Blocks",
    "SortOrdinal": null,
    "ItemChar": "I use the Variant vHTML in my VBScript for ASP. This variable appears at the top of the script and concatenates itself and new HTML along the way to end of the script passing decision structures (and even calls to external functions in Include (.INC) files). Any HTML to be rendered by ASP is stored in this variable. This is one (of many) ways to render HTML in a script block:\n\n    <%@ LANGUAGE=\"VBSCRIPT\" %>\n    <%\n        Option Explicit\n\n        Dim vAgent, vHTML\n\n        vAgent = Request.ServerVariables(\"HTTP_USER_AGENT\")\n\n        If Instr(1,vAgent,\"Mozilla/4\",vbTextCompare) > 0 _\n            And _\n            Instr(1,vAgent,\"Mac\",vbTextCompare) = 0 Then\n\n            vHTML = \"<H1>Hey!</H1>\" _\n                & \"You are Mozilla 4 surfing\" & Space(1) _\n                & \"but you are not on a Mac!\"\n\n        ElseIf Instr(1,vAgent,\"Mozilla/4\",vbTextCompare) > 0 _\n            And _\n            Instr(1,vAgent,\"Mac\",vbTextCompare) > 0 Then\n\n            vHTML = \"<H1>Hey!</H1>\" _\n                & \"You are Mozilla 4 surfing\" & Space(1) _\n                & \"and you <EM>are</EM> on a Mac!\"\n\n        Else\n\n            vHTML = \"<H1>Hey!</H1>\" _\n                & \"What kind of browser is this?\"\n        End If\n \n        vHTML = \"<HTML>\" & vbCrLf _\n            & \"<BODY>\" & vbCrlf _\n            & vHTML\n            & \"</BODY>\" & vbCrlf _\n            & \"</HTML>\"\n\n        Response.Write vHTML\n    %>\n\nIn the above example, it appears that I am using two script blocks instead of one. This is true. But note the '@' sign in the first block. This means, \"This script block contains Directives.\" And Directives (e.g. \"LANGUAGE\") must be separate from the script code which in this case is VBScript ---following the LANGUAGE Directive of course. Script blocks containing directives must start at line one (1) of the .ASP page.\n\nTo make things worse, I would need three separate script blocks when the #include server-side directive is used. This would be the form:\n\n    <%@ LANGUAGE=\"VBSCRIPT\" %>\n    <% Option Explicit %>\n    <!--#include file=\"adovbs.inc\"-->\n    <%\n        'This is the main script block.\n    %>\n\nwhere the file adovbs.inc is the ADO constants file provided by Microsoft. Note that each file referenced by the #include directive may contain additional script blocks. The reason why the Option Explicit statement needs its own script block is that it must be the first line in the VBScript code. The assumption here is that the files referenced by #include contain VBScript blocks. The #include directive is the only server-side directive supported by .ASP pages (ASP.DLL); the others, by the way, are supported by SSINC.DLL (.SHTML or .STM pages by default).\n\nThe main reasons to minimize script blocks is to increase runtime compilation speed and to reduce CPU usage. For more information please see \"Compiling Large ASP Pages Can Take 100% of CPU Time\" (Q193831) in the Microsoft Knowledge Base.",
    "ItemText": null,
    "CreateDate": "1999-12-12T22:17:14.0000000",
    "EndDate": null,
    "ModificationDate": "1999-12-12T22:17:14.0000000",
    "DocumentId": "945065814",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5112",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Cold Fusion 3.1 CFML: Submitting a Form Back to Itself Using the IsDefined() Function",
    "SortOrdinal": null,
    "ItemChar": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n\n<HTML>\n<HEAD>\n    <META NAME=\"Generator\" CONTENT=\"Bryan Wilhite\">\n    <META NAME=\"Reply-to\" CONTENT=\"bwilhite@assetstrategy.com\">\n    <META NAME=\"Keywords\" CONTENT=\"Development\">\n    <META NAME=\"Description\" CONTENT=\"Development\">\n    <TITLE>Asset Strategy Consulting</TITLE>\n</HEAD>\n\n<BODY>\n\n<CFIF IsDefined(\"form.formText\")>\n\n    <H1><CFOUTPUT>#form.formText#</CFOUTPUT></H1>\n\n<CFELSE>\n\n    <FORM ACTION=\"HelloWorld.cfm\" METHOD=POST>\n\n        Please enter some text:\n        <INPUT TYPE=\"text\" NAME=\"formText\" VALUE=\"Hello World!\">\n        <INPUT TYPE=\"submit\" VALUE=\"Display Text\">\n\n    </FORM>\n\n</CFIF>\n\n</BODY>\n</HTML>",
    "ItemText": null,
    "CreateDate": "2001-03-19T21:36:38.0130000",
    "EndDate": null,
    "ModificationDate": "2001-03-19T21:36:38.0130000",
    "DocumentId": "945066918",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5113",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WHY DO YOU SKIP BREAKFAST?",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n\nWe've all heard that you shouldn't skip breakfast because it's the most important meal of the day. Some say they don't eat breakfast because they don't have time. Others say they don't eat breakfast because it makes them sick. Regardless of the reasons, it's remarkable how many people actually do not eat breakfast. Women, especially, choose not to eat breakfast as a method of losing weight. But skipping breakfast in order to lose weight is not a wise choice. \n\nWhen you do not eat in the morning, your metabolism actually slows down. As a result, you burn fewer calories than you would have burned had you eaten a light, sensible meal. Instead of not eating at all, eat a light meal with food that sticks with you throughout the morning. Limiting yourself to carbohydrates, such as toast, only leaves you starving by lunchtime. Eat foods that are rich in protein, such as milk, yogurt, or peanut butter. Foods such as these take longer to digest and leave you feeling satisfied longer. \n\nFor those of you who consider breakfast a time-consuming chore, consider these quick ideas. With a little ingenuity, you too can eat breakfast, in spite of your busy schedule. Try the following for breakfast:\n\n* Cold cereal, low-fat milk, and a piece of fruit \n* Toasted bagel with cheese and juice \n* Yogurt with a fruit-filled breakfast bar",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4000000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4000000",
    "DocumentId": "948096456",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5114",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Songhay 1/2 CONFIG.SYS lines",
    "SortOrdinal": null,
    "ItemChar": "Config.sys\n\nDOS=HIGH,UMB\n\nDEVICE=c:\\windows\\himem.sys\nrem DEVICE=c:\\windows\\emm386.exe 4096 RAM D=256 I=B000-B7FF\n\nrem for ProMovie Driver\nDEVICE=c:\\windows\\emm386.exe 4096 RAM D=256 I=B000-B7FF noems x=DD00-DDFF\n\n\nFILES=30\nBUFFERS=10\nSTACKS=9,128\nLASTDRIVE=F\n\nrem Creative Labs DOS Compatibility Mode PNP Configuration Manager\nDEVICE=c:\\util\\awe32dos\\ctcm.exe\n\nrem Creative Labs CD-ROM DOS Mode Driver\nDEVICEHIGH=C:\\PROGRA~1\\SBCD\\DOSDRV\\SBIDE.SYS /D:MSCD001 /V /P:168,10,36e\n\nrem DriveSpace Driver (things get weird if these lines are not last!)\nDEVICEHIGH=C:\\WINDOWS\\COMMAND\\DRVSPACE.SYS /MOVE\n\n\n----------------\n\n\nSET PATH=C:\\QTW\\BIN;C:\\WINDOWS;C:\\WINDOWS\\COMMAND;C:\\WINDOWS\\COMMAND\\CDROM;C:\\UTIL;C:\\KMOUSE\n\nrem ON prevents writing to bad sectors...\nVERIFY ON\nprompt $p$g\n\nrem Kensington Mouse Controls\nC:\\KMOUSE\\MOUSE -LC:\\KMOUSE\\VCI.OVL -TCPN\nC:\\KMOUSE\\CONTROL\n\nrem Windows 95 MSCDEX\nC:\\WINDOWS\\COMMAND\\MSCDEX /D:MSCD001 /V /M:8\n\nrem Sound Blaster AWE32 DOS Compatibility Mode\nSET MIDI=SYNTH:1 MAP:E MODE:0\nSET BLASTER=A220 I5 D1 H5 P330 E640 T6 \n\n\n***\n\nrem device=c:\\windows\\himem.sys\n\nrem X-Wing emm386:\nrem device=c:\\windows\\emm386.exe 4096 RAM D=256\n\nrem ProMovie emm386:\nrem device=c:\\windows\\emm386.exe 4096 RAM D=256 noems x=DD00-DDFF\n\nrem DEVICEHIGH=C:\\WINDOWS\\SETVER.EXE",
    "ItemText": null,
    "CreateDate": "2000-01-17T20:31:20.0000000",
    "EndDate": null,
    "ModificationDate": "2000-01-17T20:31:20.0000000",
    "DocumentId": "948169820",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5115",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "IIS/PWS 4.0: Starting and stopping the Web Server from the Command Line; CMD Scripts",
    "SortOrdinal": null,
    "ItemChar": "There are many reasons why the Web Server needs to be stopped and started frequently. Here are two: debugging ActiveX Server Components (after they crash) and manually refreshing the IIS Server cache. I use two CMD scripts, PWSstart and PWSstop. These scripts were tested against PWS but should work with IIS as well:\n\nPWSstart\n\n    @ECHO OFF\n\n    net start w3svc\n    net start msftpsvc\n\n    PAUSE\n\nPWSstop\n\n    @ECHO OFF\n\n    net stop iisadmin /y\n\n    PAUSE\n\nThese scripts may generate error 2185 (\"The service name is invalid\"). Referring to the following list of Service Names may help resolve this problem:\n\nIIS Admin Service: iisadmin\nFTP Publishing Service: msftpsvc\nMicrosoft NNTP Service: nntpsvc\nWorld Wide Web Publishing Service: w3svc\n\nFor more information, please see MS Knowledge Base articles Q236166 (\"Using NET STOP and NET START Commands to Force IIS Services to Re-Read the Registry\") and Q189409 (\"INFO: Controlling the Caching of Web Pages with IIS 4.0\").\n Debugging ActiveX Components Consumed by a Web Browser; the Debugging Tab; Microsoft Transaction Server (MTS)\nAn ActiveX DLL Project contains an in-process Component looking for a process in which to be. This component ends up being a DLL. Instead of constantly making the DLL every time the code is changed, it is possible to run it on the fly in VB6. Under Project Properties > Debugging, we have the Start Program and Start browser with URL options. (The Debugging Tab, by the way, is only available for ActiveX DLL projects.)\n\nIn the case of a browser running a script that calls Classes in the DLL, use the Start browser with URL option to call the script file via a web address. For DLLs built for MTS, this procedure will not work. For MTS you will have to build the DLL each time.\n\nIt is possible that the DLL will get \"stuck\" in a process and not allow the DLL to be created, throwing a \"Permission Denied\" error message. If this happens, try to shut down the hosting process. In the case of a server-side web server script the web server may have to be shut down. At the very extreme, the system must be rebooted. \n\nFor more information please see:\n\nhttp://www.4guysfromrolla.com/webtech/042499-1.shtml",
    "ItemText": null,
    "CreateDate": "2000-01-30T00:00:22.0000000",
    "EndDate": null,
    "ModificationDate": "2000-01-30T00:00:22.0000000",
    "DocumentId": "949045993",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5116",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "IIS/PWS 4.0 PROBLEM: Can't See the Public Methods of My MTS Object in the MTS Explorer",
    "SortOrdinal": null,
    "ItemChar": "Do not make new MTS Components via the \"Import component(s) that are already registered\" command. Use the \"Install new component(s)\" command instead.",
    "ItemText": null,
    "CreateDate": "2000-01-30T00:01:19.0000000",
    "EndDate": null,
    "ModificationDate": "2000-01-30T00:01:19.0000000",
    "DocumentId": "949219231",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5117",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "EarthLink Access Numbers in 213 for k56, V.90",
    "SortOrdinal": null,
    "ItemChar": "Los Angeles, CA, USA 213 784-4492 Unlimited V.90,K56,V.34,ISDN1  \nLos Angeles, CA, USA 213 985-4492 Unlimited V.90,K56,V.34,ISDN1  \nLos Angeles, CA, USA 213 286-0135 Unlimited V.90,K56,V.34  \nLos Angeles, CA, USA 213 286-0188 Unlimited V.90,K56,V.34  \nLos Angeles, CA, USA 213 622-0412 Unlimited V.90,K56,V.34,ISDN1  \nLos Angeles, CA, USA 213 316-1054 Unlimited V.90,K56,V.34,ISDN1  \nLos Angeles, CA, USA 213 807-0103 Unlimited V.90,K56,V.34,ISDN1",
    "ItemText": null,
    "CreateDate": "2000-01-30T22:56:35.0000000",
    "EndDate": null,
    "ModificationDate": "2000-01-30T22:56:35.0000000",
    "DocumentId": "949301745",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5118",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB: The Use of New Keyword, the CreateObject() and the GetObject() Functions",
    "SortOrdinal": null,
    "ItemChar": "The New Keyword\n\nUse the New keyword to create objects associated with a Type Library. In short, if the VB Object Browser can show your object's classes and members then this object is associated with a Type Library. So, for example, Excel.Application is a member of a Type Library. The New keyword can be used in this Declaration:\n\n    Private objExcel As Excel.Application\n\nLater, in a Procedure, we use the New keyword for explicit object creation:\n\n    Set objExcel = New Excel.Application\n\nThe New keyword can be used in the Declaration (for implicit object creation) but this slows down VB at runtime as it has to check to see if objExcel is instantiated each time it is called. Moreover the statement\n\n    objExcel Is Nothing\n\nwill always be False since implicit object creation sets the object's variable to Nothing. For more information, please see MS KB article Q138072 (\"INFO: Tips to Improve Performance While Using OLE servers\").\n\n\nThe CreateObject() Function\n\nThe CreateObject() function has all of the functionality of the New keyword. But has two notable advantages: it creates objects without a Type Library (that VB understands) and it creates objects that can recognize and comply with COM. The latter is most important for scaling a VB solution into MTS. For more information, please see MS KB article Q202535 (\"INFO: Use of New Keyword In MTS Environment\").\n\n\nThe GetObject() Function\n\nI have trouble trying to compare this function with the other two object-creating \"things\" because this function lies in the context of \"persisted\" objects. This means that GetObject() can create objects from files. For example:\n\n    Dim CADObject As Object\n    Set CADObject = GetObject(\"C:\\CAD\\SCHEMA.CAD\")\n\nI don't use GetObject() as of this writing. The opinion here is that this function is used in OLE Automation of Microsoft Office Applications and other desktop applications based on VBA. I daresay that GetObject() is \"heavier\" than CreateObject() and packs quite a performance hit (relatively speaking). Nevertheless, I feel that it is important to mention that there is a difference between GetObject() and GetObject(\"\"). This may come in handy someday. For more information please see MS KB article Q114347 (\"INFO: OLE Automation Objects with GetObject and CreateObject\").",
    "ItemText": null,
    "CreateDate": "2000-02-08T19:59:50.0000000",
    "EndDate": null,
    "ModificationDate": "2000-02-08T19:59:50.0000000",
    "DocumentId": "950068669",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5119",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The Differences among Empty, Nothing, vbNull, vbNullChar, vbNullString and the Zero-Length String",
    "SortOrdinal": null,
    "ItemChar": "Back in the days of VB 5.0, Keith Pleas in \"Avoid Programming Pitfalls\" (currently at http://msdn.microsoft.com/library/periodic/period98/kp0398.htm) writes:\n\n[begin quote]\n\nTo keep from being embarrassed, you should know these terms:\n\n\"\": A zero-length string (commonly called an \"empty string\") is technically a zero-length BSTR that actually uses six bytes of memory. In general, you should use the constant vbNullString instead, particularly when calling external DLL procedures.\n\nEmpty: A variant of VarType 0 (vbEmpty) that has not yet been initialized. Test whether it is \"nil\" using the IsEmpty function.\n\nNothing: Destroys an object reference using the Set statement. Test whether it is \"nil\" using the Is operator:\n\nIf obj Is Nothing Then...\n\nNull: A variant of VarType 1 (vbNull) that means \"no valid data\" and generally indicates a database field with no value. Don't confuse this with a C NULL, which indicates zero. Test whether it is \"nil\" using the IsNull function.\n\nvbNullChar: A character having a value of zero. It is commonly used for adding a C NULL to a string or for filling a fixed-length string with zeroes:\n\nPath = String(255, vbNullChar)\n\nvbNullString: A string having a value of zero, such as a C NULL, that takes no memory. Use this string for calling external procedures looking for a null pointer to a string. To distinguish between vbNullString and \"\", use the VBA StrPtr function: StrPtr(vbNullString) is zero, while StrPtr(\"\") is a nonzero memory address. [Note: the StrPtr() function may not be a part of the VBA members shown in the Object Browser so it will not AutoComplete. Enter the following line in the Immediate Window to determine if this function is available: ?StrPtr(vbNullString). This should return 0 immediately.]\n\n[end quote]\n\nFrom the above I draw the following conclusions: The Zero-length string is old-fashioned and used for backward compatibility with previous versions of VB; use of vbNullString is recommended. The Empty string should be used in statements with Variants. The Nothing keyword should be used in statements with object variables. The vbNull constant is used to determine if a Variant contains Null via the VarType() function; this is used in procedures involving database result sets. The vbNullChar and vbNullString constants are primarily for communicating with APIs written in C or C++.\n\nFor more information please see MSDN library article \"The meaning of zero\" (http://msdn.microsoft.com/library/books/advnvb5/Ch07_31.htm).",
    "ItemText": null,
    "CreateDate": "2000-03-01T19:31:45.0000000",
    "EndDate": null,
    "ModificationDate": "2000-03-01T19:31:45.0000000",
    "DocumentId": "950165041",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5120",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "TODAY'S TIP: THE LATE-NIGHT SNACK",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nEating late is a common pattern among people with busy daily schedules. Many people eat light during the day and then eat their main meal at night when they get home from work. However, going to ed with a full stomach is not beneficial for digestion or sleep. \n\nFood often acts as a sedative, providing a feeling of relaxation. That's why many consider a bedtime snack a necessary part of their\nnighttime routine. Unfortunately, when you go to bed with a full stomach, the food consumed simply lies undigested in your stomach. Not only does this behavior contribute to weight gain, it also causes you to wake up the next morning feeling full and sluggish. Eating late can become a habit that robs you of your vitality. \n\nTo aid in digestion, and to help you sleep at bedtime, try these helpful hints: \n\n* Eat earlier in the evening, ideally before dark. \n* Eat foods in smaller quantities. \n* Engage in some activity, both mental and physical, before going to bed.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4100000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4100000",
    "DocumentId": "950763355",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5121",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WHEN AND WHAT TO EAT AROUND YOUR EXERCISE SCHEDULE",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nDid you know that eating too much food and eating the wrong food before exercising can interfere with your performance, causing indigestion, weakness, nausea, and vomiting? Timing when and what to eat around your exercise schedule is very important for maximizing the benefits of exercise. \n\nThe main goal of good nutrition is to consume foods that provide benefits to the body. When you add exercise to the equation of healthy living, keep the following pointers in mind. \n\nPrior to your exercise workout: \n* Eat a high-carbohydrate, low-fat snack one to two hours before your exercise routine. This type of snack is easily digested, and it normalizes blood sugar. \n* Avoid foods high in fat content, since fat lingers a long time in the stomach.\n* Moderate your protein intake. Eat only enough to satisfy, not surpass, your hunger. \n* Drink plenty of fluids. \n\n \nDuring your exercise workout: \n* A sip of sweetened drink is acceptable, since your body uses sugar during exercise. \n* Consume approximately a 30-gram carbohydrate every 30 minutes to get an added energy boost. Sports drinks are specially designed for consumption during exercise. \n* Remember that water is certainly an option. \n \nAfter your exercise routine: \n* Consume a high carbohydrate to replace glycogen and water lost during exercise. Juices work best. \n* Add solid foods one to three hours later, preferably a protein meal to repair and build muscle tissue.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4200000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4200000",
    "DocumentId": "951375547",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5122",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "POTASSIUM",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nPotassium is a mineral that's essential for growth and general good \nhealth. As a necessary component in the body, potassium keeps normal water balance between cells and body fluids, maintains normal blood pressure, transmits nerve impulses, and helps muscles to contract. Potassium has also been found to lower blood pressure and even decrease your risk for cancer. \n\nYou can find potassium in a variety of foods, including fruits and \nvegetables, dairy products, and meat. Although there is no recommended daily allowance for potassium, the minimum amount for adults is 3,500 milligrams per day. Sometimes, potassium deficiencies warrant potassium supplements, especially under the following conditions: \n\n* starvation dieting \n\n* prolonged vomiting or diarrhea \n\n* laxative abuse \n\n* kidney problems \n\n \nSalt is a good supplemental source of potassium. In fact, only one teaspoon of salt contains 1,500 milligrams of potassium. Better yet, salt substitutes contain a whopping 2,800 milligrams of potassium per teaspoon.",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.4730000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.4730000",
    "DocumentId": "951676821",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5123",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ZINC",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nZinc is an essential element found in every cell of the human body. \nZinc plays many roles in enabling growth and development and promoting general good health. Zinc is necessary to help manufacture proteins and genetic material, stimulate hair growth, develop taste perception, and assist in hormonal activity. \n\nMost of the zinc in the typical American diet comes from animal products such as meat, liver, and seafood, especially oysters. You can also find zinc in other food sources such as whole-grain cereals and nuts, although the zinc in these sources isn't as easily absorbed as the zinc in animal products. \n\nThe recommended daily allowance for zinc is 15 milligrams per day for men and 12 milligrams per day for women. Because the typical American diet provides ten to 15 milligrams of zinc per day, the average person will consume the recommended amount. However, since the major source of zinc is animal products, vegetarians are at risk for zinc deficiencies. These deficiencies can result in poor growth, difficulty in wound healing, loss of appetite, and skin problems.",
    "ItemText": null,
    "CreateDate": "2000-03-01T20:14:42.0000000",
    "EndDate": null,
    "ModificationDate": "2000-03-01T20:14:42.0000000",
    "DocumentId": "951970431",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5124",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHOSPHORUS",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nPhosphorus is a mineral that's necessary for the formation of bones \nand teeth. It also makes up part of DNA and RNA. Phosphorus is important to the body because it regulates energy metabolism in cells, helps absorb glucose, and plays a major role in the acid-base balance in the body. \n\nYou can find phosphorus in almost all foods, particularly in protein-rich foods like milk, meat, fish, eggs, poultry, and nuts. Other good sources of phosphorus include baked goods, processed eats, cheeses, and soft drinks. \n\nThe recommended daily allowance of phosphorus is 700 milligrams per day for adults 19 to 70 years old, and 1,250 milligrams per day for children nine to 18 and for women who are pregnant or breast-eeding. The phosphorus level found in normal diets is not harmful. However, excess consumption of phosphorus can reduce the levels of calcium in the blood, resulting in bone loss.",
    "ItemText": null,
    "CreateDate": "2000-03-09T19:34:19.0000000",
    "EndDate": null,
    "ModificationDate": "2000-03-09T19:34:19.0000000",
    "DocumentId": "952659206",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5125",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "THE IMPORTANCE OF CALCIUM",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nYou hear a lot about the need for calcium these days. Though we know that calcium is required for healthy bones and teeth, three out of four women still fail to meet the current recommended daily intake for calcium. Part of the problem may be that many people believe the foods that contain the most calcium are the very foods that contain the most fat. While it's true that milk, yogurt, and cheese are the foods highest in calcium, keep in mind that they're all available now in low-fat versions. You can also get calcium from green leafy vegetables like kale, broccoli, and bok choy; most fruit juices; soy milk; and sardines and salmon (with bones). Be sure to choose foods that are vitamin D fortified, since vitamin D helps the body absorb calcium in food and deposit it in your bones and teeth.\n\nThe American Dietetic Association suggests ways to boost the calcium content of your meals and snacks. They are: \n- For a snack, sprinkle yogurt with crunchy breakfast cereals. \n- Sprinkle shredded cheese on an English muffin, bagel, or tortilla \nand heat to melt the cheese. \n- Add a bowl of fortified cereal with milk to your breakfast menu, or have one for a snack. \n- Look for products labeled \"calcium rich\" or \"excellent source of \ncalcium.\" \n- Pack a calcium-fortified breakfast bar in your briefcase, backpack, or purse for an easy, portable source of calcium. \n- Enjoy a glass of chocolate milk or cafe latte for an afternoon \npick-me-up.",
    "ItemText": null,
    "CreateDate": "2000-04-03T20:30:10.0000000",
    "EndDate": null,
    "ModificationDate": "2000-04-03T20:30:10.0000000",
    "DocumentId": "954818978",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5126",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "THE SCOOP ON VEGETABLE OILS",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nThe majority of vegetable oils contain mostly monounsaturated and \npolyunsaturated fats. When used in place of saturated fats, these oils can lower your (bad) blood cholesterol levels. Oils that contain monounsaturated and polyunsaturated fats are corn, soybean, olive, canola, and sunflower oils. \n\nRemember that when some vegetable oils are hardened to become \nmargarine or shortening, they're more likely to contain \"trans fat.\" To avoid these oils, check out the labels and look for margarines that contain liquid vegetable oil as the first ingredient (the first ingredient listed is the product's chief ingredient).",
    "ItemText": null,
    "CreateDate": "2000-08-14T21:03:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-08-14T21:03:00.0000000",
    "DocumentId": "954820135",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5127",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBScript and ASP Code: Demonstrating the Buffer Property of the Response Object",
    "SortOrdinal": null,
    "ItemChar": "<%@ LANGUAGE=\"VBScript\" %>\n<% Option Explicit %>\n<%\n    Response.Buffer = True\n    \n    Public Sub basDelaySec(Seconds) \n    \n        Dim dtmDate \n    \n        dtmDate = DateAdd(\"s\", Seconds, Now) \n         \n        Do \n        Loop Until Now > dtmDate \n    \n    End Sub \n%>\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n\n<HTML>\n<HEAD>\n    <META NAME=\"Generator\" CONTENT=\"Bryan Wilhite\">\n    <META NAME=\"Reply-to\" CONTENT=\"bwilhite@investorforce.com\">\n    <META NAME=\"Keywords\" CONTENT=\"Development\">\n    <META NAME=\"Description\" CONTENT=\"Development\">\n    <LINK REL=stylesheet TYPE=\"text/css\" HREF=\"./root.css\">\n    <TITLE>Investor Force, Inc.</TITLE>\n</HEAD>\n\n<BODY>\n\n    <P>Waiting 2 seconds...</P>\n<%\n    Response.Flush\n    Call basDelaySec(2)\n%>\n    <P>Waiting 5 seconds...</P>\n<%\n    Response.Flush\n    Call basDelaySec(5)\n%>\n    <P>Waiting 10 seconds...</P>\n<%\n    Response.Flush\n    Call basDelaySec(10)\n%>\n    <P>Done!</P>\n\n</BODY>\n</HTML>",
    "ItemText": null,
    "CreateDate": "2000-04-15T17:31:27.0000000",
    "EndDate": null,
    "ModificationDate": "2000-04-15T17:31:27.0000000",
    "DocumentId": "955844983",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5128",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MAKE TIME FOR THYME",
    "SortOrdinal": null,
    "ItemChar": "By Brigitte Mars, for healthshop.com \n\nThyme (Thymus vulgaris), the common cooking herb, has shown powerful activity in the test tube against microbes like candida and strep. This member of the mint family is easy to grow. When included in cough syrups, it is an expectorant. When added to a bath (tied into a wash cloth), it helps relieve sore muscles.",
    "ItemText": null,
    "CreateDate": "1999-10-14T22:47:59.0000000",
    "EndDate": null,
    "ModificationDate": "1999-10-14T22:47:59.0000000",
    "DocumentId": "1030931858",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5129",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Book: Access 97 Power Programming; Chapter 3 Highlights (3/3): \"Working with Application Collections And Data Access Objects\"",
    "SortOrdinal": null,
    "ItemChar": "DAO: Data Access Object\n\nA DAO is an automation interface for Accessing the Jet Database engine. In fact Access is an IDE/GUI for Jet. DAO is described by a containment hierarchy beginning with the DBEngine object. The DAO object hierarchy is shown on page 91.\n\n\nCurrentDb() Makes a Comeback\n\nCurrentDb() returns a second instance of the database found by DBEngine.Workspaces(0).Databases(0) or DBEngine(0)(0). Use of this previously \"obsolete\" function has been found useful in multi-user scenarios.\n\n\nListing All the Tables in a Database Omitting System and Hidden Tables\n\nThe code on page 94 (Listing 3.9) iterates through the TableDefs collection printing to the Debug window. Note the use of the bit-wise, Or comparision. This is used because the Attributes property can contain a number values stored in instrinsic contants (e.g. dbSystemObject).\n\n\nListing All the Select Queries in a Database\n\nListing 3.10 on page 94 features the use of the Type property of the QueryDef object. In this example, only queries of Type = dbQSelect are printed to the Debug window.",
    "ItemText": null,
    "CreateDate": "1998-10-01T13:42:36.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-01T13:42:36.0000000",
    "DocumentId": "1041516736",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5130",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Use of the VarType() Function with Optional Function Parameters",
    "SortOrdinal": null,
    "ItemChar": "Since Optional function arguments are variants, the VarType() function should be used to \"sub-type\" these arguments for a non-variant data type. The sample code fragment below illustrates the form:\n\nPublic Sub OpenTextFile(FileName As String, _\n        Optional OpenWrite = False)\n \n    On Error GoTo HandleErr\n    \n    'Check optional input.\n    If VarType(OpenWrite) <> vbBoolean Then Err.Raise 450\n\n    'More code may go here.\n\nEnd Sub\n\nNote the use of the instrinsic constant vbBoolean. For a complete list of contants refer to the online help documentation.",
    "ItemText": null,
    "CreateDate": "1999-02-09T18:21:46.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-09T18:21:46.0000000",
    "DocumentId": "1131791619",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5131",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript: The Significance of setTimeout() and clearTimeout()",
    "SortOrdinal": null,
    "ItemChar": "Many designs using a for or while loop structure may instead have needed the setTimeout() method of the window object calling a function recursively. The general form of this structure is:\n\n    function MyFunc() {\n        //code here\n        timeoutID = setTimeout(\"MyFunc()\", 1000)\n    }\n\nwhere timeoutID is a script-global variable. After MyFunc() is called, this structure then recursively calls MyFunc() every second until clearTimeout(timeoutID) is used. Unlike a for or while loop, this \"loop\" is time based.",
    "ItemText": null,
    "CreateDate": "1999-02-09T18:16:55.0000000",
    "EndDate": null,
    "ModificationDate": "1999-02-09T18:16:55.0000000",
    "DocumentId": "1185460374",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5132",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SHOULD I EXERCISE AFTER EATING?",
    "SortOrdinal": null,
    "ItemChar": "Most experts recommend decreasing or eliminating exercise for two to three hours after a big meal. After eating, a major amount of blood is needed in the digestive tract, reducing the amount of oxygenated blood available for the muscles. It may be more difficult to exercise at this time. It would depend on the amount of food, the amount of time since the meal, and how hard you are exercising.  \n\nMost athletes plan to eat at least three or four hours before an event so that the food will have digested and the stomach will not be full. Although the exact cause of a side-stitch (pain below the rib) is not known, it could result from trapped gas in the digestive tract created when you exercise soon after eating. If you do get side-stitches after eating, it's probably a good idea to wait 30 to 90 minutes before exercising.  \n\nA benefit of eating before exercise is the possibility of weight loss. Studies show that exercise helps reduce the appetite, so this could be helpful to you in your weight loss program.",
    "ItemText": null,
    "CreateDate": "1999-09-20T21:00:19.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-20T21:00:19.0000000",
    "DocumentId": "1199841185",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5133",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CRANBERRY TO PREVENT CAVITIES",
    "SortOrdinal": null,
    "ItemChar": "By Brigitte Mars, for healthshop.com \n\nCranberries and unsweetened cranberry juice contain polyphenols, antioxidants that prevent bacteria that could cause cavities from clumping together. In a laboratory test, 58 percent of the bacteria combinations that cause cavities were prevented from congregating when unsweetened cranberry juice was used.",
    "ItemText": null,
    "CreateDate": "1999-10-14T22:55:40.0000000",
    "EndDate": null,
    "ModificationDate": "1999-10-14T22:55:40.0000000",
    "DocumentId": "1210712766",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5134",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "FOOD SAFETY FOR TRAVELERS: COOK IT, PEEL IT, OR FORGET IT",
    "SortOrdinal": null,
    "ItemChar": "Travelers who fail to take precautions while visiting developing countries can catch more than an eyeful of scenery. \n\nTo get the most out of your visit without the \"bug\" getting the better of you:\n\n* Drink bottled water only. Avoid tap water and ice. \n\n* Order from menus. Avoid buying from street vendors or eating from buffets, which might have been sitting out for several hours under unsanitary conditions. \n\n* Avoid salads and undercooked or raw seafood and meat. \n\n* Eat only peeled fruits and vegetables.",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.5430000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.5430000",
    "DocumentId": "1300369176",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5135",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "THE HEART-HEALTHY FAT",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nWhen it comes to reducing the risk of heart disease, monounsaturated fats are healthier than saturated fats, according to the American Heart Association (AHA). Monounsaturated fats include foods such as olive oil, canola oil, peanuts, and avocados. To start you on your way to a heart-healthy lifestyle, the AHA recommends that you begin replacing less heart-healthy saturated fats with monounsaturated fats. \n\nYou can attain many benefits from substituting saturated fats with \nmonounsaturated fats. Not only do monounsaturated fats lower the level of \"bad\" LDL cholesterol in your blood, but they also help maintain the level of \"good\" HDL cholesterol. Also, unsaturated fats, in general, help make the blood-clotting substances, called platelets, less sticky and less likely to cause a clot. A blood clot traveling in the blood stream is a major cause of many heart attacks and strokes. \n\nHowever, before you go overboard and drench your salad in olive oil, you should know that monounsaturated fat is loaded with calories. Too many calories can, unfortunately, cause substantial weight gain, another major risk factor for heart disease. The AHA recommends that no more than 30 percent of your daily calories come from fat and, more importantly, it limits saturated fat to no more than eight to ten percent of your daily calories.",
    "ItemText": null,
    "CreateDate": "2000-02-27T10:43:42.0000000",
    "EndDate": null,
    "ModificationDate": "2000-02-27T10:43:42.0000000",
    "DocumentId": "1327004466",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5136",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "IRON SUPPLEMENT ABUSE CAN BE DEADLY",
    "SortOrdinal": null,
    "ItemChar": "Although Popeye might believe that iron pumps up muscles, those who \nare nutrition-savvy know that self-medicating with iron-rich supplements can be a deadly mistake.  \n\nThat's because one in every 200 to 400 Americans has a genetic condition called hemochromatosis that prevents the body from blocking the absorption of excess dietary iron. Hemochromatosis was once thought to be a rare disease affecting older Caucasian males. But, recent research suggests it's actually the most common genetically related disease in the U.S., with one out of every eight to ten Americans thought to be a carrier.  \n\nThe effects of iron overload develop slowly over time, which means that many who pop iron pills today won't know the damage they are doing until iron deposits in their heart, liver, and pancreas cause serious health problems. Even without using iron supplements,people with this condition can develop life-threatening iron overload-related diseases, including cirrhosis and liver cancer.  \n\nIf you have the condition, the key to avoiding long-term problems  is early detection and treatment. During your next physical exam, ask your physician about testing for hemochromatosis. If it turns out you have the condition, treatment is as easy as having blood withdrawn on a regular basis.",
    "ItemText": null,
    "CreateDate": "1999-09-29T17:48:01.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-29T17:48:01.0000000",
    "DocumentId": "1428979982",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5137",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: Replication Synchronization Errors Occur between Tables in One-to-Many Relationships",
    "SortOrdinal": null,
    "ItemChar": "I have encountered Insert and Delete errors after replication synchronization when the replicable objects include two tables in a one-to-many relationship. Delete errors seem to appear when only one record in the \"many-side\" table, relating to one record in the \"one-side\" table, is deleted from one member of the replica set. Insert errors seem to appear when one or more records in the many-side table, relating to one newly added record in the one-side table, are added.\n\nThese observations are entirely empirical and when these errors occur they are hard to sort out. Since I use replication on very simple databases (with only one user), I simply build a new database and create a new Replica set.",
    "ItemText": null,
    "CreateDate": "1998-11-30T17:37:51.0000000",
    "EndDate": null,
    "ModificationDate": "1998-11-30T17:37:51.0000000",
    "DocumentId": "1449895993",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5138",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "OUTSMART THE MOSQUITOES",
    "SortOrdinal": null,
    "ItemChar": "By Brigitte Mars, for healthshop.com  \n\nIf you are going to be out amongst the mosquitoes this summer, there are some ways to appear less tasty to them. Taking garlic capsules leaves a chemical residue that mosquitoes don't like in the pores of your skin. Also, ingesting a vitamin B complex (containing 100 mg of vitamin B1) causes the body to produce an odor that is not detectable to humans but is disliked by mosquitoes. There are also essential oil blends, including essential oils of citronella, lavender, eucalyptus, and geranium, that can be applied to the body as nontoxic insect repellents.",
    "ItemText": null,
    "CreateDate": "1999-08-11T19:55:51.0000000",
    "EndDate": null,
    "ModificationDate": "1999-08-11T19:55:51.0000000",
    "DocumentId": "1484693744",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5139",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SPARCstation 5; Setting the Message of the Day",
    "SortOrdinal": null,
    "ItemChar": "To set the message of the day, edit the text file /etc/motd.",
    "ItemText": null,
    "CreateDate": "1998-10-06T12:58:09.0000000",
    "EndDate": null,
    "ModificationDate": "1998-10-06T12:58:09.0000000",
    "DocumentId": "1657433851",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5140",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT: Building Setup Disks from CD-ROM",
    "SortOrdinal": null,
    "ItemChar": "Have three blank, formatted floppy disks ready. Put your installation CD into the CD-ROM drive. Now, click Start, Run. Assuming your CD-ROM drive is D, type in \n\n    D:\\i386\\winnt32 /ox \n\nand press Enter. Simply follow the dialog boxes to create the setup disks.",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:26:24.7300000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:26:24.7300000",
    "DocumentId": "1680683821",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5141",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Compaq: 1610: Procedure For Re-calibrating The Battery Gauge",
    "SortOrdinal": null,
    "ItemChar": "Procedure For Re-calibrating The Battery Gauge\n\nModels Affected: All models running Windows 95/98\n\nSymptom: The battery gauge always reads 0%\n\nResolution: \n\nThe battery gauge on the unit is an estimate only of the true battery charge, therefore can give an inaccurate reading, such as staying at 0% even though the unit has been charging for a long period of time. To re-calibrate the battery gauge, perform the following:\n\nTurn unit off - Remove the battery and the AC adapter. \nLook on the back of the battery for a small white dot. \nPress the white dot with your finger and the meter will light up. This meter shows the true battery charge. \nLeave the computer off for anywhere between 30 seconds to 1 min. \nRe-attach the AC adapter only and turn on the computer. \nAfter the computer has loaded into windows, reinsert the battery. \nWait 15 to 30 seconds for new battery gauge reading. \nIf this does not resolve the problem, our technicians online are available to assist you through the Compaq Support Forum.\n\n\nThis information is subject to change without notice. Compaq Computer Corporation assumes no responsibility for error or omissions herein 1997 (R) Copyright. Compaq Computer Corporation. Product names mentioned herein may be trademarks and/or registered trademarks of other companies.",
    "ItemText": null,
    "CreateDate": "1999-10-03T11:06:51.0000000",
    "EndDate": null,
    "ModificationDate": "1999-10-03T11:06:51.0000000",
    "DocumentId": "1734126835",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5142",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Macromedia Freehand PROBLEM: Fonts Are Not Embedded in PDF Files; 8.0.1",
    "SortOrdinal": null,
    "ItemChar": "Fonts are not embedded in PDF files when they are exported via the File > Export... Command. One way to get the fonts embedded in the PDF is to print to Adobe Distiller Assistant. Using this method requires understanding the consequences of printing to what is effectively a PostScript printer (or ripper).\n\nRecall that a PostScript printer needs to be setup properly what with page size, registration and crop marks. Using crop marks is important if the PDF pages being exported are not of the dimensions listed in the PostScript printer driver. The crop marks can be used to crop the custom pages in Adobe Acrobat Exchange 3.x or greater. Acrobat Exchange also comes in handy if Distiller Assistant rotates the pages for some reason. Exchange can rotate the pages back.\n\nFor more details please see FreeHand Technote 12295 (\"Fonts do not appear correctly in exported PDF files\") at:\n\n    http://www.macromedia.com/\n        support/freehand/ts/documents/pdf_fonts.htm",
    "ItemText": null,
    "CreateDate": "2000-03-19T21:46:13.0000000",
    "EndDate": null,
    "ModificationDate": "2000-03-19T21:46:13.0000000",
    "DocumentId": "1738661947",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5143",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript: Using Constructor Functions to Create User-Defined Objects",
    "SortOrdinal": null,
    "ItemChar": "Using constructor functions to create user-defined objects is the \"old\" but respectable---and backward-compatible way of getting the job done. Building the constructor function is the first step in creating the user-defined object. This creation has the form:\n\n    function myConstruct(arg1, arg2, arg3) {\n  \n        //Properties:\n        this.property1 = arg1\n        this.property2 = arg2\n        this.property3 = arg3\n\n        //Methods:\n        this.method1 = myFunc1\n        this.method2 = myFunc2\n        this.method3 = myFunc3\n    }\n\nThe instantiation is the second and final step; it has the form:\n\n    objUser = new myConstruct\n\nsuch that objUser.property2 will return the value of arg2 immediately after the instantiation.\n\nThe \"new\" way to create user-defined objects is via what Netscape calls \"object initializers\" for their 4.0-class browsers (JavaScript 1.2). This creation has the form:\n\n    objectName = {property1:value1, property2:value2,..., propertyN:valueN}\n\nMore information on both ways of doing things may be found at developer.netscape.com with path:\n\n    /docs/manuals/js/client/jsguide/obj.htm",
    "ItemText": null,
    "CreateDate": "2001-10-28T17:56:19.0100000",
    "EndDate": null,
    "ModificationDate": "2001-10-28T17:56:19.0100000",
    "DocumentId": "1739769177",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5144",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB: IIS Application Design",
    "SortOrdinal": null,
    "ItemChar": "So far I am aware of and/or care about three ways of building IIS Applications. Each of these designs has an increasing dependency on COM objects (e.g. DLLs). The message here is, Choose a design that best fits your ability to make your own COM objects.\n\n\nThe 100% Script Method\n\nThis is the best way to learn about ASP, IIS and the scripting language of your choice. The programmer creates one or more .ASP files and one or more .INC files. The only COM objects used in this design are made by other parties (starting with Microsoft). This application design is the most portable as it can be transferred to any server that can run ASP.\n\nNow for the bad bits: the biggest problem I have with this design is not having Option Explicit enforced in the INC files. The application would fail silently. The second problem is being aware that the IDE I was using sucked compared to, say, VB 6.0.\n\n\nThe Script as COM Glue Method\n\nThis design replaces the INC files above with DLLs (or even Java Classes for those users of Chili!Soft products). This technique requires a bit more experience but often links old code from a desktop application to an n-tier Internet solution. Say, for example, that you created your own reusable way to talk to a database via ADO and you have a VB class for it. This design demands that you compile that class into an ActiveX DLL and call it from a script. Portability in this design is someone degraded since, for example, DLLs run only in Windows.\n\n\nThe 99% COM Object Method\n\nThis technique has one script file calling some giant COM object that knows how to talk to IIS. For the developer raised on mature IDEs, this is the easiest way to go. In my case, I would be making DLLs, which implies a firm commitment to the Windows platform. This can make certain managers in certain IT cultures uncomfortable.",
    "ItemText": null,
    "CreateDate": "2000-02-02T00:35:37.0000000",
    "EndDate": null,
    "ModificationDate": "2000-02-02T00:35:37.0000000",
    "DocumentId": "1746370806",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5145",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT: Explorer Command-Line Syntax",
    "SortOrdinal": null,
    "ItemChar": "The general form for entering Explorer commands from the console is \n\n    Explorer [/n][/e][,/root,<path or UNC>][[,/select],<object>] \n\nwhere:\n\n/n opens Explorer with object view only;\n\n/e opens Explorer with tree view and object view at the current folder;\n\n/root,<path or UNC> opens Explorer at the specified root level;\n\n/select,<object> specifies which object (a file, folder or volume) gets the focus. The select parameter may not work in certain IE4 installations.\n\nSome \"stupid\" Explorer tricks:\n\n    Explorer ..\n\nwill open Explorer one directory above the current directory.\n\n    Explorer \nwill open Explorer at the root directory (usally C:\\).\n\nNote that most of these commands also apply to Shortcuts and the Run dialog as well. One Explorer command that works only in the Run dialog consists of a single period (\".\"). The \"period command\" is the same as Explorer \\.",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:31:23.9400000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:31:23.9400000",
    "DocumentId": "1759519097",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5146",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB Code: Populating the Microsoft TreeView Control",
    "SortOrdinal": null,
    "ItemChar": "Public Sub basPopTV(tv As MSComctlLib.TreeView)\n    '\n    'This sub demonstrates the \"hard code\" way of\n    'populating a Microsoft TreeView Control.\n    '\n    With tv\n        .LabelEdit = tvwAutomatic\n        .Style = tvwTreelinesPlusMinusText\n        .LineStyle = tvwRootLines\n            \n        Set m_tvNode = .Nodes.Add(Key:=\"Root1\", _\n            Text:=\"Root1\")\n\n        'Add child Nodes.\n        Set m_tvNode = .Nodes.Add(Relative:=\"Root1\", _\n            Relationship:=tvwChild, Key:=\"Key1.1\", _\n            Text:=\"1.1\")\n        Set m_tvNode = .Nodes.Add(Relative:=\"Root1\", _\n            Relationship:=tvwChild, Key:=\"Key1.2\", _\n            Text:=\"1.2\")\n        Set m_tvNode = .Nodes.Add(Relative:=\"Root1\", _\n            Relationship:=tvwChild, Key:=\"Key1.3\", _\n            Text:=\"1.3\")\n      \n        .Nodes(1).Expanded = True\n        .Nodes(1).Bold = True\n        \n        Set m_tvNode = Nothing\n        \n    End With\n\nEnd Sub",
    "ItemText": null,
    "CreateDate": "1999-04-24T09:59:42.0000000",
    "EndDate": null,
    "ModificationDate": "1999-04-24T09:59:42.0000000",
    "DocumentId": "1779889301",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5147",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WHY SPOT REDUCING WILL NOT WORK!",
    "SortOrdinal": null,
    "ItemChar": "Fat and muscle are two different kinds of tissue. Exercise will not change fat into muscle or the lack of exercise change muscle into fat. Physical exercise can only tone or increase muscle tissue. To reduce the amount of unwanted fat in certain areas of your body, you must reduce the size of the existing fat cells in these areas. When exercising, fat is released from various fat storage cells throughout the body, not just one area, and converted into energy used by the muscles. Exercise combined with a reduced-calorie diet can lead to a leaner appearance with the possibility of noticeable muscle definition.  \n\nFat patterning is also a genetic component of fat storage in the body. This means that your body will draw fat for fuel from a genetic pattern. For example, you may do stomach curls to achieve flat abdominal muscles, but due to fat patterning your efforts may lead to fat reduction in another area of your body. In fact, most women tend to have a small amount of extra fat around their abdominal muscles.  \n\nWhat can you do if you have too much fat on your thighs, stomach, hips, or upper arms? A comprehensive fitness and nutrition program can help you lower your body fat and tone the muscles. To get the results you wish for in losing fat from certain parts of your body, you'll just have to cross your fingers and hope for the best!",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4300000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4300000",
    "DocumentId": "1794450949",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5148",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ZINC AND PERFORMANCE LEVELS",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nSome athletes follow a high-carbohydrate diet to improve their performance. Such a diet may result in low levels of zinc, however, and may actually adversely affect strength and endurance. The Agricultural Research Service (the chief scientific agency of the U.S. Department of Agriculture) conducted a study on the effects of zinc levels in 12 athletic men in their twenties. \n\nThe men were placed on two diets, each lasting nine weeks. In the first diet, the men consumed an amount of zinc slightly higher than the recommended daily allowance (about 18 milligrams). In the second nine weeks, the men were placed on diets that contained an exceptionally low level of zinc (about three milligrams per day). The finding suggested that after the low-zinc diet, the men were more sluggish when doing a high-intensity workout. Their energy production was lower. \n\nHowever, the scientists warn, don't assume that more zinc will give you more energy. Zinc can inhibit copper utilization and uptake in the body, which can promote anemia. It can also lower levels of HDL (good) cholesterol that's associated with a reduction in cardiovascular disease.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4200000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4200000",
    "DocumentId": "1832760699",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5149",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB Code: Generic Data Error Handler for Microsoft's DataGrid Control",
    "SortOrdinal": null,
    "ItemChar": "Private Sub dgFields_Error(ByVal DataError As Integer, _\n    Response As Integer)\n   '\n   'This sub attemps to summarize the errors of the\n   'MS DataGrid Control. On many errors it simply reports\n   'that \"Errors have ocurred.\" This sub is an attmept to\n   'intercept such meaningless messages.\n   'Note that I am using my generic message handler,\n   'the Public Sub basAppInfoMsg().\n   '\n    Dim strError As String\n    \n    Response = 0\n\n    Select Case DataError\n        Case dbgActionCanceled\n            strError = \"Data Grid Error 7011: \"\"Action is \" _\n               & \"canceled\"\"\"\n        Case dbgAddError\n            strError = \"Data Grid Error 6154: \"\"Error occurred \" _\n               & \"while trying to add record\"\"\"\n        Case dbgBadEvent\n            strError = \"Data Grid Error 6161: \"\"Operation is \" _\n                & \"invalid within the event\"\"\"\n        Case dbgBindError\n            strError = \"Data Grid Error 4097: \"\"Cannot \" _\n                & \"initialize data bindings\"\"\"\n        Case dbgCNotFound\n            strError = \"Data Grid Error 6147: \"\"Column not \" _\n                & \"found\"\"\"\n        Case dbgColIndex\n            strError = \"Data Grid Error 6145: \"\"Invalid column \" _\n                & \"index\"\"\"\n        Case dbgColReadOnly\n            strError = \"Data Grid Error 7010: \"\"The column is \" _\n                & \"read only\"\"\"\n        Case dbgConvertData\n            strError = \"Data Grid Error 7006: \"\"Data type \" _\n                & \"conversion error\"\"\"\n        Case dbgDataAccess\n            strError = \"Data Grid Error 6160: \"\"Data access \"_\n                & \"error\"\"\"\n        Case dbgDelError\n            strError = \"Data Grid Error 6155: \"\"Error occurred \" _\n                & \"while trying to delete record\"\"\"\n        Case dbgDelMultRows\n            strError = \"Data Grid Error 6159: \"\"Cannot delete \" _\n                & \"multiple rows\"\"\"\n        Case dbgErrorSetCurrent\n            strError = \"Data Grid Error 6152: \"\"Error occurred \" _\n                & \"while trying to set current row\"\"\"\n        Case dbgErrUpdateColumn\n            strError = \"Data Grid Error 7007: \"\"Error \" _\n                & \"occurred while trying to update the column \" _\n                & \"value\"\"\"\n            End If\n        Case dbgInvalidPropertyValue\n            strError = \"Data Grid Error 380: \"\"Invalid \" _\n                & \"property value\"\"\"\n        Case dbgInvalidSafeModeProcCall\n            strError = \"Data Grid Error 680: \"\"Invalid \" _ \n                & \"procedure call in safe mode\"\"\"\n        Case dbgInvBookmark\n            strError = \"Data Grid Error 6149: \"\"Invalid \" _\n                & \"bookmark\"\"\"\n        Case dbgInvRowNum\n            strError = \"Data Grid Error 6148: \"\"Invalid row \" _\n                & \"number\"\"\"\n        Case dbgMustHaveSplit\n            strError = \"Data Grid Error 7002: \"\"Cannot delete \" _\n                & \"last split\"\"\"\n        Case dbgNoCurrentRow\n            strError = \"Data Grid Error 7008: \"\"The current \" _\n                & \"row is not available\"\"\"\n        Case dbgNoMethodNow\n            strError = \"Data Grid Error 7003: \"\"Method is not \" _\n                & \"available in this context\"\"\"\n        Case dbgNoPropNow\n            strError = \"Data Grid Error 6162: \"\"Property is \"_\n                & \"not available in this context\"\"\"\n        Case dbgNoRowFound\n            strError = \"Data Grid Error 7009: \"\"Cannot find \" _\n                & \"the row\"\"\"\n        Case dbgNoRowset\n            strError = \"Data Grid Error 7005: \"\"Rowset \" _\n                & \"not available\"\"\"\n        Case dbgNotBookmarkable\n            strError = \"Data Grid Error 7004: \"\"The rowset \" _\n                & \"is not bookmarkable\"\"\"\n        Case dbgOrphaned\n            strError = \"Data Grid Error 7000: \"\"Supporting \" _\n                & \"object on the grid has been deleted\"\"\"\n        Case dbgOutOfMemory\n            strError = \"Data Grid Error 7: \"\"Out of memory\"\"\"\n        Case dbgScrollRange\n            strError = \"Data Grid Error 6151: \"\"Scroll \"_\n               & \"arguments out of range\"\"\"\n        Case dbgSplitIndex\n            strError = \"Data Grid Error 6244: \"\"Invalid split \" _\n                & \"index\"\"\"\n        Case dbgSubscriptRange\n            strError = \"Data Grid Error 9: \"\"Subscript out \" _\n                & \"of range\"\"\"\n        Case dbgTypeMismatch\n            strError = \"Data Grid Error 13: \"\"Type mismatch\"\"\"\n        Case dbgUnknown\n            strError = \"Data Grid Error 7001: \"\"An unknown \" _\n                & \"error code was received where it was not \" _\n                & \"expected\"\"\"\n        Case dbgUpdError\n            strError = \"Data Grid Error 6153: \"\"Error occurred \" _\n                & \"while trying to update record\"\"\"\n        Case Else\n            Response = 1\n    End Select\n    \n    If VBA.Len(strError) Then basAppInfoMsg (strError)\n    \nEnd Sub",
    "ItemText": null,
    "CreateDate": "1999-04-24T22:27:15.0000000",
    "EndDate": null,
    "ModificationDate": "1999-04-24T22:27:15.0000000",
    "DocumentId": "1890260836",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5150",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CAYENNE IS MORE THAN HOT",
    "SortOrdinal": null,
    "ItemChar": "By Brigitte Mars, for healthshop.com\n\nCayenne pepper, best known for its hot pungent flavor, is an excellent herb for improving circulation. It has been used to stimulate digestion, lower high blood pressure, and increase the excretion of cholesterol. Cayenne is high in vitamins C and E and also contains carotenoids and a substance called capsaicin, which is included in creams, salves, and liniments to block the body's perception of pain. Capsaicin is included in topical formulas to help arthritis and fibromyalgia.",
    "ItemText": null,
    "CreateDate": "1999-09-29T17:49:48.0000000",
    "EndDate": null,
    "ModificationDate": "1999-09-29T17:49:48.0000000",
    "DocumentId": "1917141879",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5151",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Right-Justifying Text with the Format$() Function; Building Text Files with Fixed-Width Columns",
    "SortOrdinal": null,
    "ItemChar": "In many financial applications text files are sometimes needed for automated input of data. Some data feeds are text files containing fixed-width columns. Oftentimes these columns are right-justified with the form:\n\n    XXX123\n    X12345\n    XXX234\n\nwhere the X's are spaces forming a six-character, fixed-width column. If you are building this column from data in a database you will have to \"pad\" leading spaces. For our six-character column we can use the Format$() function:\n\n    VBA.Format$(strData, \"@@@@@@\")\n\nwhere strData contains the data from the database.",
    "ItemText": null,
    "CreateDate": "1999-05-18T20:16:26.0000000",
    "EndDate": null,
    "ModificationDate": "1999-05-18T20:16:26.0000000",
    "DocumentId": "2006695784",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5152",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: Type Conversion Failure When Updating Rows with a Function of Type Variant",
    "SortOrdinal": null,
    "ItemChar": "Functions of type Variant, by default, return Empty not Null. Variant-type functions are useful when used to update rows in a table because these functions can return Null. However Null must be specified as the default value of such functions. If the function returns Empty to a field that does not accept strings, a type conversion error will occur.\n\nOne form for specifying a default value is\n\n    Public Function basMyFunc()\n        basMyFunc = Null\n        'The rest of this procedure follows.\n    End Function",
    "ItemText": null,
    "CreateDate": "1998-08-07T08:42:46.0000000",
    "EndDate": null,
    "ModificationDate": "1998-08-07T08:42:46.0000000",
    "DocumentId": "2012529411",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5153",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT: BMP Files Can Be Used as Icons",
    "SortOrdinal": null,
    "ItemChar": "Windows bitmap files can be used as icons. When the Change Icon... button is pressed from a Shortcut dialog, keep in mind that it is possible to Browse... for *.BMP files when showing all files in the Browse dialog.\n\nIt can only help to choose BMP files that equal or are directly proportional to 32x32 pixels.",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:25:51.7230000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:25:51.7230000",
    "DocumentId": "2064055916",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5154",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript: Timer Code",
    "SortOrdinal": null,
    "ItemChar": "//(c) 1998 Bryan Wilhite\n//All rights reserved.\n//rasx@kintespace.com\n\n//This code assumes that there is a text input object\n//called \"textDisplay\" in a FORM block level element.\n//It is also assumed that there are two buttons.\n//One calls jsTimerStart() and the other\n//calls jsTimerStop() when their\n//onClick() events fire.\n\nvar isRunning = false\nvar timeoutID = null\nvar vLater = null\n\nfunction jsTimer() {\n    vNow = new Date()\n    vNow = vNow.getTime()\n    //Change vDelta into a value in milliseconds.\n    vDelta = vLater - vNow\n    if (vDelta <= 0) { jsTimerStop() }\n    else {\n        //Change vDelta into an object.\n        vDelta = new Date(vDelta)\n        //Change vDelta into an value in seconds.\n        vDelta = vDelta.getSeconds()\n        window.document.forms[1].textDisplay.value =\n            ((vDelta < 10) ? \":0\" : \":\") + vDelta\n        if (isRunning) { timeoutID = setTimeout(\"jsTimer()\", 1000) }\n    }\n}\n\nfunction jsTimerStart(vSeconds) {\n    isRunning = true\n    vNow = new Date()\n    vNow = vNow.getTime()\n    vLater = vNow + (1000 * vSeconds)\n    jsTimer()\n}\n\nfunction jsTimerStop() {\n    if (isRunning) {\n        clearTimeout(timeoutID)\n        window.document.forms[1].textDisplay.value = \":00\"\n        isRunning = false\n    }\n    else { window.alert(\"Timer is already stopped.\") }\n}",
    "ItemText": null,
    "CreateDate": "2000-12-21T09:35:19.2200000",
    "EndDate": null,
    "ModificationDate": "2000-12-21T09:35:19.2200000",
    "DocumentId": "2076071289",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5155",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Core Java 1.1 Volume I --- Fundamentals: Chapter 4, Objects and Classes",
    "SortOrdinal": null,
    "ItemChar": "Objects\n\nData is encapsulated in an object. The data is stored inside the object as \"instance variables\" or \"instance fields.\" If the access modifier \"private\" is used when creating instance fields, then the principle of \"encapsulation\" is enforced. The particular values of the instance fields in an object constitutes the \"state\" of the object.\n\nTo enforce encapsulation, object methods should be used to handle data. Object methods are used to associate \"behavior\" with an object. Methods are defined with respect to their relationship to object data (instance fields). It follows that there are \"mutator methods\" and \"accessor methods,\" where, respectively, object data is changed and object data is retrieved. The convention in Java is to use the lowercase prefix \"get\" for accessor methods and \"set\" for mutator methods.\n\n\nClasses\n\nObjects come from classes. A class contains a  \"code block\" punctuated with braces (\"{\" and \"}\"). This code block contains methods and instance fields. The people at Sun recommend that class methods appear first followed by instance fields (this is meant to show an understanding of the ideal of encapsulation). The opinion here is that there are three types of classes: (i) classes that make up the current Java standard or other third-party pre-packaged classes; (ii) user-defined classes that manipulate data; and (iii) classes that manipulate user-defined classes (as well as manipulating data).\n\nThe last type of class almost always contains a method called \"main()\" returning \"void.\" The main() method is almost always used instantiate other classes. In a simple \"hub and spokes\" application design, the class with the main() method calls classes without a main() method. Classes without a main() method may, at least, contain three items: (i) a private data field, (ii) a public field accessor method and (iii) a public field mutator method.\n\nWhen the class is instantiated by the \"new\" keyword, its methods are available as long as they are public. When a class has one or more methods with the same name as the class, these methods are called \"constructors.\" A single class can have multiple constructor methods via \"overloading.\"\n\nA class can have \"private\" methods. These methods are often used to break up a large procedure into one public method and several private ones.\n\nA class can have \"static\" methods. These methods \"belong to the class\" and not to any particluar instance of the class. It follows that static methods can only access the static fields of an object. Recall that the main() method is static. Becuase of this, it is not uncommon for main() to create an object of its own class to access its instance fields via an object variable (see p. 137).\n\nWhen a class has method called \"finalize()\" this method will be called whenever the Java system decides to perform \"garbage collection.\"",
    "ItemText": null,
    "CreateDate": "2000-09-16T07:28:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-09-16T07:28:00.0000000",
    "DocumentId": "2076071291",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5156",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: basRandomNum(); Generating a Random Number between Upper and Lower Limits",
    "SortOrdinal": null,
    "ItemChar": "Function basRandomNum(Lower As Long, Upper As Long)\n\n    basRandomNum = VBA.Int((Upper - Lower + 1) * VBA.Rnd + Lower)\n\nEnd Function",
    "ItemText": null,
    "CreateDate": "2000-08-14T17:52:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-08-14T17:52:00.0000000",
    "DocumentId": "2076071292",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5157",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: Sending mail from Outlook Express; basSendMail()",
    "SortOrdinal": null,
    "ItemChar": "Public Sub basSendMail()\n\n    Dim objMailItem As MailItem\n    \n    Set objMailItem = Application.CreateItem(olMailItem)\n    \n    With objMailItem\n        .To = \"rasx@kintespace.com\"\n        .Subject = \"Is Haley's Comet for You?\"\n        .Body = \"This is the body text.\"\n        .Send\n    End With\n\nEnd Sub",
    "ItemText": null,
    "CreateDate": "2000-08-14T18:07:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-08-14T18:07:00.0000000",
    "DocumentId": "2076071293",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5158",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP: Denying Anonymous Access with the ServerVariables Dictionary Object",
    "SortOrdinal": null,
    "ItemChar": "'Deny anonymous access.\nIf Request.ServerVariables(\"LOGON_USER\") = Empty Then\n    Response.Status = \"401 Access Denied\"\nEnd If\n\n'For the converse of this issue please see MS KB article Q188717\n'\"PRB: Request.ServerVariables(\"LOGON_USER\") Returns Empty String\"\n",
    "ItemText": null,
    "CreateDate": "2001-04-07T19:29:10.6770000",
    "EndDate": null,
    "ModificationDate": "2001-04-07T19:29:10.6770000",
    "DocumentId": "2076071294",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5159",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "GOOD NEWS FOR PASTA LOVERS",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nPasta, one of America's favorite and most commonly eaten foods, is now rich in folic acid, the synthetic form of folate. The change comes with the Food and Drug Administration's recent regulation to add appropriate amounts of folic acid to grain products like pasta, rice, and breads. One cup of cooked pasta supplies 25 percent of the recommended daily value for folate. Both men and women can benefit from including folate in their diet, especially women planning to have children. \n\nFolic acid is a B vitamin that is essential for women of childbearing age. It helps reduce the risk of developing certain birth defects, such as spina bifida. New studies show that folic acid may also reduce the risk of heart disease in both men and women. \n",
    "ItemText": null,
    "CreateDate": "2000-08-14T20:42:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-08-14T20:42:00.0000000",
    "DocumentId": "2076071295",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5160",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WHOLE-GRAIN GOODNESS",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nNutrition experts agree that you should eat at least three servings of whole-grain foods every day. But how do you know exactly which foods are whole grain? And just what is whole grain? \n\nBefore they are milled or refined, all grains are considered whole. Whole is defined as containing all the original components of grains: an inner layer of germ, a middle layer called the endoderm, and an outer layer of bran. When grains are milled or refined, the germ and bran layers are removed, leaving the starchy endoderm. That's the layer you enjoy when you eat white rice or foods made from white flour. \n\nSo, what are some examples of whole-grain foods? Many popular foods contain whole grains, including whole-grain breakfast cereals and whole-wheat and whole-grain breads and waffles. Make sure the ingredient list on the food label says \"whole\" or \"whole-grain.\" ",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.2300000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.2300000",
    "DocumentId": "2076071296",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5161",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ANTIOXIDANTS--THE WHAT AND HOW",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nAs body cells burn oxygen to produce energy, harmful by-products are produced. These by-products are known as free radicals. Free radicals are missing an electron and will attack any nearby molecule, such as DNA, protein, or fat, to get an electron. Over time, as free radicals attack nearby cells, those cells become damaged. This damage can contribute to premature aging and to diseases such as heart disease, arthritis, and cancer. \n\nAntioxidants are substances intended to neutralize free radicals by giving them an electron. By doing so, antioxidants prevent free radicals from attacking nearby cells and damaging them. Some common antioxidants are beta-carotene and vitamins C and E.",
    "ItemText": null,
    "CreateDate": "2004-04-17T02:53:21.9870000",
    "EndDate": null,
    "ModificationDate": "2004-04-17T02:53:21.9870000",
    "DocumentId": "2076071297",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5162",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SOLANINE--A NATURALLY OCCURRING TOXIN",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nYou probably already know that you should thoroughly wash produce \nbefore eating it to avoid ingesting harmful toxins and pesticides. \nWhat you may not know, however, is that there are naturally occurring toxins just as there are manmade toxins. One such naturally occurring toxin is solanine. \n\nSolanine is a toxin produced when a potato is harvested and exposed to light. The toxin is characterized by the appearance of green \nsplotches. Solanine can cause gastric upset, respiratory problems, and has even been found to cause spontaneous abortions in laboratory animals. Therefore, pregnant women should be especially careful to remove all green areas on a potato before eating it. Since solanine's content is highest just beneath the potato's skin, you should peel deep to remove most of the toxin. ",
    "ItemText": null,
    "CreateDate": "2000-08-14T21:57:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-08-14T21:57:00.0000000",
    "DocumentId": "2076071298",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5163",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SOLANINE--A NATURALLY OCCURRING TOXIN",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nYou probably already know that you should thoroughly wash produce \nbefore eating it to avoid ingesting harmful toxins and pesticides. \nWhat you may not know, however, is that there are naturally occurring toxins just as there are manmade toxins. One such naturally occurring toxin is solanine. \n\nSolanine is a toxin produced when a potato is harvested and exposed to light. The toxin is characterized by the appearance of green \nsplotches. Solanine can cause gastric upset, respiratory problems, and has even been found to cause spontaneous abortions in laboratory animals. Therefore, pregnant women should be especially careful to remove all green areas on a potato before eating it. Since solanine's content is highest just beneath the potato's skin, you should peel deep to remove most of the toxin. \n",
    "ItemText": null,
    "CreateDate": "2000-08-14T22:06:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-08-14T22:06:00.0000000",
    "DocumentId": "2076071299",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5164",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "COLD-FIGHTING FOODS",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nCertain foods can help minimize and shorten the duration of symptoms associated with the common cold. Here are some of the proven cold-fighting foods: \n\n* Chicken soup thins the mucous in the lungs, making the mucous easier to expel.\n \n* Hot and spicy foods act as expectorants. When you eat these foods regularly, they help thin mucous secretions of colds, asthma, and allergies. \n\n* Garlic kills the viruses and bacteria associated with the common cold and flu.\n\n* Drinking plenty of liquids will hydrate the mucous membranes. Viruses thrive in dry environments. ",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.4530000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.4530000",
    "DocumentId": "2076071300",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5165",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "FOODS TO FIGHT CONSTIPATION",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nConstipation can be a real discomfort for anyone. There are many foods that act as natural laxatives. Some of the most common natural laxatives include: \n\n* Fiber: it helps to bulk up stools and, when consumed with plenty of water, starts mobility in the intestine. High-fiber foods include whole grains, fruits, peas, and beans. \n\n* Fruit juice: apple, pear, and grape fruit juices are particularly effective in young children because they're high in naturally occurring sugars that are difficult for young intestines to digest. Use only a little of these juices to help with constipation, since they can often cause loose stools and diarrhea. \n\n* Prunes: they naturally stimulate contractions of the intestines to remove waste products. Prunes also attract water to the intestinal area. \n\n* Fluids: drink plenty of fluids to soften stools. Avoid any liquid with caffeine, because caffeine acts as a diuretic. \n",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.4630000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.4630000",
    "DocumentId": "2076071301",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5166",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL Code: A Procedure Using CASE Structures to Format Times",
    "SortOrdinal": null,
    "ItemChar": "CREATE Procedure ListGo2Events\n\nAS\n\nSET NOCOUNT ON\n\n-- Collect data into temp' table.\nSELECT\n    tblVenueEvents.EventID\n,    tblVenueEvents.ArtistSummary\n,    tblVenueEvents.ArtistExtended\n,    tblVenueEvents.VenueID\n,    tblVenueEvents.DoorDate\n,    tblVenueEvents.DoorTime\n,    tblVenueEvents.EventDate\n,    tblVenueEvents.EventTime\n,    tblVenueEvents.GenreID\n,    sch_t_genre.genre_name\n,    tblVenueEvents.AgeRestriction\n,    tblVenueEvents.SoldOutIndicator\n,    tblVenueEvents.ChangedToDate\n,    tblVenueEvents.ChangedToTime\n,    tblVenueEvents.Canceled\nINTO\n    #out\nFROM\n    tblVenueEvents\n,    sch_t_genre\nWHERE\n    tblVenueEvents.GenreID = sch_t_genre.genre_id\nAND\n    MONTH(tblVenueEvents.EventDate) >= MONTH(GETDATE())\nAND\n    DAY(tblVenueEvents.EventDate) >= DAY(GETDATE())\nAND\n    YEAR(tblVenueEvents.EventDate) >= YEAR(GETDATE())\n\n-- Attempt to format Event times...\n\n-- First sweep...\nUPDATE #out\nSET\n    DoorTime = (\n        CASE\n            WHEN DoorTime LIKE '%[^1-9]1:__%' THEN '13' +\nSUBSTRING(DoorTime,CHARINDEX(\":\",DoorTime) + 1,2)\n            WHEN DoorTime LIKE '%[^1-9]2:__%' THEN '14' +\nSUBSTRING(DoorTime,CHARINDEX(\":\",DoorTime) + 1,2)\n            WHEN DoorTime LIKE '%[^1-9]3:__%' THEN '15' +\nSUBSTRING(DoorTime,CHARINDEX(\":\",DoorTime) + 1,2)\n            WHEN DoorTime LIKE '%[^1-9]4:__%' THEN '16' +\nSUBSTRING(DoorTime,CHARINDEX(\":\",DoorTime) + 1,2)\n            WHEN DoorTime LIKE '%[^1-9]5:__%' THEN '17' +\nSUBSTRING(DoorTime,CHARINDEX(\":\",DoorTime) + 1,2)\n            WHEN DoorTime LIKE '%[^1-9]6:__%' THEN '18' +\nSUBSTRING(DoorTime,CHARINDEX(\":\",DoorTime) + 1,2)\n            WHEN DoorTime LIKE '%[^1-9]7:__%' THEN '19' +\nSUBSTRING(DoorTime,CHARINDEX(\":\",DoorTime) + 1,2)\n            WHEN DoorTime LIKE '%[^1-9]8:__%' THEN '20' +\nSUBSTRING(DoorTime,CHARINDEX(\":\",DoorTime) + 1,2)\n            WHEN DoorTime LIKE '%[^1-9]9:__%' THEN '21' +\nSUBSTRING(DoorTime,CHARINDEX(\":\",DoorTime) + 1,2)\n            WHEN DoorTime LIKE '%[^1-9]10:__%' THEN '22' +\nSUBSTRING(DoorTime,CHARINDEX(\":\",DoorTime) + 1,2)\n            WHEN DoorTime LIKE '%[^1-9]11:__%' THEN '23' +\nSUBSTRING(DoorTime,CHARINDEX(\":\",DoorTime) + 1,2)\n        END\n    )\nWHERE\n    CHARINDEX(':',DoorTime) > 0\n\nUPDATE #out\nSET\n    EventTime = (\n        CASE\n            WHEN EventTime LIKE '%[^1-9]1:__%' THEN '13' +\nSUBSTRING(EventTime,CHARINDEX(\":\",EventTime) + 1,2)\n            WHEN EventTime LIKE '%[^1-9]2:__%' THEN '14' +\nSUBSTRING(EventTime,CHARINDEX(\":\",EventTime) + 1,2)\n            WHEN EventTime LIKE '%[^1-9]3:__%' THEN '15' +\nSUBSTRING(EventTime,CHARINDEX(\":\",EventTime) + 1,2)\n            WHEN EventTime LIKE '%[^1-9]4:__%' THEN '16' +\nSUBSTRING(EventTime,CHARINDEX(\":\",EventTime) + 1,2)\n            WHEN EventTime LIKE '%[^1-9]5:__%' THEN '17' +\nSUBSTRING(EventTime,CHARINDEX(\":\",EventTime) + 1,2)\n            WHEN EventTime LIKE '%[^1-9]6:__%' THEN '18' +\nSUBSTRING(EventTime,CHARINDEX(\":\",EventTime) + 1,2)\n            WHEN EventTime LIKE '%[^1-9]7:__%' THEN '19' +\nSUBSTRING(EventTime,CHARINDEX(\":\",EventTime) + 1,2)\n            WHEN EventTime LIKE '%[^1-9]8:__%' THEN '20' +\nSUBSTRING(EventTime,CHARINDEX(\":\",EventTime) + 1,2)\n            WHEN EventTime LIKE '%[^1-9]9:__%' THEN '21' +\nSUBSTRING(EventTime,CHARINDEX(\":\",EventTime) + 1,2)\n            WHEN EventTime LIKE '%[^1-9]10:__%' THEN '22' +\nSUBSTRING(EventTime,CHARINDEX(\":\",EventTime) + 1,2)\n            WHEN EventTime LIKE '%[^1-9]11:__%' THEN '23' +\nSUBSTRING(EventTime,CHARINDEX(\":\",EventTime) + 1,2)\n        END\n    )\nWHERE\n    CHARINDEX(':',EventTime) > 0\n\nUPDATE #out\nSET\n    ChangedToTime = (\n        CASE\n            WHEN ChangedToTime LIKE '%[^1-9]1:__%' THEN '13' +\nSUBSTRING(ChangedToTime,CHARINDEX(\":\",ChangedToTime) + 1,2)\n            WHEN ChangedToTime LIKE '%[^1-9]2:__%' THEN '14' +\nSUBSTRING(ChangedToTime,CHARINDEX(\":\",ChangedToTime) + 1,2)\n            WHEN ChangedToTime LIKE '%[^1-9]3:__%' THEN '15' +\nSUBSTRING(ChangedToTime,CHARINDEX(\":\",ChangedToTime) + 1,2)\n            WHEN ChangedToTime LIKE '%[^1-9]4:__%' THEN '16' +\nSUBSTRING(ChangedToTime,CHARINDEX(\":\",ChangedToTime) + 1,2)\n            WHEN ChangedToTime LIKE '%[^1-9]5:__%' THEN '17' +\nSUBSTRING(ChangedToTime,CHARINDEX(\":\",ChangedToTime) + 1,2)\n            WHEN ChangedToTime LIKE '%[^1-9]6:__%' THEN '18' +\nSUBSTRING(ChangedToTime,CHARINDEX(\":\",ChangedToTime) + 1,2)\n            WHEN ChangedToTime LIKE '%[^1-9]7:__%' THEN '19' +\nSUBSTRING(ChangedToTime,CHARINDEX(\":\",ChangedToTime) + 1,2)\n            WHEN ChangedToTime LIKE '%[^1-9]8:__%' THEN '20' +\nSUBSTRING(ChangedToTime,CHARINDEX(\":\",ChangedToTime) + 1,2)\n            WHEN ChangedToTime LIKE '%[^1-9]9:__%' THEN '21' +\nSUBSTRING(ChangedToTime,CHARINDEX(\":\",ChangedToTime) + 1,2)\n            WHEN ChangedToTime LIKE '%[^1-9]10:__%' THEN '22' +\nSUBSTRING(ChangedToTime,CHARINDEX(\":\",ChangedToTime) + 1,2)\n            WHEN ChangedToTime LIKE '%[^1-9]11:__%' THEN '23' +\nSUBSTRING(ChangedToTime,CHARINDEX(\":\",ChangedToTime) + 1,2)\n        END\n    )\nWHERE\n    CHARINDEX(':',ChangedToTime) > 0\n\n-- Second sweep...\nUPDATE #out\nSET\n    DoorTime = RTRIM(DoorTime) + '00'\nWHERE\n    LEN(DoorTime) = 2\n\nUPDATE #out\nSET\n    EventTime = RTRIM(EventTime) + '00'\nWHERE\n    LEN(EventTime) = 2\n\nUPDATE #out\nSET\n    ChangedToTime = RTRIM(ChangedToTime) + '00'\nWHERE\n    LEN(ChangedToTime) = 2\n\n-- Project result.\nSELECT\n    EventID\n,    ArtistSummary\n,    ArtistExtended\n,    VenueID\n,    DoorDate\n,    DoorTime\n,    EventDate\n,    EventTime\n,    GenreID\n,    genre_name\n,    AgeRestriction\n,    SoldOutIndicator\n,    ChangedToDate\n,    ChangedToTime\n,    Canceled\nFROM\n    #out\n\n",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:50:05.6530000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:50:05.6530000",
    "DocumentId": "2076071302",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5167",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript and HTML: The Option Constructor; Dynamically Build OPTION Tags for SELECT Tags",
    "SortOrdinal": null,
    "ItemChar": "The Option Constructor has been with us since Netscape 2.0. It provides JavaScript to dynamically build OPTION tags for SELECT tags. As of this writing, Doc JavaScript goes into detail at:\n\n    http://webreference.com/js/tips/000118.html\n\nHowever, I question that using history.go(0) is necessary to display OPTION tags created on the fly.\n\nAncient Netscape text regarding Option Constructors might still be unearthed at:\n\n    http://developer.netscape.com/docs/manuals/communicator/jsref/choi3.htm\n",
    "ItemText": null,
    "CreateDate": "2001-03-31T08:27:53.2830000",
    "EndDate": null,
    "ModificationDate": "2001-03-31T08:27:53.2830000",
    "DocumentId": "2076071303",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5168",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Opening files with the VS 6.0 Development Environment",
    "SortOrdinal": null,
    "ItemChar": "Icons: C:\\Program Files\\Microsoft Visual Studio\\VIntDev98\\bin\\vidisws.dll\n\nConfirm open after download\n\nAction > open\nApplication used to perform action: \"C:\\Program Files\\Microsoft Visual\nStudio\\Common\\IDE\\IDE98\\devenv.exe\" \"%1\"\n\nUse DDE\n\nDDE Message: Open(\"%1\")\nApplication: vstudio\nTopic: system\n",
    "ItemText": null,
    "CreateDate": "2000-08-15T00:28:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-08-15T00:28:00.0000000",
    "DocumentId": "2076071304",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5169",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "URI for FTP Protocol with Username and Password",
    "SortOrdinal": null,
    "ItemChar": "ftp://<User>:<Password>@ftp.domain.com/Usersfolder/",
    "ItemText": null,
    "CreateDate": "2000-08-15T00:32:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-08-15T00:32:00.0000000",
    "DocumentId": "2076071305",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5170",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "DSL Notes",
    "SortOrdinal": null,
    "ItemChar": "You don't need a server with mindspring, they will allow three logins at the same time with their DSL package.  Connect your modem to the uplink port on your hub, along with your computers.  Put your mindspring software and firewall software on each computer and login using the same account info and password on each one.  You will be assigned three different dynamic addresses.  If your network grows to four computers you'll have to set up a server, or buy a router.\n\n***\n\nIf you connect the modem to a hub all machines can access the modem and then the internet connection but only ONE at a time (no sharing of the internet connection.)\nWith a router ALL machines can access the internet at the same time through the router. The router supplies the internet connection. Now some routers also have an auto sensing switched hub built into them. \nBut you can connect the router to a switched hub is best if you buy one with only one port on it.\nAlso when you run more computers than there are ports you can uplink other hubs to it. The router also provides a hardware firewall for your computer.\nThe configuration is;\nADSL Modem /Router (/Hub if you need one) /Networked computers NICs. I use a Linksys Router BERSF41.\n\n***\n\nIn my case (I have 2 systems, a 3com hub, and a Cisco 675 dsl modem which provides NAT) I just plugged the Cisco into the uplink port of the hub (in this case using a crossover cable provided w/ the Cisco) hooked my systems to the hub and bingo, there you go.  So.. I assume from your question that your DSL modem is external, if so, does it provide natting or some kind of proxy service?  If so, you can probably do the same thing.\n\n***\n\nMy setup is very similar to yours:\n \nDSL modem connected to hub (with crossover cable)\nTwo Macs connected to hub (with regular ethernet cables)\nLaserWriter Pro connected to hub (with regular ethernet cable)\n \nAll devices are plugged into the normal hub ports - the uplink port is unused.  I have a PPPoE client (EnterNet) and firewall software (DoorStop) on both Macs.\n \nThis setup works fine for me.  Both Macs see the internet and the printer and each other.\n \nNote: the hub will broadcast your local network traffic (printing, file sharing) onto the internet.  And, if you do not have firewall, it might be smart to disable file sharing and web sharing on these Macs when the DSL connection is on.  A more secure solution is to replace the hub with a router (LinkSys, Xsense, etc.)\n \n-- \nJulian Vrieslander <mailto:julianv@mindspring.com>\n\n***\n\nhttp://www.tuketu.com/dsl/xdsl.htm\n\n***\n\nCAT5 Cross-over Cable",
    "ItemText": null,
    "CreateDate": "2000-08-15T00:32:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-08-15T00:32:00.0000000",
    "DocumentId": "2076071306",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5171",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Songhay 4; Hardware List",
    "SortOrdinal": null,
    "ItemChar": "Antec ATX Case (Black)\n\nAMD K6-3 450 \nFIC 1st Mainboard VA-503+\n\nMAXTOR 15.0 GB Diamond Max Plus EIDE Hard Drive\n    7200 RPM\n    2MB Buffer\n    9.0MS Access Time\n    66MB/sec data transfer rate\n\nVooDoo 3000 TV AGP\n    V33416\n    350Mhz RAMDAC (Core Clock: 166Mhz)\n    7 Million Triangles/sec\n    TV/S-Video jack\n    Refresh 60-160Hz\n    16MB SDRAM\n\nPanasonic Zip Drive with Zip Tools\n    260010400054\n    ATAPI\n    Internal\n\nEMU Audio Production Studio\n\nSB Live!",
    "ItemText": null,
    "CreateDate": "2000-08-15T16:54:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-08-15T16:54:00.0000000",
    "DocumentId": "2076071308",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5172",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MS SQL Server 7.x: Tables sysxlogins and sysservers",
    "SortOrdinal": null,
    "ItemChar": "The SQL 7 Tables sysxlogins and sysservers can be opened to remove users and/or servers that you do not want to appear in dialogs in the Enterprise Manager. By opening the SQL Server Properties > Server Settings dialog in the Enterprise Manager you can make sure that you can modify these tables by checking \"Allow modifications to be made directly to the system catalogs\".",
    "ItemText": null,
    "CreateDate": "2002-01-05T09:02:30.4230000",
    "EndDate": null,
    "ModificationDate": "2002-01-05T09:02:30.4230000",
    "DocumentId": "2076071309",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5173",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Java Diddler: An Example of String Formatting; MRJ SDK 2.1",
    "SortOrdinal": null,
    "ItemChar": "//The number we want to show.\ndouble dbl = 10000.0 / 3.0;\n\n//Get a Locale object from the java.util package.\njava.util.Locale locale = java.util.Locale.getDefault();\n\n//Format the number for a given Locale.\njava.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale.US);\njava.lang.String strUSnum = nf.format(dbl);\n\n//Format the number as Locale currency.\njava.text.NumberFormat cf = java.text.NumberFormat.getCurrencyInstance(locale.US);\njava.lang.String strUSD = cf.format(dbl);\n\n//Format the number with a custom format.\njava.text.DecimalFormat df = new java.text.DecimalFormat(\",##0.000000 foobars\");\njava.lang.String strCustomNum = df.format(dbl);\n\njava.lang.System.out.println(strUSnum);\njava.lang.System.out.println(strUSD);\njava.lang.System.out.println(strCustomNum);\n",
    "ItemText": null,
    "CreateDate": "2000-09-16T07:28:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-09-16T07:28:00.0000000",
    "DocumentId": "2076071310",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5174",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Java Diddler: An Example of String Comparison; MRJ SDK 2.1",
    "SortOrdinal": null,
    "ItemChar": "java.lang.String str = \"1234567\";\n\nboolean bln = false;\n\nbln = (\"123\".equals(str.substring(0,3)));\n\njava.lang.System.out.println(bln);\n",
    "ItemText": null,
    "CreateDate": "2000-09-16T07:28:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-09-16T07:28:00.0000000",
    "DocumentId": "2076071311",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5175",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Limitatons of the switch Structure",
    "SortOrdinal": null,
    "ItemChar": "You are limited to testing the data type char or all the integer types but long.\n\nEach case can only hold one value; however when a case does not contain a break statement code execution continues to the next case.\n",
    "ItemText": null,
    "CreateDate": "2000-12-19T14:03:37.7230000",
    "EndDate": null,
    "ModificationDate": "2000-12-19T14:03:37.7230000",
    "DocumentId": "2076071312",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5176",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "From VB 6.x to Java: Some Flippant Remarks",
    "SortOrdinal": null,
    "ItemChar": "I feel obliged to apologize before I do this: sorry. Associating VB with Java is pretty nasty. Okay:\n\nVB is all about encapsulating procedures; Java is all about encapsulating data.\n\nVB (as of 6.0) has modules; Java has classes. Java's equivalent of a standard module is to have a class containing the main() method. And, yes, VB has the \"class module.\"\n\nVB has module-level variables; Java has instance fields.\n\nVB has optional parameters; Java has overloading.",
    "ItemText": null,
    "CreateDate": "2000-09-16T07:28:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-09-16T07:28:00.0000000",
    "DocumentId": "2076071313",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5177",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant and Introductory Remarks",
    "SortOrdinal": null,
    "ItemChar": "Calibrate a sound card with an external mixer with a digitized sound generated at specific amplitude. Levels measured by any sound card software should match the levels of the external mixer. The mixer should go into the red when the software goes into the red. Usually things get red hot on the computer at about -6dB. Verify the frequency range of the monitors by generating a sound at specific frequencies.\n\nMy basic desktop audio engineering kit is a digital audio editor, a digital audio sequencer and a digital audio spectrum analyzer. My basic desktop sound-building kit is a digital audio effects engine, a MIDI sequencer, a MIDI keyboard, a microphone and the ability to extract digital audio from CDs.\n\nSince I am not a literate musician, I prefer digital audio sequencers to MIDI sequencers. Putting the most man-hours in the digital audio sequencer contributes greatest to my final product (before mastering)—a digital audio file.\n\nTempo, to the desktop musician, is just another way to synchronize rhythms across digital audio and/or MIDI applications.\n\nAudio tracks can be mixed with these basic utensils: volume, panning and equalization. Ideally, each track in the mix should occupy its own spectra of frequencies (this is why EQ is so important).\n\nMy compositions consist of several layers. Time is kept in the so-called metronomic layer. Background colors may appear as repeated phrases. Swing moves in systems of counterpoint. The most common transition is what filmmakers call “the cut.” I sometimes build long bridges. I need to work on break beats. I need to let bassists and guitarists plug into my system. I look forward to recording in complete silence with expensive microphones.\n",
    "ItemText": null,
    "CreateDate": "2000-09-23T08:07:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-09-23T08:07:00.0000000",
    "DocumentId": "2076071314",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5178",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "From SQL Server 7 to Oracle 7: Remarks",
    "SortOrdinal": null,
    "ItemChar": "Fundamentals\n\nMicrosoft SQL Server 7 is by default case insensitive as is Oracle 7, however Oracle 7.x explicitly stores all characters in upper-case.\n\n\nProcedural Languages\n\nMicrosoft SQL Server 7 uses t-SQL or Transaction SQL to create stored procedures in its DBMS. Oracle 7 uses PL/SQL or SQL Procedural Language. A cursory glance at  the PL/SQL documentation strongly suggests why Oracle would prefer to use Java in later versions of its DBMS.\n\n\nObjects\n\nIn Oracle 7 you can name (or alias) objects with double quotation marks (\"\"). This is similar to using brackets ([]) in SQL Server 7. When specifying an alias in Oracle 7, the AS keyword is not required.\n\nIn Oracle 7 the CREATE DATABASE LINK command is similar to sp_addlinkedserver in SQL Server 7.\n\n\nData Types\n\nIn Oracle 7 there are the RAW and LONG RAW data types, which appear to correspond to SQL Server 7’s BINARY, VARBINARY and IMAGE data types.\n\nOracle 7’s VARCHAR2 data type is a version-specific improvement over the Oracle 6.x VARCHAR data type. Oracle recommends using VARCHAR2 with version 7.\n\nIn Oracle 7, the LONG data type is similar to the TEXT data type in SQL Server 7. The limitations on the LONG type remind me of the limitations on MEMO fields in MS Access.\n\nThe SYSDATE function in Oracle 7 is like the GETDATE function in SQL Server 7.\n\nOracle 7 has two special data types for which SQL server 7 has no equivalent (ROWID and MLSLABEL). For example, the ROWID data type could be associated with SQL Server’s UNIQUEIDENTIFER data type but that would require a bit more words that those written here. What complicates such a discussion further is that ROWID is what Oracle calls a \"pseudo column.\" I am not sure if SQL Server 7 has pseudo columns.\n\nIn summary, Oracle compares its data types to those of ANSI SQL. This may help us to relate to SQL Server 7 data types:\n\nANSI SQL Data Type: CHARACTER(n) CHAR(n)\nOracle7 Data Type: CHAR(n)\n\nANSI SQL Data Type: CHARACTER VARYING(n) CHAR VARYING(n)\nOracle7 Data Type: VARCHAR(n)\n\nANSI SQL Data Type: NUMERIC(p,s) DECIMAL(p,s)\nOracle7 Data Type: NUMBER(p,s)\n\nANSI SQL Data Type: INTEGER INT SMALLINT\nOracle7 Data Type: NUMBER(38)\n\nANSI SQL Data Type: FLOAT(b) DOUBLE PRECISION REAL\nOracle7 Data Type: NUMBER \n\n\nData Type Conversion\n\nSQL Server 7 uses the CONVERT function to handle data type conversion; Oracle 7 uses several data type conversion functions:\n\nTO_CHAR\nTO_NUMBER\nHEXTORAW\nRAWTOHEX\nCHARTOROWID\nROWIDTOCHAR\n\nNote that Oracle 7’s CONVERT function is used to convert strings from one character set to another.\n\nOperators\n\nThe double pipe (||) operator is used in Oracle 7 to concatenate strings. However the CONCAT function is recommended by Oracle.\n\n",
    "ItemText": null,
    "CreateDate": "2000-11-04T17:02:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-11-04T17:02:00.0000000",
    "DocumentId": "2076071315",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5179",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about EQ",
    "SortOrdinal": null,
    "ItemChar": "First of all for expert remarks about equalization see http://www.prorec.com/ where a search for Lionel Dumond finds some articles back in 1998 that are informative. I can only write very basic things like:\n\nEQ is the most important digital effects tool the desktop audio engineer has.\n\nEach instrument in a perfect mix should occupy their own band in the frequency spectrum.\n\nNo sound has one frequency. It is a mixture of frequencies. Almost all sounds contain \"bass\" frequencies ( < 200Hz) because (I assume) they don't require that much energy to generate.\n\nMost of my poorly EQ'd mixes suffer from \"bass build-up\" that sounds dull or \"blurry.\" High frequencies (used properly) give me the feeling of brightness and focus.\n\nI can begin to identify sounds (like a good sound engineer) in terms of its frequency by looking at the five bands of my car stereo equalizer:\n\nDeep bass is around 60Hz; bass is around 250Hz; the \"middle\" (where I think most of the annoying noise can be) is around 1000Hz; \"treble\" sounds begin at 3.5KHz; and the brightest stuff is about 10KHz.",
    "ItemText": null,
    "CreateDate": "2000-09-23T08:28:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-09-23T08:28:00.0000000",
    "DocumentId": "2076071316",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5180",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "USING ALUMINUM COOKWARE",
    "SortOrdinal": null,
    "ItemChar": "by Lindsay Edwards \n \nAnodization is a process that makes aluminum cookware scratch-resistant and prevents the cookware from reacting with foods prepared in it. People who like to cook prefer anodized aluminum over stainless steel because it's harder, conducts heat better, and remains nonstick for life. \n\nThe safety of cooking in aluminum pots and pans has been under debate recently. Studies have shown that aluminum deposits exist in the brains of Alzheimer's patients. There is speculation that these deposits might have occurred in conjunction with aluminum cookware, but this theory has not been proven. It's possible that people are getting more aluminum from over-the-counter medications than they are from food prepared in aluminum cookware. \n",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4300000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4300000",
    "DocumentId": "2076071317",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5181",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "FOOD LABEL CONFUSION",
    "SortOrdinal": null,
    "ItemChar": "By Lindsay Edwards \n \nHave you ever wondered what the different statements on food labels mean, such as \"sell by,\" \"use by,\" \"expires on,\" and \"best if used by\"? What about those long codes on the tops of food cans? \n\nHere's the lowdown:\n\n* Sell by: Manufacturers use the \"sell by\" statement to tell how long a store should have the product on its shelf. Do not buy a product if the sell-by date has passed.\n\n* Use by: Manufacturers use the \"use by\" date to warn consumers of the last date the product should be consumed. \n\n* Expires on: Egg cartons are basically the only places you'll find this food label. Manufacturers use the \"expires on\" date to indicate the last date the store may sell eggs as fresh.\n\n* Best if used by: When you consume the product before the \"best if used by\" date, you're getting the best flavor and quality from the product.\n\n* Codes: Manufacturers use packing numbers as a tracking mechanism. The coding is also useful in the event a product is recalled. \n",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.4730000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.4730000",
    "DocumentId": "2076071318",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5182",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PL/SQL: Oracle 7; Date Arithmetic with SYSDATE",
    "SortOrdinal": null,
    "ItemChar": "SYSDATE stores dates in days by default. It follows that all arithmetic operations with SYSDATE as an operand must be units of days. For example, to subtract 30 minutes from the current time, convert 30 minutes into units of days:\n\n    30 [minutes]/1440 [minutes/day] = 0.02083\n\nIn SQL*Plus we have:\n\n    SELECT TO_CHAR(SYSDATE - 0.02083, 'HH:MI:SS') OUT\n    FROM DUAL;\n\nWhere OUT is just an arbitrary column name for readability.\n\nTo verify that SYSDATE is, by default, in units of days, run the following to get yesterday's date:\n\n    SELECT TO_CHAR(SYSDATE - 1, 'MM/DD/YY') OUT\n    FROM DUAL;",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:51:51.1130000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:51:51.1130000",
    "DocumentId": "2076071320",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5183",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "FIVE FOODS YOU SHOULD EAT EVERY DAY ",
    "SortOrdinal": null,
    "ItemChar": "The wider the variety of foods you eat, the more likely you are to get all the nutrients you need for good health. There are five foods you should eat every day because of their nutritional qualities and direct link to disease prevention. These foods are: \n\n1. Oranges: a good source of folic acid, fiber, beta-carotene, and vitamin C; enjoy oranges in a variety of ways---for instance, as a juice or in a fruit salad.\n\n2. Dark, leafy vegetables: loaded with anti-cancer compounds and nutrients, beta-carotene, vitamin C, and fiber.\n\n3. Bran cereal: prevents constipation, helps fight breast cancer by lowering estrogen supplies; can use bran cereal in muffins and casseroles. \n\n4. Yogurt: excellent source of calcium; boosts the immune system and helps prevent yeast infections.\n\n5. Soy: helps relieve hot flashes; fights osteoporosis in post-menopausal women.",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.4130000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.4130000",
    "DocumentId": "2076071321",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5184",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "THE WATER CRAZE",
    "SortOrdinal": null,
    "ItemChar": "Have you been down the drink aisle at your local grocery and seen all the different types of bottled waters that are available? Since 1985, bottled-water sales have nearly doubled, making water the fastest growing part of the beverage market. The hype on drinking bottled water originated because many people simply dislike the taste of tap water, and some people need to limit their intake of the minerals found in traditional tap water. \n\nThe list below will help you differentiate between all the possible bottled-water options:\n\n* Distilled water: water that has been evaporated and then condensed, leaving it mineral free \n\n* Purified or distilled water: water whose minerals have been removed either by deionization or by reverse osmosis \n\n* Spring water: water collected from an underground location (a natural spring) \n\n* Mineral water: water that contains no less than 250 parts per million of naturally occurring solids or minerals. The water can be labeled as either low- or high-mineral content.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.3900000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.3900000",
    "DocumentId": "2076071322",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5185",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "DIGESTIVE DISCOMFORT AND FRUIT",
    "SortOrdinal": null,
    "ItemChar": "Gas and bloating are normal occurrences as the body digests and absorbs food. Gas is produced in the small intestine when fat is ingested. Gas may also be produced in the colon when carbohydrates that aren't fully digested begin to ferment. Normally, most gas is absorbed as food travels through the digestive tract. \n\nFruits contain fructose, a form of carbohydrate that some people cannot fully digest. Fructose enters the colon, where it begins to ferment. As a result, gas is produced. Fruits that contain sorbitol, a natural sugar alcohol, produce more gas than fruits without it. Fruits that contain both fructose and sorbitol include apples, pears, \ncherries, prunes, and peaches.",
    "ItemText": null,
    "CreateDate": "2000-11-07T19:24:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-11-07T19:24:00.0000000",
    "DocumentId": "2076071323",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5186",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "EATING RAW GARLIC",
    "SortOrdinal": null,
    "ItemChar": "For years, people have considered garlic a natural healer. Garlic has been found to lower high cholesterol levels, and it can even have a positive effect on high blood pressure, cancer, and some infections. Some people eat raw garlic instead of taking a garlic supplement. Yet, there's some controversy as to whether eating raw garlic is healthy. \n\nThe majority of studies say that most people can tolerate eating one to two garlic cloves daily. However, garlic in higher doses (more than five cloves per day) can cause gastrointestinal pain. In some studies, garlic lowered blood proteins and caused ulcers in laboratory animals. \n\nIt has even been discovered that garlic, when applied to the skin, causes inflammation, redness, and itching. Can you imagine what it can do to your stomach?",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.5130000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.5130000",
    "DocumentId": "2076071324",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5187",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "THE EYE IS ON THE POTATO",
    "SortOrdinal": null,
    "ItemChar": "Potatoes are among the most popular vegetables in America. In fact, the U.S. Department of Agriculture estimates that the average American eats approximately 138 pounds of potatoes every year! \n\nMany people say that the skin of the potato contains most of the nutrients. This isn't entirely true. While the skin is a good source of fiber and vitamin C--containing about 20 percent of the recommended daily allowances for these nutrients--the majority of the potato's nutrients are found in the pulp. You can almost double your intake of most nutrients when you eat both the pulp and the skin of a potato. \n\nHere are a couple of interesting facts about potatoes: \n-  Thomas Jefferson introduced French fries when he served them at the White House.\n\n-  There are more than 5,000 varieties of potatoes.",
    "ItemText": null,
    "CreateDate": "2000-11-07T19:24:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-11-07T19:24:00.0000000",
    "DocumentId": "2076071325",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5188",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PASTA AND WEIGHT GAIN",
    "SortOrdinal": null,
    "ItemChar": "Pasta is high in carbohydrates, a nutrient that the body uses for energy. When you consume large amounts of carbohydrates, your body stores what it cannot readily use for energy as fat. You gain weight when you burn fewer calories than you consume. This statement is true, however, for any food---not just pasta.\n\nThe downside to pasta is that we often eat too much of the wrong kind. Many of us eat highly refined pastas made of white flour and semolina. These types of pastas don't provide the added benefits of fiber and other nutrients found in whole-grain pastas.\n\nIf you eat pasta made of refined flours, be sure to balance your pasta meals with fiber. This means eating plenty of whole grains,vegetables, and legumes.",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.5230000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.5230000",
    "DocumentId": "2076071326",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5189",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBA in Outlook",
    "SortOrdinal": null,
    "ItemChar": "The code written to automate Oulook is stored in a file called VbaProject.OTM. As of this writing, the locations of this file across Windows platforms is detailed at the following location:\n\n    http://msdn.microsoft.com\n        /library/officedev/odeopg\n            /deovrunderstandingvbainoutlook.htm",
    "ItemText": null,
    "CreateDate": "2000-11-07T20:02:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-11-07T20:02:00.0000000",
    "DocumentId": "2076071327",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5190",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBScript, ADO and ASP: Preventing Error 3001 by Avoiding the Split() Function",
    "SortOrdinal": null,
    "ItemChar": "Avoid using the Split() function to pass an array to ADO objects (such as the Command object). Use the Array() function instead. The Split() function and the Array() function both return arrays but they must not be of the same \"type\" (internally?) with respect to ADO.\n\nRecall this issue when faced with this error while using ADO: \"Error 3001: The application is using arguments that are of the wrong type, are out of acceptable range, or are in conflict with one another.\"",
    "ItemText": null,
    "CreateDate": "2000-11-07T20:02:00.0000000",
    "EndDate": null,
    "ModificationDate": "2000-11-07T20:02:00.0000000",
    "DocumentId": "2076071328",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5191",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Denormalization; SQL 7.x OLAP and Data Cubes",
    "SortOrdinal": null,
    "ItemChar": "The need to follow the rules of Normalization break down in the context of DBMS performance and analytical processing. For details on the subject of Denormailization please see \"BENEFITS OF DENORMALIZED RELATIONAL DATABASE TABLES\" at:\n\n    http://www.siue.edu/~dbock/cis564/denormal.htm\n\nFor a review of Normalization please see \"A Well Designed Relational Database\" at:\n\n    http://csc.noctrl.edu/f/kwt/460/normal.htm\n\nMicrosoft uses Denormalization when its OLAP technology in SQL 7.x uses \"pre-complied aggregations\" which are stored in a multidemenional cache called a \"cube.\" For more details please see \"OLAP Services: Optimizing Cube Performance Using Microsoft OLAP Services\" at:\n\n    http://msdn.microsoft.com/library/techart/olapunisys.htm\n\nand \"OLAP: Resistance Is Futile!\" at:\n\n    http://www.sqlmag.com/Articles/Index.cfm?ArticleID=5103",
    "ItemText": null,
    "CreateDate": "2000-12-24T14:48:23.7270000",
    "EndDate": null,
    "ModificationDate": "2000-12-24T14:48:23.7270000",
    "DocumentId": "2076071333",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5192",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript: Essential Form Validation Functions",
    "SortOrdinal": null,
    "ItemChar": "//Form Validation Functions:\nfunction jsIsEmailValid(vFormName,vElementName) {\n\n    var vValue = ''\n    var vValid  = false\n    var vElement = document.forms[vFormName].elements[vElementName]\n    var vPosAtSymbol = vElement.value.indexOf('@')\n    var vPosPeriod = vElement.value.lastIndexOf('.')\n    var vPosSpace  = vElement.value.indexOf(' ')\n    var vLength = vElement.value.length - 1\n\n    if (\n    // '@' in first position\n    (vPosAtSymbol < 1) ||\n\n    // '@' in last position\n    (vPosAtSymbol == vLength) ||                    \n\n    // Not at least one valid char' between '@' and '.'\n    (vElement.value.charAt(vPosAtSymbol + 1) == '.' ) ||\n    (vElement.value.charAt(vPosAtSymbol - 1) == '.' ) ||\n\n    // Must be at least two valid char's after last '.'\n    (vPosPeriod >= vLength - 1) ||\n\n    // No space char's permitted\n    (vPosSpace  != -1)\n        ) {                   \n        vValue = 'Please enter a valid e-mail address.'\n            + '\\n\\nSample: YourName@aol.com'\n        window.alert(vValue)\n        vElement.focus()\n        return vValid\n    }\n    vValid = true\n    return vValid\n}\n\nfunction jsIsNotComplete(vElement, vMsg) {\n    if (vElement.value == '' ) {\n        vValue = 'Please complete the following:\\n\\n    ' + vMsg\n        window.alert(vValue)\n        vElement.focus()\n        return true\n    }\n    else {\n        return false\n    }\n}\n\nfunction jsIsNotSelected(vElement, vMsg) {\n    if (vElement.selectedIndex == 0 ) {\n        vValue = 'Please complete the following:\\n\\n    ' + vMsg\n        window.alert(vValue)\n        vElement.focus()\n        return true\n    }\n    else {\n        return false\n    }\n}\n\nfunction jsIsPasswordValid(vElement1, vElement2) {\n    if (vElement1.value == '' || vElement2.value == '') return false\n    \n    if (vElement1.value == vElement2.value ) {\n        return true\n    }\n    else {\n        window.alert('Please enter a valid password.')\n        vElement1.focus()\n        return false\n    }\n}\n",
    "ItemText": null,
    "CreateDate": "2001-03-31T08:50:54.7100000",
    "EndDate": null,
    "ModificationDate": "2001-03-31T08:50:54.7100000",
    "DocumentId": "2076071334",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5193",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 2000: Code; Windows Scripting Host; WSH; an FTP Script That PUTs Data from ADO",
    "SortOrdinal": null,
    "ItemChar": "'I wrote this script (Go2FTP.scr) for an entertainment company.\n'This is a quick hack since they were not concerned about high security.\n\nDim objShell\nDim objFileSys\nDim objOutStream\nDim strCnn\nDim strWrite\nDim cnnADO\nDim rsADO\n    \nstrCnn = \"Provider=SQLOLEDB.1;\" _\n    & \"Password=unsecured1;\" _\n    & \"Persist Security Info=False;\" _\n    & \"User ID=rasx;\" _\n    & \"Initial Catalog=Schedule;\" _\n    & \"Data Source=DB2HACK;\"\n\nSet cnnADO = WScript.CreateObject(\"ADODB.Connection\")\ncnnADO.ConnectionString = strCnn\ncnnADO.Open\nSet rsADO = cnnADO.Execute(\"EXECUTE ListGo2Events\", , adCmdText)\n\nSet objFileSys = WScript.CreateObject(\"Scripting.FileSystemObject\")\nSet objOutStream = objFileSys.CreateTextFile(\"C:\\Go2FTP.txt\")\n\nDo While Not rsADO.EOF\n    strWrite = rsADO.Fields(\"EventID\") _\n        & \"|\" & rsADO.Fields(\"ArtistSummary\") _\n        & \"|\" & rsADO.Fields(\"ArtistExtended\") _\n        & \"|\" & rsADO.Fields(\"VenueID\") _\n        & \"|\" & rsADO.Fields(\"DoorDate\") _\n        & \"|\" & rsADO.Fields(\"DoorTime\") _\n        & \"|\" & rsADO.Fields(\"EventDate\") _\n        & \"|\" & rsADO.Fields(\"EventTime\") _\n        & \"|\" & rsADO.Fields(\"GenreID\") _\n        & \"|\" & rsADO.Fields(\"genre_name\") _\n        & \"|\" & rsADO.Fields(\"AgeRestriction\") _\n        & \"|\" & rsADO.Fields(\"SoldOutIndicator\") _\n        & \"|\" & rsADO.Fields(\"ChangedToDate\") _\n        & \"|\" & rsADO.Fields(\"ChangedToTime\") _\n        & \"|\" & rsADO.Fields(\"Canceled\")\n    Call objOutStream.WriteLine(strWrite)\n    rsADO.MoveNext\nLoop\n\nrsADO.Close\ncnnADO.Close\n\nSet rsADO = Nothing\nSet cnnADO = Nothing\n\nSet objShell = WScript.CreateObject(\"WScript.Shell\")\nCall objShell.Run(\"ftp -n -s:Go2FTP.scr.txt\")\nSet objShell = Nothing\n\n\n'Note that Go2FTP.scr.txt contains the following:\n'    open 127.0.0.1\n'    user ftploser $pass$word\n'    ascii\n'    put C:\\Go2FTP.txt\n'    close\n'    open 127.0.0.2\n'    user ftploser $pass$word\n'    ascii\n'    put C:\\Go2FTP.txt\n'    bye",
    "ItemText": null,
    "CreateDate": "2001-02-06T16:47:45.6200000",
    "EndDate": null,
    "ModificationDate": "2001-02-06T16:47:45.6200000",
    "DocumentId": "2076071335",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5194",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL Code: Searching for a Finite Set of Unknowns with a Single SELECT Statement; the ISNULL() Function",
    "SortOrdinal": null,
    "ItemChar": "/*\nUse this technique when enabling full-text search functionality is not possible. If full-text search functionality is possible consider a design featuring the CONTAINS Predicate.\n*/\n\nCREATE PROCEDURE ListSSKB\n    (\n        @subjectID varchar(32)  = NULL\n    ,   @title     varchar(255) = NULL\n    ,   @kbID      varchar(32)  = NULL\n    )\nAS\n\nSET NOCOUNT ON\n\nSELECT\n    subject AS 'Subject'\n,   title   AS 'Title'\nFROM\n    tblKB\n,   tlkpKBSubjects\nWHERE\n    tblKB.subjectID = tlkpKBSubjects.subjectID\nAND\n    ISNULL(CONVERT(varchar(32),tblKB.subjectID),'') LIKE ISNULL(@subjectID,'%')\nAND\n    ISNULL(CONVERT(varchar(32),tblKB.kbID),'') LIKE ISNULL(@kbID,'%')\nAND\n    ISNULL(title,'') LIKE ISNULL(@title,'%')\nORDER BY\n    subject\n,   title\n",
    "ItemText": null,
    "CreateDate": "2001-03-31T09:08:21.8630000",
    "EndDate": null,
    "ModificationDate": "2001-03-31T09:08:21.8630000",
    "DocumentId": "2076071336",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5195",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CARROTS AND YOUR VISION",
    "SortOrdinal": null,
    "ItemChar": "The myth that carrots can improve your eyesight is simply not true. However, carrots do contain beta-carotene, a substance that your body converts to vitamin A. Vitamin A is the nutrient crucial for maintaining eyesight. \n\nA vitamin A deficiency can cause night blindness and sometimes even complete blindness. In fact, vitamin A deficiency is the leading cause of blindness in Third World countries. But, if you're not already lacking vitamin A in your diet, your vision will not improve no matter how many carrots you eat. \n\nIf you eat a lot of carrots, be wary of your skin turning orange. Beta-carotene is a pigment---an orange pigment. It goes without saying: You are what you eat.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.3800000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.3800000",
    "DocumentId": "2076071337",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5196",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SKINNY AS A STICK OF LICORICE",
    "SortOrdinal": null,
    "ItemChar": "How many of the jellybean eaters you know leave the black ones? Just watching someone eat those black jellybeans or licorice makes me cringe. Yet, a recent study has found that licorice may help reduce your body fat! \n\nThe study concluded that consuming 3.5 grams of licorice per day reduced body fat by up to four percent. What is it about licorice that reduces body fat? The answer lies within the licorice itself. It is believed that the strong taste of the licorice suppresses the appetite. Another explanation is that eating licorice makes you feel \nfull, resulting in your eating fewer calories. \n\nMore research needs to be conducted, but don't forget that a balanced diet with whole grains, fruits, and vegetables is still the best way to go.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4400000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4400000",
    "DocumentId": "2076071338",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5197",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "A REMEDY FOR URINARY TRACT INFECTIONS",
    "SortOrdinal": null,
    "ItemChar": "Cranberry juice, like orange and grape juice, has been identified for its medicinal effect on urinary tract infections in women. In a six-month study, 150 women with existing urinary tract infections were asked to consume either cranberry juice or a milk drink containing the bacterium lactobacillus (considered a \"healthy\" bacterium that promotes intestinal tract functioning). The study found that cranberry juice was most effective in preventing the recurrence of urinary tract infection in the women. That's good news for all you women who choke down yogurt as a treatment. \n\nIt is recommended that women drink approximately 50 to 100 milliliters of cranberry juice every day to hamper a urinary tract infection.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4400000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4400000",
    "DocumentId": "2076071339",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5198",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CRUCIFEROUS VEGETABLES",
    "SortOrdinal": null,
    "ItemChar": "Did you know that cruciferous vegetables such as leafy-green vegetables, cauliflower, brussels sprouts, broccoli, and cabbage are crucial to reducing the chance of stroke by one third? Furthermore, citric fruits and juices have been found to have preventive measures against ischemic strokes. Ischemic strokes occur when a blood clot blocks the artery leading to the brain. They account for 80 percent of all strokes.\n\nA 14-year study involving 75,596 women and 38,683 men found that five to six servings of cruciferous vegetables per day provided the maximum benefit against strokes. Consuming more than six servings per day had no greater impact on reducing the risk of strokes.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4500000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4500000",
    "DocumentId": "2076071340",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5199",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "A BALANCED DIET",
    "SortOrdinal": null,
    "ItemChar": "Just as your car performs better with premium gasoline, your body performs better when it's properly nourished. Your internal systems, such as your heart, lungs, and digestive tract, need the right fuel. This fuel includes a balance of fiber, carbohydrates, and protein.\n\nCarbohydrates are your immediate source of energy. Carbohydrates that aren't immediately used by the body are stored in the muscles and liver as glycogen. Once the glycogen is used, the excess carbohydrates are stored in the body as fat. Carbohydrates should consume approximately 60 percent of your diet. Complex carbohydrates include foods such as whole grains, legumes, and potatoes. \n\nProtein contains nutrients that are necessary for muscle formation and repair to damage from illness or surgery. Your protein needs depend on your activity level and body size.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.3900000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.3900000",
    "DocumentId": "2076071341",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5200",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "TEA TIME",
    "SortOrdinal": null,
    "ItemChar": "Everyone has heard of the notorious \"tea time\" in England. It seems a simple life to invite your friends and family over for some tea and catch up on the times. But, the English may know exactly what they're doing when it comes time for tea. \n\nA recent study has found that one cup of tea per day may cut the chance of a heart attack by 44 percent. A group of 340 men and women who had suffered a heart attack were compared to those of a similar profile who had not suffered a heart attack. The study concluded that the flavonoids found in tea were the reason for the good news. \nFlavonoids are nutrients that act as antioxidants to ward off the deterioration of cells and keep dangerous free radicals away from the walls of blood vessels. Flavonoids also keep cells from clotting.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4500000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4500000",
    "DocumentId": "2076071342",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5201",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "THE BEST SALAD--PART 3 OF 4",
    "SortOrdinal": null,
    "ItemChar": "Now that we've chosen the greenery, or foundation, for our salad, let's talk about what we're going to put on it and how nutritious each ingredient is:\n\n* Broccoli: one spear of fresh broccoli contains four grams of protein, 72 milligrams of calcium, 100 milligrams of phosphorus, 491 milligrams of potassium, and 141 milligrams of vitamin C. \n\n* Carrots: one cup of grated carrots has 45 calories and 11 grams of carbohydrates. But one carrot can also provide four times the RDA of vitamin A for an adult male.\n\n* Cucumbers: these mostly provide taste and crunch; they're low in calories.\n\n* Tomatoes: one average tomato contains 25 calories, 1,390 IU of vitamin A, and 22 milligrams of vitamin C.\n\n* Onions: a cup of sliced, white onions has 40 calories and 33 milligrams of calcium.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4000000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4000000",
    "DocumentId": "2076071343",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5202",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "THE BEST SALAD--PART 2 OF 4",
    "SortOrdinal": null,
    "ItemChar": "Every salad must start with the green stuff. You have a variety of greenery from which to choose, such as iceberg lettuce, romaine lettuce, and even spinach. Let's discuss the nutritional content of each:\n\n* Iceberg lettuce: one cup contains five calories, one gram of protein, two milligrams of vitamin C, and 180 IU of vitamin A.\n\n* Romaine lettuce: one cup has ten calories, one gram of protein, and a whopping ten milligrams of vitamin C. It also contains more vitamin A and fiber than iceberg lettuce.\n\n* Spinach: one cup has ten calories, two grams of protein, and calcium, potassium, and vitamin C. Don't forget the color and crunch! Nutritionally speaking, spinach is your best choice.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4600000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4600000",
    "DocumentId": "2076071344",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5203",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "THE BEST SALAD--PART 1 OF 4",
    "SortOrdinal": null,
    "ItemChar": "Most Americans consume too many calories and fat. If you're looking for a tasty and nutritious way to fill up at lunchtime without filling up on a lot of fat and calories, a salad is your answer.\n\nWhen you take advantage of the nutritional value found in a salad, you're making a generous contribution to your overall health. Salads provide texture, variety, and flavor. But a salad doesn't have to be the only part of the meal. When you add a glass of milk and a whole grain roll, you make your meal even more nutritious.\n\nIn the next tip, we'll talk about salad greenery.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4800000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4800000",
    "DocumentId": "2076071345",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5204",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "THE BEST SALAD--PART 4 OF 4",
    "SortOrdinal": null,
    "ItemChar": "Your efforts in making a healthy salad will be in vain if you choose to top your salad with a dressing that's high in fat and calories. So, make it a habit to pick the low-fat or fat-free dressings at the market. \n\nIf calories aren't a major concern, you may want to use a dressing containing olive oil. Olive oil is 100 percent fat, but very little of it is saturated fat---the kind that causes heart disease. Use olive oil in moderation. One teaspoon of olive oil has 125 calories, more than what an entire salad contains. That's why many use olive oil in conjunction with vinegar. Vinegar has only a trace of calories but adds a bit of zesty flavor.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4600000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4600000",
    "DocumentId": "2076071346",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5205",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "DIET AND PROSTATE CANCER",
    "SortOrdinal": null,
    "ItemChar": "The exact cause of prostate cancer is still unknown. However, research is being conducted on the correlation between diet and prostate cancer. \n\nMen who consume a diet high in fat have been reported to have higher levels of testosterone, which could increase their risk of developing prostate cancer. It is still unclear, however, whether this relationship is derived from meat fat or dairy fat. \n\nWhat is known is that there are foods you can eat to inhibit prostate cancer. One such food is soy. Preliminary research shows that men who drink soymilk more than once per day have a lower risk of prostate cancer. Tomatoes also offer some protection against prostate cancer, as do nutritional supplements containing zinc, beta-carotene, vitamin C, and calcium.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4900000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4900000",
    "DocumentId": "2076071347",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5206",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WHY YOU SHOULD EAT FRUITS AND VEGETABLES",
    "SortOrdinal": null,
    "ItemChar": "Several studies have proven that a diet rich in fruits and vegetables helps prevent cancer. Specifically, eating more fruits and vegetables helps reduce the risk of esophageal, stomach, colon, rectum, and lung cancers. Of the more than one million new cases of cancer to be diagnosed this year, as many as 35 percent of these cases will be diet related. The recommended daily allowance for fruits and vegetables is \nfive or more servings per day. Yet, only one-fourth of the American population eats this recommended amount.\n\nWant some tips to help get your intake of fruits and veggies on the upswing? Try some of this simple advice:\n\n* Eat a fruit snack daily. \n* Add vegetables to your meat entree. \n* Drink fruit juice at meal times. \n* Top hot or cold cereals with fresh fruit. \n* Add extra vegetables to your salad.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4700000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4700000",
    "DocumentId": "2076071348",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5207",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROPER HYDRATION",
    "SortOrdinal": null,
    "ItemChar": "Do you know how to tell when your body needs fluids? Most people would say that their body needs water when they feel thirsty. They drink a glass of water and go on their way. The fact is, however, that by the time your body feels thirsty, it's already excessively low on fluid.\n\nKeeping your body properly hydrated is important for maintaining good health. There are several activities that can stimulate thirst, one of which is eating. Most foods consist of water, and the salts in food help your body absorb water.",
    "ItemText": null,
    "CreateDate": "2004-05-21T11:54:43.4800000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T11:54:43.4800000",
    "DocumentId": "2076071349",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5208",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "HOW TO USE SOY",
    "SortOrdinal": null,
    "ItemChar": "Studies suggest that eating soy foods regularly can prevent serious \ndiseases like breast, colon, and prostate cancer, heart disease, and \nosteoporosis. Soy has long been known as a healthy food. It's an \nexcellent source of fiber and is low in saturated fat. Soy can be a \nhealthy addition to any diet or a substitute for meat. \n\nBy adding one serving of soy foods to your diet, you start reaping all \nthe benefits soy has to offer. Following are some easy ways to get soy \ninto your diet: \n\n* Soy milk: use in cereal, shakes, baked goods, or pancakes. \n\n* Tofu: use as a sour cream substitute in salad dressings or dips. \nYou can also use tofu in soups and salads. \n\n* Soy flour: use in baking, but if you need something to rise, mix \nthe soy flour with wheat flour.",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.5330000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.5330000",
    "DocumentId": "2076071351",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5209",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT PROBLEM: Cannot Find Modems; Plug and Play (PnP)",
    "SortOrdinal": null,
    "ItemChar": "The following message may indicate that Plug and Play is not installed or disabled in Windows NT:\n\n    Windows NT did not find any modems attached to your computer.\n\nSince many \"techies\" consider the Windows 9.x series a \"bunch of toys\" and its Plug and Play features \"invading\" the \"robust\" NT platform, there is the temptation to not install or disable the Plug and Play Service. Another reason why PnP is disabled is to prevent NT from NT from finding \"new\" hardware at each boot of the OS.\nAll of these reasons for avoiding PnP are considerable if and only if there are no modems installed on the hardware running NT. For more information please see \"Remote Access Service Fails If Plug and Play Service Is Disabled\" (MSKB Q170029).\n",
    "ItemText": null,
    "CreateDate": "2000-12-28T10:26:50.4600000",
    "EndDate": null,
    "ModificationDate": "2000-12-28T10:26:50.4600000",
    "DocumentId": "2076071352",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5210",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 7.x and VB 6.x Code: Manipulating Data Transformation Services (DTS) Programmatically",
    "SortOrdinal": null,
    "ItemChar": "'This is a \"sketch\" of handling a DTS package programmatically.\n'For more info' check out the following MSKB articles:\n'\n'\"Q221193 - INF: How To Install DTS Event Handlers In Visual Basic\"\n'\n'\"Q240221 - INF: How To Handle Errors in DTS Package and Step Objects\"\n'\n'\"Q252987 - INF: Execute a SQL Server DTS Package from Active Server Pages\"\n'\n'Any calls to routines beginning with \"bas\" have nothing to do with DTS\n'and should be disregarded in this context.\n'\n'DTS variables.\nPrivate WithEvents p_objDTSPack As DTS.Package\nPrivate p_objTaskSQL As DTS.ExecuteSQLTask\nPrivate p_objTaskPump As DTS.DataPumpTask\nPrivate p_blnCancel As Boolean\n\nPrivate Sub p_objDTSPack_OnError(ByVal EventSource As String, _\n    ByVal ErrorCode As Long, _\n    ByVal Source As String, _\n    ByVal Description As String, _\n    ByVal HelpFile As String, _\n    ByVal HelpContext As Long, _\n    ByVal IDofInterfaceWithError As String, _\n    ByRef p_blnCancel As Boolean)\n    \n    Call basAppInfoMsg(EventSource & \": \" & Description, \"DTS Error.\")\n\nEnd Sub\n\nPrivate Sub p_objDTSPack_OnFinish(ByVal EventSource As String)\n    Call basAppInfoMsg(\"DTS Package finished.\" _\n        & vbNewLine & \"(\" & EventSource & \")\")\nEnd Sub\n\nPrivate Sub p_objDTSPack_OnProgress(ByVal EventSource As String, _\n    ByVal ProgressDescription As String, _\n    ByVal PercentComplete As Long, _\n    ByVal ProgressCountLow As Long, _\n    ByVal ProgressCountHigh As Long)\n    ' The DTS Package will trigger this event at certain intervals\n    ' to report the progress of the package. This can be controlled\n    ' by setting the DTS.Package.ProgressRowCount property.\n    \n    Call basAppInfoMsg(\"DTS Package running&#8230;\" _\n        & vbNewLine & \"(\" & EventSource & \": \" _\n        & ProgressDescription & \")\")\n\nEnd Sub\n\nPrivate Sub p_objDTSPack_OnQueryCancel(ByVal EventSource As String, _\n    ByRef p_blnCancel As Boolean)\n    ' The DTS package will trigger this event at certain intervals to check\n    ' whether the execution of the package should be terminated. Set\n    ' p_blnCancel to true to cancel the execution of the package.\n    If p_blnCancel Then _\n    Call basAppInfoMsg(\"DTS Package query cancelled.\" _\n        & vbNewLine & \"(\" & EventSource & \")\")\nEnd Sub\n\nPrivate Sub p_objDTSPack_OnStart(ByVal EventSource As String)\n    Call basAppInfoMsg(\"DTS Package starting&#8230;\" _\n        & vbNewLine & \"(\" & EventSource & \")\")\nEnd Sub\n\nPublic Function basHits() As Boolean\n\n    'Import hits log file.\n    \n    Call Me.basAppInfoMsg(\"Running&#8230;\", \"Bulk inserting hit log file...\")\n    \n    Set p_objDTSPack = VBA.CreateObject(\"DTS.Package\")\n    \n    With p_objDTSPack\n    \n        'The DTS package \"ImportHitLog\" was created in SQL server by hand.\n        'Load package using NT security (dbDTSFlag_UseTrustedConnection = 256).\n         Call .LoadFromSQLServer(ServerName:=dbSERVER, PackageName:=\"ImportHitLog\", Flags:=dbDTSFlag_UseTrustedConnection)\n        \n        'Both of these Steps must run in the same thread for two reasons:\n        'The Provider for the Bulk Insert Task does not support worker threads;\n        'and the SQL Task must precede the Bulk Insert Task.\n        .Steps(\"DTSStep_DTSExecuteSQLTask_1\").ExecuteInMainThread = True\n        .Steps(\"DTSStep_DTSBulkInsertTask_1\").ExecuteInMainThread = True\n        \n        'Using the Execute method of the Package object\n        'allows the Events (if any) to fire.\n        .Execute\n    \n    End With\nEnd Function\n",
    "ItemText": null,
    "CreateDate": "2001-04-07T18:54:20.6000000",
    "EndDate": null,
    "ModificationDate": "2001-04-07T18:54:20.6000000",
    "DocumentId": "2076071353",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5211",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript: jsWindow(); Function That Opens a New Browser Window",
    "SortOrdinal": null,
    "ItemChar": "function jsWindow(vName,vValue,vFeatures,vIsHTML) {\n    \n    if(vFeatures == '') {\n        vFeatures = \"\"\n            + \"toolbar=1\"\n            + \",location=0\"\n            + \",scrollbars=1\"\n            + \",resizable=1\"\n            + \",directories=0\"\n            + \",status=0\"\n            + \",width=320\"\n            + \",height=240\"\n    }\n    \n    if(vIsHTML) {\n        //Format HTML, adding the close method of the window object.\n        vValue = \"<HTML>\\n\"\n            + \"<CENTER>\\n<BR><BR>\\n\"\n            + \"<HEAD><TITLE>Songhay System</TITLE></HEAD>\\n\"\n            + vValue\n        vValue += \"\\n<FORM><INPUT TYPE=button VALUE=\\\"Close\\\"\"\n               +\"OnClick=\\\"window.close()\\\"></FORM>\"\n        vValue += \"\\n</CENTER>\\n</HTML>\"\n\n        //Open window.\n        vWindow = window.open('', vName, vFeatures)\n        with(vWindow.document) {\n            write(vValue)\n            close()\n        }\n    }\n    else {\n        //Open window.\n        vWindow = window.open(vValue, vName, vFeatures)\n    }\n}",
    "ItemText": null,
    "CreateDate": "2000-12-30T19:25:33.9400000",
    "EndDate": null,
    "ModificationDate": "2000-12-30T19:25:33.9400000",
    "DocumentId": "2076071355",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5212",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft JScript: Generic Functions for RDS Data Binding; Data Source Objects; DSO",
    "SortOrdinal": null,
    "ItemChar": "The function listed below, jsBindData(), depends on HTML similar to the following:\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<HTML>\n<HEAD>\n    <LINK REL=stylesheet TYPE=\"text/css\" HREF=\"./root.css\">\n    <META NAME=Generator CONTENT=\"Bryan Wilhite\">\n    <META NAME=Reply-To CONTENT=\"rasx@kintespace.com\">\n    <META NAME=Keywords CONTENT=\"Songhay System, email, kinte space\">\n    <META NAME=Description CONTENT=\"Email List\">\n    <SCRIPT LANGUAGE=\"JavaScript\" TYPE=\"text/javascript\" SRC=\"./root.js\"></SCRIPT>\n    <SCRIPT LANGUAGE=\"JavaScript\" TYPE=\"text/javascript\" SRC=\"./email.js\"></SCRIPT>\n    <TITLE>Songhay System: Email List</TITLE>\n</HEAD>\n<BODY BACKGROUND=\"http://Songhay3/kRoot/bitmaps/backgrnd.gif\" BGCOLOR=Black TEXT=White LINK=Lime VLINK=Silver ALINK=Yellow onLoad=\"jsFormat()\">\n<!-- RDS.DataControl Objects: -->\n<OBJECT CLASSID=\"clsid:BD96C556-65A3-11D0-983A-00C04FC29E33\" ID=dsoEmail HEIGHT=0 WIDTH=0>\n    <PARAM NAME=Connect VALUE=\"Provider=SQLOLEDB.1;Persist Security Info=False;User ID=sa;Initial Catalog=kinteDB;Data Source=SONGHAY3\">\n    <PARAM NAME=Server VALUE=\"http://Songhay3\">\n    <PARAM NAME=SQL VALUE=\"EXECUTE ListDSOEmail\">\n</OBJECT>\n<OBJECT CLASSID=\"clsid:BD96C556-65A3-11D0-983A-00C04FC29E33\" ID=dsoEmailTypes HEIGHT=0 WIDTH=0>\n    <PARAM NAME=Connect VALUE=\"Provider=SQLOLEDB.1;Persist Security Info=False;User ID=sa;Initial Catalog=kinteDB;Data Source=SONGHAY3\">\n    <PARAM NAME=Server VALUE=\"http://Songhay3\">\n    <PARAM NAME=SQL VALUE=\"EXECUTE ListDSOEmail 1\">\n</OBJECT>\n<OBJECT CLASSID=\"clsid:BD96C556-65A3-11D0-983A-00C04FC29E33\" ID=dsoEmailFilter HEIGHT=0 WIDTH=0>\n    <PARAM NAME=Connect VALUE=\"Provider=SQLOLEDB.1;Persist Security Info=False;User ID=sa;Initial Catalog=kinteDB;Data Source=SONGHAY3\">\n    <PARAM NAME=Server VALUE=\"http://Songhay3\">\n    <PARAM NAME=SQL VALUE=\"EXECUTE ListDSOEmail 2\">\n</OBJECT>\n<TABLE WIDTH=512 BORDER=0 CELLSPACING=0 CELLPADDING=4 ALIGN=center>\n    <TR>\n        <TH ALIGN=left NOWRAP>\n            email type:\n        </TH>\n        <TD COLSPAN=2>\n            <SELECT CLASS=frmInput ID=lstEmailType NAME=\"#dsoEmail_emailTypeID\" SIZE=1>\n            </SELECT>\n        </TD>\n    </TR>\n    <TR>\n        <TH ALIGN=left NOWRAP>\n            email address:\n        </TH>\n        <TD COLSPAN=2>\n            <INPUT CLASS=frmInput ID=txtEmailAddress NAME=\"#dsoEmail_emailAddress\" TYPE=text MAXLENGTH=255 SIZE=32 onBlur=\"jsIsEmailValid(this)\">\n        </TD>\n    </TR>\n    <TR>\n        <TH ALIGN=left>\n            url:\n        </TH>\n        <TD COLSPAN=2>\n            <INPUT CLASS=frmInput ID=txtURL NAME=\"#dsoEmail_url\" TYPE=text MAXLENGTH=512 SIZE=48>\n        </TD>\n    </TR>\n    <TR>\n        <TH ALIGN=left>\n            first:\n        </TH>\n        <TD>\n            <INPUT CLASS=frmInput ID=txtFirst NAME=\"#dsoEmail_first\" TYPE=text MAXLENGTH=32 SIZE=32>\n        </TD>\n        <TD ALIGN=right ROWSPAN=2 NOWRAP VALIGN=middle>\n<STRONG>tagged?:</STRONG>\n            <INPUT ID=chkTagged NAME=\"#dsoEmail_tagged\" TYPE=checkbox>\n<BR>\n<STRONG>send?:</STRONG>\n            <INPUT ID=chkSend NAME=\"#dsoEmail_send\" TYPE=checkbox>\n        </TD>\n    </TR>\n    <TR>\n        <TH ALIGN=left>\n            last:\n        </TH>\n        <TD>\n            <INPUT CLASS=frmInput ID=txtLast NAME=\"#dsoEmail_last\" TYPE=text MAXLENGTH=32 SIZE=32>\n        </TD>\n    </TR>\n    <TR>\n        <TD COLSPAN=3>\n<STRONG>note:</STRONG>\n<BR>\n            <TEXTAREA CLASS=frmInput ID=txtNote NAME=\"#dsoEmail_note\" ROWS=7 COLS=54></TEXTAREA>\n        </TD>\n    </TR>\n    <TR>\n        <!-- Record filtering: -->\n        <TD COLSPAN=3>\n        <TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=\"100%\">\n            <TR>\n                <TD VALIGN=middle>\n                    <SELECT CLASS=frmCtrl ID=lstFilter NAME=lstFilter SIZE=1 onChange=\"jsFilter('onchange',dsoEmail)\">\n                        <OPTION VALUE=\"#default\" SELECTED>filtering commands</OPTION>\n                    </SELECT>                     \n                    <INPUT CLASS=frmCtrl ID=txtFilter NAME=txtFilter TYPE=text MAXLENGTH=32 SIZE=16> \n                    <INPUT CLASS=frmCtrl ID=cmdFilter NAME=cmdFilter TYPE=button VALUE=\"filter on\" TITLE=\"Filter Records\" onClick=\"jsFilter('onclick',dsoEmail)\">\n                </TD>\n                <TD ALIGN=right>\n                    <!-- Record navigation: -->\n                    <INPUT CLASS=frmCtrl ID=cmdNavFirst NAME=cmdNavFirst TYPE=button VALUE=\"<<\" TITLE=\"Move to the First Record\" onClick=\"jsDSONav(this.name,dsoEmail)\">\n                    <INPUT CLASS=frmCtrl ID=cmdNavPrev NAME=cmdNavPrev TYPE=button VALUE=\"<  \" TITLE=\"Move to the Previous Record\" onClick=\"jsDSONav(this.name,dsoEmail)\">\n                    <INPUT CLASS=frmCtrl ID=cmdNavNext NAME=cmdNavNext TYPE=BUTTON VALUE=\" > \" TITLE=\"Move to the Next Record\" onClick=\"jsDSONav(this.name,dsoEmail)\">\n                    <INPUT CLASS=frmCtrl ID=cmdNavLast NAME=cmdNavLast TYPE=BUTTON VALUE=\">>\" TITLE=\"Move to the Last Record\" onClick=\"jsDSONav(this.name,dsoEmail)\">\n                </TD>\n            </TR>\n        </TABLE>\n        </TD>\n    </TR>\n    <TR>\n        <TD COLSPAN=3>\n            <!-- Record commands: -->\n             \n<BR>\n            <INPUT CLASS=frmCtrl ID=cmdAdd NAME=cmdAdd TYPE=button VALUE=\"add record\" TITLE=\"Add a New Record\" onClick=\"jsDSOAdd(dsoEmail)\">  \n            <INPUT CLASS=cmdDelete ID=cmdDelete NAME=cmdDelete TYPE=button VALUE=\"delete record\" TITLE=\"Delete the Current Record\" onClick=\"jsDSODelete(dsoEmail)\">  \n            <INPUT CLASS=frmCtrl ID=cmdSave NAME=cmdSave TYPE=button VALUE=\"save changes\" TITLE=\"Save Changes to Records\" onClick=\"jsDSOSave(dsoEmail)\">\n            <INPUT ID=chkRefresh NAME=chkRefresh TYPE=checkbox TITLE=\"Check to Save Changes to Records on Server?\"><STRONG>refresh?</STRONG>\n        </TD>\n    </TR>\n    <TR>\n        <TD COLSPAN=3>\n            <!-- Status reports: -->\n        <TABLE BORDER=1 CELLPADDING=0 CELLSPACING=0 WIDTH=\"100%\">\n            <TR>\n                <TD CLASS=frmMsg ID=tdMsg>\n                </TD>\n            </TR>\n        </TABLE>\n        </TD>\n    </TR>\n</TABLE>\n</BODY>\n</HTML>\n\nNow the JScript code:\n\n//ADO variables:\nvar vBookMark = null\n\n//---- EditModeEnum Values ----\nvar adEditNone = 0x0000\nvar adEditInProgress = 0x0001\nvar adEditAdd = 0x0002\nvar adEditDelete = 0x0004\n\n//---- FilterGroupEnum Values ----\nvar adFilterNone = 0\nvar adFilterPendingRecords = 1\nvar adFilterAffectedRecords = 2\nvar adFilterFetchedRecords = 3\nvar adFilterPredicate = 4\nvar adFilterConflictingRecords = 5\n\n//RDS variables:\n//----  RDS.ADCReadyStateEnum Values ----\nvar adcReadyStateLoaded = 2\nvar adcReadyStateInteractive = 3\nvar adcReadyStateComplete = 4\n\nfunction jsBindData() {\n    //This function tries very hard to be generic in the Microsoft sense of the word.\n    //It depends on element ID and NAME properties to be different,\n    //where NAME is of the form <data source>_<data field>.\n\n    var vCollection = document.all.tags(\"INPUT\")\n    if (vCollection != null) {\n        for (var i = 0; i < vCollection.length; i++)  {\n            with(vCollection[i]) {\n                var vStr = name\n                if (vStr.indexOf(\"_\") != -1) {\n\n                    var vArray = vStr.split(\"_\")\n                    \n                    if((type == \"text\") && (readOnly != true)) style.background = \"#C0C0C0 none no-repeat scroll 0% 0%\"\n                    if((type != \"button\") \n                        && (type != \"file\")\n                        && (type != \"image\")\n                        && (type != \"reset\")\n                        && (type != \"submit\")) {\n                        dataSrc = vArray[0]\n                        dataFld = vArray[1]\n                    }\n                }\n            }\n        }\n    }\n\n    vCollection = document.all.tags(\"SELECT\")\n    if (vCollection != null) {\n        for (i = 0; i < vCollection.length; i++)  {\n            with(vCollection[i]) {\n                vStr = name\n                if (vStr.indexOf(\"_\") != -1) {\n\n                    vArray = vStr.split(\"_\")\n\n                    style.background = \"#C0C0C0 none no-repeat scroll 0% 0%\"\n\n                    dataSrc = vArray[0]\n                    dataFld = vArray[1]\n                }\n            }\n        }\n    }\n\n    vCollection = document.all.tags(\"TEXTAREA\")\n    if (vCollection != null) {\n        for (i = 0; i < vCollection.length; i++)  {\n            with(vCollection[i]) {\n                vStr = name\n                if (vStr.indexOf(\"_\") != -1) {\n\n                    vArray = vStr.split(\"_\")\n                    \n                    if(readOnly != true) style.background = \"#C0C0C0 none no-repeat scroll 0% 0%\"\n\n                    dataSrc = vArray[0]\n                    dataFld = vArray[1]\n                }\n            }\n        }\n    }\n}\n\nfunction jsBindSELECT(vDSOrs,vSELECT){\n    with(vDSOrs){\n        while(EOF != true){\n            vOPTION = document.createElement(\"OPTION\")\n            vOPTION.value = vDSOrs.fields(0)\n            vOPTION.text = vDSOrs.fields(1)\n            vSELECT.add(vOPTION)\n            MoveNext()\n        }\n        MoveFirst()\n    }\n}\n\nfunction jsDSOAdd(vDSO) {\n    vDSO.recordset.AddNew()\n}\n\nfunction jsDSODelete(vDSO) {\n    if(window.confirm(\"Are you sure you want to delete this record?\") == false) return\n    if (vDSO.recordset.recordCount > 0) vDSO.recordset.Delete()\n}\n\nfunction jsDSONav(vCmd,vDSO) {\n\n    if(vDSO.recordset.recordcount == 0) {\n        window.alert(\"There are no records to display.\")\n        return\n    }\n    \n    switch(vCmd){\n        case \"cmdNavFirst\":\n            vDSO.recordset.MoveFirst()\n            top.status = window.defaultStatus\n            break\n        case \"cmdNavPrev\":\n            vDSO.recordset.MovePrevious()\n            top.status = window.defaultStatus\n            if (vDSO.recordset.BOF) {\n                vDSO.recordset.MoveFirst()\n                top.status = \"At beginning of records.\"\n            }\n            break\n        case \"cmdNavNext\":\n            vDSO.recordset.MoveNext()\n            top.status = window.defaultStatus\n            if (vDSO.recordset.EOF) {\n                vDSO.recordset.MoveLast()\n                top.status = \"At end of records.\"\n            }\n            break\n        case \"cmdNavLast\":\n            vDSO.recordset.MoveLast()\n            top.status = window.defaultStatus\n            break\n    }\n}\n\nfunction jsDSOSave(vDSO) {\n    with(vDSO) {\n        vBookMark = vDSO.recordset.bookmark\n        SubmitChanges()\n        if(chkRefresh.checked) Refresh()\n    }\n    \n}",
    "ItemText": "The function listed below, jsBindData(), depends on HTML similar to the following:\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<HTML>\n<HEAD>\n    <LINK REL=stylesheet TYPE=\"text/css\" HREF=\"./root.css\">\n    <META NAME=Generator CONTENT=\"Bryan Wilhite\">\n    <META NAME=Reply-To CONTENT=\"rasx@kintespace.com\">\n    <META NAME=Keywords CONTENT=\"Songhay System, email, kinte space\">\n    <META NAME=Description CONTENT=\"Email List\">\n    <SCRIPT LANGUAGE=\"JavaScript\" TYPE=\"text/javascript\" SRC=\"./root.js\"></SCRIPT>\n    <SCRIPT LANGUAGE=\"JavaScript\" TYPE=\"text/javascript\" SRC=\"./email.js\"></SCRIPT>\n    <TITLE>Songhay System: Email List</TITLE>\n</HEAD>\n<BODY BACKGROUND=\"http://Songhay3/kRoot/bitmaps/backgrnd.gif\" BGCOLOR=Black TEXT=White LINK=Lime VLINK=Silver ALINK=Yellow onLoad=\"jsFormat()\">\n<!-- RDS.DataControl Objects: -->\n<OBJECT CLASSID=\"clsid:BD96C556-65A3-11D0-983A-00C04FC29E33\" ID=dsoEmail HEIGHT=0 WIDTH=0>\n    <PARAM NAME=Connect VALUE=\"Provider=SQLOLEDB.1;Persist Security Info=False;User ID=sa;Initial Catalog=kinteDB;Data Source=SONGHAY3\">\n    <PARAM NAME=Server VALUE=\"http://Songhay3\">\n    <PARAM NAME=SQL VALUE=\"EXECUTE ListDSOEmail\">\n</OBJECT>\n<OBJECT CLASSID=\"clsid:BD96C556-65A3-11D0-983A-00C04FC29E33\" ID=dsoEmailTypes HEIGHT=0 WIDTH=0>\n    <PARAM NAME=Connect VALUE=\"Provider=SQLOLEDB.1;Persist Security Info=False;User ID=sa;Initial Catalog=kinteDB;Data Source=SONGHAY3\">\n    <PARAM NAME=Server VALUE=\"http://Songhay3\">\n    <PARAM NAME=SQL VALUE=\"EXECUTE ListDSOEmail 1\">\n</OBJECT>\n<OBJECT CLASSID=\"clsid:BD96C556-65A3-11D0-983A-00C04FC29E33\" ID=dsoEmailFilter HEIGHT=0 WIDTH=0>\n    <PARAM NAME=Connect VALUE=\"Provider=SQLOLEDB.1;Persist Security Info=False;User ID=sa;Initial Catalog=kinteDB;Data Source=SONGHAY3\">\n    <PARAM NAME=Server VALUE=\"http://Songhay3\">\n    <PARAM NAME=SQL VALUE=\"EXECUTE ListDSOEmail 2\">\n</OBJECT>\n<TABLE WIDTH=512 BORDER=0 CELLSPACING=0 CELLPADDING=4 ALIGN=center>\n    <TR>\n        <TH ALIGN=left NOWRAP>\n            email type:\n        </TH>\n        <TD COLSPAN=2>\n            <SELECT CLASS=frmInput ID=lstEmailType NAME=\"#dsoEmail_emailTypeID\" SIZE=1>\n            </SELECT>\n        </TD>\n    </TR>\n    <TR>\n        <TH ALIGN=left NOWRAP>\n            email address:\n        </TH>\n        <TD COLSPAN=2>\n            <INPUT CLASS=frmInput ID=txtEmailAddress NAME=\"#dsoEmail_emailAddress\" TYPE=text MAXLENGTH=255 SIZE=32 onBlur=\"jsIsEmailValid(this)\">\n        </TD>\n    </TR>\n    <TR>\n        <TH ALIGN=left>\n            url:\n        </TH>\n        <TD COLSPAN=2>\n            <INPUT CLASS=frmInput ID=txtURL NAME=\"#dsoEmail_url\" TYPE=text MAXLENGTH=512 SIZE=48>\n        </TD>\n    </TR>\n    <TR>\n        <TH ALIGN=left>\n            first:\n        </TH>\n        <TD>\n            <INPUT CLASS=frmInput ID=txtFirst NAME=\"#dsoEmail_first\" TYPE=text MAXLENGTH=32 SIZE=32>\n        </TD>\n        <TD ALIGN=right ROWSPAN=2 NOWRAP VALIGN=middle>\n<STRONG>tagged?:</STRONG>\n            <INPUT ID=chkTagged NAME=\"#dsoEmail_tagged\" TYPE=checkbox>\n<BR>\n<STRONG>send?:</STRONG>\n            <INPUT ID=chkSend NAME=\"#dsoEmail_send\" TYPE=checkbox>\n        </TD>\n    </TR>\n    <TR>\n        <TH ALIGN=left>\n            last:\n        </TH>\n        <TD>\n            <INPUT CLASS=frmInput ID=txtLast NAME=\"#dsoEmail_last\" TYPE=text MAXLENGTH=32 SIZE=32>\n        </TD>\n    </TR>\n    <TR>\n        <TD COLSPAN=3>\n<STRONG>note:</STRONG>\n<BR>\n            <TEXTAREA CLASS=frmInput ID=txtNote NAME=\"#dsoEmail_note\" ROWS=7 COLS=54></TEXTAREA>\n        </TD>\n    </TR>\n    <TR>\n        <!-- Record filtering: -->\n        <TD COLSPAN=3>\n        <TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=\"100%\">\n            <TR>\n                <TD VALIGN=middle>\n                    <SELECT CLASS=frmCtrl ID=lstFilter NAME=lstFilter SIZE=1 onChange=\"jsFilter('onchange',dsoEmail)\">\n                        <OPTION VALUE=\"#default\" SELECTED>filtering commands</OPTION>\n                    </SELECT>                     \n                    <INPUT CLASS=frmCtrl ID=txtFilter NAME=txtFilter TYPE=text MAXLENGTH=32 SIZE=16> \n                    <INPUT CLASS=frmCtrl ID=cmdFilter NAME=cmdFilter TYPE=button VALUE=\"filter on\" TITLE=\"Filter Records\" onClick=\"jsFilter('onclick',dsoEmail)\">\n                </TD>\n                <TD ALIGN=right>\n                    <!-- Record navigation: -->\n                    <INPUT CLASS=frmCtrl ID=cmdNavFirst NAME=cmdNavFirst TYPE=button VALUE=\"<<\" TITLE=\"Move to the First Record\" onClick=\"jsDSONav(this.name,dsoEmail)\">\n                    <INPUT CLASS=frmCtrl ID=cmdNavPrev NAME=cmdNavPrev TYPE=button VALUE=\"<  \" TITLE=\"Move to the Previous Record\" onClick=\"jsDSONav(this.name,dsoEmail)\">\n                    <INPUT CLASS=frmCtrl ID=cmdNavNext NAME=cmdNavNext TYPE=BUTTON VALUE=\" > \" TITLE=\"Move to the Next Record\" onClick=\"jsDSONav(this.name,dsoEmail)\">\n                    <INPUT CLASS=frmCtrl ID=cmdNavLast NAME=cmdNavLast TYPE=BUTTON VALUE=\">>\" TITLE=\"Move to the Last Record\" onClick=\"jsDSONav(this.name,dsoEmail)\">\n                </TD>\n            </TR>\n        </TABLE>\n        </TD>\n    </TR>\n    <TR>\n        <TD COLSPAN=3>\n            <!-- Record commands: -->\n             \n<BR>\n            <INPUT CLASS=frmCtrl ID=cmdAdd NAME=cmdAdd TYPE=button VALUE=\"add record\" TITLE=\"Add a New Record\" onClick=\"jsDSOAdd(dsoEmail)\">  \n            <INPUT CLASS=cmdDelete ID=cmdDelete NAME=cmdDelete TYPE=button VALUE=\"delete record\" TITLE=\"Delete the Current Record\" onClick=\"jsDSODelete(dsoEmail)\">  \n            <INPUT CLASS=frmCtrl ID=cmdSave NAME=cmdSave TYPE=button VALUE=\"save changes\" TITLE=\"Save Changes to Records\" onClick=\"jsDSOSave(dsoEmail)\">\n            <INPUT ID=chkRefresh NAME=chkRefresh TYPE=checkbox TITLE=\"Check to Save Changes to Records on Server?\"><STRONG>refresh?</STRONG>\n        </TD>\n    </TR>\n    <TR>\n        <TD COLSPAN=3>\n            <!-- Status reports: -->\n        <TABLE BORDER=1 CELLPADDING=0 CELLSPACING=0 WIDTH=\"100%\">\n            <TR>\n                <TD CLASS=frmMsg ID=tdMsg>\n                </TD>\n            </TR>\n        </TABLE>\n        </TD>\n    </TR>\n</TABLE>\n</BODY>\n</HTML>\n\nNow the JScript code:\n\n//ADO variables:\nvar vBookMark = null\n\n//---- EditModeEnum Values ----\nvar adEditNone = 0x0000\nvar adEditInProgress = 0x0001\nvar adEditAdd = 0x0002\nvar adEditDelete = 0x0004\n\n//---- FilterGroupEnum Values ----\nvar adFilterNone = 0\nvar adFilterPendingRecords = 1\nvar adFilterAffectedRecords = 2\nvar adFilterFetchedRecords = 3\nvar adFilterPredicate = 4\nvar adFilterConflictingRecords = 5\n\n//RDS variables:\n//----  RDS.ADCReadyStateEnum Values ----\nvar adcReadyStateLoaded = 2\nvar adcReadyStateInteractive = 3\nvar adcReadyStateComplete = 4\n\nfunction jsBindData() {\n    //This function tries very hard to be generic in the Microsoft sense of the word.\n    //It depends on element ID and NAME properties to be different,\n    //where NAME is of the form <data source>_<data field>.\n\n    var vCollection = document.all.tags(\"INPUT\")\n    if (vCollection != null) {\n        for (var i = 0; i < vCollection.length; i++)  {\n            with(vCollection[i]) {\n                var vStr = name\n                if (vStr.indexOf(\"_\") != -1) {\n\n                    var vArray = vStr.split(\"_\")\n                    \n                    if((type == \"text\") && (readOnly != true)) style.background = \"#C0C0C0 none no-repeat scroll 0% 0%\"\n                    if((type != \"button\") \n                        && (type != \"file\")\n                        && (type != \"image\")\n                        && (type != \"reset\")\n                        && (type != \"submit\")) {\n                        dataSrc = vArray[0]\n                        dataFld = vArray[1]\n                    }\n                }\n            }\n        }\n    }\n\n    vCollection = document.all.tags(\"SELECT\")\n    if (vCollection != null) {\n        for (i = 0; i < vCollection.length; i++)  {\n            with(vCollection[i]) {\n                vStr = name\n                if (vStr.indexOf(\"_\") != -1) {\n\n                    vArray = vStr.split(\"_\")\n\n                    style.background = \"#C0C0C0 none no-repeat scroll 0% 0%\"\n\n                    dataSrc = vArray[0]\n                    dataFld = vArray[1]\n                }\n            }\n        }\n    }\n\n    vCollection = document.all.tags(\"TEXTAREA\")\n    if (vCollection != null) {\n        for (i = 0; i < vCollection.length; i++)  {\n            with(vCollection[i]) {\n                vStr = name\n                if (vStr.indexOf(\"_\") != -1) {\n\n                    vArray = vStr.split(\"_\")\n                    \n                    if(readOnly != true) style.background = \"#C0C0C0 none no-repeat scroll 0% 0%\"\n\n                    dataSrc = vArray[0]\n                    dataFld = vArray[1]\n                }\n            }\n        }\n    }\n}\n\nfunction jsBindSELECT(vDSOrs,vSELECT){\n    with(vDSOrs){\n        while(EOF != true){\n            vOPTION = document.createElement(\"OPTION\")\n            vOPTION.value = vDSOrs.fields(0)\n            vOPTION.text = vDSOrs.fields(1)\n            vSELECT.add(vOPTION)\n            MoveNext()\n        }\n        MoveFirst()\n    }\n}\n\nfunction jsDSOAdd(vDSO) {\n    vDSO.recordset.AddNew()\n}\n\nfunction jsDSODelete(vDSO) {\n    if(window.confirm(\"Are you sure you want to delete this record?\") == false) return\n    if (vDSO.recordset.recordCount > 0) vDSO.recordset.Delete()\n}\n\nfunction jsDSONav(vCmd,vDSO) {\n\n    if(vDSO.recordset.recordcount == 0) {\n        window.alert(\"There are no records to display.\")\n        return\n    }\n    \n    switch(vCmd){\n        case \"cmdNavFirst\":\n            vDSO.recordset.MoveFirst()\n            top.status = window.defaultStatus\n            break\n        case \"cmdNavPrev\":\n            vDSO.recordset.MovePrevious()\n            top.status = window.defaultStatus\n            if (vDSO.recordset.BOF) {\n                vDSO.recordset.MoveFirst()\n                top.status = \"At beginning of records.\"\n            }\n            break\n        case \"cmdNavNext\":\n            vDSO.recordset.MoveNext()\n            top.status = window.defaultStatus\n            if (vDSO.recordset.EOF) {\n                vDSO.recordset.MoveLast()\n                top.status = \"At end of records.\"\n            }\n            break\n        case \"cmdNavLast\":\n            vDSO.recordset.MoveLast()\n            top.status = window.defaultStatus\n            break\n    }\n}\n\nfunction jsDSOSave(vDSO) {\n    with(vDSO) {\n        vBookMark = vDSO.recordset.bookmark\n        SubmitChanges()\n        if(chkRefresh.checked) Refresh()\n    }\n    \n}",
    "CreateDate": "2000-12-31T00:33:19.5730000",
    "EndDate": null,
    "ModificationDate": "2000-12-31T00:33:19.5730000",
    "DocumentId": "2076071356",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5213",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBScript and ASP Code: Displaying Scripting Engine Information",
    "SortOrdinal": null,
    "ItemChar": "<%@LANGUAGE=\"VBScript\"%>\n<%\n    Option Explicit\n    Dim vHTML,vServerAddr\n    vServerAddr = Request.ServerVariables.Item(\"LOCAL_ADDR\")\n\n    vHTML = \"ScriptEngine = \" & ScriptEngine & vbCrLf _\n        & \"ScriptEngineMajorVersion = \" & FormatNumber(ScriptEngineMajorVersion,1) & vbCrLf _ \n        & \"ScriptEngineMinorVersion = \" & FormatNumber(ScriptEngineMinorVersion,1) \n%>\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n<HTML>\n    <HEAD>\n        <TITLE>\n            Scripting Engine Information\n        </TITLE>\n    </HEAD>\n    <BODY BGCOLOR=\"#D7D7D7\">\n        <DIV STYLE=\"text-align: center\">\n            <TABLE BORDER=\"0\" CELLPADDING=\"0\" CELLSPACING=\"0\" WIDTH=\"800\">\n                <TR>\n                    <TH>\n                        <H1>\n                            About Visual Basic&#174; Scripting Edition\n                        </H1>\n                    </TH>\n                </TR>\n                <TR>\n                    <TH>\n                        <H2>\n                            Server Hosting Script Engine: <%=vServerAddr%>\n                        </H2>\n                    </TH>\n                </TR>\n                <TR>\n                    <TD ALIGN=\"center\">\n<PRE>\n<%=vHTML %>\n</PRE>\n                    </TD>\n                </TR>\n            </TABLE>\n        </DIV>\n    </BODY>\n</HTML>",
    "ItemText": null,
    "CreateDate": "2000-12-31T11:30:41.3200000",
    "EndDate": null,
    "ModificationDate": "2000-12-31T11:30:41.3200000",
    "DocumentId": "2076071357",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5214",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB: ADO; Preventing \"Operand Type Clash\" Errors",
    "SortOrdinal": null,
    "ItemChar": "One way to prevent \"operand type clash\" errors is to use a two-dimensional parameter array to pass parameters to the stored procedure. The stored procedure parameters should have default values (most likely NULL).",
    "ItemText": null,
    "CreateDate": "2001-01-07T12:25:33.5300000",
    "EndDate": null,
    "ModificationDate": "2001-01-07T12:25:33.5300000",
    "DocumentId": "2076071358",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5215",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MS SQL Server 7.x: When to Use Views; Normalized Data",
    "SortOrdinal": null,
    "ItemChar": "Views are not just useful for security reasons (where only subsets of data is shown). Views also improve performance when displaying normalized data. For more details please see the following:\n\n    http://www.sqlmag.com/Articles/Index.cfm?ArticleID=5917",
    "ItemText": null,
    "CreateDate": "2002-01-05T09:01:30.5830000",
    "EndDate": null,
    "ModificationDate": "2002-01-05T09:01:30.5830000",
    "DocumentId": "2076071359",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5216",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Songhay 3 Remote Login",
    "SortOrdinal": null,
    "ItemChar": "* Songhay3: z_default | guest\n",
    "ItemText": null,
    "CreateDate": "2001-01-31T20:58:04.1870000",
    "EndDate": null,
    "ModificationDate": "2001-01-31T20:58:04.1870000",
    "DocumentId": "2076071373",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5217",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft JScript: Handling Keystrokes; jsHandleKeyDown()",
    "SortOrdinal": null,
    "ItemChar": "//Set event pointers.\ndocument.onkeydown = jsHandleKeyDown\n\n//Handle keystrokes.\nfunction jsHandleKeyDown() {\n    vFrmName = \"\"\n    vElementName = \"\"\n\n    if (window.name == \"dataEmail\") {\n        //The keyCode property returns Unicode values.\n        switch(event.keyCode){\n            case 68://Ctrl + Shift + d\n                if(event.ctrlKey == false) return\n                window.document.frmEmailData.cmdDelete.click()\n                break\n            case 83://Ctrl + Shift + s\n                if(event.ctrlKey == false) return\n                window.document.frmEmailData.cmdSet.click()\n                break\n        }\n    }\n\n    if (window.name == \"dataKB\") {\n        //The keyCode property returns Unicode values.\n        switch(event.keyCode){\n            case 68://Ctrl + Shift + d\n                if(event.ctrlKey == false) return\n                window.document.frmKBData.cmdDelete.click()\n                break\n            case 83://Ctrl + Shift + s\n                if(event.ctrlKey == false) return\n                window.document.frmKBData.cmdSet.click()\n                break\n        }\n    }\n\n    if (window.name == \"dataKPages\") {\n        //The keyCode property returns Unicode values.\n        switch(event.keyCode){\n            case 68://Ctrl + Shift + d\n                if(event.ctrlKey == false) return\n                window.document.frmKPagesData.cmdDelete.click()\n                break\n            case 83://Ctrl + Shift + s\n                if(event.ctrlKey == false) return\n                window.document.frmKPagesData.cmdSet.click()\n                break\n        }\n    }\n\n    if (window.name == \"dataKStyles\") {\n        //The keyCode property returns Unicode values.\n        switch(event.keyCode){\n            case 68://Ctrl + Shift + d\n                if(event.ctrlKey == false) return\n                window.document.frmKStylesData.cmdDelete.click()\n                break\n            case 83://Ctrl + Shift + s\n                if(event.ctrlKey == false) return\n                window.document.frmKStylesData.cmdSet.click()\n                break\n        }\n    }\n\n    if (window.name == \"dataTable\") {\n        //The keyCode property returns Unicode values.\n        switch(event.keyCode){\n            case 37://Alt + Shift + [left arrow]\n                if(event.altKey == false) return\n                window.document.frmPage.cmdPagePrev.click()\n                break\n            case 38://Alt + Shift + [up arrow]\n                if(event.altKey == false) return\n                window.document.frmPage.cmdPageFirst.click()\n                break\n            case 39://Alt + Shift + [right arrow]\n                if(event.altKey == false) return\n                window.document.frmPage.cmdPageNext.click()\n                break\n            case 40://Alt + Shift + [down arrow]\n                if(event.altKey == false) return\n                window.document.frmPage.cmdPageLast.click()\n                break\n            case 78://Ctrl + Shift + n\n                if(event.ctrlKey == false) return\n                window.document.anchors(\"aNew\").click()\n                break\n            case 80://Ctrl + Shift + p\n                if(event.ctrlKey == false) return\n                window.document.frmPage.lstPageNo.focus()\n                break\n            case 83://Ctrl + Shift + s\n                if(event.ctrlKey == false) return\n                window.document.anchors(\"aSearch\").click()\n                break\n        }\n    }\n\n    if (window.name == \"root\") {\n        switch(event.keyCode){\n            case 13://Enter\n                vFrmName = window.document.frm.lstForms.value\n                vElementName = vFrmName.replace(\"frm\",\"cmd\")\n                window.document.forms[vFrmName].elements[vElementName].click()\n                break\n            case 76://Ctrl + Shift + l\n                if(event.ctrlKey == false) return\n                window.document.frm.lstForms.focus()\n                break\n            case 78://Ctrl + Shift + n\n                if(event.ctrlKey == false) return\n                window.document.anchors(\"a_\" + window.document.frm.lstForms.value).click()\n                break\n            case 87://Ctrl + Shift + w\n                if(event.ctrlKey == false) return\n                window.document.anchors(\"aWork\").click()\n                break\n        }\n    }\n}",
    "ItemText": null,
    "CreateDate": "2001-02-06T18:17:19.2800000",
    "EndDate": null,
    "ModificationDate": "2001-02-06T18:17:19.2800000",
    "DocumentId": "2076071374",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5218",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 98: Notable Differences from Windows 95; MSConfig; WinAlign; Windows Critical Update Notification",
    "SortOrdinal": null,
    "ItemChar": "I am sure that there are plenty of differences between Windows 98 and 95. What is mentioned here (in passing) focuses on the things that really strike me as new and different from a system maintenance perspective.\n\nMSConfig (System Configuation Utility) picks up where Sysedit left off. It puts a nice GUI around Windows features that were only accessible from obscure keyboard commands or the command line. For example, you can set the boot options from MSConfig instead of pressing F8 or F5.\n\nWinAlign is not what ships with Windows 98. The program file WALIGN.EXE does. This file is run by the Task Scheduler by default. More details about this program (like what it does) is at:\n\n    http://www.winmag.com/windows/win98/alignfaq.htm\n\nThe Task Scheduler also runs a task called \"Windows Critical Update Notification\" by the hour. Yes, hourly! At some point this package was set to run every five minutes! For more information please start with:\n\n    http://www.aztcs.org/sigs/wintips9906.html",
    "ItemText": null,
    "CreateDate": "2003-07-31T14:46:34.0000000",
    "EndDate": null,
    "ModificationDate": "2003-07-31T14:46:34.0000000",
    "DocumentId": "2076071376",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5219",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT Workstation PROBLEM: Manually Sweeping for File Buildup; Temporary Internet Files; .TMP files",
    "SortOrdinal": null,
    "ItemChar": "When the %SystemDrive% (commonly drive C:) starts to fill up \"by attrition\" the culprit is usually two things: temporary Internet files and files left in the C:\\TEMP directory.\n\nTemporary Internet files are not always removed from the General > Temporary Internet Files tab under Properties. Files may need to be manually removed from %SystemRoot%\\Temporary Internet Files and %SystemRoot%\\Profiles\\[UserName]\\Temporary Internet Files, where [UserName] is the logged in NT user. (NOTE: removing these files is not encouraged by Microsoft; remove these files at your own risk).\n\nMore obscure zero-byte .TMP file may appear in (or under) the %SystemRoot% directory. Workstations with a Personal Web Server installation may also have .LOG files build up in the %SystemRoot%\\system32\\LogFiles\\W3SVC1 directory.",
    "ItemText": null,
    "CreateDate": "2001-02-17T22:28:12.1700000",
    "EndDate": null,
    "ModificationDate": "2001-02-17T22:28:12.1700000",
    "DocumentId": "2076071377",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5220",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Romona Africa 1992: trueSpace Camera Coordinates; Hair Books",
    "SortOrdinal": null,
    "ItemChar": "0:(-5.009,2.981,3.000) (-180.000,0.00,180.000)\n1:(-1.564,1.841,3.00)\n2:(-1.963,0.236,5.000)\n3:(-1.132,0.155,2.500)\n4:(0.041,-0.603,1.000)\n5:(1.189,-0.448,3.000)\n6:(1.132,-1.700,1.000)",
    "ItemText": null,
    "CreateDate": "2001-03-18T17:34:06.8770000",
    "EndDate": null,
    "ModificationDate": "2001-03-18T17:34:06.8770000",
    "DocumentId": "2076071379",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5221",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL Code: Example of the use of a Cursor; Parsing WebCom Hit Log Files; NewHitLog",
    "SortOrdinal": null,
    "ItemChar": "CREATE PROCEDURE NewHitLog\nAS\n\n-- Description: Inserts rows into tblLog from tblLogImport\n-- Developer: rasx\n\nSET NOCOUNT ON\nDECLARE\n    @type     varchar(10)\n,   @date     datetime\n,   @address  varchar(255)\n,   @file     varchar(255)\n,   @logEntry varchar(1000)\n\n\nDECLARE tblLogImportCursor CURSOR FOR\n    SELECT\n        LogEntry\n    FROM\n        tblLogImport\n    \nOPEN tblLogImportCursor\n    \nFETCH NEXT FROM tblLogImportCursor\nINTO @logEntry\n\nWHILE @@FETCH_STATUS = 0\nBEGIN\n\n    SELECT\n        @type    = RTRIM(SUBSTRING(@logEntry,1,4))\n    ,   @date    = CONVERT(datetime,RTRIM(SUBSTRING(@logEntry,5,20)))\n    ,   @address = RTRIM(SUBSTRING(@logEntry,24,CHARINDEX('/',@logEntry,24) - 24))\n    ,   @file    = RTRIM(SUBSTRING(@logEntry,CHARINDEX('/',@logEntry,24),CHARINDEX(' ',@logEntry,CHARINDEX('/',@logEntry,24)) - CHARINDEX('/',@logEntry,24)))\n\n    INSERT INTO\n        tblLog\n        (\n            type\n        ,   date\n        ,   address\n        ,   [file]\n        )\n    VALUES\n        (\n            @type\n        ,   @date\n        ,   @address\n        ,   @file\n        )\n    \n    FETCH NEXT FROM tblLogImportCursor\n    INTO @logEntry\nEND\n\nCLOSE tblLogImportCursor\nDEALLOCATE tblLogImportCursor\n",
    "ItemText": null,
    "CreateDate": "2001-03-04T10:07:23.2600000",
    "EndDate": null,
    "ModificationDate": "2001-03-04T10:07:23.2600000",
    "DocumentId": "2076071380",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5222",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL Code: Another Example of the use of a Cursor; Parsing WebCom Hit Log Files; GetHitsImport",
    "SortOrdinal": null,
    "ItemChar": "CREATE PROCEDURE GetHitsImport\n    (\n        @errorCount int OUTPUT\n    )\nAS\n\n-- Description: Transforms data in tblLogImport into data for tblLog.\n-- Developer: rasx\n\nDECLARE\n    @logEntry     varchar(1000)\n,   @type         varchar(8)\n,   @date         datetime\n,   @address      varchar(255)\n,   @file         varchar(255)\n,   @entryValid   bit\n,   @charPosStart int\n,   @charPosEnd   int\n,   @srchStr      varchar(255)\n\nSET NOCOUNT ON\n\n-- Record last log entry date.\nINSERT INTO tblLogDates\nSELECT MAX([date]) FROM tblLog\n\nSET @errorCount = 0\n\nDECLARE tblLogImportCursor CURSOR FOR\nSELECT\n    LogEntry\nFROM\n    tblLogImport\n\nOPEN tblLogImportCursor\n\nFETCH NEXT FROM tblLogImportCursor\nINTO @logEntry\n\nWHILE @@FETCH_STATUS = 0\nBEGIN\n    IF LEN(@logEntry) > 0 AND LEFT(@logEntry,1) <> '#'\n    BEGIN\n        SET @entryValid = 1\n        SET @type = LTRIM(SUBSTRING(@logEntry,1,3))\n        SET @date = LTRIM(SUBSTRING(@logEntry,5,19))\n        \n        SET @srchStr = SPACE(1) + '/'\n        EXECUTE GetcharPos\n                @str        = @logEntry\n            ,   @srchstr    = @srchStr\n            ,   @iterations = 0\n            ,   @pos        = @charPosEnd OUTPUT\n        IF @charPosEnd > 25\n        BEGIN\n            SET @address = LTRIM(SUBSTRING(@logEntry,25,@charPosEnd - 25))\n        END\n        ELSE\n        BEGIN\n            SET @entryValid = 0\n            SET @errorCount = @errorCount + 1\n        END\n        \n        SET @charPosStart = @charPosEnd\n        EXECUTE GetcharPos\n                @str        = @logEntry\n            ,   @srchstr    = '.'\n            ,   @iterations = 0\n            ,   @pos        = @charPosEnd OUTPUT\n        \n        SET @charPosEnd = @charPosEnd + 5\n        IF @charPosStart >= @charPosEnd\n        BEGIN\n            EXECUTE GetcharPos\n                    @str        = @logEntry\n                ,   @srchstr    = '/'\n                ,   @iterations = 0\n                ,   @pos        = @charPosEnd OUTPUT\n            SET @charPosEnd = @charPosEnd + 1\n        END\n\n        IF @charPosEnd > @charPosStart\n        BEGIN\n            SET @file = LTRIM(SUBSTRING(@logEntry,@charPosStart,@charPosEnd - @charPosStart))\n        END\n        ELSE\n        BEGIN\n            SET @entryValid = 0\n            SET @errorCount = @errorCount + 1\n        END\n    END\n    ELSE\n    BEGIN\n        SET @entryValid = 0\n        SET @errorCount = @errorCount + 1\n    END\n    \n    IF @entryValid = 1\n    BEGIN\n        INSERT INTO tblLog\n        ([type], [date], address, [file])\n        VALUES(@type, @date, @address, @file)\n    END\n\n    FETCH NEXT FROM tblLogImportCursor\n    INTO @logEntry\nEND\n\nCLOSE tblLogImportCursor\nDEALLOCATE tblLogImportCursor",
    "ItemText": null,
    "CreateDate": "2001-03-04T10:06:53.9400000",
    "EndDate": null,
    "ModificationDate": "2001-03-04T10:06:53.9400000",
    "DocumentId": "2076071381",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5223",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL: Stored Procedure Structure for Microsoft SQL Server 7.0",
    "SortOrdinal": null,
    "ItemChar": "USE DatabaseName\nGO\n\nIF OBJECT_ID('StoredProcName') IS NOT NULL\nBEGIN\n    DROP PROCEDURE StoredProcName\n    IF OBJECT_ID('StoredProcName') IS NOT NULL\n        PRINT '<<< FAILED DROPPING PROCEDURE StoredProcName >>>'\n    ELSE\n        PRINT '<<< DROPPED PROCEDURE StoredProcName >>>'\nEND\nGO\n\nCREATE PROCEDURE StoredProcName\n    (\n        @param int = 0\n    )\nAS\n\n-- Description: Stored proc' structure for SQL Server 7.0.\n-- Developer: rasx\n\nSET NOCOUNT ON\n\n-- This proc' takes advantage of the new security features in SQL Server 7.0.\n\nRETURN\nGO\n\nGRANT EXECUTE ON StoredProcName TO [Windows NT Group]\nGO\n\nIF OBJECT_ID('StoredProcName') IS NOT NULL\n    PRINT '<<< CREATED PROCEDURE StoredProcName >>>'\nELSE\n    PRINT '<<< FAILED CREATING PROCEDURE StoredProcName >>>'\nGO\n",
    "ItemText": null,
    "CreateDate": "2007-11-19T15:14:21.0000000",
    "EndDate": null,
    "ModificationDate": "2007-11-19T15:14:21.0000000",
    "DocumentId": "2076071382",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5224",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Romona Africa 1992: trueSpace Camera Coordinates; Dreadlocks",
    "SortOrdinal": null,
    "ItemChar": "0:(0.000,1.750,2.000) (-180.000,0.00,180.000)\n1:(0.000,0.980,2.000)\n2:(0.000,0.980,7.700)",
    "ItemText": null,
    "CreateDate": "2001-04-03T21:20:31.5830000",
    "EndDate": null,
    "ModificationDate": "2001-04-03T21:20:31.5830000",
    "DocumentId": "2076071383",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5225",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Romona Africa 1992: trueSpace Camera Coordinates; Sorority Splits Hairs",
    "SortOrdinal": null,
    "ItemChar": "0:(-4.528,3.461,3.000) (-180.00,0.00,180.00) (0.500,1.000,1.000)\n1:(-3.803,0.546,2.500) (155.04,-39.14,177.38) (0.500,1.000,0.918)\n2:(2.948,0.529,2.500) (155.04,30.00,177.38) (0.500,1.000,0.918)",
    "ItemText": null,
    "CreateDate": "2001-04-07T23:02:47.4070000",
    "EndDate": null,
    "ModificationDate": "2001-04-07T23:02:47.4070000",
    "DocumentId": "2076071384",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5226",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL Code: DELETEing Duplicates",
    "SortOrdinal": null,
    "ItemChar": "-- This code is inspired by MS KB article Q139444\n-- (\"INF: How to Remove Duplicate Rows From a Table\").\n\nSELECT\n    [date],host,[file],kbID\nINTO\n    #uVals\nFROM\n    tblKLog\nGROUP BY\n    [date],host,[file],kbID\nHAVING\n    COUNT(*) > 1\n\nDELETE\n    tblKLog\nFROM\n    tblKLog\n,   #uVals\nWHERE\n    tblKLog.[date] = #uVals.[date]\nAND\n    tblKLog.host = #uVals.host\nAND\n    tblKLog.[file] = #uVals.[file]\n\nINSERT INTO\n    tblKLog\nSELECT\n    [date],host,[file],kbID\nFROM\n    #uVals\n\nDROP TABLE #uVals\n\nSELECT\n    [date],host,[file],kbID\nFROM\n    tblKLog\nGROUP BY\n    [date],host,[file],kbID\nHAVING\n    COUNT(*) > 1\n",
    "ItemText": null,
    "CreateDate": "2001-04-07T18:40:52.3800000",
    "EndDate": null,
    "ModificationDate": "2001-04-07T18:40:52.3800000",
    "DocumentId": "2076071385",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5227",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP: Notes on Implementing Security in ASP Projects",
    "SortOrdinal": null,
    "ItemChar": "Without much fanfare here it is: I depend on the Windows NT operating system to handle security features in my ASP solutions. I have no trouble creating a single point failure: the operating system itself. When something goes wrong in terms of security both Microsoft and myself can share the blame!\n\nThe IIS user IUSR_<Machine Name> and the NTFS file system are the starting points in the quest for tight ASP security. Fore more details we have:\n\n    Implementing a Secure Site with ASP\n    http://msdn.microsoft.com/library/backgrnd/html/msdn_implement.htm\n\n    IIS: Authentication & Security Features\n    http://support.microsoft.com/support/kb/articles/Q142/8/68.ASP\n\nWhen ASP pages connect to a SQL database, I avoid storing passwords in the ASP files by depending on ADO to connect via NT security. This implies that IUSR_<Machine Name> has the ability to connect to SQL server. This idea is based on reading the following:\n\n    Microsoft SQL Server 7.0 Security\n    http://msdn.microsoft.com/library/techart/sql7security.htm\n\n    HOWTO: Connect to the Microsoft SQL Server Through the Use of Named Pipes \n    http://support.microsoft.com/support/kb/articles/Q159/9/76.ASP\n\n    INF: Authentication Methods for Connections to SQL Server in Active Server Pages\n    http://support.microsoft.com/support/kb/articles/Q247/9/31.ASP\n\nIf I run into any problems while implementing security features, I should refer the following:\n\n    Users Cannot Access FTP or Web Site \n    http://support.microsoft.com/support/kb/articles/Q185/3/77.ASP\n\n    List of NTFS Permissions Required for IIS Site to Work \n    http://support.microsoft.com/support/kb/articles/Q187/5/06.ASP\n\n    Default NTFS Permissions in Windows NT\n    http://support.microsoft.com/support/kb/articles/Q148/4/37.asp\n\n    Cannot Create Object Error when Browsing ASP Pages \n    http://support.microsoft.com/support/kb/articles/Q201/7/40.ASP\n\n    Using The Auditing Tool to Solve Authenticationess Issues\n    http://www.15seconds.com/howto/pg003230.htm\n",
    "ItemText": null,
    "CreateDate": "2001-04-07T19:38:13.6970000",
    "EndDate": null,
    "ModificationDate": "2001-04-07T19:38:13.6970000",
    "DocumentId": "2076071386",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5228",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Spirit of the Dancer: TimeCodes",
    "SortOrdinal": null,
    "ItemChar": "",
    "ItemText": null,
    "CreateDate": "2001-05-07T21:08:08.8130000",
    "EndDate": null,
    "ModificationDate": "2001-05-07T21:08:08.8130000",
    "DocumentId": "2076071387",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5229",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT Command Script: BackupProfile.cmd; Moving User Settings to a HomeDrive Other Than the SystemDrive",
    "SortOrdinal": null,
    "ItemChar": "@ECHO OFF\nECHO Deleting old backup...\nRD /S /Q \"%HomeDrive%\\%HomePath%\\~data\\~Application Data Backup\"\nRD /S /Q \"%HomeDrive%\\%HomePath%\\~data\\~Favorites Backup\"\nRD /S /Q \"%HomeDrive%\\%HomePath%\\~data\\~Local Settings Backup\"\nRD /S /Q \"%HomeDrive%\\%HomePath%\\~data\\~SendTo Backup\"\nECHO Backing up Profile Data...\nMD \"%HomeDrive%\\%HomePath%\\~data\\~Application Data Backup\"\nMD \"%HomeDrive%\\%HomePath%\\~data\\~Favorites Backup\"\nMD \"%HomeDrive%\\%HomePath%\\~data\\~Local Settings Backup\"\nMD \"%HomeDrive%\\%HomePath%\\~data\\~SendTo Backup\"\nECHO Getting Application Data...\nXCOPY \"%SystemRoot%\\Profiles\\rasx\\Application Data\" \"%HomeDrive%\\%HomePath%\\~data\\~Application Data Backup\\\" /Q /E /V\nECHO Getting Favorites...\nXCOPY \"%SystemRoot%\\Profiles\\rasx\\Favorites\" \"%HomeDrive%\\%HomePath%\\~data\\~Favorites Backup\\\" /Q /E /V\nECHO Getting Local Settings...\nXCOPY \"%SystemRoot%\\Profiles\\rasx\\Local Settings\" \"%HomeDrive%\\%HomePath%\\~data\\~Local Settings Backup\\\" /Q /E /V\nECHO Getting SendTo Folder...\nXCOPY \"%SystemRoot%\\Profiles\\rasx\\SendTo\" \"%HomeDrive%\\%HomePath%\\~data\\~SendTo Backup\\\" /Q /E /V\n",
    "ItemText": null,
    "CreateDate": "2001-05-13T08:42:28.9000000",
    "EndDate": null,
    "ModificationDate": "2001-05-13T08:42:28.9000000",
    "DocumentId": "2076071388",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5230",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT Command Script: PWSstart.cmd; Starting Personal Web Server on Windows NT Workstation",
    "SortOrdinal": null,
    "ItemChar": "@ECHO OFF\n\nnet start w3svc\nREM net start msftpsvc\n\nPAUSE",
    "ItemText": null,
    "CreateDate": "2001-05-13T08:47:35.1270000",
    "EndDate": null,
    "ModificationDate": "2001-05-13T08:47:35.1270000",
    "DocumentId": "2076071389",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5231",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT Command Script: PWSstop.cmd; Stopping Personal Web Server on Windows NT Workstation",
    "SortOrdinal": null,
    "ItemChar": "@ECHO OFF\n\nnet stop iisadmin /y\n\nPAUSE",
    "ItemText": null,
    "CreateDate": "2001-05-13T08:47:51.2170000",
    "EndDate": null,
    "ModificationDate": "2001-05-13T08:47:51.2170000",
    "DocumentId": "2076071390",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5232",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Songhay 3 Server: Hardware Inventory",
    "SortOrdinal": null,
    "ItemChar": "AMD K62 450\nFIC VA 503+\n\nCD-ROM:\n    Toshiba DVD-ROM SD-M1212\n\nDisk Drive:\n    Maxtor Diamond Max Plus 40GB\n    (7200 RPM; Ultra ATA 100MB/Sec; Buffer/Seek: 2MB/8.7ms)\n    KIT: ST0154000U\n    S/N: T4H7B1QC\n\nDisplay Adapter:\n    Diamond FireGL 1000 Pro\n\nNetwork Adapter:\n    D-Link DFE-530TX+ 10/100 PCI Fast Ethernet",
    "ItemText": null,
    "CreateDate": "2001-05-26T17:05:31.6700000",
    "EndDate": null,
    "ModificationDate": "2001-05-26T17:05:31.6700000",
    "DocumentId": "2076071391",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5233",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ADO.NET: Flippant Introductory Remarks",
    "SortOrdinal": null,
    "ItemChar": "For starters, try Doug Rothaus and Mike Pizzo, their MSDN article, \"ADO.NET for the ADO Programmer\" at:\n\n    http://msdn.microsoft.com/library/en-us/dndotnet/html/adonetprogmsdn.asp\n\nPaul D. Sheriff was the guy that introduced me to ADO at some hick dive in Orange County, California. He returns with \"Using ADO.NET\" at MSDN:\n\n    http://msdn.microsoft.com/library/en-us/dndotnet/html/usingadonet.asp",
    "ItemText": null,
    "CreateDate": "2003-09-03T13:48:43.0000000",
    "EndDate": null,
    "ModificationDate": "2003-09-03T13:48:43.0000000",
    "DocumentId": "2076071392",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5234",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MERCURY POISONING",
    "SortOrdinal": null,
    "ItemChar": "While fish is an important source of protein and other essential nutrients, there is a danger of mercury poisoning associated with eating too much of a certain type of fish. The level of methyl mercury found in fish varies, depending on the type of fish. For the top-ten seafood species (canned tuna, shrimp, pollock, salmon, cod, catfish, clams, flatfish, crabs, and scallops), the level of mercury is low, weighing in at less than 0.2 ppm (parts per million). However, for shark and swordfish, the level of mercury jumps to 1.0 ppm.\n\nTo prevent mercury poisoning, the U.S. Food and Drug Administration advises pregnant women and women of childbearing age to limit their consumption of shark and swordfish to no more than one serving per month. Everyone else should limit their consumption of these two types of fish to one serving, or seven ounces, per week.",
    "ItemText": null,
    "CreateDate": "2001-05-26T18:06:32.9930000",
    "EndDate": null,
    "ModificationDate": "2001-05-26T18:06:32.9930000",
    "DocumentId": "2076071393",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5235",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "DANGERS OF EATING RAW SPROUTS        ",
    "SortOrdinal": null,
    "ItemChar": "The U.S. Food and Drug Administration has issued the following warning to consumers: Do not eat raw sprouts. This warning comes in response to outbreaks that have occurred among people of all ages and gender who have eaten raw sprouts like alfalfa, clover, and radish.\n\nRaw sprouts have been identified as a source of food-borne illness in the United States. These illnesses result from the pathogenic bacteria salmonella and E. coli. Alfalfa and clover sprouts are the main causes, but all raw sprouts pose a potential risk.\n\nIn healthy adults, infections from salmonella and E. coli manifest as diarrhea, nausea, abdominal cramps, and fever that last for several days. However, in young children, the elderly, and those who have weakened immune systems, infections from these bacteria can be life threatening.",
    "ItemText": null,
    "CreateDate": "2001-05-26T18:07:06.0400000",
    "EndDate": null,
    "ModificationDate": "2001-05-26T18:07:06.0400000",
    "DocumentId": "2076071394",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5236",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VEGETARIAN DIET-MISSING LINKS     ",
    "SortOrdinal": null,
    "ItemChar": "With careful planning, you can follow a vegetarian diet that provides all the vitamins, minerals, calories, and protein your body needs. If you don't carefully plan your meals, you can compromise some nutrients. \n\nListed below are the nutrients that are more likely to be at risk in vegetarian diets, along with the sources for obtaining these nutrients:\n\nIron (delivers oxygen throughout the body)---found in fish and poultry, but also in dark, leafy green vegetables, whole grains, and soy products\n \nZinc (needed for growth/repair of tissues)---found in fish and poultry, nuts and seeds, hard cheeses, whole grains, and soy products\n\nCalcium (needed for healthy bones and teeth)---found in milk, cheese, broccoli, almonds, legumes, and soy products\n\nVitamin D (needed for healthy bones)---found in milk. With adequate sun exposure, the body can produce its own vitamin D.\n\nVitamin B12 (needed for cell growth)---found in milk products and eggs. For strict vegetarians, this nutrient must be supplemented.",
    "ItemText": null,
    "CreateDate": "2001-05-26T18:07:46.6630000",
    "EndDate": null,
    "ModificationDate": "2001-05-26T18:07:46.6630000",
    "DocumentId": "2076071395",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5237",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "LOCK IN THE FRESHNESS        ",
    "SortOrdinal": null,
    "ItemChar": "Sometimes, food stays in the refrigerator a little longer than we initially expect. If this often happens to you, then pay attention. There are certain guidelines you should follow to keep food safe, especially when it has passed its prime peak of freshness.\n\nKeep the following guidelines in mind when purchasing and storing fruits:\n\nApples, grapefruit, oranges, and tangerines should be stored uncovered in the refrigerator and should be used within two weeks of purchasing.\n\nBananas should be stored at room temperature and used within two to three days after the green disappears.\n\nGrapes should be stored unwashed and uncovered in the refrigerator and used within four to six days.\n\nLemons and limes should be stored uncovered in the refrigerator and used within ten days to two weeks.\n\nPears should be stored at room temperature until ripe, then stored in the refrigerator crisper. Eat pears within three to five days of purchase.",
    "ItemText": null,
    "CreateDate": "2001-05-26T18:10:04.1270000",
    "EndDate": null,
    "ModificationDate": "2001-05-26T18:10:04.1270000",
    "DocumentId": "2076071396",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5238",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "HEALING FOODS        ",
    "SortOrdinal": null,
    "ItemChar": "Some foods can actually heal the body. Here are some of the recognized foods with healing potential:\n\nBroccoli: a good source of fiber and beta-carotene and also a good source of vitamin C, the cancer-fighting antioxidant.\n\nPectin-rich foods such as apples, grapefruit,and oranges: shown to reduce blood cholesterol levels. \n\nOats: an excellent source of fiber that significantly impacts cholesterol levels. \n\nPeppers: incredibly high in vitamin C.\n\nPotatoes: good sources of vitamin C. Sweet potatoes are high in beta-carotene.\n\nGarlic and onions: have the ability to lower blood cholesterol levels.\n\nLow-fat yogurt: good, low-fat source of calcium.\n\nLeafy, dark green vegetables: high in beta-carotene and have significant amounts of iron and fiber.\n\nSoybeans and soy products: good source of protein, soluble fiber, and B-complex vitamins. Soybeans have been shown to help cells in a precancerous stage revert to normal.",
    "ItemText": null,
    "CreateDate": "2004-05-21T17:23:55.5230000",
    "EndDate": null,
    "ModificationDate": "2004-05-21T17:23:55.5230000",
    "DocumentId": "2076071397",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5239",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBScript and ASP: ADO PROBLEM: Error '800a0bb9'; ADO Filter Property Error\n",
    "SortOrdinal": null,
    "ItemChar": "The following throws ADODB.Recordset Error '800a0bb9' (\"Arguments are of the wrong type, are out of acceptable range or are in conflict with one another.\") in VBScript:\n\n    objListRst.Filter = objH1Rst.Fields(\"filter\")\n\nThis is because the Filter property of ADO expects a string literal. This error can be avoided with implicit conversion:\n\n    objListRst.Filter = objH1Rst.Fields(\"filter\") & vbNullString\n\nor explicit conversion:\n\n    objListRst.Filter = Cstr(objH1Rst.Fields(\"filter\"))\n",
    "ItemText": null,
    "CreateDate": "2001-05-26T18:12:57.6570000",
    "EndDate": null,
    "ModificationDate": "2001-05-26T18:12:57.6570000",
    "DocumentId": "2076071398",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5240",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL: Using OPENROWSET to Join Server Data with File-based Data\n",
    "SortOrdinal": null,
    "ItemChar": "USE pubs\n;\n\nSELECT\n    Customers.*\n,   Orders.*\nFROM\n    Northwind.dbo.Customers AS Customers\n,   OPENROWSET(\n        -- OLE DB Provider Name:\n        'Microsoft.Jet.OLEDB.4.0'\n\n        -- OLE DB Provider Source, ID and Password or Connection String:\n    ,   'C:\\Program Files\\Access97\\Office\\Samples\\northwind.mdb';'admin';''\n\n        -- OLE DB Provider Object (e.g. table name) or Pass-Through Query:\n    ,   Orders\n    ) AS Orders\nWHERE\n    Customers.CustomerID = Orders.CustomerID \nGO",
    "ItemText": null,
    "CreateDate": "2001-05-26T18:13:57.0400000",
    "EndDate": null,
    "ModificationDate": "2001-05-26T18:13:57.0400000",
    "DocumentId": "2076071399",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5241",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL: Dynamic SQL in a Stored Procedure; sp_executesql\n",
    "SortOrdinal": null,
    "ItemChar": "DECLARE @vSQL nvarchar(4000)\n\nSET @vSQL = 'SELECT * FROM authors'\n\nEXECUTE sp_executesql @vSQL",
    "ItemText": null,
    "CreateDate": "2001-05-26T18:14:43.7130000",
    "EndDate": null,
    "ModificationDate": "2001-05-26T18:14:43.7130000",
    "DocumentId": "2076071400",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5242",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Word 2000: GetHTMLStyles()",
    "SortOrdinal": null,
    "ItemChar": "Public Sub GetHTMLStyles()\n    Dim objParagraph As Word.Paragraph\n    Dim objStyle As Word.Style, blnHTMLStyleFound As Boolean\n\n    'Check for Word document with Word HTML Styles.\n    With Application\n        If .Documents.Count = 0 Then\n            Call VBA.MsgBox(\"There are no documents open to format.\")\n            Exit Sub\n        Else\n            For Each objStyle In Application.ActiveDocument.Styles\n                If objStyle.InUse And objStyle.NameLocal = \"HTML Markup\" Then\n                    blnHTMLStyleFound = True\n                    Exit For\n                End If\n            Next\n            \n            If Not (blnHTMLStyleFound) Then\n                Call VBA.MsgBox(\"Word HTML Styles are not in use in this document.\" _\n                   & VBA.Space(1) & \"Formatting cannot continue.\")\n                Exit Sub\n            End If\n            \n        End If\n    End With\n    \n    'Select all.\n    Call Application.ActiveDocument.Range.Select\n    \n    'Format all text.\n    Call HTMLFormatAll\n\n\n    'Format all headings.\n    Call HTMLFormatHeading\n    \n    'Format body (avoid Word tables).\n    For Each objParagraph In Application.ActiveDocument.Paragraphs\n        If Not (objParagraph.Style Like \"H?\") And (Application.Selection.Cells.Count = 0) Then\n            Call objParagraph.Range.Select\n            Call HTMLFormatBody\n        End If\n    Next\n    \n    Application.ActiveWindow.ActivePane.View.ShowAll = True\n    Application.Selection.HomeKey Unit:=wdStory\n    Call FindReset\n    Call VBA.MsgBox(\"Formatting complete.\")\n\nEnd Sub\n\nPrivate Sub HTMLFormatAll()\n    'Replace “ with &#8220;.\n    Call FindReset\n    With Selection.Find\n        .Forward = True\n        .Wrap = wdFindStop\n        .Format = True\n        .MatchCase = False\n        .MatchWholeWord = False\n        .MatchWildcards = False\n        .MatchSoundsLike = False\n        .MatchAllWordForms = False\n        \n        .Text = \"“\"\n        .Replacement.Text = \"&#8220;\"\n        .Replacement.Style = ActiveDocument.Styles(\"HTML Markup\")\n        \n        Call .Execute(Replace:=wdReplaceAll)\n    End With\n\n    'Replace ” with &#8221;.\n    Call FindReset\n    With Selection.Find\n        .Forward = True\n        .Wrap = wdFindStop\n        .Format = True\n        .MatchCase = False\n        .MatchWholeWord = False\n        .MatchWildcards = False\n        .MatchSoundsLike = False\n        .MatchAllWordForms = False\n        \n        .Text = \"”\"\n        .Replacement.Text = \"&#8221;\"\n        .Replacement.Style = ActiveDocument.Styles(\"HTML Markup\")\n        \n        Call .Execute(Replace:=wdReplaceAll)\n    End With\n\n    'Replace ‘ with &#8216;.\n    Call FindReset\n    With Selection.Find\n        .Forward = True\n        .Wrap = wdFindStop\n        .Format = True\n        .MatchCase = False\n        .MatchWholeWord = False\n        .MatchWildcards = False\n        .MatchSoundsLike = False\n        .MatchAllWordForms = False\n        \n        .Text = \"‘\"\n        .Replacement.Text = \"&#8216;\"\n        .Replacement.Style = ActiveDocument.Styles(\"HTML Markup\")\n        \n        Call .Execute(Replace:=wdReplaceAll)\n    End With\n\n    'Replace ’ with &#8217;.\n    Call FindReset\n    With Selection.Find\n        .Forward = True\n        .Wrap = wdFindStop\n        .Format = True\n        .MatchCase = False\n        .MatchWholeWord = False\n        .MatchWildcards = False\n        .MatchSoundsLike = False\n        .MatchAllWordForms = False\n        \n        .Text = \"’\"\n        .Replacement.Text = \"&#8217;\"\n        .Replacement.Style = ActiveDocument.Styles(\"HTML Markup\")\n        \n        Call .Execute(Replace:=wdReplaceAll)\n    End With\n\n    'Replace - with &#8212;.\n    Call FindReset\n    With Selection.Find\n        .Forward = True\n        .Wrap = wdFindStop\n        .Format = True\n        .MatchCase = False\n        .MatchWholeWord = False\n        .MatchWildcards = False\n        .MatchSoundsLike = False\n        .MatchAllWordForms = False\n        \n        .Text = \"-\"\n        .Replacement.Text = \"&#8212;\"\n        .Replacement.Style = ActiveDocument.Styles(\"HTML Markup\")\n        \n        Call .Execute(Replace:=wdReplaceAll)\n    End With\n\n    'Replace - with &#8211;.\n    Call FindReset\n    With Selection.Find\n        .Forward = True\n        .Wrap = wdFindStop\n        .Format = True\n        .MatchCase = False\n        .MatchWholeWord = False\n        .MatchWildcards = False\n        .MatchSoundsLike = False\n        .MatchAllWordForms = False\n        \n        .Text = \"-\"\n        .Replacement.Text = \"&#8211;\"\n        .Replacement.Style = ActiveDocument.Styles(\"HTML Markup\")\n        \n        Call .Execute(Replace:=wdReplaceAll)\n    End With\n\n    'Replace … with &#8230;.\n    Call FindReset\n    With Selection.Find\n        .Forward = True\n        .Wrap = wdFindStop\n        .Format = True\n        .MatchCase = False\n        .MatchWholeWord = False\n        .MatchWildcards = False\n        .MatchSoundsLike = False\n        .MatchAllWordForms = False\n        \n        .Text = \"…\"\n        .Replacement.Text = \"&#8230;\"\n        .Replacement.Style = ActiveDocument.Styles(\"HTML Markup\")\n        \n        Call .Execute(Replace:=wdReplaceAll)\n    End With\n\nEnd Sub\n\nPrivate Sub HTMLFormatHeading()\n    'Replace Word .DOC Headings with Word HTML Headings.\n    Call FindReset\n    With Selection.Find\n        .Forward = True\n        .Wrap = wdFindStop\n        .Format = True\n        .MatchCase = False\n        .MatchWholeWord = False\n        .MatchWildcards = False\n        .MatchSoundsLike = False\n        .MatchAllWordForms = False\n        \n        .Style = ActiveDocument.Styles(\"Heading 1\")\n        .Replacement.Style = ActiveDocument.Styles(\"H1\")\n        Call .Execute(Replace:=wdReplaceAll)\n    \n    End With\n\n    Call FindReset\n    With Selection.Find\n        .Forward = True\n        .Wrap = wdFindStop\n        .Format = True\n        .MatchCase = False\n        .MatchWholeWord = False\n        .MatchWildcards = False\n        .MatchSoundsLike = False\n        .MatchAllWordForms = False\n        \n        .Style = ActiveDocument.Styles(\"Heading 2\")\n        .Replacement.Style = ActiveDocument.Styles(\"H2\")\n        Call .Execute(Replace:=wdReplaceAll)\n    \n    End With\n\n    Call FindReset\n    With Selection.Find\n        .Forward = True\n        .Wrap = wdFindStop\n        .Format = True\n        .MatchCase = False\n        .MatchWholeWord = False\n        .MatchWildcards = False\n        .MatchSoundsLike = False\n        .MatchAllWordForms = False\n        \n        .Style = ActiveDocument.Styles(\"Heading 3\")\n        .Replacement.Style = ActiveDocument.Styles(\"H3\")\n        Call .Execute(Replace:=wdReplaceAll)\n    \n    End With\n\n    Call FindReset\n\nEnd Sub\n\nPrivate Sub HTMLFormatBody()\n    'Replace Bold formatting with Strong style.\n    Call FindReset\n    With Selection.Find\n        .Forward = True\n        .Wrap = wdFindStop\n        .Format = True\n        .MatchCase = False\n        .MatchWholeWord = False\n        .MatchWildcards = False\n        .MatchSoundsLike = False\n        .MatchAllWordForms = False\n        \n        .Font.Bold = True\n        .Replacement.Style = ActiveDocument.Styles(\"Strong\")\n        \n        Call .Execute(Replace:=wdReplaceAll)\n    End With\n\n    'Replace Italic formatting with Emphasis style.\n    Call FindReset\n    With Selection.Find\n        .Forward = True\n        .Wrap = wdFindStop\n        .Format = True\n        .MatchCase = False\n        .MatchWholeWord = False\n        .MatchWildcards = False\n        .MatchSoundsLike = False\n        .MatchAllWordForms = False\n        \n        .Font.Italic = True\n        .Replacement.Style = ActiveDocument.Styles(\"Emphasis\")\n        \n        Call .Execute(Replace:=wdReplaceAll)\n    End With\n\nEnd Sub\n\nPrivate Sub FindReset()\n    With Selection.Find\n        Call .ClearFormatting\n        Call .Replacement.ClearFormatting\n        .Text = vbNullString\n        .Replacement.Text = vbNullString\n    End With\nEnd Sub\n",
    "ItemText": null,
    "CreateDate": "2001-10-28T18:09:49.6530000",
    "EndDate": null,
    "ModificationDate": "2001-10-28T18:09:49.6530000",
    "DocumentId": "2076071401",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5243",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2000 and XML: Projecting XML Streams Dynamically from SQL Server",
    "SortOrdinal": null,
    "ItemChar": "Projecting XML on the fly out of a DBMS is useful. With SQL Server 2000, the Microsoft way of providing this functionality depends on constructing a \"Universal Table\" out of a SELECT statement featuring the new FOR XML clause. For an overview of this functionality, start with the following links:\n\n\"Retrieving Dynamic XML from SQL Server 7.0 and 2000\"\nhttp://www.15seconds.com/Issue/001102.htm\n\n\"Retrieving Result Sets into Streams\"\nhttp://msdn.microsoft.com/library/psdk/sql/adoprg03_6coj.htm\n\n\"Using EXPLICIT Mode\"\nhttp://msdn.microsoft.com/library/psdk/sql/ac_openxml_4y91.htm\n\n\"Guidelines for Using the FOR XML Clause\"\nhttp://msdn.microsoft.com/library/psdk/sql/ac_openxml_0alh.htm\n",
    "ItemText": null,
    "CreateDate": "2002-01-05T09:25:31.9570000",
    "EndDate": null,
    "ModificationDate": "2002-01-05T09:25:31.9570000",
    "DocumentId": "2076071402",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5244",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2000 and XML: Flippant Remarks about XML-Based Data Management",
    "SortOrdinal": null,
    "ItemChar": "Projecting data out of SQL Server 2000 with SELECT statements is not that difficult once one appreciates the \"Universal Table.\" Things become hairy and beta-like when we deal with INSERT and UPDATE procedures using XML. I do not like what I see. Here is what I have read so far:\n\n\"OPENXML\"\nhttp://msdn.microsoft.com/library/psdk/sql/ts_oa-oz_5c89.htm\n\n\"Using OPENXML\"\nhttp://msdn.microsoft.com/library/psdk/sql/ac_openxml_1cx8.htm\n\n\"PRB: Limitations of OpenXML in SQL Server 2000\"\nhttp://support.microsoft.com/support/kb/articles/Q279/4/34.ASP\n\nIn the XML for SQL Server 2000 Web Release 2, Beta 1 read \"Using Updategrams to Modify Data.\"\n\nI expect Microsoft to come out with an XML Server of some kind. Perhaps that is what BizTalk Server is?\n",
    "ItemText": null,
    "CreateDate": "2002-01-05T09:25:16.1930000",
    "EndDate": null,
    "ModificationDate": "2002-01-05T09:25:16.1930000",
    "DocumentId": "2076071403",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5245",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP and XML/XSL: Flippant Remarks About XML-Based Designs",
    "SortOrdinal": null,
    "ItemChar": "The main idea behind incorporating XML into ASP solutions (besides vacuous fashion trends labeled \"cool\") is to reduce dependency on Microsoft-specific components (while simultaneously being vendor-compliant). In keeping with this realistic goal, the first Microsoft-specific target is the ADO Recordset. The second major target is the use of ASP scripting languages to render HTML.\n\nFirst target: the ADO Recordset. Replace the ADO Recordset with the ADO Stream in ADO 2.5 and above:\n\n\"HOWTO: Obtain an ADO Recordset from XML\"\nhttp://support.microsoft.com/support/kb/articles/Q263/2/47.ASP\n\n\"Server-Side XML in ASP”\nhttp://www.15seconds.com/Issue/990527.htm\n\n\nSecond target: use XML/XSL to render HTML. This is based on the Microsoft.XMLDOM object.\n\n\"Separating Content from Presentation with Server-Side XML\"\nhttp://msdn.microsoft.com/library/periodic/period99/xml.htm\n\n\"'DXML': Taking a TOC from XML to DHTML\"\nhttp://msdn.microsoft.com/workshop/Author/dhtml/corner042699.asp\n",
    "ItemText": null,
    "CreateDate": "2005-09-16T14:37:00.1870000",
    "EndDate": null,
    "ModificationDate": "2005-09-16T14:37:00.1870000",
    "DocumentId": "2076071404",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5246",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP JScript and XML/XSL Code: Rendering HTML from Static XML/XSL Files",
    "SortOrdinal": null,
    "ItemChar": "<%@ LANGUAGE = JScript %>\n<%\n    // Set the source and style sheet locations here\n    var sourceFile = Server.MapPath(\"simple.xml\");\n    var styleFile = Server.MapPath(\"simple.xsl\");\n  \n    // Load the XML \n    var source = Server.CreateObject(\"Microsoft.XMLDOM\");\n    source.async = false;\n    source.load(sourceFile);\n\n    // Load the XSL\n    var style = Server.CreateObject(\"Microsoft.XMLDOM\");\n    style.async = false;\n    style.load(styleFile);\n\n    source.transformNodeToObject(style, Response);\n%>\n",
    "ItemText": null,
    "CreateDate": "2002-01-05T09:24:42.8530000",
    "EndDate": null,
    "ModificationDate": "2002-01-05T09:24:42.8530000",
    "DocumentId": "2076071405",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5247",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBScript, JScript and XML: Flippant Remarks about the XML Features of Internet Explorer 5.x; XMLHTTP; XMLDOM; XML Data Islands",
    "SortOrdinal": null,
    "ItemChar": "RDS and Data Binding in Internet Explorer (IE) have been replaced by Microsoft's implementation of XML for IE 5.x. The only time I get interested in this stuff is when I say, Wouldn't be cool to have a progress bar in a web page that does not need to refresh every few seconds to see what the server is doing? So far I answer this question with, The solution you are trying to build requires a progress bar for single-user, processor intensive tasks that should not be run from a browser anyway! But just in case I get the progress bar blues I have the following:\n\n\"GUI Input: Solving the 'Hard Refresh' Problem Using XML and ASP\"\nhttp://www.15seconds.com/Issue/000612.htm\n\n\"XMLHTTP: Super Glue for the Web\"\nhttp://www.15seconds.com/Issue/991125.htm\n\n\"Binding Client Side Controls Dynamically to an XML Data Source Object\"\nhttp://www.15seconds.com/Issue/010205.htm\n",
    "ItemText": null,
    "CreateDate": "2002-01-05T09:24:59.3800000",
    "EndDate": null,
    "ModificationDate": "2002-01-05T09:24:59.3800000",
    "DocumentId": "2076071406",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5248",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT PROBLEM: MMC Error Message; RPC Server Unavailable",
    "SortOrdinal": null,
    "ItemChar": "When you open the Microsoft Management Console (MMC) for Internet Information Server 4.x, the following error message appears:\n\n    Error connecting to [Computer Name]: The RPC server is unavailable.\n\nwhere [Computer Name] is the name of a computer but that name is not currently in use. For more details please see:\n\n\"Updating IIS after the Computer Name Is Changed\"\nhttp://support.microsoft.com/support/kb/articles/Q234/1/42.ASP\n",
    "ItemText": null,
    "CreateDate": "2001-06-08T18:44:33.3600000",
    "EndDate": null,
    "ModificationDate": "2001-06-08T18:44:33.3600000",
    "DocumentId": "2076071407",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5249",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Macromedia Flash 4: Flippant Remarks about Fundamental Design Points",
    "SortOrdinal": null,
    "ItemChar": "These fundamental \"design points\" must be addressed when building Flash 4 movies:\n\nPreloading. Macromedia addresses with this point with TechNote 14673 (\"How to preload movies in Flash 4 and earlier\"). Simultaneously, I have my own design.\n\nThe Tell Target action. Use of the Tell Target action implies an understanding of Timelines in particular and modular Flash design in general. Macromedia addresses with this point with TechNote 13479 (\"How to use the Tell Target action\"). Tell Target works on \"internal\" movies (i.e. Symbols behaving as Clips with an Instance Name) and \"external\" movies (i.e. entire SWF files loaded into a movie via the Load Movie Action).\n\nLoading external movies. Macromedia addresses with this point with TechNote 14190 (\"How to use Load Movie\"). The Load Movie action is what makes mature, modular, scalable, Flash web sites possible. Moreover, the Load Movie Action is very useful when preloading does not make good design sense. The classic case is loading a movie with large amounts of streaming audio.\n\nBackground music. I have my own way of using background music in Flash movies, where there are multiple sound loops toggling on and off. When the main Movie has one scene the Background music is loaded as a Symbol with Clip Behavior. When the movie has multiple scenes it is loaded with the Load Movie action. My design is based on at:\n\n    http://www.enetserve.com/tutorials/backgrndmusictutorial.html\n\nOther major issues. As of this writing, these links discuss other major design issues in detail:\n\nBill Tagliaferro's \"Generic Scroll Bar\":\n\n    http://www.enetserve.com/tutorials/scrollbartutorial.html\n\nMacromedia TechNote 14072: \"How to create a button that will send e-mail messages\"\nMacromedia TechNote 14156: \"How to create scrolling text\"\n\n\n",
    "ItemText": null,
    "CreateDate": "2002-06-12T13:39:26.4330000",
    "EndDate": null,
    "ModificationDate": "2002-06-12T13:39:26.4330000",
    "DocumentId": "2076071408",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5250",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB: ADO; Using SQL Wildcards Against Access Databases; Access 2000",
    "SortOrdinal": null,
    "ItemChar": "If you should ever have the misfortune of opening an Access database from ADO you will run into problems that Microsoft recognizes as bugs and has even released fixes in response to them. The main problem is trying to use the LIKE predicate and wildcard characters. There are quite a few Microsoft Knowledgebase articles that deal with the problem. Search it yourself.\n\nAs of this writing, there are only two things that effectively deal with this issue: using ADO 2.5 or above and understanding that ADO can use the wildcards (and character string delimiters) for SQL Server on Access databases. Using ADO 2.5 and above implies that you have all of the known bug fixes. Using SQL Server wildcards on Access databases, I assume, is a poorly communicated design goal of the \"ADO team\": the effort in translating ADO, dynamic SQL for Access to SQL Server (and vice versa) is reduced if the wildcards and character string delimiters are the same.\n\nMicrosoft deals with the issue in the most up-to-date detail in \"Intermediate Microsoft Jet SQL for Access 2000\" at:\n\n    http://msdn.microsoft.com/library/en-us/dnacc2k/html/acintsql.asp\n\nAfter a table of possible wildcards, you should find the words, \"The '%' and '_' wildcard characters in the previous table can be executed only through the Jet OLE DB provider and ADO. They will yield an empty result set if used through the Access SQL View user interface.\" This implication here should be clear.\n",
    "ItemText": null,
    "CreateDate": "2001-07-23T18:37:36.1870000",
    "EndDate": null,
    "ModificationDate": "2001-07-23T18:37:36.1870000",
    "DocumentId": "2076071409",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5251",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Hewlett-Packard 932C: Factory Ink Cartridges",
    "SortOrdinal": null,
    "ItemChar": "Black: hp 45 (51645g)\nTri-Color: hp 78 (c6578d)",
    "ItemText": null,
    "CreateDate": "2001-08-26T16:34:16.1200000",
    "EndDate": null,
    "ModificationDate": "2001-08-26T16:34:16.1200000",
    "DocumentId": "2076071411",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5252",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB Script and ASP Code: basCriteria(); Building Dynamic HTML Based on Variable Form Input",
    "SortOrdinal": null,
    "ItemChar": "Function basCriteria(vSQL,vDBField,vComparison,vFormValue,vDataType)\n    'Based on http://15seconds.com/issue/010629.htm.\n\n    Dim vValue,vArrayVal,vArray,vClauseStyle,vConnector\n    Dim vWildCard,vStrChar\n        \n    'ADO overrides the Microsoft Access MS-SQL wildcard ('*') and text delimiter (\"):\n    vWildCard = \"%\"\n    vStrChar = Chr(39)\n\n    basCriteria = vSQL\n    vValue = vFormValue\n    If Len(vValue) = 0 then Exit Function \n\n    vComparison = Trim(vComparison)\n    vDataType = Trim(vDataType)\n    vClauseStyle = Ucase(vComparison & \":\" & vDataType)\n          \n    Select Case vClauseStyle\n    Case \"=:CHR\"\n        vValue = vStrChar & Replace(vValue,vStrChar,vStrChar & vStrChar) & vStrChar\n              \n    Case \"=:NUM\", \">:NUM\", \"<:NUM\"\n        If (Not IsNumeric(vValue)) Then vValue = 0\n              \n    Case \"IN:CHR\"\n        vValue=Replace(vValue,\", \",\",\")\n        vValue=Replace(vValue,vStrChar,vStrChar & vStrChar)\n        vValue=\"(\" & vStrChar & Replace(vValue,\",\",vStrChar & \",\" & vStrChar) & vStrChar & \")\"\n          \n    Case \"IN:NUM\"\n        vValue=\"\"\n        For Each vArrayVal In vArray\n          If IsNumeric(vArrayVal) Then vValue = vValue & \",\" & Trim(vArrayVal)\n        Next\n\n        If Len(vValue) < 2 Then Exit Function \n        vValue = Mid(vValue,2) 'Remove leading comma.\n        vValue = \"(\" & vValue & \")\"\n                      \n    Case \"*:CHR\" 'Containing:\n        vComparison = \" LIKE \"\n        vValue = vStrChar & vWildCard & Replace(vValue,vStrChar,vStrChar & vStrChar) & vWildCard & vStrChar\n\n    Case \"=*:CHR\" 'Starting with:\n        vComparison = \" LIKE \"\n        vValue = vStrChar & vWildCard & Replace(vValue,vStrChar,vStrChar & vStrChar) & vStrChar\n\n    Case \"*=:CHR\" 'Ending with:\n        vComparison = \" LIKE \"\n        vValue = vStrChar & Replace(vValue,vStrChar,vStrChar & vStrChar) & vWildCard & vStrChar\n\n    Case Else\n        Err.Raise 1,\"Function basCriteria\", _\n            (\"Missing case for '\" & vClauseStyle & \"'\")\n    End Select\n\n    vConnector=\" WHERE \" 'For first criterion only.\n    If 0 < Instr(1,vSQL,\"WHERE\") Then vConnector = \" AND \" \n\n    basCriteria = vSQL & vConnector & vDBField & vComparison & vValue          \nEnd Function\n",
    "ItemText": null,
    "CreateDate": "2001-09-06T19:52:52.0100000",
    "EndDate": null,
    "ModificationDate": "2001-09-06T19:52:52.0100000",
    "DocumentId": "2076071412",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5253",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NT/2000: DCOMCNFG; Distributed Component Object Model Configuration Tool",
    "SortOrdinal": null,
    "ItemChar": "I hope to avoid knowing anything about this tool thanks (in advance) to the new .NET regime. However as of this writing I may need:\n\n    \"DCOMCNFG\"\n    http://msdn.microsoft.com/library/en-us/vcmfc98/html/_atl_dcomcnfg.asp\n\n    \"Setting Processwide Security Using DCOMCNFG\"\n    http://msdn.microsoft.com/library/en-us/com/hh/com/security_1xbb.asp\n\n    \"Setting Machine-Wide Security Using DCOMCNFG\"\n    http://msdn.microsoft.com/library/en-us/com/hh/com/security_5isn.asp\n\n    \"Setting Processwide Security Through the Registry\"\n    http://msdn.microsoft.com/library/en-us/com/hh/com/security_3jw9.asp",
    "ItemText": null,
    "CreateDate": "2001-09-06T20:15:35.1170000",
    "EndDate": null,
    "ModificationDate": "2001-09-06T20:15:35.1170000",
    "DocumentId": "2076071413",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5254",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "snow makes people serious: DV footage list",
    "SortOrdinal": null,
    "ItemChar": "Computer Monitor in Blur Drawing Screen\nBryan Testing His Desk",
    "ItemText": null,
    "CreateDate": "2001-09-06T22:26:21.6470000",
    "EndDate": null,
    "ModificationDate": "2001-09-06T22:26:21.6470000",
    "DocumentId": "2076071414",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5255",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Internet Explorer PROBLEM: Explorer Appears to Stop Responding When Started",
    "SortOrdinal": null,
    "ItemChar": "Internet Explorer 5.x may appear to stop responding (hang) when opened but the animated globe in the upper-right corner of the browser window may continue to spin and you may receive a \"Detecting proxy settings...\" message in the status bar. This issue can occur if Internet Explorer is trying to locate a proxy server.\n\nIn Internet Explorer 5, Proxy Auto-Discovery is enabled by default, and this feature may make it appear as if Internet Explorer is not responding.\n\nFor more details please see MS KB article Q220902:\n\nhttp://support.microsoft.com/support/kb/articles/q220/9/02.asp",
    "ItemText": null,
    "CreateDate": "2001-10-28T16:52:49.7630000",
    "EndDate": null,
    "ModificationDate": "2001-10-28T16:52:49.7630000",
    "DocumentId": "2076071415",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5256",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP, ADO and Microsoft Access PROBLEM: ASP Query Cannot Be Used with the LIKE Predicate",
    "SortOrdinal": null,
    "ItemChar": "The MS-SQL wildcard character '*' cannot be used in dynamic SQL statements scripted in ASP running against ADO. ADO must deal with ODBC or SQL Server conventions and requires '%' as the wildcard character.\n\nThe problem is associated with the error message: \"Expression cannot be used with the LIKE predicate in query expression.\" For more details see MS KB article Q162977:\n\n    http://support.microsoft.com/support/kb/articles/Q162/9/77.asp\n",
    "ItemText": null,
    "CreateDate": "2001-10-28T18:07:36.9900000",
    "EndDate": null,
    "ModificationDate": "2001-10-28T18:07:36.9900000",
    "DocumentId": "2076071416",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5257",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Word 2000: TogglePicturePlaceHolder()",
    "SortOrdinal": null,
    "ItemChar": "Public Sub TogglePicturePlaceHolder()\n    Dim intIndex As Integer\n    \n    If Application.Documents.Count = 0 Then Exit Sub\n\n    If Application.ActiveDocument.InlineShapes.Count = 0 Then Exit Sub\n\n    With ActiveWindow.View\n        .ShowPicturePlaceHolders = Not (.ShowPicturePlaceHolders)\n    End With\n    \n    Call TogglePictPlaceholderButton\n\nEnd Sub\n\nPrivate Sub TogglePictPlaceholderButton()\n    Dim intState As Integer\n    \n    With Application\n        If .ActiveWindow.View.ShowPicturePlaceHolders Then\n            intState = msoButtonDown\n        Else\n            intState = msoButtonUp\n        End If\n        \n        On Error Resume Next\n        .CommandBars.FindControl(Tag:=\"cmdPicPlaceholder\").State = intState\n    End With\nEnd Sub",
    "ItemText": null,
    "CreateDate": "2001-10-28T18:10:38.3730000",
    "EndDate": null,
    "ModificationDate": "2001-10-28T18:10:38.3730000",
    "DocumentId": "2076071417",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5258",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP, ADO and Microsoft Access PROBLEM: Access MDB File Fails to Open or Appears Locked",
    "SortOrdinal": null,
    "ItemChar": "The IIS user account (e.g. IUSR_<machine name>) requires dangerously high levels of security permissions to open Access MDB files via ASP. When it cannot open the Access database this error may be thrown:\n\nMicrosoft OLE DB Provider for ODBC Drivers (0x80004005) [Microsoft][ODBC Microsoft Access Driver] The Microsoft Jet database engine cannot open the file '(unknown)'. It is already opened exclusively by another user, or you need permission to view its data.\n\nI will not recommend what should be done in response to this problem as using Access databases behind any serious web site totally sucks in ways thought not suckable. Microsoft, alternatively, has more details (MS KB article Q174943):\n\n    http://support.microsoft.com/support/kb/articles/q174/9/43.asp\n",
    "ItemText": null,
    "CreateDate": "2001-10-28T18:23:53.9770000",
    "EndDate": null,
    "ModificationDate": "2001-10-28T18:23:53.9770000",
    "DocumentId": "2076071418",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5259",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "IIS 5.0: Minimum NTFS Permissions",
    "SortOrdinal": null,
    "ItemChar": "This MS KB article (Q271071) lists the minimum NTFS access permissions that are needed for an IIS 5.0 Web site:\n\n    http://support.microsoft.com/support/kb/articles/q271/0/71.ASP\n\nGood reference.",
    "ItemText": null,
    "CreateDate": "2001-10-28T18:27:45.0370000",
    "EndDate": null,
    "ModificationDate": "2001-10-28T18:27:45.0370000",
    "DocumentId": "2076071419",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5260",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "IIS and MS Office Applications: Flippant Remarks",
    "SortOrdinal": null,
    "ItemChar": "Eventually some under-informed bozo may suggest using a web server to automate Microsoft Office applications. I used to summarily dismiss this talk as another Homer Simpson overdosing on the doughnuts. However, as I get older and more tolerant I realize that I must explore the possibility that this so-called bozo is suggesting that we stream IIS responses back to the client using MIME types based on Microsoft Office formats. In a low-traffic Intranet environment it may not be such a \"stupid\" idea to stream an Excel spreadsheet into a web browser.\n\nThe MS KB article \"INFO: Considerations for Server-Side Automation of Office\" (Q257757) goes into more detail:\n\n    http://support.microsoft.com/support/kb/articles/q257/7/57.asp\n",
    "ItemText": null,
    "CreateDate": "2002-03-10T09:25:30.2230000",
    "EndDate": null,
    "ModificationDate": "2002-03-10T09:25:30.2230000",
    "DocumentId": "2076071420",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5261",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP, VBScript and CDONTS PROBLEM: Permission Denied Error",
    "SortOrdinal": null,
    "ItemChar": "If the anonymous user account is not granted at least CHANGE permissions to the SMTP mail server folders the following error may be thrown:\n\n    Microsoft VBScript runtime error '800a0046'\n    Permission denied\n    /filename.asp, line xxx\n\nFor more details please see MS KB article (Q197619):\n\n    http://support.microsoft.com/support/kb/articles/Q197/6/19.ASP\n",
    "ItemText": null,
    "CreateDate": "2001-10-28T18:50:14.7800000",
    "EndDate": null,
    "ModificationDate": "2001-10-28T18:50:14.7800000",
    "DocumentId": "2076071421",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5262",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP and HTML: Flippant Remarks about IIS Caching",
    "SortOrdinal": null,
    "ItemChar": "According to its KB article, Microsoft places caching (in the pre-.NET world) in the three contexts: the browser (client), the web server and the proxy server. The code appears with respect to these contexts as HTML:\n\n    <META HTTP-EQUIV=\"PRAGMA CONTENT=\"NO-CACHE\">\n\nas IIS ASP:\n\n    <% Response.Expires = 0 %>\n\nand as Proxy Server ASP:\n\n    <% Response.cachecontrol= \"public\" %>\n\nFor more details and explanations please see Q189409:\n    http://support.microsoft.com/support/kb/articles/Q189/4/09.ASP\n",
    "ItemText": null,
    "CreateDate": "2001-10-28T19:58:56.0800000",
    "EndDate": null,
    "ModificationDate": "2001-10-28T19:58:56.0800000",
    "DocumentId": "2076071422",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5263",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 2000: Flippant Remarks about Losing Windows 2000",
    "SortOrdinal": null,
    "ItemChar": "I lost my SYSTEM hive and Windows 2000 would not start. I was shocked but comfortably numb. At least it wasn't a hard disk failure. I assumed the worst-case scenario would be something like what I recorded back in my halcyon days of Windows NT:\n\n    http://www.kintespace.com/kb/articles/912851386.html\n\nHowever, I found that Windows 2000 has something called Windows Recovery Console. As of this writing it is described at:\n\n    http://support.Microsoft.com/support/kb/articles/Q229/7/16.ASP\n\nThis tool allowed me to recover my SYSTEM hive in a process that is similar to the one described in detail at:\n\n    http://support.Microsoft.com/support/kb/articles/Q269/0/75.ASP\n\nThe technique centers upon having a backup copy of the registry. The copy I was forced to use was not updated because I failed to understand the importance of making an Emergency Backup Disk.\n\nOnce the SYSTEM hive was replaced via the Console Windows booted up. The next stage was to look through the Event Logs for errors and responding to them. Many things happened beyond the scope of this funky thang. Let's just say that details were hell.\n",
    "ItemText": null,
    "CreateDate": "2001-12-06T21:38:44.4670000",
    "EndDate": null,
    "ModificationDate": "2001-12-06T21:38:44.4670000",
    "DocumentId": "2076071426",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5264",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2000: Flippant Remarks about Designing for Portability",
    "SortOrdinal": null,
    "ItemChar": "Microsoft Access has the MDB file to represent its \"classic\" IISAM data stores in the OS file system; and we can't forget about its associated LDB file that appears when the MDB is opened and vanishes when closed. I see something similar in the SQL Server world: the MDF and LDF files. These two files make up the SQL Server database. In the SQL Server Enterprise Manager MMC Snap-in user the Databases folder you will find graphical representations of the state and contents of these files.\n\nWhat was not apparent to me was a brute force way to move these files around when 100% database uptime is not a concern: Right click on the database in the Enterprise Manager select All Tasks > Take Offline. Now the files are just like Access files and are free to be moved around. (If you don't know where your SQL Server database files are then right-click on the database in the Enterprise Manager and select Properties. You will find the path(s) to your files under the Data Files tab and the Transaction Log tab.) Of course, the Take Offline command toggles into the Bring Online command. Finally, to move the files from server to server, we have the Detach Database... and Attach Database... Enterprise Manager commands in the same drop down list as the previously mentioned commands. The only caveats that I am aware of---besides the uptime issue---are making sure that the bizarre file incompatibility problems don't come up (like differences among SQL Server 2000 (at various Service Pack levels) and SQL 7 servers and Collation issues).\n\nOne of my major conceptual departures from the MS Access world was dealing with powerful Data Transformation Services local packages. These local packages do not move with databases as they are at the server-level. I have two ways of moving these files from server to server under the Save DTS Package dialog in the Enterprise Manager: one is to select Package > Save As... > Location > SQL Server > Server: and change the server to another server; the other method is to select Package > Save As... > Location > Structured Storage File > File name: and choose a path and the file name of the Structured Storage File. The latter method is useful for brute-force backups.\n\nThe brute-force backup is very useful for the SQL Server developer with no real operations support and a Zip Disk or CD burner. We can see that all we need to do is to take our database offline, save some Structured Storage Files and copy or burn to disk. We must remember to bring the database back online so our demos will work.\n\nOne of my biggest show stoppers (when the demo embarrassingly stalls) is having permissions problems with Stored Procedures moved to a new server. I \"try\" to deal with this problem by writing stored procedures in a script form where the end of the script grants Execute permissions to a database role that I define. When moving from server to I make sure that each server has this role. I then assign this role to the appropriate users (which changes from server to server and/or network domain). It follows that I have role to many servers where many servers have many users. Makes sense to me.\n",
    "ItemText": null,
    "CreateDate": "2002-01-15T00:26:20.5230000",
    "EndDate": null,
    "ModificationDate": "2002-01-15T00:26:20.5230000",
    "DocumentId": "2076071427",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5265",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Caligari trueSpace 5.1: User Manual Highlights, Chapters 1 through 3",
    "SortOrdinal": null,
    "ItemChar": "Chapter 1: This is a satisfactory tutorial. No complaints.\n\n\nChapter 2: User Interface\n\n* Make sure that the UI matches that in the manual by loading \"ts5 configuration\" from the Configuration Library.\n\n* Right-click on the New Perspective View Tool to choose a solid or wire frame rendering. This feature applies to all auxiliary windows.\n\n* Click and hold on the Object Tool to show the Global Panel Tool.\n\n* Click and hold on the Draw Object as Solid Tool to show all real-time rendering tools. These options are also available via the Global Panel.\n\n* The View Navigation tools only appear auxiliary windows under the default \"ts5 configuration\" settings. You can add these tools via the repository in the Recycle Bin Tool (right-click on it).\n\n* You can toggle between axes while dragging the edge of the Object Selector by right-clicking.\n\n* Click on the Selector Orientation Sphere to toggle rotation diamonds.\n\n* The Look at Current Object Tool should prove to be very useful.\n\n\nChapter 3: Projects & Libraries\n\n* Almost all end-user customizations are stored in libraries. These libraries can then be \"wrapped up\" into a Project. By default, trueSpace copies pre-existing libraries into the Project folder.\n\n* Share a Library among multiple projects by selecting File > Load > Library...",
    "ItemText": null,
    "CreateDate": "2004-05-18T21:38:57.8670000",
    "EndDate": null,
    "ModificationDate": "2004-05-18T21:38:57.8670000",
    "DocumentId": "2076071428",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5266",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Macromedia Flash 5: Flippant Remarks about Movie Design; fscommand(); JavaScript; \"Sniffers\"",
    "SortOrdinal": null,
    "ItemChar": "General:\nA Flash Movie is a hierarchy of one or more Movie Clips controlled (hopefully) by ActionScript. An example of not upholding the design principle behind the previous sentence is to make a Movie with two Key Frames separated by empty frames instead of making a Movie that contains a clip with two frames controlled by ActionScript.\n\nActionScript and JavaScript:\nActionScript in Flash 5 has matured from an afterthought to a version 1.0 nightmare. Flash still has difficulty interacting with HTML pages via fscommand() especially Internet Explorer on the Macintosh. This is detailed in TechNote 13638 (\"Flash and Internet Explorer Issues on the Macintosh Platform\"). What is most surprising is discovering (after many hours of pointless work) is that the getURL() action does not work as expected. This is detailed in TechNote 04157 (\"Using relative URLs with the getURL action\").\n\nThe ActionScript Editor itself needs to at least be as mature as the text editor in the current version HomeSite. As of version 5, it reeks of version 1 \"simplicity.\" HomeSite already has automatic statement completion and other bells and whistles that I eagerly look forward to in Flash. I will never be compelled to upgrade my copy of Flash 5 until I see some serious movement here.\n\nHTML and Flash:\nFlash should support at least one W3C standard version of HTML (hopefully version 4 or even XHTML 1.0). This will allow Dynamic Text boxes to support, say, the STRONG element in addition to the totally bogus B and FONT tags. Supporting the SPAN element may ask too much for what must be an overworked Flash development team: supporting this tag implies that Flash would support Cascading Style Sheets. This request may be answered with, \"Hey, Flash is not a web browser!\" My retort to that would be, License Mozilla's Gecko!\n\nXHTML and Flash:\nA future version of Flash should be able to parse XHTML pages (regardless of linefeeds and carriage returns). This will allow data shown as \"plain HTML\" for browsers not playing Flash to be loaded on the fly into Flash as well as JPEG bitmaps (not GIFs!) promise to dynamically load in FlashMX. This would be the most balanced compromise between building one Flash-only site and building two separate sites for respective Flash and non-Flash users. Macromedia HomeSite already supports XHTML so this shouldn't cost too much.\n\nBrowser Sniffing\nAs of this writing there are three ways to programmatically determine if the browser can play Flash: using JavaScript exclusively, using Flash exclusively or using bits of both. The Flash-exclusive method would be the most attractive but it depends almost entirely upon getURL() working properly. So this leaves the JavaScript method. The best (and most current) JavaScript sniffer I've seen so far is the moock fpi at:\n\n    http://moock.org/webdesign/flash/detection/moockfpi/\n\nMacromedia's own \"kit\" is out of date and does not appear to be actively supported.",
    "ItemText": null,
    "CreateDate": "2002-12-13T09:47:05.0000000",
    "EndDate": null,
    "ModificationDate": "2002-12-13T09:47:05.0000000",
    "DocumentId": "2076071429",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5267",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Email Blurb: \"Unsubscription\"",
    "SortOrdinal": null,
    "ItemChar": "The following email address was not found in our database:\n\n<???>\n\nPlease send a different address that you may have used in the past so we can remove these items as quickly as possible.\n",
    "ItemText": null,
    "CreateDate": "2002-05-23T10:08:46.0130000",
    "EndDate": null,
    "ModificationDate": "2002-05-23T10:08:46.0130000",
    "DocumentId": "2076071441",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5268",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP Code: File Upload with a Single PHP Script File",
    "SortOrdinal": null,
    "ItemChar": "<?php\n    /*\n        This code is loosely based\n        on john@php-dude.com,\n        the post 27-Jul-2001 12:00\n        at http://www.php.net/manual/en/features.file-upload.php.\n    */\n\n    $HTML = NULL;\n\n    if(count($HTTP_POST_FILES) > 0){\n        $allowed_types = array(\"application/pdf\",\"text/plain\",\"text/html\"); \n        $size_limit = \"100000\"; //bytes\n\n        $file = $HTTP_POST_FILES[\"file\"][\"name\"]; \n        $type = $HTTP_POST_FILES[\"file\"][\"type\"]; \n        $size = $HTTP_POST_FILES[\"file\"][\"size\"]; \n        $temp = $HTTP_POST_FILES[\"file\"][\"tmp_name\"]; \n\n        $path_info = pathinfo($PATH_TRANSLATED);\n\n        //Web server anonymous user must have\n        //write permissions to this path:\n        $write_path = $path_info[\"dirname\"] . \"/\" . $file;\n\n        if ($file){ \n            if ($size < $size_limit){ \n                if (in_array($type,$allowed_types)){ \n                    if(move_uploaded_file($temp,$write_path)){\n                        $HTML = \"<div>The file <tt>$file</tt> was sucessfully uploaded.</div>\";\n                    }\n                    else{\n                        $HTML = \"<div>The file <tt>$file</tt> upload failed.</div>\";\n                    }\n                }\n                else { \n                    $HTML = \"<div>Files of type <tt>$type</tt> are not permitted.</div>\"; \n                }\n            }\n            else { \n                $HTML = \"<div>File exceeds the size limit of $size_limit bytes.</div>\";\n            }\n        } \n\n        $HTML .= \"\\n\";\n    }\n?>\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"\n\"http://www.w3.org/TR/REC-html40/loose.dtd\">\n<html>\n<head>\n    <meta name=VS_TARGETSCHEMA content=\"HTML 4.0\">\n    <meta name=\"editor\" content=\"Bryan Wilhite\">\n    <meta name=\"reply-to\" content=\"bwilhite@ucla.mednet.edu\">\n    <meta name=\"keywords\" content=\"\">\n    <meta name=\"description\" content=\"\">\n    <title>PHP File Upload Test</title>\n</head>\n<body>\n<?php echo $HTML ?>\n<form enctype=\"multipart/form-data\" action=\"<?php echo $PHP_SELF ?>\"\nmethod=\"POST\">\n    Upload a File:\n    <input name=\"file\" type=\"file\">\n    <input type=\"submit\" value=\"Upload\">\n</form>\n</body>\n</html>",
    "ItemText": null,
    "CreateDate": "2002-01-15T23:17:52.7430000",
    "EndDate": null,
    "ModificationDate": "2002-01-15T23:17:52.7430000",
    "DocumentId": "2076071442",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5269",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL Code: Example of Connecting to Index Server and Listing Files in Scope",
    "SortOrdinal": null,
    "ItemChar": "USE MyLocalServer\nGO\n\nIF OBJECT_ID('ListIDXFiles') IS NOT NULL \nBEGIN \n    DROP PROCEDURE ListIDXFiles\n    IF OBJECT_ID('ListIDXFiles') IS NOT NULL\n        PRINT '<<< FAILED DROPPING PROCEDURE ListIDXFiles >>>'\n    ELSE \n        PRINT '<<< DROPPED PROCEDURE ListIDXFiles >>>'\nEND\nGO\n\nCREATE PROCEDURE ListIDXFiles\n    (\n        @cmdID        int           = 0\n    ,   @columns      nvarchar(500) = NULL\n    ,   @scope        nvarchar(255) = NULL\n    ,   @contains     nvarchar(500) = NULL\n    ,   @order        nvarchar(255) = NULL\n    ,   @fileNameLike nvarchar(255) = NULL\n    )\n\nAS\n\n-- Description: List Files in Index Server Scope.\n-- Developer: Bryan Wilhite\n\nSET NOCOUNT ON\n\nIF NOT EXISTS(SELECT * FROM master.dbo.sysservers WHERE srvname = 'IDXSERVER')\nBEGIN\n    EXECUTE sp_addlinkedserver\n        @server     = IDXSERVER\n    ,   @srvproduct = 'Index Server'\n    ,   @provider   = 'MSIDXS'\n    ,   @datasrc    = 'Web'\n    --'Web' is the name of Index Server's default text search catalog.\nEND\n\nDECLARE\n    @tSQL nvarchar(4000)\n,   @test nvarchar(500)\n,   @sq   char(1)\n\nIF @cmdID = 0\nBEGIN\n    IF @columns IS NULL\n        SET @columns = 'DocTitle,Directory,Vpath,Path,ShortFileName,Filename,Size,Access,Create,Write,Characterization,Rank'\n\n    IF @scope IS NULL\n        SET @scope = '\"/\"'\n\n    IF @order IS NULL\n        SET @order = 'Rank DESC'\n\n    IF @fileNameLike IS NULL\n        SET @fileNameLike = '%.pdf'\n\n    SET @sq = CHAR(39)\n\n    IF @contains IS NOT NULL\n    BEGIN\n        -- Test only to prevent syntax errors.\n        SET @test = @contains\n        SET @test = REPLACE(@test,CHAR(34),'')\n        SET @test = REPLACE(@test,CHAR(39),'')\n        SET @test = REPLACE(@test,SPACE(1),'')\n        IF LEN(@test) = 0\n            RETURN\n\n        -- The use of NEAR() on the client causes \"Expecting Phrase\" error in .HTW files.\n        IF CHARINDEX(CHAR(34),@contains) = 0 AND CHARINDEX('NEAR',@contains) > 0 AND CHARINDEX('NEAR()',@contains) = 0\n            SET @contains = REPLACE(@contains,'NEAR','NEAR()')\n\n        SET @contains = REPLICATE(@sq,2) + @contains + REPLICATE(@sq,2)\n\n        SET @tSQL = 'SELECT * FROM OPENQUERY(IDXSERVER,'\n            + @sq + 'SELECT' + SPACE(1) + @columns\n            + SPACE(1) + 'FROM SCOPE('+ REPLICATE(@sq,2) + @scope + REPLICATE(@sq,2) + ')'\n            + SPACE(1) + 'WHERE CONTAINS(' + @contains + ') > 0'\n            + SPACE(1) + 'AND Filename LIKE' + SPACE(1) + REPLICATE(@sq,2) + @fileNameLike + REPLICATE(@sq,2)\n            + SPACE(1) + 'ORDER BY' + SPACE(1) + @order + @sq + ')'\n    END\n    ELSE\n    BEGIN\n        SET @tSQL = 'SELECT * FROM OPENQUERY(IDXSERVER,'\n            + @sq + 'SELECT' + SPACE(1) + @columns\n            + SPACE(1) + 'FROM SCOPE('+ REPLICATE(@sq,2) + @scope + REPLICATE(@sq,2) + ')'\n            + SPACE(1) + 'WHERE Filename LIKE' + SPACE(1) + REPLICATE(@sq,2) + @fileNameLike + REPLICATE(@sq,2)\n            + SPACE(1) + 'ORDER BY' + SPACE(1) + @order + @sq + ')'\n    END\n\n    --For debugging purposes:\n    --PRINT @tSQL\n    --RETURN\n\n    EXECUTE sp_executesql @stmt = @tSQL\nEND\nRETURN\nGO\n\nGRANT EXECUTE ON ListIDXFiles TO [Web Solutions Users]\nGO\n\nIF OBJECT_ID('ListIDXFiles') IS NOT NULL \n    PRINT '<<< CREATED PROCEDURE ListIDXFiles >>>' \nELSE \n    PRINT '<<< FAILED CREATING PROCEDURE ListIDXFiles >>>' \nGO",
    "ItemText": null,
    "CreateDate": "2007-11-19T15:16:26.0000000",
    "EndDate": null,
    "ModificationDate": "2007-11-19T15:16:26.0000000",
    "DocumentId": "2076071444",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5270",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 2000 Server: Flippant Remarks about Building a Virtual Router",
    "SortOrdinal": null,
    "ItemChar": "I saved a few hundred dollars by avoiding purchasing additional services from my broadband provider by connecting multiple computers to one Internet connection. With the purchase and installation of an additional NIC, my Windows 2000 server was ready to become a software-based router.\n\nThe entire journey to this goal was difficult. I really can't remember what I did to get it to work but at least I remember where the miserable journey started. First I realized that my broadband provider might be clever enough to figure out that I wanted to connect to their network with a \"real\" router and charge me more per month. With that in mind, I discovered the following article, \"Using Windows 2000 as a Home or Small Business Gateway,\" at:\n\n    http://www.microsoft.com/serviceproviders/\n        columns/windows_2000_home_office_gateway.asp\n\nThis showed me that what I was trying to do was install Routing and Remote Access. This topic is covered generously in the Windows Help documents, namely \"Deploying network address translation\" at:\n\n    http://www.microsoft.com/windows2000/\n        en/server/help/sag_rras-ch3_06d.htm\n\nI hope I never have to refer to this document within the context of trying to set up RRAS again. Networking has never been my strong suit.\n",
    "ItemText": null,
    "CreateDate": "2002-01-15T00:43:15.0800000",
    "EndDate": null,
    "ModificationDate": "2002-01-15T00:43:15.0800000",
    "DocumentId": "2076071445",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5271",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: Scanning A Root for Files and Directories with Scripting and rasxADO",
    "SortOrdinal": null,
    "ItemChar": "Private Sub basFavoritesScan(ByRef objADO As rasxADO.ADOServices, _\n    Optional ByVal Directory = \"\\\")\n\n    Dim objFolders As Scripting.Folders\n    Dim objFolder As Scripting.Folder\n    Dim objFiles As Scripting.Files\n    Dim objFile As Scripting.File\n    \n    Dim lngFolderCount As Long\n\n    Dim varParameters(0 To 1, 0 To 1) As Variant\n    'To be a two-dimensional array of form:\n    '   <param' name>, <row 0>\n    '   <param' value>, <row 0>\n    '   <param' name>, <row 1>\n    '   <param' value>, <row 1>\n    'etc.\n    \n    'For readability:\n    varParameters(0, 0) = \"@path\"\n    varParameters(1, 0) = vbNullString\n    \n    varParameters(0, 1) = \"@url\"\n    varParameters(1, 1) = vbNullString\n    \n    On Error GoTo basFavoritesScan_Err\n    \n    p_strInFile = basGetKeyString(\"path_root_favorites\") & Directory\n    Set objFolders = p_objFileSys.GetFolder(p_strInFile).SubFolders\n    \n    'Initialize Progress Bar.\n    Call basProgress(0, 0, objFolders.Count): p_lngStatusCount = 0\n    \n    For Each objFolder In objFolders\n    \n        varParameters(1, 0) = Directory & objFolder.Name\n        varParameters(1, 1) = \"Directory\"\n        If Not objADO.StoredProcCmd(\"NewFavorite\", varParameters, True) Then GoTo basFavoritesScan_Err\n        \n        Set objFiles = objFolder.Files\n        For Each objFile In objFiles\n            varParameters(1, 0) = Directory & objFolder.Name & \"\\\" & objFile.Name\n            varParameters(1, 1) = \"File\"\n            If Not objADO.StoredProcCmd(\"NewFavorite\", varParameters, True) Then GoTo basFavoritesScan_Err\n        Next\n        \n        'Mark progress.\n        p_lngStatusCount = p_lngStatusCount + 1: Call basProgress(p_lngStatusCount)\n    \n    Next\n    \n    'Terminate Progress Bar.\n    Call basProgress(0): p_lngStatusCount = 0\n\nbasFavoritesScan_Exit:\n    Exit Sub\n\nbasFavoritesScan_Err:\n    If (VBA.Err.Number <> 0) Or (p_objADO.Connection.Errors.Count > 0) Then\n        Call Me.basDataErrMsg(p_objADO, \"basFavorites()\")\n        If (VBA.Err.Number <> 0) Then\n            Resume basFavoritesScan_Exit\n        Else\n            GoTo basFavoritesScan_Exit\n        End If\n    End If\nEnd Sub",
    "ItemText": null,
    "CreateDate": "2002-01-15T01:10:49.7170000",
    "EndDate": null,
    "ModificationDate": "2002-01-15T01:10:49.7170000",
    "DocumentId": "2076071446",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5272",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Sales: kagi.com",
    "SortOrdinal": null,
    "ItemChar": "x",
    "ItemText": "x",
    "CreateDate": "2002-02-05T21:57:22.0130000",
    "EndDate": null,
    "ModificationDate": "2002-02-05T21:57:22.0130000",
    "DocumentId": "2076071448",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5273",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Registry: Removing Items from the Most Recently Used List",
    "SortOrdinal": null,
    "ItemChar": "To remove projects from your Most Recently Used list (and from the VS.NET Start Page) remove keys or edit values under the following key:\n\n    HKEY_CURRENT_USER\\Software\\Microsoft\\VisualStudio\\7.0\\ProjectMRUList\n\nYes, Visual Studio .NET uses the Windows Registry extensively. I assumed that all user settings would be in XML files but I was wrong. At present, it's back to the future.",
    "ItemText": null,
    "CreateDate": "2002-12-17T14:36:07.0000000",
    "EndDate": null,
    "ModificationDate": "2002-12-17T14:36:07.0000000",
    "DocumentId": "2076071452",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5274",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Command Script: Setting Default NTFS Permissions for a Server",
    "SortOrdinal": null,
    "ItemChar": "@ECHO OFF\nCOLOR 4F\nECHO **************************************************************\nECHO * This Command Script sets Default NTFS Permissions          *\nECHO * for the Ideal Windows 2000 Member Server.                  *\nECHO * For more details, please recall MS KB Articles Q244600     *\nECHO * and Q135268.                                               *\nECHO * Are you sure you want to continue? (Press Ctrl C to quit.) *\nECHO *                                                            *\nECHO *                                                            *\nECHO * WARNING: Permissions for \"Terminal Server User\"            *\nECHO * may be lost by running this script. Please review Q244600  *\nECHO * before running this script. Please report any errors       *\nECHO * in the script to rasx@songhaysystem.com.                   *\nECHO *                                                            *\nECHO **************************************************************\nPAUSE\n\nECHO Setting NTFS Permissions...\n%SystemDrive%;CD \\\n\nECHO Setting %SystemDrive%\\Program Files (and subfolders)...\nECHO y| CACLS \"%SystemDrive%\\Program Files\" /P Administrators:F \"CREATOR OWNER:F\" Users:R SYSTEM:F \"Terminal Server User:C\"\nECHO y| CACLS \"%SystemDrive%\\Program Files\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" Users:R SYSTEM:F \"Power Users:C\" \"Terminal Server User:C\"\n\n\nCLS\nECHO Setting %SystemDrive%\\Documents and Settings...\nECHO y| CACLS \"%SystemDrive%\\Documents and Settings\" /P Administrators:F \"Power Users:R\" Everyone:R Users:R SYSTEM:F\nECHO y| CACLS \"%SystemDrive%\\Documents and Settings\\*.*\" /P Administrators:F \"Power Users:R\" Everyone:R Users:R SYSTEM:F\n\nCLS\nECHO Setting %SystemDrive%\\Documents and Settings\\Administrator (and subfolders)...\nECHO y| CACLS \"%SystemDrive%\\Documents and Settings\\Administrator\" /P Administrator:F Administrators:F SYSTEM:F\nECHO y| CACLS \"%SystemDrive%\\Documents and Settings\\Administrator\\*.*\" /T /P Administrator:F Administrators:F SYSTEM:F\n\nCLS\nECHO Setting %SystemDrive%\\Documents and Settings\\All Users (and subfolders)...\nECHO y| CACLS \"%SystemDrive%\\Documents and Settings\\All Users\" /P Administrators:F \"Power Users:C\" Users:R Everyone:R SYSTEM:F\nECHO y| CACLS \"%SystemDrive%\\Documents and Settings\\All Users\\*.*\" /T /P Administrators:F \"Power Users:C\" Users:R Everyone:R SYSTEM:F\n\nCLS\nECHO Setting %SystemDrive%\\Documents and Settings\\Default User (and subfolders)...\nECHO y| CACLS \"%SystemDrive%\\Documents and Settings\\Default User\" /P Administrators:F \"Power Users:R\" Users:R Everyone:R SYSTEM:F\nECHO y| CACLS \"%SystemDrive%\\Documents and Settings\\Default User\\*.*\" /T /P Administrators:F \"Power Users:R\" Users:R Everyone:R SYSTEM:F\n\nCLS\nECHO Setting %SystemRoot% (and selected folders)...\nECHO y| CACLS %SystemRoot% /P Administrators:F \"CREATOR OWNER:F\" Everyone:R \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" Everyone:R \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Addins\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Addins\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Connection Wizard\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Connection Wizard\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Config\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Config\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Cursors\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Cursors\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Debug\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Debug\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Driver Cache\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Driver Cache\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Driver Cache\\I386\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Driver Cache\\I386\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Fonts\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Fonts\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Help\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Help\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Inf\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Inf\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Java\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Java\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Media\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Media\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\MSAgent\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\MSAgent\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\MSApps\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\MSApps\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\MWW32\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\MWW32\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Registration\" /P Administrators:F Everyone:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Registration\\*.*\" /P Administrators:F Everyone:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Repair\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Repair\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Security\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Security\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Speech\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Speech\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R Everyone:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R Everyone:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\CatRoot\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\CatRoot\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Com\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Com\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Config\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Config\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Dhcp\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:R\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Dhcp\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:R\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Drivers\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Drivers\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\DTCLog\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\DTCLog\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Export\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Export\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\GroupPolicy\" /P Administrators:F \"Authenticated Users:R\" SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\GroupPolicy\\*.*\" /T /P Administrators:F \"Authenticated Users:R\" SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\IAS\" /P Administrators:F \"CREATOR OWNER:F\" SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\IAS\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Inetsrv\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Inetsrv\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Mui\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Mui\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Npp\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Npp\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\NtmsData\" /P Administrators:F SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\NtmsData\\*.*\" /P Administrators:F SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Os2\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Os2\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Ras\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Ras\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Rocket\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Rocket\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Rpcproxy\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Rpcproxy\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Setup\" /P Everyone:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Setup\\*.*\" /P Everyone:F\nECHO y| CACLS \"%SystemRoot%\\System32\\ShellExt\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\ShellExt\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Spool\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" \"Print Operators:F\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Spool\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" \"Print Operators:F\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Wbem\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Wbem\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Wins\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Wins\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Temp\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" \"Authenticated Users:C\" SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Temp\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" \"Authenticated Users:C\" SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\twain_32\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\twain_32\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Web\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Web\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\n\nCLS\nECHO No more commands to process.\nECHO End of Command Script.\nPAUSE",
    "ItemText": "@ECHO OFF\nCOLOR 4F\nECHO **************************************************************\nECHO * This Command Script sets Default NTFS Permissions          *\nECHO * for the Ideal Windows 2000 Member Server.                  *\nECHO * For more details, please recall MS KB Articles Q244600     *\nECHO * and Q135268.                                               *\nECHO * Are you sure you want to continue? (Press Ctrl C to quit.) *\nECHO *                                                            *\nECHO *                                                            *\nECHO * WARNING: Permissions for \"Terminal Server User\"            *\nECHO * may be lost by running this script. Please review Q244600  *\nECHO * before running this script. Please report any errors       *\nECHO * in the script to rasx@songhaysystem.com.                   *\nECHO *                                                            *\nECHO **************************************************************\nPAUSE\n\nECHO Setting NTFS Permissions...\n%SystemDrive%;CD \\\n\nECHO Setting %SystemDrive%\\Program Files (and subfolders)...\nECHO y| CACLS \"%SystemDrive%\\Program Files\" /P Administrators:F \"CREATOR OWNER:F\" Users:R SYSTEM:F \"Terminal Server User:C\"\nECHO y| CACLS \"%SystemDrive%\\Program Files\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" Users:R SYSTEM:F \"Power Users:C\" \"Terminal Server User:C\"\n\n\nCLS\nECHO Setting %SystemDrive%\\Documents and Settings...\nECHO y| CACLS \"%SystemDrive%\\Documents and Settings\" /P Administrators:F \"Power Users:R\" Everyone:R Users:R SYSTEM:F\nECHO y| CACLS \"%SystemDrive%\\Documents and Settings\\*.*\" /P Administrators:F \"Power Users:R\" Everyone:R Users:R SYSTEM:F\n\nCLS\nECHO Setting %SystemDrive%\\Documents and Settings\\Administrator (and subfolders)...\nECHO y| CACLS \"%SystemDrive%\\Documents and Settings\\Administrator\" /P Administrator:F Administrators:F SYSTEM:F\nECHO y| CACLS \"%SystemDrive%\\Documents and Settings\\Administrator\\*.*\" /T /P Administrator:F Administrators:F SYSTEM:F\n\nCLS\nECHO Setting %SystemDrive%\\Documents and Settings\\All Users (and subfolders)...\nECHO y| CACLS \"%SystemDrive%\\Documents and Settings\\All Users\" /P Administrators:F \"Power Users:C\" Users:R Everyone:R SYSTEM:F\nECHO y| CACLS \"%SystemDrive%\\Documents and Settings\\All Users\\*.*\" /T /P Administrators:F \"Power Users:C\" Users:R Everyone:R SYSTEM:F\n\nCLS\nECHO Setting %SystemDrive%\\Documents and Settings\\Default User (and subfolders)...\nECHO y| CACLS \"%SystemDrive%\\Documents and Settings\\Default User\" /P Administrators:F \"Power Users:R\" Users:R Everyone:R SYSTEM:F\nECHO y| CACLS \"%SystemDrive%\\Documents and Settings\\Default User\\*.*\" /T /P Administrators:F \"Power Users:R\" Users:R Everyone:R SYSTEM:F\n\nCLS\nECHO Setting %SystemRoot% (and selected folders)...\nECHO y| CACLS %SystemRoot% /P Administrators:F \"CREATOR OWNER:F\" Everyone:R \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" Everyone:R \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Addins\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Addins\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Connection Wizard\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Connection Wizard\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Config\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Config\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Cursors\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Cursors\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Debug\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Debug\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Driver Cache\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Driver Cache\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Driver Cache\\I386\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Driver Cache\\I386\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Fonts\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Fonts\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Help\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Help\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Inf\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Inf\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Java\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Java\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Media\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Media\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\MSAgent\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\MSAgent\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\MSApps\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\MSApps\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\MWW32\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\MWW32\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Registration\" /P Administrators:F Everyone:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Registration\\*.*\" /P Administrators:F Everyone:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Repair\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Repair\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Security\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Security\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Speech\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Speech\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R Everyone:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R Everyone:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\CatRoot\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\CatRoot\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Com\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Com\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Config\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Config\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Dhcp\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:R\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Dhcp\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:R\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Drivers\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Drivers\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\DTCLog\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\DTCLog\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Export\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Export\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\GroupPolicy\" /P Administrators:F \"Authenticated Users:R\" SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\GroupPolicy\\*.*\" /T /P Administrators:F \"Authenticated Users:R\" SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\IAS\" /P Administrators:F \"CREATOR OWNER:F\" SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\IAS\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Inetsrv\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Inetsrv\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Mui\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Mui\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Npp\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Npp\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\NtmsData\" /P Administrators:F SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\NtmsData\\*.*\" /P Administrators:F SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Os2\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Os2\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Ras\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Ras\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Rocket\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Rocket\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Rpcproxy\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Rpcproxy\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Setup\" /P Everyone:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Setup\\*.*\" /P Everyone:F\nECHO y| CACLS \"%SystemRoot%\\System32\\ShellExt\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\ShellExt\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Spool\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" \"Print Operators:F\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Spool\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" \"Print Operators:F\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Wbem\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Wbem\\*.*\" /T /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Wins\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\System32\\Wins\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Temp\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" \"Authenticated Users:C\" SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Temp\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" \"Authenticated Users:C\" SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\twain_32\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\twain_32\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Web\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\nECHO y| CACLS \"%SystemRoot%\\Web\\*.*\" /P Administrators:F \"CREATOR OWNER:F\" \"Power Users:C\" Users:R SYSTEM:F\n\nCLS\nECHO No more commands to process.\nECHO End of Command Script.\nPAUSE",
    "CreateDate": "2004-10-16T18:29:06.7430000",
    "EndDate": null,
    "ModificationDate": "2004-10-16T18:29:06.7430000",
    "DocumentId": "2076071453",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5275",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Macromedia Flash 5: Transparency Issues",
    "SortOrdinal": null,
    "ItemChar": "Besides Alpha effects on Symbols, there are two top-level transparency issues in Flash. The first is the possibility of making Flash Movies transparent with respect to the hosting web browser. The second is recognizing transparency in imported raster images.\n\nAs of this writing, the opinion here is that transparent Flash movies are not possible as they only work in Microsoft Internet Explorer on Windows machines. This news comes from Macromedia TechNote 14201 and 12804.\n\nTransparency in raster images has been conditionally supported in Flash since version 3.x. Problems arise when movies run in a 16-bit color display with PNG files (with gradients fading to transparent) or when there is differing background and index colors in GIF files. This news comes from Macromedia TechNote 13524 and 12804.",
    "ItemText": null,
    "CreateDate": "2002-02-15T20:12:25.7830000",
    "EndDate": null,
    "ModificationDate": "2002-02-15T20:12:25.7830000",
    "DocumentId": "2076071454",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5276",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "HTML Code: Apple's Recommendation of QuickTime Rendering",
    "SortOrdinal": null,
    "ItemChar": "<!--\n    The following is based on \n    http://developer.apple.com/quicktime/compatibility.html.\n-->\n\n<object\n    classid=\"clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B\"\n    width=\"64\"\n    height=\"64\"\n    codebase=\"http://www.apple.com/qtactivex/qtplugin.cab\">\n<param name=\"SRC\" value=\"sample.mov\">\n<param name=\"AUTOPLAY\" value=\"true\">\n<param name=\"CONTROLLER\" value=\"false\">\n<embed\n    src=\"sample.mov\"\n    width=\"64\"\n    height=\"64\"\n    autoplay=\"true\"\n    controller=\"false\"\n    pluginspage=\"http://www.apple.com/quicktime/download/\">\n</embed>\n</object>",
    "ItemText": null,
    "CreateDate": "2004-05-18T22:14:04.8270000",
    "EndDate": null,
    "ModificationDate": "2004-05-18T22:14:04.8270000",
    "DocumentId": "2076071456",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5277",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flash 5.x ActionScript: Clip Properties Not Found in onClipEvent(load)",
    "SortOrdinal": null,
    "ItemChar": "Calls to properties (variables) declared and initialized in the first frame of a MovieClip object from the onClipEvent(load) Action of that same MovieClip will silently fail. It appears that the load event of the MovieClip fires before the first frame is processed.",
    "ItemText": null,
    "CreateDate": "2002-03-04T19:24:38.4000000",
    "EndDate": null,
    "ModificationDate": "2002-03-04T19:24:38.4000000",
    "DocumentId": "2076071458",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5278",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Office Outlook: Tips and Tricks; Minimizing to System Tray; Clearing Find a Contact Box",
    "SortOrdinal": null,
    "ItemChar": "From http://www.slipstick.com/outlook/usertips.htm:\n\nTo make Outlook 2002 go to the Windows system tray when you minimize it edit this key:\n\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\10.0\\Outlook\\Preferences\n\nAdd a new DWORD value named \"MinToTray\" and give it a value of 1. \n\nTo clear the Find a Contact list delete this key:\n\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\9.0\n        \\Outlook\\Contact\\QuickFindMRU\n\nYou can also modify the QuickFindMRU value to a zero-length binary value.",
    "ItemText": null,
    "CreateDate": "2002-03-10T09:32:10.7670000",
    "EndDate": null,
    "ModificationDate": "2002-03-10T09:32:10.7670000",
    "DocumentId": "2076071459",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5279",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "DNS: UCLA Addresses",
    "SortOrdinal": null,
    "ItemChar": "MCCS Gateway:\n149.142.231.1\n\nMCCS DNS:\nmedhub.medctr.ucla.edu (149.142.194.60)\nns1.medctr.ucla.edu (149.142.194.64)\n\nUCLA DNS:\ndns.ucla.edu (164.67.128.1)\n\nMCCS WINS:\nwinsmain.medctr.ucla.edu (149.142.8.9)\nwinsback.medctr.ucla.edu (149.142.193.74)",
    "ItemText": null,
    "CreateDate": "2003-02-04T20:44:19.2630000",
    "EndDate": null,
    "ModificationDate": "2003-02-04T20:44:19.2630000",
    "DocumentId": "2076071461",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5280",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Web Banner Ad Recommended Dimensions",
    "SortOrdinal": null,
    "ItemChar": "From http://www.workz.com/content/1027.asp\n\nDimension Guidelines\n\nCurrently, size standards for banner ads are really just recommendations. Two professional associations, the Internet Advertising Bureau (IAB) and the Coalition for Advertising-Supported Information and Entertainment (CASIE), have compiled a list of the most popular and most effective banner ad sizes. According to IAB's Web site, a joint committee of IAB and CASIE members \"has identified the following as the most commonly accepted\":\n\nType: Dimensions (in pixels): \nFull banner 468 x 60 \nFull banner w/ vertical navigation Bar    392 x 72 \nHalf banner 234 x 60 \nSquare button 125 x 125 \nButton 1 120 x 90 \nButton 2 120 x 60 \nMicro button 88 x 31 \nVertical banner 120 x 240 ",
    "ItemText": null,
    "CreateDate": "2002-04-02T15:30:42.2230000",
    "EndDate": null,
    "ModificationDate": "2002-04-02T15:30:42.2230000",
    "DocumentId": "2076071462",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5281",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript and HTML Code: The Inline Pop Up Window Off an ANCHOR Element; The open() Method of the window Object.",
    "SortOrdinal": null,
    "ItemChar": "<a\n    href=\"[URI]\"\n    target=\"PopUp\"\n    onClick=\"javascript:window.open('','PopUp','toolbar=0,location=0,scrollbars=1,resizable=1,directories=0,status=0,width=320,height=240')\"\n    onMouseOver=\"javascript:window.status='[Window Status]';return true;\"\n    onMouseOut=\"javascript:window.status=window.defaultStatus;return true;\">[Link Text]</a>\n",
    "ItemText": null,
    "CreateDate": "2002-04-08T14:59:45.3300000",
    "EndDate": null,
    "ModificationDate": "2002-04-08T14:59:45.3300000",
    "DocumentId": "2076071463",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5282",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Sonic Foundry Vegas Video 3.x: Generated Text Media Has Limited Character Set",
    "SortOrdinal": null,
    "ItemChar": "It appears that the Text Media Plug-in for Vegas 3.x does not support extended characters like typographic (or smart) quotes and dashes. This must be a bug as the characters display in the FX window but do not appear in Preview or render properly\n\nHowever the \"legacy\" text generators support these characters (even though they do not appear in their respective FX windows).\n",
    "ItemText": null,
    "CreateDate": "2002-04-08T18:05:33.5570000",
    "EndDate": null,
    "ModificationDate": "2002-04-08T18:05:33.5570000",
    "DocumentId": "2076071464",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5283",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CD-ROM: Flippant Remarks about AutoPlay for Windows Systems",
    "SortOrdinal": null,
    "ItemChar": "So far my only concern is to get Windows CD-ROMs to load HTML files automatically as investing in other Win32 binaries is beyond my scope. Microsoft addresses this issue somewhat historically in \"How can I make a CD-ROM load an HTML file automatically when the disk is inserted into the drive?\" at:\n\n    http://www.microsoft.com/msj/0499/win32/win320499.htm\n\nWhile this is a great reference, I have simply copied Microsoft's own way of auto-loading HTML files by examining a few of the promotional CD-ROMs I have received from them over the years. Their \"internal\" way of doing it seems to be more exhaustive, covering Alpha-based systems (the entire NT family). This is a bit of an overkill but (flippantly) here we are.\n",
    "ItemText": null,
    "CreateDate": "2002-04-17T09:05:43.5970000",
    "EndDate": null,
    "ModificationDate": "2002-04-17T09:05:43.5970000",
    "DocumentId": "2076071465",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5284",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Songhay3: MSI K7T Turbo-R; System Unit Powers Up Unexpectedly",
    "SortOrdinal": null,
    "ItemChar": "When the BIOS setting under Power Management Setup called \"State After Power Failure\" is not set to Off the system unit may power up unexpectedly and immediately power off. The assumption here is that the system unit expects to be connected to a continuous power source (even when shut off) instead of a power strip that is turned on and off.",
    "ItemText": null,
    "CreateDate": "2002-04-20T19:05:00.2100000",
    "EndDate": null,
    "ModificationDate": "2002-04-20T19:05:00.2100000",
    "DocumentId": "2076071466",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5285",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "R.R. Bowker ISBN Logbook (CSV File)",
    "SortOrdinal": null,
    "ItemChar": "x",
    "ItemText": "x",
    "CreateDate": "2002-04-28T10:01:19.2330000",
    "EndDate": null,
    "ModificationDate": "2002-04-28T10:01:19.2330000",
    "DocumentId": "2076071467",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5286",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Development Environment: Finding User Interface (UI) Settings and ToolBox Settings",
    "SortOrdinal": null,
    "ItemChar": "MSKB Article 320851 (\"INFO: Locations for User Customizations in Visual Studio .NET\") summarize managing Visual Studio .NET 2003 custom settings:\n\n    http://support.microsoft.com/default.aspx?scid=kb;EN-US;320851\n\nThis information is updated for version 7.1 of Visual Studio .NET 2003 by Microsoft employee Josh Ledgard here:\n\n    http://blogs.msdn.com/jledgard/archive/2004/02/05/67869.aspx\n\nUser Preferences (such as editor settings) that are different from the default settings are stored at the following registry keys:\n\n    HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\VisualStudio\\7.1\\*\n\nJosh suggests why saving Toolbar settings is important:\n\n\"If [you are] like most people you've created your own custom toolbars or at least moved the default ones around a bit to make more room for your editor. It can take a long time to get this just right since the menus in VS hop around so much in the 2002/2003 release while you are using the product. Assuming you are using the English version of VS your custom menus are saved in the following file:\"\n\n    %USERPROFILE%\\Application Data\n        \\Microsoft\\VisualStudio\\7.1\\1033\\CmdUI.PRF\n\n\"You should be able to move this file from machine to machine. Again, this file is written once VS exits. But this time you just close all instances of VS, replace one with the other, open VS and you should be golden.\"",
    "ItemText": null,
    "CreateDate": "2005-02-06T01:10:47.8730000",
    "EndDate": null,
    "ModificationDate": "2005-02-06T01:10:47.8730000",
    "DocumentId": "2076071468",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5287",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBScript and ASP Code: Flippant Remarks about the Response.Buffer Property, the Response.Redirect() Method and Windows 2000",
    "SortOrdinal": null,
    "ItemChar": "You know your code is running on an older, Windows NT, server when you see this error:\n\n    Response object error 'ASP 0156 : 80004005 \n    Header Error...\n    The HTTP headers are already written to the client browser.\n    Any HTTP header modifications must be made before writing page content.\n \nThe implication is that your ASP page is rendering HTML before it encounters the Response.Redirect() method. Microsoft explains in detail why this is problematic in KB Article Q159402 (\"HOW TO: Use Response Redirect in a Server Script\").\n\nThis problem is usually not encountered in Windows 2000 (and, I assume, versions above) as the Buffer property of the Response object is set to true in Windows 2000. To be very safe this form is suggested:\n\n    <%\n        Response.Buffer = True\n        ...\n    %>\n        <h1>HTML Rendering Here</h1>\n    <%\n        Response.Clear\n        Response.Redirect \"someother.asp\"\n    %>\n",
    "ItemText": null,
    "CreateDate": "2002-05-16T16:44:29.8570000",
    "EndDate": null,
    "ModificationDate": "2002-05-16T16:44:29.8570000",
    "DocumentId": "2076071469",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5288",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL Code: Stored Procedure AutoDTS_complianceDumps; An Example of Running a DTS Package in tSQL",
    "SortOrdinal": null,
    "ItemChar": "USE compliance\nGO\n\nIF OBJECT_ID('AutoDTS_complianceDumps') IS NOT NULL\nBEGIN\n    DROP PROCEDURE AutoDTS_complianceDumps\n    IF OBJECT_ID('AutoDTS_complianceDumps') IS NOT NULL\n        PRINT '<<< FAILED DROPPING PROCEDURE AutoDTS_complianceDumps >>>'\n    ELSE\n        PRINT '<<< DROPPED PROCEDURE AutoDTS_complianceDumps >>>'\nEND\nGO\n\nCREATE PROCEDURE AutoDTS_complianceDumps\n(\n        @serverName nvarchar(255) = 'BWilhiteBofA'\n    ,   @groupName  nvarchar(255) = '[ALL]'\n    ,   @path       nvarchar(255) = 'c:\\Inetpub\\wwwroot\\dev_Compliance_Support\\data\\FileDump_Compliance\\'\n)\n\nAS\n\n-- Description: Automation of the DTS Package complianceDumps via tSQL.\n/*\n    Note that if SQL Server is not run by a domain-level user (e.g. the\n    SYSTEM account) then do not use UNC paths for the @path parameter. This\n    code can be translated into an ActiveX Script and run as a SQL Server\n    Job if need be:\n\n    Dim objDTSPack\n\n    Set objDTSPack = CreateObject(\"DTS.Package\")\n\n    'Load Package using NT security.\n    Call objDTSPack.LoadFromSQLServer(\"BWilhiteBofA\", , , 256, , , , \"complianceDumps\")\n\n    'Set Global Variables.\n    objDTSPack.GlobalVariables(\"g_strGroupName\").Value = \"[ALL]\"\n    objDTSPack.GlobalVariables(\"g_strCSVActivityPath\").Value = \"\\\\bwilhitebofa\\FileDump_Compliance\\ActivityReport.csv\"\n    objDTSPack.GlobalVariables(\"g_strCSVExceptionPath\").Value = \"\\\\bwilhitebofa\\FileDump_Compliance\\ExceptionReport.csv\"\n    'Note that we are using UNC's for the g_strCSV[...] global variables\n    'as a domain-level user is running SQL Server Agent.\n\n    'Begin.\n    objDTSPack.FailOnError = True\n    objDTSPack.WriteCompletionStatusToNTEventLog = True\n\n    objDTSPack.Execute\n\n    'Clean up.\n    Set objDTSPack = Nothing\n\n    References:\n    DTS Packages & OLE Stored Procedures\n    http://www.swynk.com/friends/green/dtsole.asp\n*/\n\n-- Developer: Bryan D. Wilhite\n\nSET NOCOUNT ON\n\nDECLARE\n    @token                              int\n,   @hresult                            int\n,   @context                            int\n,   @progID                             nvarchar(255)\n,   @errSrc                             nvarchar(255)\n,   @errDescription                     nvarchar(255)\n,   @isObject                           bit\n,   @methodCall                         nvarchar(512)\n\n,   @DTSSQLStgFlag_UseTrustedConnection nvarchar(4)\n,   @CSVActivityPath                    nvarchar(512)\n,   @CSVExceptionPath                   nvarchar(512)\n\nSET @DTSSQLStgFlag_UseTrustedConnection = '256'\nSET @CSVActivityPath = @path + 'ActivityReport.csv'\nSET @CSVExceptionPath = @path + 'ExceptionReport.csv'\n\nSET @context = 1\n/*\n    1 = In-process (.dll) OLE server only\n    4 = Local (.exe) OLE server only\n    5 = Both in-process and local OLE server allowed\n\n    Note: DTS runs in process with SQL Server so its creation context must be 1.\n*/\n\nSET @isObject = 0\nSET @progID = 'DTS.Package'\n\n-- Create DTS object.\nEXECUTE @hresult = sp_OACreate @progID=@progID, @objecttoken=@token OUTPUT, @context=@context\nIF @hresult <> 0\nBEGIN\n    EXECUTE sp_OAGetErrorInfo @objecttoken=@token, @source=@errSrc, @description=@errDescription OUTPUT\n    SELECT\n        PROGID        = @progID\n    ,   HRESULT       = @hresult\n    ,   SOURCE        = @errSrc\n    ,   [Description] = @errDescription\nEND\nELSE\nBEGIN\n    SET @isObject = 1\nEND\n\n-- Load Package using NT security.\nSET @methodCall = 'LoadFromSQLServer(ServerName:=\"' + @serverName + '\", PackageName:=\"complianceDumps\", Flags:=' + @DTSSQLStgFlag_UseTrustedConnection + ')'\nEXECUTE @hresult = sp_OAMethod @objecttoken=@token, @methodname=@methodCall\nIF @hresult <> 0\nBEGIN\n    EXECUTE sp_OAGetErrorInfo @objecttoken=@token,  @source=@errSrc, @description=@errDescription OUTPUT\n    SELECT\n        PROGID        = @progID\n    ,   HRESULT       = @hresult\n    ,   SOURCE        = @errSrc\n    ,   [Description] = @errDescription\nEND\n\n-- Set Package Properties.\nEXECUTE @hresult = sp_OASetProperty @objecttoken=@token, @propertyname='FailOnError', @newvalue=TRUE\nIF @hresult <> 0\nBEGIN\n    EXECUTE sp_OAGetErrorInfo @objecttoken=@token,  @source=@errSrc, @description=@errDescription OUTPUT\n    SELECT\n        PROGID        = @progID\n    ,   HRESULT       = @hresult\n    ,   SOURCE        = @errSrc\n    ,   [Description] = @errDescription\nEND\n\nEXECUTE @hresult = sp_OASetProperty @objecttoken=@token, @propertyname='WriteCompletionStatusToNTEventLog', @newvalue=TRUE\nIF @hresult <> 0\nBEGIN\n    EXECUTE sp_OAGetErrorInfo @objecttoken=@token,  @source=@errSrc, @description=@errDescription OUTPUT\n    SELECT\n        PROGID        = @progID\n    ,   HRESULT       = @hresult\n    ,   SOURCE        = @errSrc\n    ,   [Description] = @errDescription\nEND\n\n\n-- Set Global Variables.\nEXECUTE @hresult = sp_OASetProperty @objecttoken=@token, @propertyname='GlobalVariables(\"g_strGroupName\").Value', @newvalue=@groupName\nIF @hresult <> 0\nBEGIN\n    EXECUTE sp_OAGetErrorInfo @objecttoken=@token,  @source=@errSrc, @description=@errDescription OUTPUT\n    SELECT\n        PROGID        = @progID\n    ,   HRESULT       = @hresult\n    ,   SOURCE        = @errSrc\n    ,   [Description] = @errDescription\nEND\n\nEXECUTE @hresult = sp_OASetProperty @objecttoken=@token, @propertyname='GlobalVariables(\"g_strCSVActivityPath\").Value', @newvalue=@CSVActivityPath\nIF @hresult <> 0\nBEGIN\n    EXECUTE sp_OAGetErrorInfo @objecttoken=@token,  @source=@errSrc, @description=@errDescription OUTPUT\n    SELECT\n        PROGID        = @progID\n    ,   HRESULT       = @hresult\n    ,   SOURCE        = @errSrc\n    ,   [Description] = @errDescription\nEND\n\nEXECUTE @hresult = sp_OASetProperty @objecttoken=@token, @propertyname='GlobalVariables(\"g_strCSVExceptionPath\").Value', @newvalue=@CSVExceptionPath\nIF @hresult <> 0\nBEGIN\n    EXECUTE sp_OAGetErrorInfo @objecttoken=@token,  @source=@errSrc, @description=@errDescription OUTPUT\n    SELECT\n        PROGID        = @progID\n    ,   HRESULT       = @hresult\n    ,   SOURCE        = @errSrc\n    ,   [Description] = @errDescription\nEND\n\n-- Execute.\nEXECUTE @hresult = sp_OAMethod @objecttoken=@token, @methodname='Execute'\nIF @hresult <> 0\nBEGIN\n    EXECUTE sp_OAGetErrorInfo @objecttoken=@token,  @source=@errSrc, @description=@errDescription OUTPUT\n    SELECT\n        PROGID        = @progID\n    ,   HRESULT       = @hresult\n    ,   SOURCE        = @errSrc\n    ,   [Description] = @errDescription\nEND\n\n-- Clean up.\nIF @isObject = 1\nBEGIN\n    EXECUTE @hresult = sp_OADestroy @objecttoken=@token\n    IF @hresult <> 0\n    BEGIN\n        EXECUTE sp_OAGetErrorInfo @objecttoken=@token,  @source=@errSrc, @description=@errDescription OUTPUT\n        SELECT\n            PROGID        = @progID\n        ,   HRESULT       = @hresult\n        ,   SOURCE        = @errSrc\n        ,   [Description] = @errDescription\n    END\nEND\n\nGO\n\nGRANT EXECUTE ON AutoDTS_complianceDumps TO dbWebSolutionsUsers\nGO\n\nIF OBJECT_ID('AutoDTS_complianceDumps') IS NOT NULL\n    PRINT '<<< CREATED PROCEDURE AutoDTS_complianceDumps >>>'\nELSE\n    PRINT '<<< FAILED CREATING PROCEDURE AutoDTS_complianceDumps >>>'\nGO\n",
    "ItemText": null,
    "CreateDate": "2007-11-19T15:15:01.0000000",
    "EndDate": null,
    "ModificationDate": "2007-11-19T15:15:01.0000000",
    "DocumentId": "2076071470",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5289",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Frontpage Webs; Setup; Moving",
    "SortOrdinal": null,
    "ItemChar": "Recipe for setting up a New FrontPage Web:\n\nCreate new web root folder under root folder of web site. \n\nAdd web content.\n\nMake sure no old FrontPage files/folders are in this new folder.\n\nLocate this folder in the MMC for Internet Information Server.\n\nRight-click on this folder and select All Tasks > Configure Server Extensions.\n\nFollow the New Subweb Wizard.\n\nRight-click on the folder again and choose Properties > Directory > Application Settings > Create.\n\n\nRecipe for moving an existing FrontPage Web:\n\nMove web content under server root.\n\nLocate this folder in the MMC for Internet Information Server.\n\nRight-click on the folder and choose Properties > Directory > Application Settings > Create.",
    "ItemText": null,
    "CreateDate": "2002-05-23T11:36:31.4630000",
    "EndDate": null,
    "ModificationDate": "2002-05-23T11:36:31.4630000",
    "DocumentId": "2076071478",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5290",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ADSI: Flippant Remarks about Active Directory Services Interface (ADSI)",
    "SortOrdinal": null,
    "ItemChar": "ADSI is for automating networking services as ADO is for automating database systems. I previously thought that ADSI was only for programmatically manipulating Active Directory (AD). I was wrong.\n\nADSI is built into Windows 2000. It is always running by default consequently the GetObject() method is used against ADSI. Microsoft introduces ADSI  in \"Basic ADSI\" which (as of this writing) is located at:\n\n    http://msdn.microsoft.com/library/en-us/\n        netdir/adsi/basic_adsi.asp?frame=true\n\nOne advanced \"tips and tricks\" article is called \"Using ADSI, LDAP, and Network Management Functions With Active Directory\" at:\n\n    http://msdn.microsoft.com/library/en-us/dnactdir/\n        html/BuildingADApps.asp?frame=true\n\nI also found some lengthy code examples at 15seconds.com, the article \"Add to Your ADSI Code Library\" at:\n\n    http://www.15seconds.com/issue/020130.htm\n",
    "ItemText": null,
    "CreateDate": "2002-12-19T16:52:53.0000000",
    "EndDate": null,
    "ModificationDate": "2002-12-19T16:52:53.0000000",
    "DocumentId": "2076071479",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5291",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP, VBScript and ADO: \"Updating\" an ADO-Generated XML File",
    "SortOrdinal": null,
    "ItemChar": "<%@ EnableSessionState=False LANGUAGE=VBScript %>\n<%Option Explicit%>\n<!--#include virtual=\"./INC/ADOVBS.asp\"-->\n<!--#include virtual=\"./INC/Classes/HTMLPage.asp\"-->\n<%\n    Dim objFileSys,vPath\n    Dim objRS,vFieldArray,vArray\n\n    'Get root folder.    \n    Set objFileSys = Server.CreateObject(\"Scripting.FileSystemObject\")\n\n    'Create and disconnect Recordset object.\n    Set objRS = Server.CreateObject(\"ADODB.Recordset\")\n    Set objRS.ActiveConnection = Nothing\n    objRS.CursorType = adOpenKeyset\n    objRS.LockType = adLockOptimistic\n    objRS.CursorLocation = adUseClient\n        \n    vPath = Server.MapPath(\"./\") & \"\\dirADO.xml\"\n    If objFileSys.FileExists(vPath) Then\n        'Strange but true: open the persisted XML file\n        'and then delete it to save a new one.\n        Call objRS.Open(vPath,,,,adCmdFile)\n        objFileSys.DeleteFile(vPath)\n        'This technique is suggested in MS KB article Q245367.\n        'Note: because of this, the IIS Anonymous user must have\n        'Change permissions to the root documents folder.\n        'This creates a security hole and therefore sucks.\n\n        vFieldArray = Array(\"rootFolder\",\"subFolder\",\"fileName\",\"fileDescription\")\n        vArray = Array(\"docs\",\"issues\",\"file.pdf\",\"PDF file\")\n        Call objRS.AddNew(vFieldArray,vArray)\n\n        Call objRS.Update\n    Else\n        Call basCreateRS(objRS)\n        Call objRS.Open\n    End If\n\n    Call objRS.Save(vPath,adPersistXML)\n\n    'Clean up.\n    Call objRS.Close\n    Set objRS = Nothing\n    Set objFileSys = Nothing\n\n    Sub basCreateRS(objRS)\n        'Define Field objects.\n        Call objRS.Fields.Append(\"rootFolder\",adBSTR,256,adFldMayBeNull)\n        Call objRS.Fields.Append(\"subFolder\",adBSTR,256,adFldMayBeNull)\n        Call objRS.Fields.Append(\"fileName\",adBSTR,256,adFldMayBeNull)\n        Call objRS.Fields.Append(\"fileDescription\",adBSTR,1024,adFldMayBeNull)\n    End Sub\n%>",
    "ItemText": null,
    "CreateDate": "2002-05-28T11:02:52.0730000",
    "EndDate": null,
    "ModificationDate": "2002-05-28T11:02:52.0730000",
    "DocumentId": "2076071480",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5292",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBScript and ASP Code Snippet: LOGON_USER Split(); vLoginDomainName, vLoginUserName ",
    "SortOrdinal": null,
    "ItemChar": "Dim vLogin : vLogin = Request.ServerVariables(\"LOGON_USER\")\n\nDim vLoginDomainName, vLoginUserName\nIf InStr(1,vLogin,\"\\\",vbTextCompare) > 0 Then\n    vLoginDomainName = Split(vLogin,\"\\\",-1,vbTextCompare)(0)\n    vLoginUserName = Split(vLogin,\"\\\",-1,vbTextCompare)(1)\nEnd If\n\n",
    "ItemText": null,
    "CreateDate": "2002-05-28T14:36:23.5030000",
    "EndDate": null,
    "ModificationDate": "2002-05-28T14:36:23.5030000",
    "DocumentId": "2076071481",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5293",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "IIS: Flippant Remarks about the SQL Server ADO Error \"Login failed for user 'NT AUTHORITY\\ANONYMOUS LOGON'\" and Active Directory\n",
    "SortOrdinal": null,
    "ItemChar": "If I ever want to know why someone would be \"forced\" to upgrade their Windows-based enterprise to Active Directory, all I have to do is try to programmatically connect to SQL Server from an ASP page that disallows anonymous access. IIS does not send logon credentials (other than its own Anonymous Access User) to a SQL Server on another server without Active Directory installed and Security Account Delegation enabled.\n\nEverything works fine as long as I have IIS and SQL server on the same machine but as soon these two are separated I begin to pine for Active Directory. I say this even though there is a workaround suggested in \"INF: Authentication Methods for Connections to SQL Server in Active Server Pages\" (Q247931) and \"PRB: 'Client Unable to Establish Connection' Error Message When Connecting from ASP to SQL Server\" (Q253500). However, this workaround (featuring Basic Authentication and the wonderful, clear text password) leaves unacceptable security holes. No, the only way to go is via Active Directory.\n\nThe Active Directory resolution is the same one specified in \"ACC2002: \"Login Failed for User 'NT AUTHORITY\\ANONYMOUS LOGON'.\" Error When You Try to Link a Table\" (Q295255). I have yet to try it so I'll get back to these flippant remarks later.\n",
    "ItemText": null,
    "CreateDate": "2002-05-28T16:52:10.9830000",
    "EndDate": null,
    "ModificationDate": "2002-05-28T16:52:10.9830000",
    "DocumentId": "2076071482",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5294",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about Digital Cameras",
    "SortOrdinal": null,
    "ItemChar": "My most annoying incorrect assumption about digital cameras is that they are devices for people who do not want to deal with a DV Camera. Then I learned that most DV Cameras produce still images no larger than the NTSC dimensions (e.g. 720 x 576). The entry-level cameras that Computer User mentions in its May 2002 article, \"Digicams for the rest of us,\" have resolutions like 1600 x 1200 (Canon's PowerShot S110 Digital Elph) which is quite suitable for the printed page.\n\nAccording to Computer User, \"Digital cameras fall into three major categories: point-and-shoot, field cameras, and studio cameras or backs...\" where the first group is the digital equivalent of the 35mm camera (like Canon's PowerShot S110 Digital Elph) and the other groups are not worth mentioning at the moment as they are too expensive for me.\nWhen evaluating a digital camera Computer User suggests that, \"There are three major factors to consider when shopping for a digicam.\" They have optics (lenses and \"megapixels\" [2.3 or greater]), the imaging chip (CMOS or CCD) and image compression quality (usually JPEG).\n\nFor more information as of this writing please see:\n\n    http://www.computeruser.com/articles/2105,1,2,2,0501,02.html\n",
    "ItemText": null,
    "CreateDate": "2002-05-29T13:11:36.7700000",
    "EndDate": null,
    "ModificationDate": "2002-05-29T13:11:36.7700000",
    "DocumentId": "2076071483",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5295",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL: Flippant Remarks about Table Aliases and the Self Join",
    "SortOrdinal": null,
    "ItemChar": "Up until shortly before the writing if this article, I considered the use of table aliases just a matter of style. Since I enjoy writing (for humans) I preferred using table names instead of something like:\n\n    USE pubs\n    SELECT\n        p.pub_id\n    ,   p.pub_name\n    FROM\n        publishers AS p\n\nI have no trouble writing out \"publishers.\" However, I find myself forced to use table aliases when I need to project two or more sets of data in the same table. This is related to the so-called \"self-join\" which can be used to, for example, find out the authors in Oakland, California who live in the same ZIP Code:\n\nUSE pubs\nSELECT DISTINCT\n    au1.au_fname\n,   au1.au_lname\nFROM\n    authors au1\n,   authors au2\nWHERE\n    au1.zip = au2.zip\nAND\n    au1.city = 'Oakland'\nAND\n    au1.au_id <> au2.au_id\n\nNote the AS clause is omitted from the FROM clause (just a matter of style).\n",
    "ItemText": null,
    "CreateDate": "2002-05-31T10:54:39.5930000",
    "EndDate": null,
    "ModificationDate": "2002-05-31T10:54:39.5930000",
    "DocumentId": "2076071484",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5296",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about the Mighty HOSTS File",
    "SortOrdinal": null,
    "ItemChar": "First, a quote from http://www.accs-net.com/hosts/what_is_hosts.html:\n\nThe \"Hosts\" file in Windows and other operating systems is used to associate host names with IP addresses. Host names are the www.yahoo.com addresses that you see every day. IP addresses are numbers that mean the same thing as the www words - the computers use the numbers to actually find the sites, but we have words like www.yahoo.com so humans do not need to remember the long strings of numbers when they want to visit a site.\n\nFor instance, the host name for Yahoo! is www.yahoo.com, while its IP address is 204.71.200.67 Either address will take you to Yahoo!'s site, but the www address will first have to be translated into the IP address. If you type in the IP address directly, your computer will not have to look it up.\n\nA series of steps are used when searching for IP addresses that go with these host names. The first step, and the one that concerns us here, is the hosts file on your local computer. The Hosts file tells your computer what the name is in numbers so the computer can go find it. If the IP address is found in your Hosts file, the computer will stop looking and go to that site, but if it is not it will ask a DNS computer (domain name server) for the information. Since the search ends once a match is found, that provides us with a mechanism to block sites we have no interest in. You may block sites that serve advertisements, sites that serve objectionable content, or any other site that you choose to block.\n\nEnd quote.\n\nThe HOSTS file path:\n\n    %SystemRoot%\\SYSTEM32\\DRIVERS\\ETC\\HOSTS\n\nI have created a Shortcut to my HOSTS file with NOTEPAD.EXE for quick and easy access. Any IP address that is exposed to the public Internet can be entered into the HOSTS file and subsequently resolved. This is a big deal to a non-networking guy like me. In theory I can leave my computer on at home, jot down my IP address and later resolve it from a remote location (unfortunately/fortunately my firewall may have a few things to say about that).\n",
    "ItemText": null,
    "CreateDate": "2002-06-21T14:44:44.9400000",
    "EndDate": null,
    "ModificationDate": "2002-06-21T14:44:44.9400000",
    "DocumentId": "2076071485",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5297",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 2000 PROBLEM: ipconfig and Other Standard App's Not Working or Not \"Recognized\"",
    "SortOrdinal": null,
    "ItemChar": "The following message may require a look at the Registry:\n\n    'ipconfig' is not recognized as an internal or external command,\n    operable program or batch file.\n\nLook at these three keys:\n    HKEY_LOCAL_MACHINE\\SYSTEM\n        \\CURRENTCONTROLSET\\CONTROL\n            \\SESSION MANAGER\\ENVIRONMENT\n    HKEY_LOCAL_MACHINE\\SYSTEM\n        \\CONTROLSET001\\CONTROL\n            \\SESSION MANAGER\\ENVIRONMENT\n    HKEY_LOCAL_MACHINE\\SYSTEM\n        \\CONTROLSET002\\CONTROL\n            \\SESSION MANAGER\\ENVIRONMENT\n\nIf the Path value under any of these keys is of type STRING then the environment variable %SystemRoot% cannot \"expand\" to resolve to the \"real\" path where your system files are. It follows that ipconfig cannot be recognized by the system.\n\nTo resolve this problem replace the Path environment variable under:\n\n    System Properties > Advanced > Environment Variables > System Variables\n\nwhere the System Properties dialog can be found by right-clicking on the My Computer icon on the Desktop and selecting Properties. For more detailed instructions refer to MS KB article Q317206 (\"MMS Lotus Notes Plug-In Alters the Windows Path Environment\").\n",
    "ItemText": null,
    "CreateDate": "2002-07-16T08:46:42.8470000",
    "EndDate": null,
    "ModificationDate": "2002-07-16T08:46:42.8470000",
    "DocumentId": "2076071486",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5298",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2000: Flippant Remarks about Mixed Mode; Security; Authentication\n",
    "SortOrdinal": null,
    "ItemChar": "The Security tab under the server-level Properties menu in the Enterprise Manager has options under Authentication:. I prefer to select the Windows only option as this effectively turns over the bulk of security issues over to Windows domain administrators.\n\nMost of my solutions depend on a web server and a database. When a web server application disallows anonymous access and when the database server associated with this application is not on the same physical computer as the web server, I may see the following error message:\n\n    Login failed for user 'NT AUTHORITY\\ANONYMOUS LOGON'\n\nThis tells me that the web server could not pass its login credentials to the database server. As of this writing, the only way to pass such credentials from server to server is via a \"chain of delegation\" using the Kerberos Security Account Delegation in Windows 2000 Active Directory Services (AD or ADS).\n\nMSDN's Paul Enfield in \"Implementing a Secure Site with ASP\" explained this back in October of 1997: \"Since NT does not transfer passwords over the network, the NT Server must then get a token from the domain controller. Once it has done so it cannot send it to another machine. If it could send this to another machine this would be referred to as delegation. NT does not support this in version 4.0. This leads to some complications with Web development.\" However, it may help those web masters of domain controllers to read this from the same article:\n\n\"Resources that require authentication in order to be accessed will not be able to access resources on another physical NT machine unless the IIS machine is a domain controller.\"\n\nWhen AD is not being implemented in the Enterprise I find I have no other recourse than to run the SQL Server (database server) in Mixed Mode so I have the option of passing SQL login credentials as well as NT credentials. This means, back under our Security tab under the server-level Properties menu in the Enterprise Manager, Authentication: is set to SQL Server and Windows. Setting this option on a running instance requires stopping and starting the SQL Server service (and dependant services like SQL Server Agent).\n\nA design based on a SQL Server running in this mixed mode reduces the overall level of security. As I understand it, the user \"sa\" is now available to hackers. Passwords for SQL Server accounts might be stored in clear text. This is not good.",
    "ItemText": null,
    "CreateDate": "2005-09-16T14:41:13.4600000",
    "EndDate": null,
    "ModificationDate": "2005-09-16T14:41:13.4600000",
    "DocumentId": "2076071487",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5299",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 2000 PROBLEM: Domain Controller Does Not Allow Domain Users to Log on Locally; secedit\n",
    "SortOrdinal": null,
    "ItemChar": "By default only account operators, administrators, backup operators, print operators, server operators, Internet guest account, and Terminal Services user account are assigned the right to log on locally to a Windows-based domain controller.\n\nMicrosoft describes in detail how to edit the Default Domain Controllers Policy from the Microsoft Management Console in \"Assign 'Log On locally' Rights to Windows Domain Controller\" (MS KB Article Q234237). But what escaped me was to make the changes take effect immediately. This console command makes the changes take effect immediately:\n\n    secedit /refreshpolicy machine_policy\n",
    "ItemText": null,
    "CreateDate": "2002-07-29T14:27:23.0170000",
    "EndDate": null,
    "ModificationDate": "2002-07-29T14:27:23.0170000",
    "DocumentId": "2076071488",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5300",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP: Flippant Remarks about Server.Execute() and Server.Transfer()",
    "SortOrdinal": null,
    "ItemChar": "Since Microsoft is characteristically silent about their own shortcomings, these flippant remarks about Server.Execute() and Server.Transfer() are extremely flippant: these new features suck; they are almost completely useless---okay, they are useless.\n\nIgnoring the subtle nuance of those lovers of ASP 3.0, I say that you can't use QueryString values with Server.Execute() and Server.Transfer(). Strange or unexpected things happen to relative links when Server.Transfer() is used and just think of a really bad call to a subroutine when you think of using Server.Transfer().\n\nThese new features were quickly tacked on the tail-end of ASP (probably to address the power of PHP 4.x) and were abandoned in favor of ASP.NET stuff. For more details (written in a more pleasant manner for the perfumed ears of King Lear) please see:\n\n    http://www.15seconds.com/issue/010220.htm\n",
    "ItemText": null,
    "CreateDate": "2002-08-27T16:10:43.4900000",
    "EndDate": null,
    "ModificationDate": "2002-08-27T16:10:43.4900000",
    "DocumentId": "2076071490",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5301",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Word 2000/2002: Importing a Web Page by Cutting and Pasting with the Paste Options Button; Match Destination Formatting",
    "SortOrdinal": null,
    "ItemChar": "In Word XP (or Word 2002) the Paste Options Button appears after you paste text into a Word document. Clicking on the Paste Options Button reveals the option Match Destination Formatting. This option is extremely useful when you are copying text (with bold and italics) from a web page and pasting into Word. This feature allows you to separate extensive passages of textual content from the HTML markup \"by hand\" without losing basic formatting (bold and italics).\n\nFor more information on the Paste Options Button please see MS KB article Q284752 (\"WD2002: How to Use the Paste Options Button When Pasting into a Bulleted or Numbered List\") at:\n\n    http://support.microsoft.com/default.aspx?scid=KB;EN-US;Q284752\n\nFor Word 2000 versions we are left with the Paste Special command. This can strip all of the typographic information out of the pasted text or completely copies the formatting (overwriting any preexisting formatting already in the Word Document).",
    "ItemText": null,
    "CreateDate": "2002-11-07T15:52:45.0000000",
    "EndDate": null,
    "ModificationDate": "2002-11-07T15:52:45.0000000",
    "DocumentId": "2076071496",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5302",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Sound Specifications for Audio Equipment: the Decibel, Frequency Response, Dynamic Range and Sensitivity; Videomaker July 1996; \"Sound Track\" by Jerry Whaley",
    "SortOrdinal": null,
    "ItemChar": "The Decibel (dB)\n\nThe decibel (dB) is one tenth of a Bel. The Bel is named after Alexander Graham Bell and is equivalent to twice (or half) the loudness (level or signal amplitude) of a given sound. This scale of measurement is relative (instead of absolute measures of signal in voltage) and logarithmic.\n\n    * Doubling or halving loudness represents a 10dB change.\n\n    * Doubling or halving power or wattage represents a 3dB change.\n\n    * Doubling or halving voltage represents a 6dB change.\n\n\nFrequency Response\n\nFrequency response is measured in Hertz. Ideal measures for the human ears range from 20Hz to 20kHz. Real-world measures range from 80Hz to about 16kHz (measures lower or higher is likely to be a low rumble or a hiss respectively). The frequency response is the allowed change in decibels within a specified range.\n\nA high-quality audio device has a frequency response of 80Hz to 16kHz +/-3dB. This means that the device loudness at one frequency does not differ by more than 6dB at another frequency. Such a device responds to the allowed frequencies with relatively little change in loudness. A mid-quality audio device may have the same range, 80Hz to 16hHz but a \"loudness delta\" of +/-10dB. This is a much larger change in loudness (with the possible exception of microphones such a large change indicates a low-quality audio device).\n\n\nDynamic Range\n\nFrequency response does not take into account noise and headroom (it is confined to loudness). Dynamic range begins to qualify sound levels by adding together the signal to noise ratio (S/N) and headroom (levels above 0dB before distortion occurs). Good S/N is 70dB or greater; so a device with a S/N of 80dB and 10dB of headroom has a dynamic range of 90dB.\n\n\nSensitivity\n\nSensitivity can describe microphone output against a given level of input with respect to a 0dB reference level. So a microphone with -40dB sensitivity is superior to one at -60dB.\n\nIt also describes speaker output against a given level of power with respect to the 1 watt/ 1 meter standard. Efficient speakers rate around 100dB when a microphone is placed 1 meter away and given 1 watt of power. Inefficient speakers have ratings below 90dB. Recall from our discussion of the decibel, that just a 3dB change means double or half the power is needed to power a speaker at a decent level of sensitivity.",
    "ItemText": null,
    "CreateDate": "2002-11-29T09:53:15.0000000",
    "EndDate": null,
    "ModificationDate": "2002-11-29T09:53:15.0000000",
    "DocumentId": "2076071497",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5303",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SMPTE (Society of Motion Picture and Television Engineers): Timecodes; \"By the Numbers\" by Jay Rose; DV April 1997",
    "SortOrdinal": null,
    "ItemChar": "SMPTE timecodes developed more out of historical/political necessity than by pure engineering. The ancient black-and-white TVs of the golden age of North American television scanned at 30 frames per second (fps) because of the ease of synching to the 60Hz power lines running through U.S. homes. When color TVs arrived the broadcast signals had to be \"backwards compatible\" with the old b/w sets while transmitting extra color information. It followed that the NTSC standard established 29.97fps for broadcast television.\n\nWhen SMPTE developed timecode, they had to accommodate the NTSC standard. They created the concept of the \"dropped\" frame to make sure that timecode agreed with the clock on the wall. We have these common frame rates:\n\n    * 24fps (film; count 23 frames, then 1 second 0 frames)\n    * 25fps (PAL/SECAM; count 25 frames, then 1 second 0 frames)\n    * 29.97fps non-drop (count to 29, then 1 second 0 frames)\n    * 29.97fps dropframe (count to 29, then 1 second 2 frames - except once every 10 min.)\n    * 30fps non-drop (count to 29, then 1 second 0 frames)\n\nThe PAL/SECAM 25fps standard evolves from the 50Hz power lines in Europe, its former colonies and commonwealth lands.",
    "ItemText": null,
    "CreateDate": "2005-02-12T01:33:39.6230000",
    "EndDate": null,
    "ModificationDate": "2005-02-12T01:33:39.6230000",
    "DocumentId": "2076071498",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5304",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Adobe Photoshop: Visual Summary of Blending Modes; Layers;",
    "SortOrdinal": null,
    "ItemChar": "Here is a list of web sites with useful visual representations of layer blending modes:\n\n    \"Blending Modes\"\n    http://www.thinkdan.com/tutorials/photoshop/blendingmodes/\n\n    \"Advanced Layer Blending in Photoshop 6\"\n    http://www.creativepro.com/story/feature/14198.html\n\n    \"Blending ranges - advanced blending options\"\n    http://www.adobe.com/support/techguides/photoshop\n        /advancedblending/blending_range/main.html\n\nIf you have an Adobe ID then try this:\n\n    \"Become a layer-blending expert\"\n    http://studio.adobe.com/learn/tips/phs7advblend/main.html",
    "ItemText": null,
    "CreateDate": "2002-12-04T17:14:45.0000000",
    "EndDate": null,
    "ModificationDate": "2002-12-04T17:14:45.0000000",
    "DocumentId": "2076071499",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5305",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Element K Journals Articles at CreativePro.com",
    "SortOrdinal": null,
    "ItemChar": "This is a quick and dirty search for a list of articles at CreativePro.com written by Element K Journals:\n\n    http://search.creativepro.com/SpecificSearchResults\n        ?query=Element+K+Journals&index=feature&querytype=phrase\n\nFor the truly adventurous (or the cash rich), go the Element K Journals web site and look for these articles:\n\n    http://www.elementkjournals.com",
    "ItemText": null,
    "CreateDate": "2002-12-04T16:55:14.0000000",
    "EndDate": null,
    "ModificationDate": "2002-12-04T16:55:14.0000000",
    "DocumentId": "2076071500",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5306",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about the Compressor/Limiter Dynamics Processor; Sonic Foundry Wave Hammer, Track Compressor, ACID; EMU APS",
    "SortOrdinal": null,
    "ItemChar": "In my flippant remarks about EQ (9/23/2000), I insisted that EQ is the most important digital effects tool the desktop audio engineer has. I was wrong. The Compressor/Limiter is the most important digital effects tools the desktop audio engineer has. EQ is a close second.\n\nI have changed my mind after being plagued with \"hot\" mixes in Sonic Foundry ACID where the Master bus levels exceed 0dB and go into the red. In complete (and I do mean complete) ignorance, I sat for hours trying to keep my tracks under control using everything but the right thing: the tool designed specifically for this problem. That tool is the compressor/limiter, often classified under \"dynamics processors.\"\n\nMy obsolete EMU APS manual explains that a compressor works in two steps. First, any input greater than the Threshold is decreased by a specified Ratio. This first step decreases (or \"compresses\") the dynamic range and reduces loudness. The second step is to boost the overall signal level such that quieter portions of the sound are magnified while the louder portions stay below distortion.\n\nTo try to explain this \"specified Ratio,\" my EMU APS Manual states, \"At a ratio of 4:1, 4dB of change in the input signal will produce 1dB of change in the output signal.\" Translating this to the world of Sonic Foundry tools, the 4dB change is with respect to the Threshold setting and the \"change\" leans more toward reduction of loudness than boosting it (which may explain why the Wave Hammer couples the compressor/limiter with a Volume Maximizer).\n\nWhen the Ratio is 8:1 or greater the compression is considered extreme and effectively becomes a limiter. With Sonic Foundry compression, when the compression is infinity to one (Inf:1), this is a hard limiter. With a hard limiter, no input will exceed the Threshold.\n\nI believe that the Volume Maximizer of the Sonic Foundry Wave Hammer tries to deal with problems associated with the second part of the compression process by dealing with distortion of signals around the threshold and boosting quiet passages even more.\n\nAs of this writing I use the Wave Hammer in the Master FX chain for ACID Projects. These are the current presets:\n\nACID Master FX Chain\n    * Used for master mixes.\n    * The Wave Hammer is set as a soft limiter with a -3dB Threshold (8:1 Ratio).\n    * Other parameters are set to deal with percussive peaks above the threshold.\n    * The Volume Maximizer is bypassed.\n\nACID Master FX Sub-Mix Chain\n    * Used for sub mixes (loops for the master mix).\n    * The Wave Hammer is set as a hard limiter with a 0dB Threshold (Inf:1 Ratio).\n    * Other parameters are set to deal with percussive peaks above the threshold.\n    * The Volume Maximizer is bypassed.\n\nObviously, I am using limiters to control hot tracks and not true compression to \"make a track stand out\" that fine art is still beyond my experience and understanding.",
    "ItemText": null,
    "CreateDate": "2002-12-11T14:35:17.0000000",
    "EndDate": null,
    "ModificationDate": "2002-12-11T14:35:17.0000000",
    "DocumentId": "2076071501",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5307",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET: Flippant Introductory Remarks",
    "SortOrdinal": null,
    "ItemChar": "MSDN features Scott Mitchell from 4guysfromrolla.com, his article, \"Converting ASP to ASP.NET\" at:\n\n    http://msdn.microsoft.com/library/en-us/dndotnet/html/convertasptoaspnet.asp\n\nCraig Utley's article \"Common .NET Libraries for Developers\" is a perfect article for any .NET programmer:\n\n    http://msdn.microsoft.com/library/en-us/dndotnet/html/commnetlibs.asp\n\nPaul D. Sheriff's \"Variable and Method Scope in Microsoft .NET\" is also good for programming with a firm knowledge of fundamentals:\n\n    http://msdn.microsoft.com/library/en-us/dndotnet/html/methodscope.asp\n\nThe Code-Behind object model looks attractive as in-line code loses some of the Intellisense features that makes VS.NET cool. More details can be found in Microsoft Knowledge Base Article 303247 (\"INFO: ASP.NET Code-Behind Model Overview\") and Microsoft Knowledge Base Article 313105 (\"BUG: Cannot Compile Code-Behind Files That Use Src Attribute on a UNC Share\").\n\nFor the 30,000-foot view see Microsoft Knowledge Base Article 305141 (\"INFO: ASP.NET Page Framework Overview\").",
    "ItemText": null,
    "CreateDate": "2003-09-03T13:48:34.0000000",
    "EndDate": null,
    "ModificationDate": "2003-09-03T13:48:34.0000000",
    "DocumentId": "2076071502",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5308",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio.NET: MSDN Library Viewer Filters; Help Filters; Custom Filters",
    "SortOrdinal": null,
    "ItemChar": "Microsoft is so, so, so helpful. The great thing about this helpful situation is that I haven't bought a shitty technical book for many, many months. The bad thing about this is popularly called information overload.\n\nVisual Studio.NET deals with this information with an updated MSDN Library Viewer. It comes with a Filter editor. By selecting Help > Edit Filters… from the main menu, a whole new world opens up. User-defined filters will appear right along with the default Visual Studio.NET filters in the Help Contents and Index windows.\n\nThese are my custom filters so far:\n\n    SQL Server Reference:\n    (\"TargetOS\"=\"Windows\") OR (\"Technology\"=\"SQLSrv\")\n    OR (\"Locale\"=\"kbEnglish\") OR (\"DevLang\"=\"SQL\" OR \"DevLang\"=\"TSQL\")\n    OR (\"TopicType\"=\"kbArticle\") AND (\"DocSet\"=\"SQL Server\")",
    "ItemText": null,
    "CreateDate": "2002-12-19T11:18:26.0000000",
    "EndDate": null,
    "ModificationDate": "2002-12-19T11:18:26.0000000",
    "DocumentId": "2076071503",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5309",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flash ActionScript: the Differences between loadVariables() and loadVariablesNum()",
    "SortOrdinal": null,
    "ItemChar": "Flash 4 introduced loadVariables() and loadVariablesNum(). I assumed that an earlier version of Flash developed one of the functions to deprecate the other but this assumption is wrong.\n\nWhile not running in \"expert mode,\" Flash promises to automatically switch from loadVariables() to loadVariablesNum() when an integer is entered for the level parameter. For the experts out there this implies that:\n\n    loadVariables(\"assets/copy.txt\", _root) = loadVariablesNum(\"assets/copy.txt\", 0);\n\nI really can't technically explain why there are two functions introduced in the same version of Flash doing the same thing. There must be political/historical account beyond my scope.",
    "ItemText": null,
    "CreateDate": "2002-12-27T16:13:15.0000000",
    "EndDate": null,
    "ModificationDate": "2002-12-27T16:13:15.0000000",
    "DocumentId": "2076071504",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5310",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio.NET: Searching and Replacing with Regular Expressions",
    "SortOrdinal": null,
    "ItemChar": "Searching for text with Regular Expressions should be straight forward. I constantly read this reference at design-time:\n\n    ms-help://MS.VSCC/MS.MSDNVS/vsintro7/html/vxgrfregularexpressionss.htm\n\nWhat was elusive to me was how to replace what I found using the Replace All command. This is done by \"tagging\" expressions with brackets {}. So the following regular expression will look for HTML numerical attributes without XHTML-friendly quotes:\n\n    \\=[0-9]+\n\nBut this expression will not let me insert quotes after the equal sign. This expression will:\n\n    {\\=}{[0-9]+}\n\nThis expression works just like the previous one. All we have now are two tagged sub-expressions that can be located with the \\n syntax. The corresponding replace expression is therefore:\n\n    \\1\"\\2\"\n\nThis says, \"Insert a quote after the first set of tagged text characters and another quote after the second set of tagged text characters.\"",
    "ItemText": null,
    "CreateDate": "2003-01-17T14:42:11.0000000",
    "EndDate": null,
    "ModificationDate": "2003-01-17T14:42:11.0000000",
    "DocumentId": "2076071505",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5311",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Sonic Foundry Vegas Video 3.0 PROBLEM: Save As... Dialog Appears When Render As... Command is Executed",
    "SortOrdinal": null,
    "ItemChar": "If all of the tracks are muted in a Vegas Video Project file, the Save As... dialog will appear when the Render As... Command is executed. The behavior is by design and can frustrate many a sleepy head in the middle of a pre-dawn render. Just wake up and enable at least one track!",
    "ItemText": null,
    "CreateDate": "2004-04-17T21:33:40.8900000",
    "EndDate": null,
    "ModificationDate": "2004-04-17T21:33:40.8900000",
    "DocumentId": "2076071506",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5312",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP, VBScript and ADSI: ADSI Authentication Function; basADSILogin",
    "SortOrdinal": null,
    "ItemChar": "Function basADSILogin(vDomain,vUser,vPwd)\n    Dim vADsPath\n    vADsPath = \"WinNT://\" & vDomain & \"/\" & vUser & \",user\"\n\n    Dim objADSI\n\n    basADSILogin = False\n\n    On Error Resume Next\n    Set objADSI = GetObject(vADsPath)\n    If Err.number <> 0 Then Exit Function\n\n    Dim objADSINamespace : Set objADSINamespace = GetObject(\"WinNT:\")\n\n    On Error Resume Next\n    Set objADSI = objADSINamespace.OpenDSObject(vADsPath,vUser,vPwd,0)\n    If Err.number = 0 Then\n        basADSILogin = True\n    End If\n\n    Set objADSI = Nothing\n    Set objADSINamespace = Nothing\nEnd Function\n",
    "ItemText": null,
    "CreateDate": "2003-02-06T11:19:32.5170000",
    "EndDate": null,
    "ModificationDate": "2003-02-06T11:19:32.5170000",
    "DocumentId": "2076071507",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5313",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 2000 PROBLEM: Error: Trust Relationship between this workstation and the Domain Controller Failed",
    "SortOrdinal": null,
    "ItemChar": "The following taken from Microsoft Certified Professional Magazine Online:\n\n    http://www.mcpmag.com/Features/article.asp?EditorialsID=187\n\nProblem: When attempting to log on to a Win2K member server or Win2K Pro workstation using a domain account, the following error message appears: \"Error: Trust Relationship between this workstation and the Domain Controller Failed.\"\n\nSolution: This error is usually caused by the secure channel password for the member server or workstation getting out of sync with the DC, but it could be caused by a time-zone shift between the client and the DC. A typical scenario for this problem would be removing a computer from a Win2K domain, A, and joining it to another domain, B, then later moving it back to the original domain, A. Initially, there's a machine account for this client on the A domain. When it's moved to the B domain, it creates a new account on the B domain and synchs the password with the client. When it's moved back into the A domain, the machine account is still there—it doesn't create a new one—but now the passwords don't match, resulting in the error. I've also seen it caused by moving a computer between time zones and not changing the client's time zone information.\n\nTo resolve this problem, delete the client's computer account from domain A and let replication in the site occur, which should take a maximum of five to 10 minutes. Then configure the client to join a workgroup and reboot it. This cleans up all the local machine account information. After the reboot, configure the machine into the domain and reboot again. This will create a new account and synch the passwords with the client. The reboot, which is required anyway, will purge the Kerberos tickets so new ones will be created with the new access information.\n\nIf the problem still exists, it could be a timing issue. Go to the client, open a command prompt window, and enter this command:\n\nnet time \\\\domaincontroller /set\n\n\n\n\n\nwhere \"domaincontroller\" is a valid DC name that can be used to synchronize time on the client. Remember that Kerberos requires that the time difference between the two systems be less than five minutes.\n\n",
    "ItemText": null,
    "CreateDate": "2003-02-11T20:25:02.0030000",
    "EndDate": null,
    "ModificationDate": "2003-02-11T20:25:02.0030000",
    "DocumentId": "2076071508",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5314",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": ".NET Framework: Runtime Security Policy for Local Intranet Zone; Internet Explorer Internet Properties",
    "SortOrdinal": null,
    "ItemChar": "As of the create date of this writing, I am slowly but slowly migrating \"classic\" ASP to .NET solutions. In the mean time, each IIS Server on my Local Intranet has a Visual Studio .NET Solution assigned to the entire web server built from the New Project in Existing Folder Template. I am not sure that this is the most elegant way to go, but  what I end up with is a Solution file with a Visual Basic.NET project covering the entire IIS server accompanied by Database Projects respective of each subfolder of the VB.NET project file (where each subfolder is actually an IIS web site but if I explain my reasoning behind this I will digress too far).\n\nThe bottom line is that I end up with one Visual Studio .NET Solution per machine in my Intranet. Now, since I do not want to edit these solutions on each machine, I have a single workstation pulling these files using the ancient file:/// protocol. By default, VS.NET on my workstation does not trust these solutions so I get my familiar \"The project location is not fully trusted by the .NET runtime…\" message. The quick and dirty way to avoid this message is to open .NET Configuration and select:\n\n    My Computer > Runtime Security Policy > Machine > Code Groups\n        > All_Code > LocalIntranet_Zone\n\nand create a Child Code Group with Membership Condition type set to Zone where Zone is set to Local Intranet and Permission Set is FullTrust. Unfortunately, if you are in a large enterprise you many not want to trust every machine in the Local Intranet Zone.\n\nYou can redefine your Local Intranet Zone under Internet Explorer Internet Properties, the Security tab. Select Local Intranet and push the Sites… button. Uncheck Include all local…, Include all sites…, Include all network paths… and click on the Advanced… button. Under Add this Web site to the zone: enter the Intranet boxes you need; e.g. enter \\\\MyDevServer as file://MyDevServer.",
    "ItemText": null,
    "CreateDate": "2003-02-12T11:30:40.0000000",
    "EndDate": null,
    "ModificationDate": "2003-02-12T11:30:40.0000000",
    "DocumentId": "2076071509",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5315",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Macromedia Flash MX PROBLEM: JPEG Images Fail to Load as Movie Clips",
    "SortOrdinal": null,
    "ItemChar": "From Macromedia TechNote 16389:\n\n\"The Macromedia Flash Player does not have a decompressor for progressive JPEG images, therefore files of this type cannot be loaded dynamically and will not display when using the loadMovie action.\"",
    "ItemText": null,
    "CreateDate": "2003-03-30T12:40:53.0000000",
    "EndDate": null,
    "ModificationDate": "2003-03-30T12:40:53.0000000",
    "DocumentId": "2076071512",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5316",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Caligari trueSpace 5.1: User Manual Highlights, Chapters 4 through 7",
    "SortOrdinal": null,
    "ItemChar": "Chapter 4: Utilities Group\n\n* This chapter makes it clear that a completely visual interface makes it difficult to locate tools described with words in the manual. I had a very difficult time locating the Add Regular Polygon tool and the Convert NURBS Patch to polyhedron (or curve to Polygon) tool. I recommend creating a custom configuration for the Configuration Library using the tool repository under the Recycle Bin.\n\n* The Polygon Reduction Tool creates new objects in the same location as the original. So move the new object to see it after it is created.\n\n* The Polygon Reduction Tool works with Level of Detail groups (LOD groups) used in VRML.\n\n* I had to add the Move, Spin and Scale Magnetic Object tools to my custom configuration as they were not found in any of the default configurations.\n\n\nChapter 5: Primitives\n\n* A straightforward read.\n\n* Use the Help Bar and mouse hovering over the various parts of the Magic Ring to be reminded of its functions.\n\n\nChapter 6: Selection and Polygon Edit\n\n* Paint several polygon faces simultaneously by clicking on Paint Face tool in the Material Editor while the faces are selected.\n\n* \"Named selections are stored with the object and scene so you can come back and\nuse these selections throughout multiple sessions.\"\n\n* The section entitled \"Selecting Multiple Objects\" assumes that you are using the Object Tool. This implies that \"rectangle select\" and \"lasso select\" do not refer to the polygon face selection tools in section 6.2.\n\n* \"You have the option to animate almost all Point Edit functions in trueSpace5... Note that vertex-level animation is incompatible with the DynDiv functions.\"\n\n* The Polygon Copy and Polygon Draw tools can create areas on a face that can be textured or extruded apart from the face on which it was drawn.\n\n* The Polygon Slice Tool can work in concert with the Slice by Selected Line/Plane Tool to create a plane for slices. These tools in turn work with the Separate tool to completely remove a sliced section of an object making a new object.",
    "ItemText": null,
    "CreateDate": "2004-05-18T21:38:57.9370000",
    "EndDate": null,
    "ModificationDate": "2004-05-18T21:38:57.9370000",
    "DocumentId": "2076071517",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5317",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 2000 Server PROBLEM: Terminal Services Client Error Message; You Do Not Have Access to Logon to This Session",
    "SortOrdinal": null,
    "ItemChar": "This problem is NOT solved by making the user trying to log in an Administrator of the server! This problem is most likely solved by setting permissions in the Terminal Services Configuration MMC (and NOT the Local Security Policy MMC).\n\nFor more details please KB article 224395 (\"Terminal Services Client Error Message: You Do Not Have Access to Logon to This Session\") at:\n\n    http://support.microsoft.com/support/kb/articles/Q224/3/95.asp",
    "ItemText": null,
    "CreateDate": "2003-05-29T15:48:05.0000000",
    "EndDate": null,
    "ModificationDate": "2003-05-29T15:48:05.0000000",
    "DocumentId": "2076071518",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5318",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBScript: Regular Expressions",
    "SortOrdinal": null,
    "ItemChar": "Microsoft makes mention of regular expressions in VBScript back in 1999, with \"Microsoft Beefs Up VBScript with Regular Expressions\" by Vernon W. Hui at:\n\n    http://msdn.microsoft.com/library/en-us/dnclinic/html/scripting051099.asp\n\nI was completely unaware of this development for at least three years but should really should have seen it coming since classes were introduced in VBScript 5.0. This should be not surprising since Microsoft would make the effort to match the advanced features of Jscript. Adding regular expressions is an attempt to level the playing field between the Jscript team and the VBScript team.",
    "ItemText": null,
    "CreateDate": "2003-06-01T18:01:22.0000000",
    "EndDate": null,
    "ModificationDate": "2003-06-01T18:01:22.0000000",
    "DocumentId": "2076071519",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5319",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBA PROBLEM; Access 2000: Command Line Parameters Are Ignored; Command() Function Returns Zero-length String",
    "SortOrdinal": null,
    "ItemChar": "This is an old problem that keeps popping up over the years: Say I enter a semi-colon or /cmd for my shortcut to my office application file as described by KB article 209207 (\"ACC2000: How to Use Command-Line Switches in Microsoft Access\"). I have consistently neglected to include the full path of the office application since the shortcut is to the application file and not the application.\n\nIn the case of Access 2000, this will not work:\n\n    \\\\MyShare\\C$\\Folder\\MySQL.adp ;My Command Parameter\n\nHowever, this will:\n\n    \"C:\\Program Files\\Microsoft Office\\Office10\\MSACCESS.EXE\"\n        \\\\MyShare\\C$\\Folder\\MySQL.adp ;My Command Parameter\n\nwhere, of course the above two lines should be one line.",
    "ItemText": null,
    "CreateDate": "2003-06-06T17:13:20.0000000",
    "EndDate": null,
    "ModificationDate": "2003-06-06T17:13:20.0000000",
    "DocumentId": "2076071520",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5320",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Access 2000/2002/XP Forms: The Importance of the UniqueTable Property; ResyncCommand",
    "SortOrdinal": null,
    "ItemChar": "This was the error message that started it all: \"The data was added to the database but the data won't be displayed in the form because it doesn't satisfy the criteria in the underlying record source.\" I was getting this error when I set the RecordSource property of an Access Data Project Form to the name of a SQL Server view that contained joins.\n\nThis problem is similar to the problem resolved by KB article 248095 (\"ACC2000: Error When You Add Record to a Form That Is Based on a Stored Procedure\") which leans heavily toward rolling one's own ResyncCommand string.\n\nBefore resorting this, I recommend setting the UniqueTable property of the form to see if Access can create a ResyncCommand string for you. Entering the name of one table is far less work than trying to create a ResyncCommand value.\n\nFor more philosophy, the details can be found at MSDN, the article \"Chapter 3: Building Microsoft Access 2000 Client/Server Applications\" at:\n\n    http://msdn.microsoft.com/library/en-us/dnapg/html/apg03.asp",
    "ItemText": null,
    "CreateDate": "2003-06-10T17:18:41.0000000",
    "EndDate": null,
    "ModificationDate": "2003-06-10T17:18:41.0000000",
    "DocumentId": "2076071522",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5321",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET: Flippant Remarks about Server Controls; C# Code",
    "SortOrdinal": null,
    "ItemChar": "Server Controls in ASP.NET mean to be an improved alternative to ASP include files. These provide the means to \"control\" where dynamic HTML appears among static HTML. The simplest Server Control is any HTML tag with the runat attribute set to \"server.\" So we can, for example, set the TITLE tag to run at the server like this:\n\n    <title id=\"TitleDefault\" runat=\"server\"><title>\n\nwhere the ID attribute must be set so ASP.NET can handle this element programmatically. My first instict was to look for a HTML TITLE class in the System.Web.UI.HtmlControls or System.Web.UI.WebControls name spaces. But I did not find such a class.\n\nThe assumption here is that somebody at Microsoft wanted me to \"find\" the control and cast it as a \"generic\" HTML control:\n\n    protected System.Web.UI.HtmlControls.HtmlGenericControl GenControl;\n    GenControl = (HtmlGenericControl)this.FindControl(\"TitleDefault\");\n    GenControl.InnerHtml = \"My Title Stored in a Database\";\n\nThe flippant implication here is that the HtmlGenericControl class is the catch-all class for controls that are not dragged and dropped on forms. This class allows us to target any pre-existing static HTML and make it dynamic with ASP.NET.\n\nThe other major fundamental scenario is creating HTML on the fly and \"injecting\" it into a page without the use of static HTML. ASP.NET provides the Literal Web Server Control and the PlaceHolder Web Server Control for this purpose. So, flippantly speaking of course, the Literal Control is like SPAN and the PlaceHolder Control is like DIV.\n\nGenerally, I use the PlaceHolder control to load ASCX files (which represent the Web User Control):\n\n    protected System.Web.UI.WebControls.PlaceHolder PlaceDocSearch;\n    System.Web.UI.Control ascxFile = this.LoadControl(\"./ascx/bodySearchHeader.ascx\");\n    PlaceDocSearch.Controls.Add(ascxFile);\n\nI use the lightweight Literal Control when there is the need to generate HTML with an HtmlTextWriter object. When people call ASP.NET \"powerful\" I assume they are thinking of designs based Literal controls and HtmlTextWriter objects. But my assumption is probably wrong and we should be amazed at how we can drag and drop controls on our web forms.",
    "ItemText": null,
    "CreateDate": "2003-11-10T15:10:38.0000000",
    "EndDate": null,
    "ModificationDate": "2003-11-10T15:10:38.0000000",
    "DocumentId": "2076071524",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5322",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2003 PROBLEM: 404 Error When Opening http://localhost",
    "SortOrdinal": null,
    "ItemChar": "Security, security, security. This is what Windows Server 2003 is all about. A 404 error is thrown for those administrators running ASP pages when the server role is Application Server and ASP.NET is enabled. This error is by design.\n\nTo resolve this problem choose Web Service Extensions in the Internet Information Services (IIS) Manager. In the Extended view of Web Service Extensions select Active Server Pages and click on the Allow button.",
    "ItemText": null,
    "CreateDate": "2003-07-31T14:54:09.0000000",
    "EndDate": null,
    "ModificationDate": "2003-07-31T14:54:09.0000000",
    "DocumentId": "2076071526",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5323",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL Code: Correlated Sub-Queries in the SELECT Projection List",
    "SortOrdinal": null,
    "ItemChar": "Microsoft readily reminds us that \"correlated subqueries\" can be included in the WHERE clause:\n\n    SELECT au_lname, au_fname\n    FROM authors\n    WHERE 100 IN\n       (SELECT royaltyper\n       FROM titleauthor\n       WHERE titleauthor.au_ID = authors.au_id)\n\nThis form is discussed in detail here:\n\n    http://msdn.microsoft.com/library/en-us/acdata/ac_8_qd_11_67lc.asp\n\nBut what is not mentioned is that these sub-queries are supported in the SELECT projection list like the following:\n\n    SELECT DISTINCT\n        title_id\n    ,   au1 = (\n            SELECT\n                au_id\n            FROM\n                titleauthor\n            WHERE\n                au_ord = 1\n            AND\n                title_id = t.title_id\n        )\n    FROM\n        titleauthor AS t\n\nIt is an error to use a sub-query that returns more than one row of data. This form is discussed in detaail in \"The Practical SQL Handbook\" (a link to the book should be listed on this page at songhaysystem.com).",
    "ItemText": null,
    "CreateDate": "2003-08-11T16:44:17.0000000",
    "EndDate": null,
    "ModificationDate": "2003-08-11T16:44:17.0000000",
    "DocumentId": "2076071528",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5324",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "InfoPath Beta: Flippant Remarks",
    "SortOrdinal": null,
    "ItemChar": "InfoPath is FrontPage for XML documents.\n\nIt serves as a wrapper for BizTalk (thereby actually making BizTalk \"necessary\").\n\nSharepoint Server reads the properties of InfoPath documents, but these \"properties\" are actually the XML nodes of the document itself (thereby finally making document properties useful in Office).\n\nInfoPath can merge multiple XML documents of the same schema into one document in an \"aggregation scenario.\" This functionality can be called from SharePoint.\n\nInfoPath documents can be saved to HTML (or MHTML) but these serve only to \"display\" the form. The HTML is read only: all of the data-entry and interactivity is meant to be available only to InfoPath users. This implies that cross-vendor or cross-platform interoperability is confined to the XML data itself---not user-interface interactivity.",
    "ItemText": null,
    "CreateDate": "2003-08-25T17:21:37.0000000",
    "EndDate": null,
    "ModificationDate": "2003-08-25T17:21:37.0000000",
    "DocumentId": "2076071529",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5325",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB Script and ASP Code: the Split() Function Always Returns an Array; Empty Arrays; IsArray()",
    "SortOrdinal": null,
    "ItemChar": "There may be the temptation to use the IsArray() function against the Split() function in some sort of data type validation test. However, the Split() function will always return True for such a test even when its required argument is a zero-length string.\n\nIn such a case, Split() will return an \"empty array,\" an array where UBound() returns -1. This suggest that we should test empty arrays with a form like:\n\n    Dim vArray: vArray = Split(\"one two\")\n    If UBound(vArray) <> -1 Then True 'We have an array.",
    "ItemText": null,
    "CreateDate": "2003-08-22T17:39:42.0000000",
    "EndDate": null,
    "ModificationDate": "2003-08-22T17:39:42.0000000",
    "DocumentId": "2076071530",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5326",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Terminal Server Client: Keyboard Shortcuts",
    "SortOrdinal": null,
    "ItemChar": "The following shortcut keys are available from a Terminal Services Client: \n\nCTRL+ALT+END opens the Windows Security dialog box.\n\nALT+PAGE UP switches between programs from left to right.\n\nALT+PAGE DOWN switches between programs from right to left.\n\nALT+INSERT cycles through the programs in the order they were started.\n\nALT+HOME displays the Start menu.\n\nCTRL+ALT+BREAK switches the client between a window (if applicable) and a full screen.\n\nALT+DELETE displays the window's pop-up menu.\n\nCTRL+ALT+Minus (-) symbol on the numeric keypad places a snapshot of the active window, within the client, on the Terminal server clipboard (provides the same functionality as pressing ALT+PrintScrn on a local computer.) \n\nCTRL+ALT+Plus (+) symbol on the numeric keypad places a snapshot of the entire client window area on the Terminal server clipboard (provides the same functionality as pressing PrintScrn on a local computer.)",
    "ItemText": null,
    "CreateDate": "2003-08-22T20:01:59.0000000",
    "EndDate": null,
    "ModificationDate": "2003-08-22T20:01:59.0000000",
    "DocumentId": "2076071531",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5327",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft JScript and MSHTML: The HTML Editor Application; HTA; MSDHTML",
    "SortOrdinal": null,
    "ItemChar": "Users of AOL mail and MSN Hotmail have been enjoying the one thing that makes the Microsoft Internet Explorer Web browser necessary: the ability to edit HTML in place. This was one of the original specifications Tim Berners-Lee (http://www.w3.org/People/Berners-Lee/) demanded in a web browser and Netscape failed to deliver. Microsoft on the other hand has it lurking about but its not really recognized as a feature worth heavily marketing let alone documenting.\n\nIn fact, the opinion here is that Microsoft would rather have you know about the HTML Application (featuring HTA files) before you learn about the MSDHTML (JScript) behind HTML Editing. This appears to be the case in MSDN's \"How to Create an HTML Editor Application\":\n\n    http://msdn.microsoft.com/\n        library/default.asp?\n            Url=/workshop/author/editing/tutorials/html_editor.asp\n\nI am sure there must be a better article, but theAngrycodeR (Sameers) did a great job showing off MSHTML editing in \"Creating an HTML Area Server Side Control\" at:\n\n    http://www.codeproject.com/aspnet/text_area_control.asp\n\nThe editor content is explained within the context of .NET server controls but just download the source code and dig out the file ...\\demo_RTFBox\\HTMLArea.html.\n\nThe key to all of this HTML editing stuff is the execCommand() method of the window.document object of MSDHTML. This is documented at MSDN:\n\n    http://msdn.microsoft.com/\n        library/default.asp?\n            Url=/workshop/author/dhtml/reference/methods/execcommand.asp\n\nAnd the most important caveat: never forget that this editor is based on MSHTML, Microsoft's implementation of HTML which has nothing to do with the wonderful standards set by the W3C. I was forced to use a lot of complex regular expressions to parse MSHTML into \"real\" HTML 4.x markup.",
    "ItemText": null,
    "CreateDate": "2003-08-25T17:49:31.0000000",
    "EndDate": null,
    "ModificationDate": "2003-08-25T17:49:31.0000000",
    "DocumentId": "2076071532",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5328",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": ".NET Framework: Flippant Remarks about XPathNavigator and XPathDocument; Don Box Loves All Instances of XPathNavigator",
    "SortOrdinal": null,
    "ItemChar": "Don Box loves XPathNavigator because it is based on XPath (http://www.w3.org/TR/xpath) instead of an XML data model.\n\nDon very articulately and humanely explores XPathNavigator in \"Passing XML Data Inside the CLR\" on MSDN TV at:\n\n    http://msdn.microsoft.com/msdntv/episode.aspx\n        ?xml=episodes/en/20030603XMLDB/manifest.xml\n\nHe goes on to explain that instances of XPathNavigator comes from XPathDocument. This is important to me because XPathDocument objects can be passed to Transform() method of an instance of XslTransform.",
    "ItemText": null,
    "CreateDate": "2004-07-01T11:51:20.8000000",
    "EndDate": null,
    "ModificationDate": "2004-07-01T11:51:20.8000000",
    "DocumentId": "2076071533",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5329",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Access 2000/2002/XP Forms: Turning Off AutoCorrect Per Field; Data Validation against ADP Forms; Access Data Project Forms",
    "SortOrdinal": null,
    "ItemChar": "Turning Off AutoCorrect Per Field\n\nAutoCorrect can hurt more than it can help in Access forms. To turn it off at the application level (via Options... > Spelling) may not be the way to go as this could affect other Office applications---not to mention the preferences of your users.\n\n\nData Validation against ADP Forms\n\nWe should use the Other > Allow AutoCorrect property in the Properties dialog. This allows us to turn off AutoCorrect on a per-field basis.\n\nAfter the data is entered into an ADP form, we should use T-SQL style expressions in the Data > Validation Rule property in the Properties... dialog. For example, to require a file name with an extension entered into a Text Box we have:\n\n    ALike '%_._%' Or Is Null\n\nwhere I am still trying to figure out what \"ALike\" means. In any canse, we can see T-SQL-like syntax for LIKE expressions.",
    "ItemText": null,
    "CreateDate": "2003-09-12T15:33:05.0000000",
    "EndDate": null,
    "ModificationDate": "2003-09-12T15:33:05.0000000",
    "DocumentId": "2076071534",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5330",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Visio 2002/XP PROBLEM: \"Text in Drawing Does Not Appear Correctly When You Print to Adobe PDF Writer\"",
    "SortOrdinal": null,
    "ItemChar": "The Microsoft KB article \"Text in Drawing Does Not Appear Correctly When You Print to Adobe PDF Writer\" covers this problem in detail at:\n\n    http://support.microsoft.com/default.aspx?scid=kb;en-us;318324\n\nIt appears that Microsoft blames Adobe for this problem. The best suggestion is to switch to a unicode font such as Arial Unicode MS.",
    "ItemText": null,
    "CreateDate": "2003-09-13T00:27:43.0000000",
    "EndDate": null,
    "ModificationDate": "2003-09-13T00:27:43.0000000",
    "DocumentId": "2076071535",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5331",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET: Security Issues Surrounding Writing to the Event Log",
    "SortOrdinal": null,
    "ItemChar": "By default, the ASPNET user does not have permissions to write to default event logs---even the Application log. One way to address this issue is to let your web application impersonate a user with the correct permissions by entering the impersonate element in the system.web element of the Web.config file:\n\n    <system.web>\n        ...\n        <identity impersonate=\"true\" userName=\"MyUserName\" password=\"MyClearTextPassword\" />\n        ...\n    </system.web>\n\nAnother way is to use the Security > Permissions... command in regedt32 on this key:\n\n    HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\EventLog\n\nAdd the ASPNET account and grant Full Control.",
    "ItemText": null,
    "CreateDate": "2003-09-21T15:43:38.0000000",
    "EndDate": null,
    "ModificationDate": "2003-09-21T15:43:38.0000000",
    "DocumentId": "2076071536",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5332",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C#: Flippant Introductory Remarks; CSharp",
    "SortOrdinal": null,
    "ItemChar": "C# is Microsoft's \"innovation\" of Java. It is a hybrid of Java, C++ and a few true innovations. But like everyone else that indulges in bashing Microsoft, I will overlook the true innovations and talk about the negative stuff. Okay, one true innovation worth mentioning is the use of the concept embodied in the Common Language Runtime and the schema-based wonders of Intellisense. Very cool, but the memorable stuff, day to day, is not so praiseworthy:\n\n* Every case statement in a switch() structure must have a break statement.\n\n* The use of default values for named parameters is not supported (it's in VB.NET).\n\n* The with() structure (from the world of ECMA standards and VB.NET) is not supported.\n\n* Debugging ASP.NET pages is not \"intuitive\" (not a C# issue but worth mentioning).\n\n* As of VS.NET 2003 the code editor is far less interactive than the VB.NET editor.\n\nMy theoretical understanding of Java and my experience with JavaScript helped me to get up and running in a matter of weeks with C#. I prefer to use C# for all coding except the code behind Windows Forms. Visual Basic.NET seems more suitable for the RAD UI experience. For example, the AddressOf keyword makes events wiring  easier and I have sentimental connection to my early days building form in MS Access 2.x/97 with VBA.\n\nVisual Basic is the pet language of Bill Gates. It will be here to stay for sentimental and memorial feelings---let alone any perceptions based on logistics.\n\nNevertheless, generally I prefer brackets rather than Begin and End blocks. I expect to be outnumbered and outgunned when it comes to this argument. As of this writing it takes more lines of code to express myself in VB.NET than in C# but Microsoft is working on this. The September 8 .NET Rocks! show features the VB.NET team addressing these issues:\n\n    http://www.franklins.net/dotnetrocks.asp\n\nAfter the syntax is under the belt, I recommend looking at \"Visual C# How-To Resources\" at:\n\n    http://msdn.microsoft.com/howto/c.asp",
    "ItemText": null,
    "CreateDate": "2004-04-27T11:43:27.0700000",
    "EndDate": null,
    "ModificationDate": "2004-04-27T11:43:27.0700000",
    "DocumentId": "2076071537",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5333",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# and ASP.NET: Capturing All HTML Output from a Web Forms Page; ASPX; Respecting HTML/XHTML Standards with ASP.NET",
    "SortOrdinal": null,
    "ItemChar": "The number one reason here to capture all HTML output during the life cycle of an ASPX page is to intercept any glaring HTML violations that Web Server controls currently produce. By default, we should find that ASP.NET server controls render something between XHTML and HTML 4.x which is effectively nothing that can be validated under any W3C standard.\n\nThis problem is discussed in detail here:\n\n    http://www.liquid-internet.co.uk/content/dynamic/pages/series1article1.aspx\n\nThe article \"Valid XHTML within .NET\" by Kevin Brown of Liquid Internet Limited is somewhat complex. A more brute force way of handling this is by overriding the Render() event of the base class of Page:\n\n    override protected void Render(HtmlTextWriter HTWriter)\n    {\n        StringBuilder StrBuilder = new StringBuilder();\n        StringWriter StrWriter = new StringWriter(StrBuilder);\n        HtmlTextWriter BaseHTWriter = new HtmlTextWriter(StrWriter);\n\n        /*\n            Capture all HTML output for this page\n            and flush into the underlying String Builder:\n        */\n        base.Render(BaseHTWriter);\n        BaseHTWriter.Flush();\n\n        string HTML = StrBuilder.ToString();\n        HTML = HTML.Replace(\"foo\",\"bar\");\n        HTWriter.Write(HTML);\n    }\n\nWe can see that the string HTML is replacing any substring \"foo\" with \"bar.\" Of course, more complex stuff can be done featuring Regular Expresssions. Thanks to Greg McCarty (gmccarty@bizmat.com) for the original design.",
    "ItemText": null,
    "CreateDate": "2003-09-30T14:31:30.0000000",
    "EndDate": null,
    "ModificationDate": "2003-09-30T14:31:30.0000000",
    "DocumentId": "2076071538",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5334",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "IIS 6.0: Anonymous Access and Sub-Authentication; IISSUBA.DLL",
    "SortOrdinal": null,
    "ItemChar": "In IIS 5.x and below we may remember the Allow IIS to control password check box under Properties > Directory Security > Edit > Authentication Methods > Anonymous User Account. In IIS 6.0, this check box is not available and the functionality behind this check box is not enabled by default.\n\nThis technology is called \"sub-authentication\" and it is not good because it reduces the level of security of IIS 6.0 and forces IIS 6.0 to run in the INETINFO process and forces the local SYSTEM account to impersonate the account specified for anonymous access. This is because when IIS is allowed to \"control\" the Anonymous User password, it actually completely ignoring it.\n\nThe reason why IIS 6.0 does this is to prevent a user account from logging on to a domain controller, which does not allow users to log on locally be default. Unfortunately this exposes the local SYSTEM account to the network.\n\nIt should not be a surprise then that to enable Sub-Authentication requires using the command line:\n\n    RUNDLL32 %windir%\\system32\\inetsrv\\iissuba.dll,RegisterIISSuba\n\nand the IIS Metabase:\n\n    AnonymousPasswordSynch=True",
    "ItemText": null,
    "CreateDate": "2003-10-06T19:11:54.0000000",
    "EndDate": null,
    "ModificationDate": "2003-10-06T19:11:54.0000000",
    "DocumentId": "2076071539",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5335",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# and ASP.NET: Writing HTML Targeted from Code-Behind Designs; Using Regular Expressions to Write HTML",
    "SortOrdinal": null,
    "ItemChar": "Although the title of this article makes no mention of it, my remarks here will be flippant:\n\nYou can target areas of an HTML page for writing by using a combination of the PlaceHolder Control (System.Web.UI.WebControls.PlaceHolder), the Literal Control (System.Web.UI.WebControls.Literal) and by running tags at the server (with the runat=\"server\" attribute). For efficiency, most controls can be accessed via the HtmlGenericControl class. The C# code below finds an HTML HEAD element with attributes id=\"Head\" and runat=\"server\" and formats its \"inner HTML\" with Regular Expressions:\n\nprotected void FormatHead()\n{\n    string HTML = \"\";\n    string str = \"\";\n\n    Match RegMatch = null;\n\n    GenControl = (HtmlGenericControl)this.FindControl(\"Head\");\n    if(GenControl != null)\n    {\n        HTML = GenControl.InnerHtml;\n        //LINK tag:\n        str = String.Format(@\"href=\"\"{0}\"\"\",p_webSummary.WebCss);\n        RegMatch = Regex.Match(HTML,@\"<\\s*link\\s+.*(href=\"\"\"\")+.*>\"\n            ,RegexOptions.IgnoreCase);\n        if(RegMatch.Success) HTML = HTML.Replace(RegMatch.Groups[1].Value,str);\n\n        //SCRIPT tag:\n        str = String.Format(@\"src=\"\"{0}\"\"\",p_webSummary.WebJs);\n        RegMatch = Regex.Match(HTML,@\"<\\s*script\\s+.*(src=\"\"\"\")+.*>\"\n            ,RegexOptions.IgnoreCase);\n        if(RegMatch.Success) HTML = HTML.Replace(RegMatch.Groups[1].Value,str);\n\n        //TITLE tag:\n        str = String.Format(\"<title>{0}</title>\",p_webSummary.WebName);\n        HTML = HTML.Replace(\"<title></title>\",str);\n\n        GenControl.InnerHtml = HTML;\n    }\n}\n\nThis technique is for people who really want a lot of control over their HTML and have an undying love for Regular Expressions. By the way, this is the targeted HTML for the example above:\n\n<head id=\"Head\" runat=\"server\">\n    <link href=\"\" id=\"LinkCss\" rel=\"stylesheet\" type=\"text/css\">\n    <meta name=\"CODE_LANGUAGE\" content=\"C#\">\n    <meta name=\"GENERATOR\" content=\"Microsoft Visual Studio .NET 7.1\">\n    <meta name=\"vs_defaultClientScript\" content=\"JavaScript\">\n    <meta name=\"vs_targetSchema\" content=\"http://schemas.microsoft.com/intellisense/ie5\">\n    <script language=\"javascript\" src=\"\" type=\"text/javascript\"></script>\n    <title></title>\n</head>\n\nNote that you can't run LINK or SCRIPT tags at the server with empty strings or any kind of bogus place holders without causing an exception to be thrown. If you insist, you can try some kind of data-binging design but this violates my new principle of using only tags in my HTML pages.\n\nSo, flippantly speaking, Regular Expressions are cool but right about now I am more attracted to using the PlaceHolder control to load *.ascx pages and then using Literal controls inside those pages to be targeted by an HtmlTextWriter in a code-behind design.",
    "ItemText": null,
    "CreateDate": "2003-10-30T13:02:08.0000000",
    "EndDate": null,
    "ModificationDate": "2003-10-30T13:02:08.0000000",
    "DocumentId": "2076071543",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5336",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flash MX ActionScript: Loading Data Across Domains; Macromedia Flash Security Sandbox",
    "SortOrdinal": null,
    "ItemChar": "If you have noticed any Flash \"sandbox\" error messages popping up with the Flash 6 player or greater, then please refer to these TechNote articles:\n\n\"Loading data across domains\" (16520)\nhttp://www.macromedia.com/support/flash/ts/documents/load_xdomain.htm\n\n\"Macromedia Flash Security Sandbox\" (16629)\nhttp://www.macromedia.com/support/flash/ts/documents/security_sandbox.htm",
    "ItemText": null,
    "CreateDate": "2003-11-23T21:48:57.0000000",
    "EndDate": null,
    "ModificationDate": "2003-11-23T21:48:57.0000000",
    "DocumentId": "2076071546",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5337",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ADO.NET: Using Default Parameters in SQL Server Stored Procedures",
    "SortOrdinal": null,
    "ItemChar": "Default parameters are used in SQL Server stored proc's when its corresponding SQL Parameter object is omitted. This C# code snippet omits this object when the value to be assigned to this object is null:\n\n    if(CmdName != null)\n    {\n        SqlParam = new SqlParameter(\"@cmdName\",SqlDbType.VarChar,16);\n        SqlParam.Value = CmdName;\n        SqlCmd.Parameters.Add(SqlParam);\n    }\n\nThis and other methods are discussed in detail in \"HOW TO: Call Stored Procedures with Optional Values in ADO.NET\" (http://support.microsoft.com/default.aspx?scid=kb;EN-US;Q321902). Unfortunately, all code examples in the article are in VB.NET.\n\nAdditionally, it can't hurt to review \".NET Data Access Architecture Guide\" at:\n\n    http://msdn.microsoft.com/vcsharp/\n        using/understanding/security/\n            default.aspx?pull=/library/en-us/dnbda/html/daag.asp",
    "ItemText": null,
    "CreateDate": "2003-11-24T16:52:36.0000000",
    "EndDate": null,
    "ModificationDate": "2003-11-24T16:52:36.0000000",
    "DocumentId": "2076071548",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5338",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "DTS ActiveX Script Task: Formatting an Apache Log File; Visual Basic ActiveX Script; Data Transformation Services",
    "SortOrdinal": null,
    "ItemChar": "'**********************************************************************\n'  Visual Basic ActiveX Script\n'************************************************************************\nFunction Main()\n    Dim objFileSys : Set objFileSys = CreateObject(\"Scripting.FileSystemObject\")\n    Dim vPath : vPath = DTSGlobalVariables(\"gRootLogPath\").Value\n    Dim objInStream\n    Dim objOutStream\n    Dim vWrite, vLine\n\n    Set objInStream = objFileSys.OpenTextFile(vPath & \"raw.txt\")\n    Set objOutStream = objFileSys.CreateTextFile(vPath & \"log.txt\")\n\n    '\n    'Apache \"common\" log file: host ident authuser date request status bytes\n    '\n    Do Until objInStream.AtEndOfStream\n        vWrite = false\n        vLine = objInStream.ReadLine\n\n        If Instr(1,vLine,\"/ HTTP\") > 0 _\n            Or Instr(1,vLine,\".css HTTP\") > 0 _\n            Or Instr(1,vLine,\".exe HTTP\") > 0 _\n            Or Instr(1,vLine,\".html HTTP\") > 0 _\n            Or Instr(1,vLine,\".js HTTP\") > 0 _\n            Or Instr(1,vLine,\".mov HTTP\") > 0 _\n            Or Instr(1,vLine,\".mp3 HTTP\") > 0 _\n            Or Instr(1,vLine,\".pdf HTTP\") > 0 _\n            Or Instr(1,vLine,\".swf HTTP\") > 0 _\n            Then\n\n            If Instr(1,vLine,\"not_found.html HTTP\") = 0 _\n                And Instr(1,vLine, \"\"\"GET\" & Space(1)) > 0 _\n                Then vWrite = true\n\n        End If\n\n        If CBool(vWrite) Then objOutStream.WriteLine(vLine)\n    Loop\n\n    objInStream.Close\n    objOutStream.Close\n\n    Set objInStream = Nothing\n    Set objOutStream = Nothing\n    Set objFileSys = Nothing\n\n    Main = DTSTaskExecResult_Success\nEnd Function",
    "ItemText": null,
    "CreateDate": "2003-12-04T11:51:27.2930000",
    "EndDate": null,
    "ModificationDate": "2003-12-04T11:51:27.2930000",
    "DocumentId": "2076071549",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5339",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "UCLA MCCS: Blue Form Notes",
    "SortOrdinal": null,
    "ItemChar": "blueForms_webReader|xcfh5678jk\nblueForms_webRequestor|wdgt4521hb\nblueForms_webSigner|qwev45678zx\nblueForms_webSponsor|iuyg6d4432as\n",
    "ItemText": null,
    "CreateDate": "2004-04-29T12:16:04.8270000",
    "EndDate": null,
    "ModificationDate": "2004-04-29T12:16:04.8270000",
    "DocumentId": "2076071550",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5340",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP and VBScript 5.5 Code: basRowCmds(); Use of the Regular Expression Object",
    "SortOrdinal": null,
    "ItemChar": "Function basRowCmds(vString)\n    If Len(vString) = 0 Then Exit Function\n    Dim vCmdButton\n    Dim objRegExpr: Set objRegExpr = New regexp\n    objRegExpr.Pattern = \"<\\!--cmd_(\\D+)_(\\D+)_(\\d+)-->\"\n    objRegExpr.Global = True\n    objRegExpr.IgnoreCase = True\n    Dim objMatches: Set objMatches = objRegExpr.Execute(vString)\n    Dim objMatch: For Each objMatch in objMatches\n        Select Case LCase(objMatch.SubMatches(0))\n            'SubMatches() was added to VBScript 5.5!\n            Case \"add\"\n                vCmdButton = \"<button class=\"\"uiButton\"\"\" _\n                    & \"onClick=\"\"window.location.href='./?cmd=add&type=\" _\n                    & objMatch.SubMatches(1) & \"&id=\" _\n                    & objMatch.SubMatches(2) & \"'\"\">Add</button>\"\n                vString = Replace(vString,objMatch.Value,vCmdButton _\n                    ,1,-1,vbTextCompare)\n            Case \"delete\"\n                vCmdButton = \"<button class=\"\"uiButton\"\"\" _\n                    & \"onClick=\"\"window.location.href='./?cmd=delete&type=\" _\n                    & objMatch.SubMatches(1) & \"&id=\" _\n                    & objMatch.SubMatches(2) & \"'\"\">Delete</button>\"\n                vString = Replace(vString,objMatch.Value,vCmdButton _\n                    ,1,-1,vbTextCompare)\n            Case \"remove\"\n                vCmdButton = \"<button class=\"\"uiButton\"\"\" _\n                    & \"onClick=\"\"window.location.href='./?cmd=remove&type=\" _\n                    & objMatch.SubMatches(1) & \"&id=\" _\n                    & objMatch.SubMatches(2) & \"'\"\">Remove</button>\"\n                vString = Replace(vString,objMatch.Value,vCmdButton _\n                    ,1,-1,vbTextCompare)\n        End Select\n    Next\n\n    basRowCmds = vString\nEnd Function\n",
    "ItemText": null,
    "CreateDate": "2004-02-03T11:07:39.9500000",
    "EndDate": null,
    "ModificationDate": "2004-02-03T11:07:39.9500000",
    "DocumentId": "2076071551",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5341",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PayPal Payment HTML Code: BODO BONGSERO Master Disk;BodoDesigns.com",
    "SortOrdinal": null,
    "ItemChar": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n\n<html>\n<head>\n    <style>\n    body {\n        background: #ffffff none no-repeat scroll 0% 0%;\n        color: #006633;\n        font-family: Verdana, Helvetica, sans-serif;\n        font-size:medium;\n    }\n    h2 {\n        background: transparent none no-repeat scroll 0% 0%;\n        font-size: largest;\n    }\n\n    </style>\n    <title>BODO BONGSERO Master Disk</title>\n</head>\n\n<body>\n<h2>BODO BONGSERO Master Disk</h2>\n<p> Here is the product you requested. Thanks very much for supporting <a href=\"http://kintespace.com\">kintespace.com</a>!</p>\n<form name=\"_xclick\" action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"get\">\n<input type=\"hidden\" name=\"cmd\" value=\"_xclick\">\n<input type=\"hidden\" name=\"business\" value=\"rasx@kintespace.com\">\n\n<input type=\"hidden\" name=\"amount\" value=\"10.00\">\n<input type=\"hidden\" name=\"cancel_return\" value=\"http://www.songhaysystem.com/mail.php\">\n<input type=\"hidden\" name=\"currency_code\" value=\"USD\">\n<input type=\"hidden\" name=\"item_name\" value=\"BODO BONGSERO Master Disk\">\n<input type=\"hidden\" name=\"item_number\" value=\"BODO_002\">\n<input type=\"hidden\" name=\"no_note\" value=\"0\">\n<input type=\"hidden\" name=\"no_shipping\" value=\"0\">\n<input type=\"hidden\" name=\"return\" value=\"http://www.songhaysystem.com\">\n<input type=\"hidden\" name=\"shipping\" value=\"4.99\">\n<input type=\"hidden\" name=\"shipping2\" value=\"2.99\">\n\n<input class=\"uiButton\" type=\"submit\" name=\"submit\" title=\"Make payments with PayPal - it's fast, free and secure!\" value=\"Buy Now!\">\n</form> \n</body>\n</html>\n",
    "ItemText": null,
    "CreateDate": "2004-10-20T14:30:43.3700000",
    "EndDate": null,
    "ModificationDate": "2004-10-20T14:30:43.3700000",
    "DocumentId": "2076071553",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5342",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "kintespace.com: .htaccess file from Focal Hosting",
    "SortOrdinal": null,
    "ItemChar": "ErrorDocument 404 http://www.kintespace.com/not_found.html\n\nRewriteEngine on Options +FollowSymlinks\nRewriteBase /\nRewriteRule ^kb/articles/(.*)\\.html$ http://songhaysystem.com/document.php?cmd=getKBDoc&get=$1\nRewriteRule ^kb/howto/(.*)/ http://songhaysystem.com/document.php?cmd=getDocCode&get=$1\nRewriteRule ^kb/subjects/(.*)\\.html$ http://songhaysystem.com/document.php?cmd=listSubjects&code=$1\nRewriteRule ^kb/util/(.*)/ http://songhaysystem.com/\nRewriteRule ^kb http://songhaysystem.com/\n",
    "ItemText": null,
    "CreateDate": "2004-03-29T23:04:42.4000000",
    "EndDate": null,
    "ModificationDate": "2004-03-29T23:04:42.4000000",
    "DocumentId": "2076071555",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5343",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# and ASP.NET Code Snippet: Manually Wiring Up Events in Visual Studio.NET 2003",
    "SortOrdinal": null,
    "ItemChar": "/*\n    This works well when commandHTML is of type=\"submit\" or \"image\".\n    According to the strategies table under \"Handling a Click Event in\n    Client and Server Code\" in \"ASP.NET Server Control Event Model\"\n    under \"Visual Basic and Visual C# Concepts.\"\n*/\nprotected System.Web.UI.WebControls.Button commandServer;\nprotected System.Web.UI.HtmlControls.HtmlInputButton commandHTML;\n\nprivate void commandHTML_ServerClick(object Source, EventArgs e)\n{\n    Response.Write(\"commandHTML_ServerClick\");\n}\nprivate void commandServer_Click(object Source, EventArgs e)\n{\n    Response.Write(\"commandServer_Click\");\n}\nprivate void Page_Load(object sender, System.EventArgs e)\n{\n    commandHTML.ServerClick +=new EventHandler(commandHTML_ServerClick);\n    commandServer.Click +=new EventHandler(commandServer_Click);\n}",
    "ItemText": null,
    "CreateDate": "2004-04-01T18:54:46.4000000",
    "EndDate": null,
    "ModificationDate": "2004-04-01T18:54:46.4000000",
    "DocumentId": "2076071556",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5344",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flash MX ActionScript 1.0/2.0: Code Hints; Suffixes; Flash MX 2004; Dreamweaver MX",
    "SortOrdinal": null,
    "ItemChar": "The following summarizes the suffixes that produce code hints in Flash MX and Flash MX 2004. Note that many of these suffixes are documented in Flash MX but do not cause hints to appear (at least in my copy of Flash MX); these hints should also work in Dreamweaver MX. Also note that code hints do not complete variable names (this is what Microsoft may call \"code completion\").\n\n    Array (suffix: _array)\n\n    Button (suffix: _btn)\n\n    Camera (2004 suffix: _cam)\n\n    Camera (suffix: _camera); documentation error?\n\n    Color (suffix: _color); this does not produce hints in my copy of Dreamweaver MX\n\n    ContextMenu (2004 suffix: _cm)\n\n    ContextMenuItem (2004 suffix: _cmi)\n\n    Date (suffix: _date)\n\n    Error (2004 suffix: _err)\n\n    LoadVars (2004 suffix: _lv)\n\n    LocalConnection (2004 suffix: _lc)\n\n    Microphone (suffix: _mic); this does not produce hints in my copy of Flash MX\n\n    MovieClip (suffix: _mc)\n\n    MovieClipLoader (2004 suffix: _mcl)\n\n    PrintJob (2004 suffix: _pj)\n\n    NetConnection (suffix: _connection); documentation error?\n\n    NetConnection (2004 suffix: _nc)\n\n    NetStream (2004 suffix: _ns)\n\n    NetStream (suffix: _stream); documentation error?\n\n    SharedObject (suffix: _so); this does not produce hints in my copy of Flash MX\n\n    Sound (suffix: _sound)\n\n    String (suffix: _str)\n\n    TextField (suffix: _txt)\n\n    TextFormat (suffix: _fmt)\n\n    Video (2004 suffix: _video); this does not produce hints in my copy of Flash MX\n\n    XML (suffix: _xml)\n\n    XMLNode (2004 suffix: _xmlnode)\n\n    XMLSocket (suffix: _xmlsocket)\n\nFINAL NOTE: All of the suffixes marked with \"this does not produce hints in my copy of Flash MX\" work correctly in Flash MX 2004.",
    "ItemText": null,
    "CreateDate": "2004-04-08T15:34:23.0000000",
    "EndDate": null,
    "ModificationDate": "2004-04-08T15:34:23.0000000",
    "DocumentId": "2076071558",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5345",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Word 2000 VBA: Inserting HTML Tags into a Range; Programmatic Find/Replace",
    "SortOrdinal": null,
    "ItemChar": "Dim objRange As Range\nSet objRange = Application.ActiveDocument.Range\nWith objRange.Find\n    Call .ClearFormatting\n    .Font.Bold = True\n    .Format = True\n    .Forward = True\n    .Highlight = False\n    .MatchAllWordForms = False\n    .MatchCase = False\n    .MatchSoundsLike = False\n    .MatchWholeWord = True\n    .MatchWildcards = True\n    .NoProofing = False\n    .Text = vbNullString\n    .Wrap = wdFindContinue\n    \n    With .Replacement\n        Call .ClearFormatting\n        .Text = \"<strong>^&<\\strong>\"\n    End With\n    Call .Execute(Replace:=wdReplaceAll)\nEnd With\n",
    "ItemText": null,
    "CreateDate": "2004-04-11T01:32:01.8200000",
    "EndDate": null,
    "ModificationDate": "2004-04-11T01:32:01.8200000",
    "DocumentId": "2076071559",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5346",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET: Flippant Remarks about Postbacks; Songhay Design Patterns",
    "SortOrdinal": null,
    "ItemChar": "When a FORM runs at the server, its inner HTML is rewritten by ASP.NET. This is what appears to be happening:\n\n* ID and NAME properties are rewritten according to a predictable pattern. Two new JavaScript functions were added to deal with this design so external scripts can still be used. One of these functions is extremely inefficient as it loops through sets of objects hoping to find the right one renamed by ASP.NET.\n\n* The ACTION property is rewritten to make sure the form posts back to itself. This design “encourages” me to not roundtrip commands through the ACTION property. It also has nudged me into running HTML buttons at the server and using event delegates instead of commands embedded in query strings.\n\n* Using HTML buttons as server controls also means forms are no longer validated and submitted in JavaScript. Now they are only validated and either true or false is returned to a “listener”—usually the FORM connected to the ONSUBMIT property.\n",
    "ItemText": null,
    "CreateDate": "2004-04-27T12:05:14.9900000",
    "EndDate": null,
    "ModificationDate": "2004-04-27T12:05:14.9900000",
    "DocumentId": "2076071571",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5347",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Songhay Design Patterns: The Importance of Threads; Threading a DTS Package; Interop; COM Events Sink; Windows Forms",
    "SortOrdinal": null,
    "ItemChar": "The design goal is to have a Windows form call a SQL Server 2000 DTS Package. While the package is running, it needs to report back to controls on the Windows form. Moving toward this goal appears straight forward but it involved these \"hidden\" issues:\n\n* The DTSPackage Object (COM) Library expects a client program to provide a single connection point for events. This means that the System.Runtime.InteropServices name space must be used for a type called UCOMIConnectionPointContainer among others. This process is detailed in MSKB article 321525 (\"HOW TO: Use DTS Package Events in Visual Basic .NET\"). There is also a C# version of this article, 319985 (\"HOW TO: Handle Data Transformation Services Package Events in Visual C# .NET\").\n\n* The DTS package routines will \"freeze\" when transplanted into a Windows Form without running the procedure(s) along a thread. The CodeProject.com article \"Threading in C#\" (http://www.codeproject.com/csharp/threader.asp) by Anshuman Dimri, narendar was helpful in getting some idea about how to set up threading.\n\n* I wanted to wrap all of this functionality up into its own class. This means I had to learn how to raise my own events in C# and then pass them to the Windows Forms (which, by the way is written in VB.NET). The VS.NET documentation was actually helpful in this context.\n\nOne important lesson (for me) in developing this design pattern was understanding the importance of threads. I was quite upset about the \"freezing\" issue and only had some vague idea as to why this was happening. I took a chance and spent a few hours with threading and obtained the functionality.\n\nMore details:\n\n    http://www.yoda.arachsys.com/csharp/threads/\n",
    "ItemText": null,
    "CreateDate": "2004-11-03T16:42:26.2770000",
    "EndDate": null,
    "ModificationDate": "2004-11-03T16:42:26.2770000",
    "DocumentId": "2076071572",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5348",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: Windows Forms Data Services; Songhay.WinForms.Web.DataServices; Internal DataSet Procedures; C-sharp",
    "SortOrdinal": null,
    "ItemChar": "#region Internal DataSet Procedures\n\ninternal enum DataPosition\n{\n    First = 0,\n    Next = 1,\n    Previous = 2,\n    Last = 3\n}\n\ninternal static void DataSetCancel(DataSet TargetDataSet,ClientMessage Message)\n{\n    try\n    {\n        TargetDataSet.RejectChanges();\n        MessageBox.Show(String.Concat(\"All of your changes have been rejected. \",\n            \"Previous edits since last Save will not be saved to the server.\"),\n            Message.MainForm.Text,\n            MessageBoxButtons.OK,\n            MessageBoxIcon.Information);\n    }\n    catch(Exception Ex)\n    {\n        Message.DataErr();\n        MessageBox.Show(Ex.Message);\n    }\n}\n\ninternal static void DataSetPosition(DataSet TargetDataSet,\n    DataView EditView,DataPosition EnumPosition,ClientMessage Message)\n{\n    try\n    {\n        switch(EnumPosition)\n        {\n            case DataPosition.First:\n                Message.MainForm.BindingContext[EditView].Position = 0;\n                DataSetPosition(TargetDataSet,EditView,Message);\n                Message.ReadyToEdit();\n                break;\n\n            case DataPosition.Next:\n                Message.MainForm.BindingContext[EditView].Position += 1;\n                DataSetPosition(TargetDataSet,EditView,Message);\n                Message.ReadyToEdit();\n                break;\n            \n            case DataPosition.Previous:\n                Message.MainForm.BindingContext[EditView].Position -= 1;\n                DataSetPosition(TargetDataSet,EditView,Message);\n                Message.ReadyToEdit();\n                break;\n            \n            case DataPosition.Last:\n                Message.MainForm.BindingContext[EditView].Position \n                    = Message.MainForm.BindingContext[EditView].Count - 1;\n                DataSetPosition(TargetDataSet,EditView,Message);\n                Message.ReadyToEdit();\n                break;\n        }\n    }\n    catch(Exception Ex)\n    {\n        Message.ClientErr();\n        Message.MainStatusPanel.Text = Ex.Message;\n        MessageBox.Show(Ex.Message);\n    }\n}\n\ninternal static void DataSetPosition(DataSet TargetDataSet,\n    DataView EditView,ClientMessage Message)\n{\n    if(Message.MainForm.BindingContext[EditView].Count > 0)\n    {\n        Message.EditStatusPanel.Text = String.Format(\"Data Row {0}  of  {1}\",\n            (Message.MainForm.BindingContext[EditView].Position + 1).ToString(),\n            Message.MainForm.BindingContext[EditView].Count.ToString());\n\n        if(TargetDataSet.HasChanges())\n        {\n            DataSet ds = TargetDataSet.GetChanges();\n            string msg = \"\";\n            foreach(DataTable table in ds.Tables)\n            {\n                if(table.Rows.Count > 1)\n                    msg += String.Format(\"{0}: {1} changes. \",\n                        table.TableName,table.Rows.Count);\n\n                if(table.Rows.Count == 1)\n                    msg += String.Format(\"{0}: 1 change. \",\n                        table.TableName);\n            }\n            Message.ServerStatusPanel.Text = msg;\n        }\n        else\n        {\n            Message.ServerStatusPanel.Text\n                = \"No new changes to client-side data.\";\n        }\n    }\n    else\n    {\n        Message.EditStatusPanel.Text = \"        \";\n        Message.ServerStatusPanel.Text = \"        \";\n    }\n}\n\ninternal static void DataSetUpdate(SqlDataAdapter TargetSQLDataAdapter,\n    DataSet TargetDataSet,\n    DataTable TargetDataTable,\n    bool UpdateDBMS,\n    bool PromptToLoseChanges,\n    ClientMessage Message)\n{\n    //Stop any current edits.\n    Message.MainForm.BindingContext[TargetDataTable].EndCurrentEdit();\n\n    if(TargetDataSet.HasChanges())\n    {\n        if(PromptToLoseChanges)\n        {\n            if(MessageBox.Show(\"Do you want to save your changes?\",\n                Message.MainForm.Text, MessageBoxButtons.YesNo,\n                MessageBoxIcon.Question)\n                == DialogResult.No) return;\n        }\n    }\n\n    //Clone target data set. \n    DataSet dsTmp = null;\n    try\n    {\n        dsTmp = TargetDataSet.Clone();\n    }\n    catch(System.Exception Ex)\n    {\n        MessageBox.Show(Ex.Message);\n    }\n\n    //Merge with empty clone. FUNKYKB: Does this test schema integrity?\n    try\n    {\n        TargetDataSet.Merge(dsTmp);\n    }\n    catch(System.Exception Ex)\n    {\n        MessageBox.Show(Ex.Message);\n    }\n\n    //Update server.\n    if(UpdateDBMS)\n    {\n        try\n        {\n            Message.Saving();\n            TargetSQLDataAdapter.Update(TargetDataSet);\n        }\n        catch(System.Exception Ex)\n        {\n            Message.DataErr();\n            Message.MainStatusPanel.Text = Ex.Message;\n            MessageBox.Show(Ex.Message);\n        }\n    }\n\n    //Save and clear all changes.\n    TargetDataSet.AcceptChanges();\n}\n\n#endregion\n",
    "ItemText": null,
    "CreateDate": "2004-06-29T21:00:57.0130000",
    "EndDate": null,
    "ModificationDate": "2004-06-29T21:00:57.0130000",
    "DocumentId": "2076071573",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5349",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: Windows Forms Data Services; Songhay.WinForms.Web.DataServices; Internal Row Procedures; C-sharp",
    "SortOrdinal": null,
    "ItemChar": "#region Internal Row Procedures\n\ninternal static void RowCancel(DataView TargetDataView,ClientMessage Message)\n{\n    Message.MainForm.BindingContext[TargetDataView].CancelCurrentEdit();\n}\n\ninternal static void RowDelete(DataView TargetDataView,ClientMessage Message)\n{\n    if(Message.MainForm.BindingContext[TargetDataView].Count > 0)\n    {\n        try\n        {\n            Message.MainForm.BindingContext[TargetDataView].RemoveAt(\n                Message.MainForm.BindingContext[TargetDataView].Position);\n            Message.ReadyToEdit();\n            Message.MainStatusPanel.Text = \"Record deleted.\";\n        }\n        catch(Exception Ex)\n        {\n            Message.ClientErr();\n            Message.MainStatusPanel.Text = Ex.Message;\n            MessageBox.Show(Ex.Message);\n        }\n    }\n}\n\ninternal static void RowEndEdit(DataView TargetDataView,ClientMessage Message)\n{\n    Message.MainForm.BindingContext[TargetDataView].EndCurrentEdit();\n}\n\ninternal static void RowNew(DataView TargetDataView,ClientMessage Message)\n{\n    try\n    {\n        Message.MainForm.BindingContext[TargetDataView].EndCurrentEdit();\n        Message.MainForm.BindingContext[TargetDataView].AddNew();\n        Message.ReadyToEdit();\n        Message.MainStatusPanel.Text = \"New record added.\";\n    }\n    catch(NoNullAllowedException Ex)\n    {\n        /*\n            Ignore this exception.\n            It will thrown again when the Position property is changed.\n        */\n        Ex.GetType(); \n    }\n    catch(Exception Ex)\n    {\n        Message.ClientErr();\n        Message.MainStatusPanel.Text = Ex.Message;\n        MessageBox.Show(Ex.Message);\n    }\n}\n\n#endregion",
    "ItemText": null,
    "CreateDate": "2004-06-29T21:01:47.2870000",
    "EndDate": null,
    "ModificationDate": "2004-06-29T21:01:47.2870000",
    "DocumentId": "2076071574",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5350",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL Syntax: The LIKE Operator with Bracket Wildcard Operators ([]); Using Wildcard Characters as Literals",
    "SortOrdinal": null,
    "ItemChar": "To search for text like '[foo]' and '[bar]' where the brackets are seen as literals we can use the LIKE operator in the WHERE predicate:\n\n    ...\n    WHERE [ColumName] LIKE '[[]%]'\n\nThis is covered in detail under \"Using Wildcard Characters as Literals\" in the SQL Books Online documentation here:\n\n    http://msdn.microsoft.com/library/default.asp\n        ?url=/library/en-us/tsqlref/ts_la-lz_115x.asp",
    "ItemText": null,
    "CreateDate": "2004-04-29T12:05:03.3470000",
    "EndDate": null,
    "ModificationDate": "2004-04-29T12:05:03.3470000",
    "DocumentId": "2076071575",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5351",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flash MX ActionScript 1.x: The Change Handler Function of ComboBox; Flash UI Components",
    "SortOrdinal": null,
    "ItemChar": "The Change Handler function cannot be of _global scope and by default should be in the timeline of the clip. This can be of the form:\n\n    function asComboHandler(objCombo){\n        var vValue = objCombo.getValue();\n        switch(vValue){...}\n    }",
    "ItemText": null,
    "CreateDate": "2004-05-13T22:39:23.6230000",
    "EndDate": null,
    "ModificationDate": "2004-05-13T22:39:23.6230000",
    "DocumentId": "2076071576",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5352",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VB.NET and Windows Forms: Flippant Remarks about Using Word Interop to Implement Spell-Checking",
    "SortOrdinal": null,
    "ItemChar": "Please see MSDN article \"Creating a Custom Spell-Checker with Word 2003 and Visual Basic .NET\" last seen here:\n\n    http://www.msdn.microsoft.com/office/understanding/word\n        /articles/default.aspx?pull=/library/en-us\n        /odc_wd2003_ta/html/odc_wdspellchkr.asp\n\nPros:\n\n* You don't have to pay more for a third-party spelling package.\n\n* You don't have to wait for a user-friendly, Windows Forms version of an open source spelling package to get its ASP-centric act together.\n\n* You can use leverage the investment made in custom dictionaries of MS Word.\n\n* Nothing extra to install on machines running MS Office.\n\n\nCons:\n\n* Loading an instance of MS-Word takes several seconds and upwards of 30MB of memory by default. It is best to open Word on a separate thread.\n\n* You can't be sure which version of Office this stuff works on: either Office XP or Office System 2003. You have carry around PIMs (Primary Interop Assemblies) for both.",
    "ItemText": null,
    "CreateDate": "2004-05-20T23:02:42.5700000",
    "EndDate": null,
    "ModificationDate": "2004-05-20T23:02:42.5700000",
    "DocumentId": "2076071586",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5353",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SharePoint Portal Server 2003: Flippant Remarks about Setup",
    "SortOrdinal": null,
    "ItemChar": "* To avoid Internet Explorer security prompts, namely those popping up because of Web Parts, add the SharePoint portal to the Trusted Sites zone.\n\n* The fastest way to expose the portal to an intranet domain (and all of the domains that trust this domain) is to add the NT AUTHORITY\\Authenticated Users group to the SharePoint Readers group.",
    "ItemText": null,
    "CreateDate": "2004-05-25T19:46:34.8230000",
    "EndDate": null,
    "ModificationDate": "2004-05-25T19:46:34.8230000",
    "DocumentId": "2076071588",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5354",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Native Instruments KONTAKT: Installation Journal",
    "SortOrdinal": null,
    "ItemChar": "Version 1.5.3: Installed without incident.\n\nVersion 1.5.x:\n\nThis version was purchased and promptly forgotten about by this procrastinator (it was burned to a CD and \"stored\"). This memory lapse allowed me to overlook the new elaborate registration process that involves identifying the machine running KONTAKT with the Registration Tool. Once this was sorted out, the 1.5.1.x update was downloaded and applied. This update brought Direct from Disk (DFD) back to the interface. Configuration settings highlights:\n\n* \"Normal\" Size, 800x600; \"Bigger\" Size, 1024x768; \"Large\" Size, 1280x1024.\n* File > Setup > Soundcard > Output Latency: 27ms (lower values cause distortion).\n* File > Setup > MIDI > Input Interface > In-A USB MidiSport 2x2: On.\n\n\nVersion 1.2.x:\n\nWhich horror story to detail first? We'll let's keep it short: West L.A. Music sold me an educational version (the box did not indicate this but the shrink-wrapped CDs were stamped with paper labels marked \"educational version\"). West L.A. music associates assured me that the educational version is no different from the bona fide retail version and strongly suggested that Native Instruments dumped this product on them and passed the inconvenience to me. The only real problem with this is that the paper labels may not be of archival quality and may destroy the CD in ten years. That's quite a long shot.\n\nThe CDs cannot be copied. The default version installed is 1.1.0.010. The 1.2.1 update was downloaded and applied. Here are some first-time buyer highlights:\n\n* The MK4902 connects to the USB Midiman Midisport 2x2 which connects to Songhay5.\n* Songhay5, its SPDIF output, plugs into the EMU APS E-Drive on Songhay4.\n* The WAV volume slider controls the volume of KONTAKT, its SPDIF output.",
    "ItemText": null,
    "CreateDate": "2004-06-14T15:33:55.3130000",
    "EndDate": null,
    "ModificationDate": "2004-06-14T15:33:55.3130000",
    "DocumentId": "2076071589",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5355",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Native Instruments KONTAKT 1.5.x: Recognizing Pitch Bend and Modulation Wheels",
    "SortOrdinal": null,
    "ItemChar": "Right-clicking on a relevant Knob or clicking the MOD + button may show the External Sources menu item. Two very important menu items under External Sources are Pitchbend and MIDI-CC. These two items allow KONTAKT to react to the Pitch Bend and Modulation wheels of external MIDI controllers such as the MK4902.\n\nMIDI-CC is shorthand for MIDI Continuous Controller, of the standard 128 controllers (e.g. 0 = Bank Select and 1 = Modulation). When the External Router for the MIDI-CC External Source is created enter number 1 next to MIDI-CC drop-down button to map to the Modulation wheel of the MIDI controller.",
    "ItemText": null,
    "CreateDate": "2004-05-31T23:05:07.8630000",
    "EndDate": null,
    "ModificationDate": "2004-05-31T23:05:07.8630000",
    "DocumentId": "2076071590",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5356",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code Snippet: Use of the DataTable NewRow() Method and the DefaultView Property",
    "SortOrdinal": null,
    "ItemChar": "/*\n    This snippet modifies the data source of a ComboBox in a custom DataGrid\n    Column Style (featuring a ComboBox). The keyword this references this Style.\n\n    Note that a DataView object comes by default (DefaultView) in the DataTable\n    object. This makes sorting on the fly possible with one line of code.\n*/\n    DataRow dRow = p_dataTable.NewRow();\n    dRow[p_valueMember] = DBNull.Value;\n    dRow[p_displayMember] = this.NullText;\n    p_dataTable.Rows.Add(dRow);\n    p_dataTable.DefaultView.Sort = p_displayMember;\n",
    "ItemText": null,
    "CreateDate": "2004-06-04T15:06:34.1830000",
    "EndDate": null,
    "ModificationDate": "2004-06-04T15:06:34.1830000",
    "DocumentId": "2076071591",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5357",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code Snippet: Simple Threading",
    "SortOrdinal": null,
    "ItemChar": "/*\nThis example does not take into account Thread() being called in sucession as ThreadTarget() is running. It does not deal with data being passed to/from ThreadTarget() as well.\n*/\n    using System.Threading;\n\n    private void Thread()\n    {\n        ThreadStart myThreadDelegate = new ThreadStart(this.ThreadTarget);\n        Thread myThread = new Thread(myThreadDelegate);\n        myThread.Priority = ThreadPriority.AboveNormal;\n        myThread.Start();\n    }\n\n    private void ThreadTarget()\n    {\n        //Perform task on thread.\n    }\n\n",
    "ItemText": null,
    "CreateDate": "2004-06-19T11:39:39.4170000",
    "EndDate": null,
    "ModificationDate": "2004-06-19T11:39:39.4170000",
    "DocumentId": "2076071592",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5358",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Forms Databinding: Andrew Brust on the Importance of the EndCurrentEdit() Method; DotNetRocks!; RowJiggle() Hack; VB.NET; C#",
    "SortOrdinal": null,
    "ItemChar": "The last 10 minutes of the Franklins.net DotNetRocks! show with Andrew Brust on March 31, 2003 deals with a data binding \"bug\" that's actually a feature. Here's the feature: when you open a Windows Form and enter data into a TextBox or ComboBox control bound to a DataSet and then close the form without moving to a new record or pressing some kind of Save button you will lose your changes.\n\nThis wonderful feature of the .NET Framework was stumbled upon by me while building my first WinForms project. In a fit of rage and panic, I wrote this code:\n\n    Public Sub RowJiggle(ByRef BindContext As BindingContext, _\n        ByRef TargetDataView As DataView)\n        'This subroutine makes sure that changes are recognized\n        'by moving off the row being edited and moving back. This hack sucks.\n        With BindContext(TargetDataView)\n            Try\n                If .Count > 1 Then\n                    If .Position <= (.Count - 1) And .Position > 0 Then\n                        'Backward jiggle:\n                        .Position -= 1\n                        .Position += 1\n                    ElseIf .Position < (.Count - 1) And .Position = 0 Then\n                        'Forward jiggle:\n                        .Position += 1\n                        .Position -= 1\n                    End If\n                End If\n            Catch Ex As Exception\n                Call Me.SetStatusBar(StatusIcons.ClientError, MainMsg:=Ex.Message)\n                Call MessageBox.Show(Ex.Message)\n            End Try\n        End With\n    End Sub\n\nUnfortunately, this code will not work for a DataSet with one row. Fortunately, that DotNetRocks! show aforementioned was archived and listened to again. This private rebroadcast of the show inspired me to write this code:\n\n    Private Sub RowEndEdit(ByRef BindContext As BindingContext, _\n        ByRef TargetDataView As DataView)\n\n        Dim BindBase As BindingManagerBase\n        Try\n            BindBase = BindContext.Item(TargetDataView)\n            Call BindBase.EndCurrentEdit()\n\n        Catch ex As Exception\n            Call Me.SetStatusBar(StatusIcons.ClientError, MainMsg:=ex.Message)\n            Call MessageBox.Show(ex.Message)\n        End Try\n    End Sub\n\nThis code rocks!",
    "ItemText": null,
    "CreateDate": "2004-06-29T20:57:14.4430000",
    "EndDate": null,
    "ModificationDate": "2004-06-29T20:57:14.4430000",
    "DocumentId": "2076071593",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5359",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Macromedia Dreamweaver MX PHP and MySQL: PHP and Dreamweaver MX Video Tutorials; Mark Fletcher; mark-fletcher.co.uk\n",
    "SortOrdinal": null,
    "ItemChar": "In the wake of Dreamwaever 2004, this stuff may look like historical lore but it certainly was an eye opener for me. Mark Fletcher explains how to use Dreamweaver MX with PHP to provide a way for static-page, \"professional\" web developers to transition to database-driven web information design.\n\nAs of this post, the link is here:\n\n    http://www.macromedia.com/devnet/mx/dreamweaver/articles/php_videos.html",
    "ItemText": null,
    "CreateDate": "2004-06-30T00:16:07.3600000",
    "EndDate": null,
    "ModificationDate": "2004-06-30T00:16:07.3600000",
    "DocumentId": "2076071594",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5360",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Outlook PROBLEM: Duplicate Holidays Listed Indefinitely in the Calendar",
    "SortOrdinal": null,
    "ItemChar": "Under the Tools > Options... > Calendar Options... > Calendar options section you clearly see the Add Holidays... button. You might have the idea that there is a \"remove holidays\" button as well. There isn't. And what's worse is when somehow, someway holidays get added twice to your Calendar. How to remove them? You can't just go to the URI outlook:Calendar and start removing them one by one because they go on forever and, unless I am missing something, holidays don't add themselves as a recurring series (probably because the periodicity of most holidays is not measurable).\n\nSo I simply \"reset\" my holidays by removing them all and adding them back when duplicates start showing up. (I can swear that some security update or upgrade to Outlook caused duplicates to appear but I can't be sure in the fog of war.) To remove all holidays, search for the Category 'Holiday' under Tools > Find > Advanced Find... > More Choices > Categories. When the results appear delete them all, permanently. Then, of course, add fresh, new, clean holidays as aforementioned.",
    "ItemText": null,
    "CreateDate": "2004-07-01T11:36:47.5630000",
    "EndDate": null,
    "ModificationDate": "2004-07-01T11:36:47.5630000",
    "DocumentId": "2076071595",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5361",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Sonic Foundry ACID 4.0 and Sound Forge 7.0: Creating ACID Loops with Sound Forge; Loop Creation Basics; Working with Traditional Instrumentalists; Sony Pictures Digital",
    "SortOrdinal": null,
    "ItemChar": "* Determine the time signature of the loop. It is customarily 4/4. The musician that created the loop should provide this information.\n\n* Determine the key of the loop. The musician that created the loop should provide this information.\n\n* Determine the tempo of the loop. The musician that created the loop should provide this information.\n\n* Listening to the loop sample, count the number of beats in the loop using the time signature. (This takes rhythm folks!)\n\n* Select Edit ACID Properties > Loop. In the Root note for transposing: field, enter the key of the loop. In the Number of beats (...): field, enter the number of beats counted. Click on OK.\n\n* Select Edit Tempo. The number in the Tempo in beats per minute: field should already contain a value that is close to the value provided by the musician that created the loop. Click on OK. If you are viewing the sample in the Measures & Beats status format, then the tick marks should update to reflect the new tempo.\n",
    "ItemText": null,
    "CreateDate": "2004-07-02T00:45:11.8900000",
    "EndDate": null,
    "ModificationDate": "2004-07-02T00:45:11.8900000",
    "DocumentId": "2076071596",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5362",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about David Berlind's \"Microsoft's patchwork mess\"; ZDNet; Download.Ject; ADODB.Stream",
    "SortOrdinal": null,
    "ItemChar": "ZDNet Executive Editor, David Berlind, \"Microsoft's patchwork mess\" (July 3, 2004) writes:\n\n\"The notice, which was posted on Microsoft's site by 9 a.m. on July 2, 2004, says the Windows Update service will be distributing the fix later in the day. People who want to move more quickly are directed to download the code from Microsoft's Download Center.\"\n\n\"But clicking the link will lead to a page that offers not a clue about where to find the fix that Microsoft says is there. The site lists popular downloads and even featured downloads. But nowhere is something that says, 'If you've come here for the download that protects you against Download.Ject, click here!'\"\n\nThis story underscores a huge chunk of my life's work (so far). A non-technical manager should have been able to post a change to the relevant web pages in the relevant web sites but clearly this did not happen. My guess is that the site in question is not database driven---or the database behind this web page(s) is not web-service driven--or the web service---well, you get the idea.\n\nI'm seeing some Microsoft program manager updating Microsoft websites with as much ease as sending an email---with as much ease as opening a \"master document\" in a Word Processor and routing an updated paragraph in that document to the appropriate web site. Having seen MSDN web programmers lecture on MSDNTV about XSD schema stuff driving MSDN webs, clearly the tools are there. It is just a matter of making them available to the right people at the right time. And SharePoint Portal Server is not one of those tools.\n\nWhy did Don Box stop working on his WordML XSLT transform?\n",
    "ItemText": null,
    "CreateDate": "2004-07-03T18:15:42.0430000",
    "EndDate": null,
    "ModificationDate": "2004-07-03T18:15:42.0430000",
    "DocumentId": "2076071597",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5363",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code in Cold Storage: A \"Strongly-Typed\" DataTable;",
    "SortOrdinal": null,
    "ItemChar": "\n    /// <summary>\n    /// \n    /// </summary>\n    public class ListControlTable : DataTable,System.Collections.IEnumerable\n    {\n        /// <summary>\n        /// \n        /// </summary>\n        public ListControlTable():base(\"ListControlTable\")\n        {\n            this.InitClass();\n        }\n\n        /// <summary>\n        /// \n        /// </summary>\n        public DataColumn DisplayColumn\n        {\n            get{ return this.Columns[\"displayColumn\"]; }\n        }\n\n        /// <summary>\n        /// \n        /// </summary>\n        public DataColumn ValueColumn\n        {\n            get{ return this.Columns[\"valueColumn\"]; }\n        }\n\n        /// <summary>\n        /// \n        /// </summary>\n        /// <returns></returns>\n        public System.Collections.IEnumerator GetEnumerator() \n        {\n            return this.Rows.GetEnumerator();\n        }\n\n        /// <summary>\n        /// \n        /// </summary>\n        /// <returns></returns>\n        public override DataTable Clone() \n        {\n            ListControlTable cln = (ListControlTable)base.Clone();\n            return cln;\n        }\n\n        /// <summary>\n        /// \n        /// </summary>\n        /// <param name=\"SourceTable\"></param>\n        /// <param name=\"ValueColumn\"></param>\n        /// <param name=\"DisplayColumn\"></param>\n        /// <param name=\"Refill\"></param>\n        /// <param name=\"InsertNull\"></param>\n        /// <param name=\"NullText\"></param>\n        public void Fill(DataTable SourceTable,DataColumn ValueColumn,\n            DataColumn DisplayColumn,bool Refill,bool InsertNull,string NullText)\n        {\n            foreach(DataRow row in SourceTable.Rows)\n            {\n                object[] rowArray = new object[3];\n                rowArray[0] = (row.ItemArray[ValueColumn.Ordinal].Equals(DBNull.Value))\n                    ? 0 : row.ItemArray[ValueColumn.Ordinal];\n                rowArray[1] = row.ItemArray[ValueColumn.Ordinal];\n                rowArray[2] = row.ItemArray[DisplayColumn.Ordinal];\n                if(!Refill) this.Rows.Add(rowArray);\n                else\n                {\n                    this.BeginLoadData();\n                    this.LoadDataRow(rowArray,true);\n                    this.EndLoadData();\n                }\n            }\n\n            if(InsertNull)\n            {\n                DataRow row = this.NewRow();\n                this.Rows.Add(new object[] {0,DBNull.Value,NullText});\n            }\n\n            this.DefaultView.Sort = \"displayColumn\";\n        }\n\n        /// <summary>\n        /// \n        /// </summary>\n        /// <returns></returns>\n        protected override DataTable CreateInstance() \n        {\n            return new ListControlTable();\n        }\n\n        private void InitClass()\n        {\n            this.Columns.Add(new DataColumn(\"valueColumnKey\",typeof(int),\n                null,System.Data.MappingType.Element));\n            this.Columns.Add(new DataColumn(\"valueColumn\",typeof(int),\n                null,System.Data.MappingType.Element));\n            this.Columns.Add(new DataColumn(\"displayColumn\",typeof(string),\n                null,System.Data.MappingType.Element));\n\n            //This is needed for the DataTable.LoadDataRow() method.\n            this.PrimaryKey = new DataColumn[] {this.Columns[\"valueColumnKey\"]};\n        }\n    }\n",
    "ItemText": null,
    "CreateDate": "2004-07-09T17:09:34.9630000",
    "EndDate": null,
    "ModificationDate": "2004-07-09T17:09:34.9630000",
    "DocumentId": "2076071598",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5364",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Forms: A DataGrid Bound \"Directly\" to a DataTable Is Actually Using the DefaultView; Disappearing New Rows",
    "SortOrdinal": null,
    "ItemChar": "A DataGrid bound \"directly\" to a DataTable is actually using the DefaultView property of the DataTable. It follows that the RowFilter, RowStateFilter and Sort properties of the DefaultView suddenly become very important in the explanation of why new rows added to your DataGrid suddenly disappear as soon as they are left out of focus.\n\nTo insure that the grid behaves somewhat predictably, this static member helps:\n\n    internal static void DataDefaultView(DataView TargetDefaultView)\n    {\n        TargetDefaultView.RowFilter = String.Empty;\n        TargetDefaultView.RowStateFilter = DataViewRowState.CurrentRows;\n        TargetDefaultView.Sort = String.Empty;\n    }\n",
    "ItemText": null,
    "CreateDate": "2004-07-11T12:56:22.0200000",
    "EndDate": null,
    "ModificationDate": "2004-07-11T12:56:22.0200000",
    "DocumentId": "2076071599",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5365",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Office System Microsoft Outlook: Clearing the Find a Contact List; Office 11",
    "SortOrdinal": null,
    "ItemChar": "Outlook power users know that the F11 key sends focus to the Find a Contact drop-down list in the Toolbar. The names shown in this are stored in the registry and, for Office 11, can be cleared by deleting this key from the registry:\n\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\11.0\\Outlook\\Contact\\QuickFindMRU\n\nPower users of earlier versions of earlier versions of Office should see that the number 11.0 shown in the path above can be changed to a lower number to accomplish the same task. So users of Office XP can go here:\n\n   HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\10.0\\Outlook\\Contact\\QuickFindMRU",
    "ItemText": null,
    "CreateDate": "2004-07-14T11:29:25.7170000",
    "EndDate": null,
    "ModificationDate": "2004-07-14T11:29:25.7170000",
    "DocumentId": "2076071600",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5366",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "UCLA MCCS: Compliance Notes",
    "SortOrdinal": null,
    "ItemChar": "complianceReader|mb8ngw2gj7a",
    "ItemText": null,
    "CreateDate": "2004-07-26T11:45:02.9770000",
    "EndDate": null,
    "ModificationDate": "2004-07-26T11:45:02.9770000",
    "DocumentId": "2076071602",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5367",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about XHTML Editors; XHTML Editing Components for Enterprise Data Solutions",
    "SortOrdinal": null,
    "ItemChar": "* CuteEditor for .NET from CuteSoft.net is a full blown ASP.NET application with several tens of files. I was expecting a little over one file---a compiled assembly or two. I can't see myself maintaining this stuff. The real killer is that this supports IE 5.5+ only.\n\n* r.a.d.editor3.1 from telerik.com is quite expensive and laden with Office Interop. It is DHTML- and JavaScript-based but only recently recognized XHTML. The MSI package created a web root and tried to run sample from my local web server. This did not work with \"object not found\" errors. When they dare charge so much money, I expect flawless idiot-proof installs. Better luck next time. Nice magazine ads.\n\n* XStandard XHTML 1.1 WYSIWYG Editor from XStandard.com has a free version of an ActiveX control that just works. The only immediate drawback is the fact that its an ActiveX control. Immediate gratification for the short term.\n",
    "ItemText": null,
    "CreateDate": "2004-07-28T21:19:48.1000000",
    "EndDate": null,
    "ModificationDate": "2004-07-28T21:19:48.1000000",
    "DocumentId": "2076071603",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5368",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VBA Code: Batch Conversion of Files into WordPerfect Format",
    "SortOrdinal": null,
    "ItemChar": "Sub SaveFolder()\n    Dim FSO As New FileSystemObject\n    Dim Folder As Folder\n    Dim File As File\n    Set Folder = FSO.GetFolder(\"C:\\MyDocs\\\")\n    For Each File In Folder.Files\n        If InStr(1, File.Name, \".wps\") Then _\n            Call FileSaveAs(Folder.Path & \"\\\", File.Name, \".wps\")\n    Next\nEnd Sub\n\nSub FileSaveAs(DirName As String, FileName As String, Extension As String)\n    \n    ChangeFileOpenDirectory DirName\n    \n    Documents.Open _\n        FileName:=\"\"\"\" & FileName & \"\"\"\", _\n        ConfirmConversions:=False, _\n        ReadOnly:=False, _\n        AddToRecentFiles:=False, _\n        PasswordDocument:=\"\", _\n        PasswordTemplate:=\"\", _\n        Revert:=False, _\n        WritePasswordDocument:=\"\", _\n        WritePasswordTemplate:=\"\", _\n        Format:=wdOpenFormatAuto\n\n    'The ActiveDocument.SaveAs() method is hard-coded to format 112.\n    'Use the Application.FileConverters.Item(\"<Index>\").SaveFormat property\n    'for other file formats and a more generic design.\n    '\n    ActiveDocument.SaveAs _\n        FileName:=DirName & Replace(FileName, Extension, \".doc\"), _\n        FileFormat:=112, _\n        LockComments:=False, _\n        Password:=\"\", _\n        AddToRecentFiles:= _\n        True, WritePassword:=\"\", _\n        ReadOnlyRecommended:=False, _\n        EmbedTrueTypeFonts:=False, _\n        SaveNativePictureFormat:=False, _\n        SaveFormsData:=False, _\n        SaveAsAOCELetter:=False\n    \n    ActiveDocument.Close\nEnd Sub\n",
    "ItemText": null,
    "CreateDate": "2004-08-26T13:37:45.1500000",
    "EndDate": null,
    "ModificationDate": "2004-08-26T13:37:45.1500000",
    "DocumentId": "2076071604",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5369",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "DTS: Fixed-Role Permissions for Logins to Change Data in SQL Server 2000; Data Transformation Services; db_ddladmin",
    "SortOrdinal": null,
    "ItemChar": "This is a proposed set of \"minimum\" fixed-role permissions required to run a DTS package to change data on the target database defined in the package. The login should be a member of the following fixed roles on the target database server:\n\n    db_ddladmin\n    db_datareader\n    db_datawriter\n\nFor the source database server these roles can be used to set read-only permissions:\n\n    db_datareader\n    db_denydatawriter\n\nThe need for db_ddladmin permissions should not be underestimated. Even when the DTS package does not explicitly CREATE or DROP database objects, SQL Server still seems to need this level of permissions to run the package at the target database without errors.",
    "ItemText": null,
    "CreateDate": "2004-08-31T16:10:20.2670000",
    "EndDate": null,
    "ModificationDate": "2004-08-31T16:10:20.2670000",
    "DocumentId": "2076071605",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5370",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio.NET and ASP.NET: \"Cleaning\" the Visual Studio Web Cache; VSWebCache",
    "SortOrdinal": null,
    "ItemChar": "The VSWebCache folder is located here:\n\n    %HOMEDRIVE%\\Documents and Settings\\%USERNAME%\\VSWebCache\n\nThe recommendation is to periodically clean this folder out by deleting everything in it (when Visual Studio is not running).",
    "ItemText": null,
    "CreateDate": "2004-09-15T15:06:33.9430000",
    "EndDate": null,
    "ModificationDate": "2004-09-15T15:06:33.9430000",
    "DocumentId": "2076071606",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5371",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2003: Windows Update Problem; Error 0x800C0008; \"a discrepancy in your computer's time setting\" message",
    "SortOrdinal": null,
    "ItemChar": "Windows Update produced the following error:\n\n    Windows Update has encountered an error.\n    This may be due to a discrepancy\n    in your computer's time setting.\n\n    To check your date and time setting:\n\n        1. On the taskbar, double-click the time.\n        2. Verify that the date and time is correct.\n\n    Send error number to Microsoft (0x800C0008)\n\nThis problem appears to be related to Microsoft's Windows 2003 team not being sufficiently intimate with the Windows Update Team and possibly the IE team. I suspect this because when I loaded windows update using this address:\n\n    https://v4.windowsupdate.microsoft.com/en/default.asp\n\nThe site works as expected. However, as of this writing, linking to the http version of this site still produces the error. This error should not happen at all. In my mind there is the following uninformed expectations:\n\n* Windows 2003 should \"secure\" Internet Explorer but should automatically place Windows Update site(s) on the list of \"trusted\" sites.\n\n* Whenever there is an error, there should be a \"clean re-install\" option available for Windows Update. I cannot imagine that this is not possible.\n\n* There should be a downloadable Windows Update utility that can verify that everything is working okay. Why do I feel like I am indulging in fantasy?\n\n* How about this fantasy: there should be a Windows Update Server sold like an internet router sitting on the network pushing these updates to clients. It can be an \"x box\" for the rest of us.",
    "ItemText": null,
    "CreateDate": "2004-10-16T18:30:39.7300000",
    "EndDate": null,
    "ModificationDate": "2004-10-16T18:30:39.7300000",
    "DocumentId": "2076071608",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5372",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MySQL Adminstration: mysqldump Help Text;mysqldump  Ver 9.11 Distrib 4.0.21; Win95/Win98 (i32); Igor Romanenko, Monty, Jani & Sinisa",
    "SortOrdinal": null,
    "ItemChar": "mysqldump  Ver 9.11 Distrib 4.0.21, for Win95/Win98 (i32)\nBy Igor Romanenko, Monty, Jani & Sinisa\nThis software comes with ABSOLUTELY NO WARRANTY. This is free software,\nand you are welcome to modify and redistribute it under the GPL license\n\nDumping definition and data mysql database or table\nUsage: mysqldump [OPTIONS] database [tables]\nOR     mysqldump [OPTIONS] --databases [OPTIONS] DB1 [DB2 DB3...]\nOR     mysqldump [OPTIONS] --all-databases [OPTIONS]\n\nDefault options are read from the following files in the given order:\nC:\\WINNT\\my.ini C:\\my.cnf\nThe following groups are read: mysqldump client\nThe following options may be given as the first argument:\n--print-defaults        Print the program argument list and exit\n--no-defaults           Don't read default options from any options file\n--defaults-file=#       Only read default options from the given file #\n--defaults-extra-file=# Read this file after the global files are read\n  -A, --all-databases Dump all the databases. This will be same as --databases\n                      with all databases selected.\n  -a, --all           Include all MySQL specific create options.\n  --add-drop-table    Add a 'drop table' before each create.\n  --add-locks         Add locks around insert statements.\n  --allow-keywords    Allow creation of column names that are keywords.\n  --character-sets-dir=name\n                      Directory where character sets are\n  -c, --complete-insert\n                      Use complete insert statements.\n  -C, --compress      Use compression in server/client protocol.\n  -B, --databases     To dump several databases. Note the difference in usage;\n                      In this case no tables are given. All name arguments are\n                      regarded as databasenames. 'USE db_name;' will be\n                      included in the output.\n  -#, --debug[=name]  Output debug log. Often this is 'd:t:o,filename'.\n  --default-character-set=name\n                      Set the default character set.\n  --delayed-insert    Insert rows with INSERT DELAYED.\n  --delete-master-logs\n                      Delete logs on master after backup. This automatically\n                      enables --first-slave.\n  -K, --disable-keys  '/*!40000 ALTER TABLE tb_name DISABLE KEYS */; and\n                      '/*!40000 ALTER TABLE tb_name ENABLE KEYS */; will be put\n                      in the output.\n  -e, --extended-insert\n                      Allows utilization of the new, much faster INSERT syntax.\n  --fields-terminated-by=name\n                      Fields in the textfile are terminated by ...\n  --fields-enclosed-by=name\n                      Fields in the importfile are enclosed by ...\n  --fields-optionally-enclosed-by=name\n                      Fields in the i.file are opt. enclosed by ...\n  --fields-escaped-by=name\n                      Fields in the i.file are escaped by ...\n  -x, --first-slave   Locks all tables across all databases.\n  -F, --flush-logs    Flush logs file in server before starting dump. Note that\n                      if you dump many databases at once (using the option\n                      --databases= or --all-databases), the logs will be\n                      flushed for each database dumped.\n  -f, --force         Continue even if we get an sql-error.\n  -?, --help          Display this help message and exit.\n  -h, --host=name     Connect to host.\n  --lines-terminated-by=name\n                      Lines in the i.file are terminated by ...\n  -l, --lock-tables   Lock all tables for read.\n  --master-data       This causes the master position and filename to be\n                      appended to your output. This automatically enables\n                      --first-slave.\n  --no-autocommit     Wrap tables with autocommit/commit statements.\n  --single-transaction\n                      Dump all tables in single transaction to get consistent\n                      snapshot. Mutually exclusive with --lock-tables.\n  -n, --no-create-db  'CREATE DATABASE /*!32312 IF NOT EXISTS*/ db_name;' will\n                      not be put in the output. The above line will be added\n                      otherwise, if --databases or --all-databases option was\n                      given.}\n  -t, --no-create-info\n                      Don't write table creation info.\n  -d, --no-data       No row information.\n  -O, --set-variable=name\n                      Change the value of a variable. Please note that this\n                      option is deprecated; you can set variables directly with\n                      --variable-name=value.\n  --opt               Same as --add-drop-table --add-locks --all --quick\n                      --extended-insert --lock-tables --disable-keys\n  -p, --password[=name]\n                      Password to use when connecting to server. If password is\n                      not given it's solicited on the tty.\n  -W, --pipe          Use named pipes to connect to server\n  -P, --port=#        Port number to use for connection.\n  -q, --quick         Don't buffer query, dump directly to stdout.\n  -Q, --quote-names   Quote table and column names with a `\n  -r, --result-file=name\n                      Direct output to a given file. This option should be used\n                      in MSDOS, because it prevents new line '\\n' from being\n                      converted to '\\r\\n' (carriage return + line feed).\n  -S, --socket=name   Socket file to use for connection.\n  -T, --tab=name      Creates tab separated textfile for each table to given\n                      path. (creates .sql and .txt files). NOTE: This only\n                      works if mysqldump is run on the same machine as the\n                      mysqld daemon.\n  --tables            Overrides option --databases (-B).\n  -u, --user=name     User for login if not current user.\n  -v, --verbose       Print info about the various stages.\n  -V, --version       Output version information and exit.\n  -w, --where=name    Dump only selected records; QUOTES mandatory!\n  -X, --xml           Dump a database as well formed XML.\n  --max_allowed_packet=#\n  --net_buffer_length=#\n  -i, --comments      Write additional information.\n\nVariables (--variable-name=value)\nand boolean options {FALSE|TRUE}  Value (after reading options)\n--------------------------------- -----------------------------\nall-databases                     FALSE\nall                               FALSE\nadd-drop-table                    FALSE\nadd-locks                         FALSE\nallow-keywords                    FALSE\ncharacter-sets-dir                (No default value)\ncomplete-insert                   FALSE\ncompress                          FALSE\ndatabases                         FALSE\ndefault-character-set             (No default value)\ndelayed-insert                    FALSE\ndisable-keys                      FALSE\nextended-insert                   FALSE\nfields-terminated-by              (No default value)\nfields-enclosed-by                (No default value)\nfields-optionally-enclosed-by     (No default value)\nfields-escaped-by                 (No default value)\nfirst-slave                       FALSE\nflush-logs                        FALSE\nforce                             FALSE\nhost                              (No default value)\nlines-terminated-by               (No default value)\nlock-tables                       FALSE\nno-autocommit                     FALSE\nsingle-transaction                FALSE\nno-create-db                      FALSE\nno-create-info                    FALSE\nno-data                           FALSE\nport                              3306\nquick                             FALSE\nquote-names                       FALSE\nsocket                            (No default value)\ntab                               (No default value)\nuser                              (No default value)\nverbose                           FALSE\nwhere                             (No default value)\nmax_allowed_packet                25165824\nnet_buffer_length                 1047551\ncomments                          TRUE\n\n\n\n\n\n\n",
    "ItemText": "mysqldump  Ver 9.11 Distrib 4.0.21, for Win95/Win98 (i32)\nBy Igor Romanenko, Monty, Jani & Sinisa\nThis software comes with ABSOLUTELY NO WARRANTY. This is free software,\nand you are welcome to modify and redistribute it under the GPL license\n\nDumping definition and data mysql database or table\nUsage: mysqldump [OPTIONS] database [tables]\nOR     mysqldump [OPTIONS] --databases [OPTIONS] DB1 [DB2 DB3...]\nOR     mysqldump [OPTIONS] --all-databases [OPTIONS]\n\nDefault options are read from the following files in the given order:\nC:\\WINNT\\my.ini C:\\my.cnf\nThe following groups are read: mysqldump client\nThe following options may be given as the first argument:\n--print-defaults        Print the program argument list and exit\n--no-defaults           Don't read default options from any options file\n--defaults-file=#       Only read default options from the given file #\n--defaults-extra-file=# Read this file after the global files are read\n  -A, --all-databases Dump all the databases. This will be same as --databases\n                      with all databases selected.\n  -a, --all           Include all MySQL specific create options.\n  --add-drop-table    Add a 'drop table' before each create.\n  --add-locks         Add locks around insert statements.\n  --allow-keywords    Allow creation of column names that are keywords.\n  --character-sets-dir=name\n                      Directory where character sets are\n  -c, --complete-insert\n                      Use complete insert statements.\n  -C, --compress      Use compression in server/client protocol.\n  -B, --databases     To dump several databases. Note the difference in usage;\n                      In this case no tables are given. All name arguments are\n                      regarded as databasenames. 'USE db_name;' will be\n                      included in the output.\n  -#, --debug[=name]  Output debug log. Often this is 'd:t:o,filename'.\n  --default-character-set=name\n                      Set the default character set.\n  --delayed-insert    Insert rows with INSERT DELAYED.\n  --delete-master-logs\n                      Delete logs on master after backup. This automatically\n                      enables --first-slave.\n  -K, --disable-keys  '/*!40000 ALTER TABLE tb_name DISABLE KEYS */; and\n                      '/*!40000 ALTER TABLE tb_name ENABLE KEYS */; will be put\n                      in the output.\n  -e, --extended-insert\n                      Allows utilization of the new, much faster INSERT syntax.\n  --fields-terminated-by=name\n                      Fields in the textfile are terminated by ...\n  --fields-enclosed-by=name\n                      Fields in the importfile are enclosed by ...\n  --fields-optionally-enclosed-by=name\n                      Fields in the i.file are opt. enclosed by ...\n  --fields-escaped-by=name\n                      Fields in the i.file are escaped by ...\n  -x, --first-slave   Locks all tables across all databases.\n  -F, --flush-logs    Flush logs file in server before starting dump. Note that\n                      if you dump many databases at once (using the option\n                      --databases= or --all-databases), the logs will be\n                      flushed for each database dumped.\n  -f, --force         Continue even if we get an sql-error.\n  -?, --help          Display this help message and exit.\n  -h, --host=name     Connect to host.\n  --lines-terminated-by=name\n                      Lines in the i.file are terminated by ...\n  -l, --lock-tables   Lock all tables for read.\n  --master-data       This causes the master position and filename to be\n                      appended to your output. This automatically enables\n                      --first-slave.\n  --no-autocommit     Wrap tables with autocommit/commit statements.\n  --single-transaction\n                      Dump all tables in single transaction to get consistent\n                      snapshot. Mutually exclusive with --lock-tables.\n  -n, --no-create-db  'CREATE DATABASE /*!32312 IF NOT EXISTS*/ db_name;' will\n                      not be put in the output. The above line will be added\n                      otherwise, if --databases or --all-databases option was\n                      given.}\n  -t, --no-create-info\n                      Don't write table creation info.\n  -d, --no-data       No row information.\n  -O, --set-variable=name\n                      Change the value of a variable. Please note that this\n                      option is deprecated; you can set variables directly with\n                      --variable-name=value.\n  --opt               Same as --add-drop-table --add-locks --all --quick\n                      --extended-insert --lock-tables --disable-keys\n  -p, --password[=name]\n                      Password to use when connecting to server. If password is\n                      not given it's solicited on the tty.\n  -W, --pipe          Use named pipes to connect to server\n  -P, --port=#        Port number to use for connection.\n  -q, --quick         Don't buffer query, dump directly to stdout.\n  -Q, --quote-names   Quote table and column names with a `\n  -r, --result-file=name\n                      Direct output to a given file. This option should be used\n                      in MSDOS, because it prevents new line '\\n' from being\n                      converted to '\\r\\n' (carriage return + line feed).\n  -S, --socket=name   Socket file to use for connection.\n  -T, --tab=name      Creates tab separated textfile for each table to given\n                      path. (creates .sql and .txt files). NOTE: This only\n                      works if mysqldump is run on the same machine as the\n                      mysqld daemon.\n  --tables            Overrides option --databases (-B).\n  -u, --user=name     User for login if not current user.\n  -v, --verbose       Print info about the various stages.\n  -V, --version       Output version information and exit.\n  -w, --where=name    Dump only selected records; QUOTES mandatory!\n  -X, --xml           Dump a database as well formed XML.\n  --max_allowed_packet=#\n  --net_buffer_length=#\n  -i, --comments      Write additional information.\n\nVariables (--variable-name=value)\nand boolean options {FALSE|TRUE}  Value (after reading options)\n--------------------------------- -----------------------------\nall-databases                     FALSE\nall                               FALSE\nadd-drop-table                    FALSE\nadd-locks                         FALSE\nallow-keywords                    FALSE\ncharacter-sets-dir                (No default value)\ncomplete-insert                   FALSE\ncompress                          FALSE\ndatabases                         FALSE\ndefault-character-set             (No default value)\ndelayed-insert                    FALSE\ndisable-keys                      FALSE\nextended-insert                   FALSE\nfields-terminated-by              (No default value)\nfields-enclosed-by                (No default value)\nfields-optionally-enclosed-by     (No default value)\nfields-escaped-by                 (No default value)\nfirst-slave                       FALSE\nflush-logs                        FALSE\nforce                             FALSE\nhost                              (No default value)\nlines-terminated-by               (No default value)\nlock-tables                       FALSE\nno-autocommit                     FALSE\nsingle-transaction                FALSE\nno-create-db                      FALSE\nno-create-info                    FALSE\nno-data                           FALSE\nport                              3306\nquick                             FALSE\nquote-names                       FALSE\nsocket                            (No default value)\ntab                               (No default value)\nuser                              (No default value)\nverbose                           FALSE\nwhere                             (No default value)\nmax_allowed_packet                25165824\nnet_buffer_length                 1047551\ncomments                          TRUE\n\n\n\n\n\n\n",
    "CreateDate": "2004-10-16T20:10:30.5630000",
    "EndDate": null,
    "ModificationDate": "2004-10-16T20:10:30.5630000",
    "DocumentId": "2076071609",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5373",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 1, Lesson 1; Developing Web Applications",
    "SortOrdinal": null,
    "ItemChar": "Lesson 1: Types of Applications\n\nThe purpose of this lesson is to introduce ASP.NET and its supporting technologies (IIS, Visual Studio.NET, ADO.NET, the System.Web namespaces, The .NET Framework, etc.).\n\nASP.NET is used to build a specific type of application, the Web Application, which is distinguished from Web Service, Internet-enabled and Peer-to-peer applications. The suggestion is to visualize a number of clients receiving and sending messages into a cloud that represents the Internet and this cloud simultaneously is receiving and sending messages from a server where the ASP.NET application resides, running on IIS.\n\nIt follows that ASP.NET is featured in a client-server system design sending and receiving messages using the HTTP protocol and rendering UI in HTML. ASP.NET renders HTML dynamically and interactively opposed to \"traditional\" static HTML.\n\nVisual Studio.NET features two languages to support the development of web applications: C# and VB.NET. This does not mean that VS.NET does not support other languages. All this implies is that, as of the writing of this lesson, only C# and VB.NET are directly targeted by VS.NET productivity tools (e.g. Wizard commands).\n\nOne of the stated goals of this lesson was to describe the advantages ASP.NET has over less platform-specific technologies like CGI (the Common Gateway Interface). Outside of the subjective context of the popularity of Microsoft products, this goal was not achieved. This is not stated to suggest that such a goal is not achievable.",
    "ItemText": null,
    "CreateDate": "2004-11-17T17:20:44.2800000",
    "EndDate": null,
    "ModificationDate": "2004-11-17T17:20:44.2800000",
    "DocumentId": "2076071610",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5374",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 1, Lesson 2; Using ASP.NET",
    "SortOrdinal": null,
    "ItemChar": "Lesson 2: Using ASP.NET\n\nThe purpose of this lesson is to detail the parts of an ASP.NET application, which introduces the ASP.NET Web form. The components of the web form ultimately come from the .NET Framework and its featured languages C# and VB.NET. It follows that a summary of the .NET Framework Class Library is supplied and a detailed comparison of C# and VB.NET syntax is in order. More information about these syntax differences can be found at MSDN under \"Language Equivalents\" here:\n\n    http://msdn.microsoft.com/library/en-us\n        /vsintro7/html/vxgrfLanguageEquivalents.asp\n\nThe ASP.NET web application is made up of three parts: content, program logic and configuration information. The content is any recognizable MIME type (data recognized by the Multipurpose Internet Mail Extensions protocol). The program logic is a .NET assembly or a client-side script. The configuration information is stored in CSS files, the ASP.NET Web Application Configuration file and in IIS configuration stores.\n\nFor detailed information about MIME types start with the RFC1341 specification (which leads to the RFC 1521  and RFC 1522 standards) here:\n\n    http://www.w3.org/Protocols/rfc1341/0_Abstract.html\n\nThe detailed information about ASP.NET program logic starts with understanding the ASP.NET page, featuring the Web form and the sketch of its lifecycle presented in three stages: (i) IIS starting or getting the ASP.NET worker process (aspnet_wp.exe) to load the assembly associated with the Web form; (ii) the assembly composing a response based on the three parts of the ASP.NET web application; (iii) IIS returning the response to the user/requestor in the MIME type specified (text/html by default).\n\nThis lesson refers to Chapter 2, Lesson 2 for more details about this process. Dino Esposito further details this sequential, cyclical process in \"The ASP.NET Page Object Model: One Day in the Life of an ASP.NET Web Page\" here:\n\n    http://msdn.microsoft.com/library/en-us\n        /dnaspp/html/aspnet-pageobjectmodel.asp\n\nWeb forms contain four types of components: (i) Server controls, (ii) HTML controls, (iii) Data controls like those of ADO.NET and (iv) System components like the FileSystemWatcher, EventLog and MessageQueue types.\n\nMore detailed information about ASP.NET program logic, Web forms and Web form components lead to the description of how a .NET application runs. The .NET application runs by compiling .NET languages, defining versioning and types, into MSIL (Microsoft Intermediate Language) in an assembly (a *.DLL file). This assembly is dynamically registered by the CLR (Common Language Runtime) which manages the running assembly, centralizing tasks like memory usage tracking essential in \"Garbage Collection.\" It follows that a .NET application is called \"managed code\" so we can now refer to unmanaged code from DLL hell (usually a COM-based application statically registered in the Windows Registry).\n\nThe detailed information about ASP.NET Web application configuration appears in Chapter 9, Lesson 1. For an overview of IIS configuration, see \"About IIS Configuration\" here:\n\n    http://msdn.microsoft.com/library/en-us\n        /iissdk/iis/about_iis_configuration.asp\n\nThe detailed MSDN information about client-side scripting survives under \"Microsoft Windows Script Technologies\" here:\n\n    http://msdn.microsoft.com/library/en-us\n        /script56/html/vtoriMicrosoftWindowsScriptTechnologies.asp\n\nThe detailed MSDN information about CSS remains under \"Cascading Style Sheets\" here:\n\n    http://msdn.microsoft.com/library/default.asp?\n        url=/workshop/author/css/css_node_entry.asp",
    "ItemText": null,
    "CreateDate": "2005-09-12T16:21:17.7600000",
    "EndDate": null,
    "ModificationDate": "2005-09-12T16:21:17.7600000",
    "DocumentId": "2076071611",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5375",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 1, Lesson 3; Using Visual Studio .NET",
    "SortOrdinal": null,
    "ItemChar": "Lesson 3: Using Visual Studio .NET\n\nThe purpose of this lesson is to introduce the Visual Studio .NET IDE. The method of study respected here demands that familiarity with VS.NET is gained from direct experience. It follows that only a list of facts about this IDE will be listed below without introductory explanation:\n\n* One way to show the Start Page is through the menu command, Help > Show Start Page.\n\n* The Start Page > Projects tab shows the last four recently saved projects (which are actually Solutions but the book fails to distinguish them as such).\n\n* The Start Page > Online Resorces > Web Hosting Pane features Brinkster.com (this reference appears to be out of date as of this writing).\n\n* VS.NET has two types of Windows: Document windows and Tool windows.\n\n* To cause a tabbed Tool window to remain in view, toggle its pushpin, the Auto Hide button.\n\n* The Clipboard Ring keeps track of the last 20 items you have copied. The key strokes Ctrl+Shift+v can cycle through the Clipboard Ring as alternative to dragging and dropping from its Tool window.\n\n* IntelliSense technology assists with writing source code directly.\n\n* Page 18 states, \"Web forms have code-behind files associated with them...\" this statement must be modified in ASP.NET 2.0.\n\n* A Web form is associated with its code file by the @Page directive. VS.NET 2003 does not automatically maintain the Inherits attribute of the @Page directve, which refers to the ASPX page's root namespace and class name.\n\n* The AutoComplete feature in VB.NET will case key words and member names automatically. This feature is not available in C# and its case-sensitivity will not allow it to recognize key words and member names not capitalized correctly.\n\n* ASP.NET 1.x supports single-source ASPX pages as well as code-behind pages. These single-source pages feature the <script runat=\"server\"></script> pattern (and AutoComplete does not work for these pages in ASP.NET 1.x).\n\n* A Project is a group of files that produce a single assembly and its associated content and resources. A Solution is a group of projects that make up a single functional unit.\n\n* The Tools > Options > Task List command manages code comment tokens (like TODO) that are displayed in the Task list.\n\n* The Watch windows become available under Debug > Windows when VS.NET is in \"debug mode.\" Add a class field member to a Watch window by selecting it and dragging it on top of the window.\n\n* Debug keys: F9 sets a Breakpoint; F10 steps over a procedure; F11 steps into a procedure.\n\n* The Help system includes three ways to find topics: the Contents window, the Index window and the Search window.\n\n* The MSDN site gotdotnet.com specializes in .NET tutorials and other helpful resources.",
    "ItemText": null,
    "CreateDate": "2005-09-12T16:21:35.2230000",
    "EndDate": null,
    "ModificationDate": "2005-09-12T16:21:35.2230000",
    "DocumentId": "2076071612",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5376",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio 2003 PROBLEM: New Windows Script Host Item Produces Active Schema Errors; The active schema does not support the element 'package' or 'job'",
    "SortOrdinal": null,
    "ItemChar": "By default, a new WSF file added as WinScript1.wsf looks like this:\n\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<package xmlns=\"Windows Script Host\">\n    <job>\n        <script language=\"VBscript\">\n\n        </script>\n    </job>\n</package>\n\nThis file will generate schema errors against wshmeta.xsd in the Common7\\Packages\\schemas\\xml directory of your Visual Studio installation. To deal with this problem immediately, change the file to this:\n\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<package xmlns=\"http://schemas.microsoft.com/WindowsScriptHost\">\n    <job>\n        <script language=\"VBscript\">\n        \n        </script>\n    </job>\n</package>\n",
    "ItemText": null,
    "CreateDate": "2004-10-29T15:07:08.4800000",
    "EndDate": null,
    "ModificationDate": "2004-10-29T15:07:08.4800000",
    "DocumentId": "2076071613",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5377",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Word PROBLEM: \"Document file size increases with EMF, PNG, GIF, or JPEG graphics in Word\"; KB article Q224663",
    "SortOrdinal": null,
    "ItemChar": "\"When you save a Microsoft Word document that contains an EMF, PNG, GIF, or JPEG graphic as a different file format (for example, Word 6.0/95 (*.doc) or Rich Text Format (*.rtf)), the file size of the document may dramatically increase.\"\n\nFor more information please see:\n\n    http://support.microsoft.com/default.aspx?scid=kb;EN-US;224663",
    "ItemText": null,
    "CreateDate": "2004-11-01T17:12:23.9970000",
    "EndDate": null,
    "ModificationDate": "2004-11-01T17:12:23.9970000",
    "DocumentId": "2076071615",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5378",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "InfoPath 2003 HowTo: \"How to bind a Rich Text Box control to an element that is returned from a Web service in InfoPath 2003 and Visual Studio .NET (2003)\"; KB ID 826996",
    "SortOrdinal": null,
    "ItemChar": "\"This article describes how to bind a Rich Text Box control on a Microsoft Office InfoPath 2003 form to an XML element that is returned from a Web service.\"\n\nFor more information please see:\n\n    http://support.microsoft.com/default.aspx?\n        kbid=826996&product=infopath2003\n\nSee \"Rich Text and Web Services\" also:\n\n    http://msdn.microsoft.com/library/en-us/ipsdk/html/\n        ipsdkRichTextAndWebServices_HV01083592.asp\n\nOne more is \"You cannot automatically submit structured XML data to a Web service in InfoPath 2003\" (applies to InfoPath versions before SP1):\n\n    http://support.microsoft.com/default.aspx?\n        kbid=826989&product=infopath2003",
    "ItemText": null,
    "CreateDate": "2005-02-17T15:02:04.8170000",
    "EndDate": null,
    "ModificationDate": "2005-02-17T15:02:04.8170000",
    "DocumentId": "2076071616",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5379",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 2000 PROBLEM: Event logs are empty; \"Event logs are corrupted\" (MSKB 829246)",
    "SortOrdinal": null,
    "ItemChar": "The assumption here is that, during Microsoft's reactionary quest to address security flaws, someone broke EVENTLOG.DLL. I suspect that my event logs began to disappear after an automatic update from Windows Update. Some guy named Matt posted this on bmonday(dot)com:\n\n\"I had this problem and it only reared its ugly head when I changed the log files to 'Overwrite as needed' because I got fed up of deleting them. So this supports your theory.\"\n\nSo what I did was set all of my logs to Properties > General > Log size > Do not overwrite events (clear log manually). Microsoft recognizes this problem in MSKB article 829246 (\"Event logs are corrupted\") here:\n\n    http://support.microsoft.com/?kbid=829246",
    "ItemText": null,
    "CreateDate": "2004-11-04T14:36:59.3700000",
    "EndDate": null,
    "ModificationDate": "2004-11-04T14:36:59.3700000",
    "DocumentId": "2076071617",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5380",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 2, Lesson 1; Creating an ASP.NET Web Application Project",
    "SortOrdinal": null,
    "ItemChar": "Lesson 1: Creating an ASP.NET Web Application Project\n\nThe purpose of this lesson is accurately expressed in its title. Additionally it introduces the Microsoft concept of the \"Web Application\" and its relationship to IIS, namely its virtual folder.\n\n* \"Web applications run on a server and are distributed to clients through the Internet.\"\n\n* \"It is important to realize that Web applications can exist only in a location that has been published by IIS as a virtual folder. A virtual folder is a shared resource identified by an alias that represents a physical location on a server.\"\n\nThe virtual folder access method covered in this lesson is the FrontPage Extensions method. This is the most flexible method as the other \"File share\" method is associated with NTFS security issues. FrontPage extensions work on virtual folders located on the desktop, the intranet and the Internet. For more details, see \"Choosing the Best Access Method\" here:\n\n    http://msdn.microsoft.com/library/en-us/vbcon/html/vbconwebaccessmethod.asp\n\nMany of us have discovered that FrontPage Extensions suck wild boar ass. For us strange Visual Studio .NET folk, we can choose Tools > Options > Projects > Web Settings > Web Server Connection > Preferred access method: File share. The next version of Visual Studio will offer even more methods including an option not to use IIS at all!\n\n* \"When Visual Studio .NET creates a web application, it displays a new Web form in the center window... To add code to respond to events on the Web form, double-click the control... Visual Studio automatically creates the event procedures for an object's default event... Creating this connection between an object's event and the event procedure that responds to the event is called wiring the event.\"\n\nIn C# events, are wired \"manually\" by appending a new event handler to the event. In VB.NET, the Handles clause \"automatically\" wires up the event as it is written by the IDE when the our control is double-clicked.\n\n* \"...Web Forms applications are similar to Windows Forms applications. However, Web Forms applications have the following significant differences...\"\n\nThese diffrences are summarized under the headings: Tools (actually controls), User Interface (or browser dependence), Lifetime (introducing the issue of state) and Execution (but \"...the executable portions of a Web application live on the Web server\" ignores client-side scripting in the web browser).\n\n* \"The Web form is only one of 11 files Visual Studio .NET generates when it creates a new Web forms project.\"\n\nThe lesson then enumerates these files and then the file types.",
    "ItemText": null,
    "CreateDate": "2004-11-17T17:21:02.5230000",
    "EndDate": null,
    "ModificationDate": "2004-11-17T17:21:02.5230000",
    "DocumentId": "2076071618",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5381",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 2, Lesson 2; Responding to Events",
    "SortOrdinal": null,
    "ItemChar": "Lesson 2: Responding to Events\n\nThe purpose of this lesson is detail Web application events from the page level to the application level. Dino Esposito further details the sequential, cyclical process of page-level events in \"The ASP.NET Page Object Model: One Day in the Life of an ASP.NET Web Page\" here:\n\n    http://msdn.microsoft.com/library/en-us\n        /dnaspp/html/aspnet-pageobjectmodel.asp\n\n* \"The life of a Web application begins when a browser requests the start page of the application.\"\n\nThis statement does not seem accurate. The assumption here is that the life of a Web application begins when a browser requests any page of the application. This level of accuracy takes into account what some call \"deep linking.\"\n\n* \"When the user stops using the Web application for a period of time (the default is 20 minutes), the user's session times out and ends.\"\n\nWhen all sessions end the application \"ends\" but because of .NET Framework garbage collection, \"...you don't know when an Application_End event will occur.\" For more details about Session State, see \"Session State\" at MSDN:\n\n    http://msdn.microsoft.com/library/en-us/cpguide/html/cpconSessionState.asp\n\n* \"The data that ASP.NET preserves between requests is called the Web form's view state.\"\n\nThis introduction of view state seems to serve only to introduce the words \"view state\" as the lesson moves on quickly to survey Application and Session \"state variables\" (yet another term that understandably avoids delving into the object collections of the underlying HttpApplicationState and HttpSessionState classes). More details at MSDN in \"ASP.NET State Management\" here:\n\n    http://msdn.microsoft.com/library/\n        en-us/cpguide/html/cpconaspstatemanagement.asp\n\n* \"Application state variables must be initialized in Visual C#...\"\n\nThe assumption here is that C# does not protect the developer against runtime errors caused by strong-typing collections of type object with casting. The code samples on page 3 clearly suggest that VB.NET insulates the developer from such pitfalls.\n\n* \"You can write code to respond to Application and Session events in the Global.asax file.\"\n\nThe following summarizes application-scope event handlers:\n\n    Application_Start\n    Application_End\n    Application_BeginRequest\n    Application_EndRequest\n\n    Session_Start\n    Session_End\n\n* \"In Web forms, a session is a unique instance of the browser.\"\n\nThe following summarizes the page-scope event handlers firing in sequence:\n\n    Page_Init\n    Page_Load\n    Page_PreRender\n    Page_Unload\n    Page_Disposed\n\nThe following summarizes the other page-scope event handlers:\n\n    Page_Error\n    Page_AbortTransaction\n    Page_CommitTransaction\n    Page_DataBinding\n\n* \"You can couple the Page_Load event with the IsPostBack property to initialize data the first time a user visits a Web form.\"\n\nThe following summarizes the server control-scope event types:\n\n    Postback events (e.g. the Click event)\n    Cached events (e.g. the TextChanged event; see below)\n    Validation events (solely of the validation server controls)\n\nThe lesson refers to \"Cached events\" for the sake of completeness but not clarity. This term should not be confused with \"cache events\": Cache events are not really .NET Framework events but are a design pattern featuring the CacheItemRemovedCallback delegate. This is discussed in detail in Chapter 12, \"Optimizing Web Applications with Caching\" under \"Responding to Cache Events.\"\n\nCached events reveal the design goal of the ASP.NET team to try as much as possible to replicate Windows Forms eventing by \"postponing\" events on the client and processing them later on the server.",
    "ItemText": null,
    "CreateDate": "2004-11-17T17:21:57.8630000",
    "EndDate": null,
    "ModificationDate": "2004-11-17T17:21:57.8630000",
    "DocumentId": "2076071619",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5382",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 2, Lesson 3; Where Does Processing Occur?",
    "SortOrdinal": null,
    "ItemChar": "Lesson 3: Where Does Processing Occur?\n\nThe purpose of this lesson is to examine IIS, its definition of a Web application, to define the \"application domain\" and to distinguish IIS 6.0. This lesson ends with configuring Session duration.\n\n* \"IIS defines a Web application as any file that is executed within a set of folders on your Web site... The application boundary starts in the root application folder... The application ends at the last subordinate folder or when another root application folder is encountered.\"\n\n* \"A start page is a page designated by Visual Studio as the first page to display in  your application.\"\n\n* \"The IIS default document is the page that IIS displays...\" when the incoming request does not specify a page.\n\n* \"...IIS specifies these default document file names: Default.htm, Default.asp, Index.htm, and Iisstart.asp.\"\n\n* \"When IIS receives a request for a resource within a Web application, IIS uses aspnet_isapi.dll to call the ASP.NET worker process (aspnet_wp.exe).\"\n\nThe worker process then loads the compiled assembly into a process space called \"the application domain,\" which maintains process isolation for each Web application. (This is not the case for DLLHost.exe of ASP). IIS 6.0 uses w3wp.exe instead of aspnet_wp.exe. The process instances created by w3wp.exe can exist within multiple application pools.\n\nThe lesson then goes on to describe the importance of Session states. The second reason, \"They determine when the application ends...,\" sounds strange to me. My first thought is, Ok does that mean that session-less web applications never end?\n\nThe <sessionState> element, its timeout attribute, is used to determine when the Web application ends.\n",
    "ItemText": null,
    "CreateDate": "2004-12-21T23:12:45.9030000",
    "EndDate": null,
    "ModificationDate": "2004-12-21T23:12:45.9030000",
    "DocumentId": "2076071620",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5383",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Word to XML Converters, Flippant Remarks",
    "SortOrdinal": null,
    "ItemChar": "Don Box stopped working on an XSL transform of WordML to XHTML.\n\nMicrosoft WordML to HTML XSL Transformation appears to have vanished from the Download Center and is probably buried in the MSIE-only Word 2003: XML Viewer (wmlview.exe). However, this guy, Oleg Tkachenko, has his own version of the XSLT file here:\n\n    http://www.tkachenko.com/dotnet/files/Word2HTML-1.0.zip\n\nHe journals the mysterious behavior of Don Box in \"On transforming WordML to HTML again\" here:\n\n   http://www.tkachenko.com/blog/archives/000153.html\n\nWhat's left out there are expensive tools that convert entire files to XML and even a web site where DOC files can be uploaded and converted to DocBook format. Most of these designs avoid intimate contact with the automation features of Word. Most are one-way tickets out of the Word format. I need a bit more flexibility.\n\nJohn E. Simpson, surveys the tools out there in \"From Word to XML\" here:\n\n    http://www.xml.com/pub/a/2003/12/31/qa.html",
    "ItemText": null,
    "CreateDate": "2004-11-18T01:14:44.6270000",
    "EndDate": null,
    "ModificationDate": "2004-11-18T01:14:44.6270000",
    "DocumentId": "2076071621",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5384",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2000 Data Transformation Services; Flippant Remarks about the DTS Data Driven Query Task; Updating Data with DTS",
    "SortOrdinal": null,
    "ItemChar": "I am familiar with the Transform Data Task. I use this frequently because this task is related to importing and exporting data. The Data Driven Query Task became relevant when I found frustration and a few hours of misery trying to update data with the Transform Data Task.\n\nThe Microsoft documentation about the Data Driven Query Task has no pictures so its hard to visualize what is going on. This is really apparent in \"Building a Data Driven Query\" here:\n\n    http://msdn.microsoft.com/library/en-us/dtssql/dts_elemtsk1_97lj.asp\n\nA step-by-step tutorial by Marcin Policht, \"SQL Server 2000 DTS Part 10 - DTS Designer Tasks - The Data Driven Query Task\" helps quite a bit. As of this writing, it is published here:\n\n    http://www.databasejournal.com/features/mssql/article.php/10894_3315951_2\n\nIn order to understand the underlying fundamentals the MSDN article \"Data Flow in a Data Driven Query Task\" helps quite a bit. It is here:\n\n    http://msdn.microsoft.com/library/en-us/dtsprog/dtspapps_5nlf.asp\n\nHowever, I have yet to find any documentation stressing the importance of using row identifiers in the Source and the Binding table under the Data Driven Query Task Properties > Transformations tab. Row identifiers are typically the columns that represent the Primary Key of the Source and Binding table. These are used by the Update, Delete and Select queries under the Data Driven Query Task Properties > Queries tab.\n\nThe speculation here is that a line like this is absolutely necessary in an ActiveX Script Transformation mapped to an Update query:\n\n    DTSDestination(\"destinationRowID\") = DTSSource(\"sourceRowID\")\n\nI see this pattern in Marcin Policht's article. Apparently, without this line of code, the DTS package will be unable to find the row it needs to update.",
    "ItemText": null,
    "CreateDate": "2004-11-23T15:13:45.7370000",
    "EndDate": null,
    "ModificationDate": "2004-11-23T15:13:45.7370000",
    "DocumentId": "2076071622",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5385",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 3, Lesson 1; Namespace Fundamentals",
    "SortOrdinal": null,
    "ItemChar": "Lesson 1: Namespace Fundamentals\n\nThe purpose of this lesson is to introduce the namespace and object oriented programming (OOP) concepts. I find this chapter confusing and aggressively asserting a Microsoft-centric view of OOP. I assume that I would not have so much trouble with this lesson when I am not aware of the famous achievements of Sun Microsystems!\n\n* \"Namespaces are a way of organizing code. They provide protection from conflicting names, sometimes called namespace collisions.\"\n\nNamespaces are imported with the using keyword in C# and the Imports keyword in VB.NET. References to namespaces outside of the current VS.NET project depends on the Project > Add Reference command.\n\n* \"Visual Studio projects store code in classes and modules.\"\n\nThe OOP concept of definition is in the use of the class keyword in C# and the Class/Module...End Class/Module blocks in VB.NET.\n\n* \"Visual Basic .NET and Visual C# use six key concepts for working with modules and classes.\"\n\nThese concepts are Definition, Access, Inheritance, Constructors and destructors, Delegates, and Abstract classes and interfaces. The opinion here is that two of these concepts, Inheritance and Abstract classes and interfaces, can be rolled up under polymorphism as suggested by the MSDN article \"Polymorphism in Components\" at:\n\n    http://msdn.microsoft.com/library/en-us/vbcon\n        /html/vbconImplementingInterfacesInComponents.asp\n\n* \"[In Visual C#] There are five levels of access to classes, modules and their members: public, protected, internal, protected internal and private.\"\n\nCorrespondingly, in VB.NET we have: Public, Protected, Friend, Protected Friend and Private.\n\nIt may be useful to associate the \"protection\" of members with inheritance, that the very presence of the protected keyword implies a design featuring inheritance.\n\n* \"[In Visual C#] Classes can inherit members from base classes and override or overload members of the inherited class.\"\n\nThe author's definition of inheritance for VB.NET deliberately does not use the term \"base class\" evidently because of its use of the Module... VB.NET inheritance has been awarded the feature called \"shadowing\" while C# appears to be coming up short. However, the C# Programmer's Reference covers the topic of the new modifier here:\n\n     http://msdn.microsoft.com/library/en-us/csspec/html/vclrfcsharpspec_10_2_2.asp\n\nThe author's code sample on page 107 uses the new modifier and is doing the equivalent of VB.NET's shadowing. The \"Overview of the Inheritance Keywords\" table on pages 102--103 finally shows this equivalence explicitly.\n\n* \"[In Visual C#]...Constructor methods have the same name as their class, and destructor methods use the class name preceded by a tilde (~).\"\n\nCorrespondingly, in VB.NET we have the New() and Finalize() methods.\n\n* \"[In Visual C#] The delegate keyword provides a safe way to call methods by their address rather than by their name. This is the .NET equivalent of a callback.\"\n\nCorrespondingly, in VB.NET we have the Delegate statement.\n\n* \"You can't inherit from more than one base class in a single derived class definition.\"\n\nAnother way to say this is that \"multiple inheritance\" is not supported by the .NET platform. When the author introduces this term there is also the first hint to the stereotypical VB6 programmer that there is another world out there beyond the realm of Microsoft using terms like multiple inheritance. I find that addressing this stereotypical audience in the book is more of an obstacle than not.\n\n* \"A derived class inherits the members of its base class. If the derived class defines a member with the same signature, the derived member overrides the base member. A member's signature includes its name, parameter list, parameter types, and return type.\"\n\nA derived member can overload or shadow the base member without regard to the base member's declaration. In C#, when a base member is declared as virtual (or Overridable in VB.NET), a derived member can override this base base member.\n\n* \"An abstract class is a class that defines an interface for derived classes. An abstract class is essentially a contract saying that all classes based on it will provide certain methods and properties.\"\n\nFor more information, see MSDN article \"Recommendations for Abstract Classes vs. Interfaces\" here:\n\n    http://msdn.microsoft.com/library/en-us/vbcon\n        /html/vbconAbstractClassesVersusInterfaces.asp\n\n* \"Delegates are types used to invoke one or more methods where the actual method invoked is determined at run time.\"\n\nFor more information, see MSDN article \"An Introduction to Delegates\" here:\n\n    http://msdn.microsoft.com/msdnmag/issues/01/04/net/default.aspx\n\n* \"Visual Basic .NET provides two ways to use a delegate.\"\n\nThe first pattern uses WithEvents and Handles keywords, which makes VB.NET backwards compatible with VB6. The second pattern uses AddHandler and RemoveHandler statements, which makes VB.NET syntax similar to C# delegate patterns.\n\n* \"Interfaces are similar to abstract classes... The difference is that interfaces don't provide any implementation of class members... The key here is that all items defined in the interface must exist in any class that implements the interface. If you omit any member, you get an error when you compile the code.\"",
    "ItemText": null,
    "CreateDate": "2005-03-15T14:16:12.9570000",
    "EndDate": null,
    "ModificationDate": "2005-03-15T14:16:12.9570000",
    "DocumentId": "2076071625",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5386",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2003: Why doesn't DirectX acceleration work in Windows Server 2003?; DXDIAG.EXE",
    "SortOrdinal": null,
    "ItemChar": "\"Why doesn't DirectX acceleration work in Windows Server 2003?\" This question comes from the Unofficial FAQ for Windows Server 2003 here:\n\n    http://home.earthlink.net/~larrysamuels/WS2003FAQ.htm\n\n\"There are two correct answers for this question... Official Answer: This is by design. Graphics Acceleration is disabled by default, which disables DirectX functionality. This is to enhance server stability and is not needed in standard server scenarios. Re-enabling such functionality is not a valid server testing scenario....Unofficial Answer: To enable Direct X, you must first enable graphics acceleration. To do this, right click on the desktop and go to Properties, Settings, Advanced, Troubleshooting, and set the Hardware acceleration bar to Full...To activate Direct3D and DirectDraw (DirectX), go to Start/Run and type \"dxdiag\". Click OK. Click on the Display tab, then click on the Enable button for DirectDraw and Direct3d...Submitted by Larry Samuels (based on a question from the official FAQ)...\"",
    "ItemText": null,
    "CreateDate": "2004-12-23T22:35:46.0470000",
    "EndDate": null,
    "ModificationDate": "2004-12-23T22:35:46.0470000",
    "DocumentId": "2076071626",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5387",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "DAZ Studio 0.9.7.8: Alpha Flippant Remarks",
    "SortOrdinal": null,
    "ItemChar": "DAZ Studio runs on a smaller memory footprint than Poser 4.x. It feels faster and smoother and it addresses a more \"professional\" amateur market, while Poser is locked in a strange world where a \"friendly\" pictographic interface is superior to a literate one. Poser is a great program but quite inflexible.\n\nDAZ Studio opens data files from Poser 4.x and below. These files can be read directly from the %ProgramFiles%\\Curious Labs\\Poser4 folder where the Runtime folder and POSER.EXE are at the root. This folder will appear in the Content Window after it is specified by the Edit > Preferences > Directories > Poser Content Directories > Add... command.\n\nThe DAZ Studio equivalent of the Conform to... command is the Fit to... command in the Parameters Window.\n\nThe Scene Window is the best way to select parts of an object. It is a first-class window unlike Poser, its tacked on Hierarchy Editor and its Current Figure/Current Element menus.\n",
    "ItemText": null,
    "CreateDate": "2004-12-23T23:08:32.6870000",
    "EndDate": null,
    "ModificationDate": "2004-12-23T23:08:32.6870000",
    "DocumentId": "2076071627",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5388",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 3, Lesson 2; Namespaces in a Web Application",
    "SortOrdinal": null,
    "ItemChar": "Lesson 2: Namespaces in a Web Application\n\nThe purpose of this lesson is to introduce key namespaces used to build ASP.NET applications. All of these namespaces are items under the System.Web namespace.\n\n* \"The class definitions for objects used in Web Applications reside in the System.Web namespace.\"\n\nThe namespaces: System.Web, System.Web.SessionState, System.Web.Services, System.Web.UI, System.Web.UI.WebControls, System.Web.UI.HtmlControls, System.Web.Caching, System.Web.Mail, System.Web.Security.\n\nWhen building a Web application, you will certainly derive from the System.Web.HttpApplication class (to obtain the Web Application object) and the System.Web.UI.Page class (to obtain the Web Form objects).\n\n* \"When ASP.NET starts your application, it automatically instantiates the Global object defined in Global.asax...The HttpApplication base class provides the properties and methods to access the subordinate objects for the Global object.\"\n\nSelected Web Application members: Application, Context, Modules, Request, Response, Server, Session, User.\n\n* \"The Page object controls your application's user interface.\"\n\nSelected Page members: Application, Cache, Controls, Request, Response, Server, Session, Trace.\n\n* \"The Request object contains the information sent by the client browser when a page is requested from the application.\"\n\nSelected Request members: Browser, ClientCertificates, Cookies, Files, InputStream.\n\n* \"Use the Response object to form the response sent from the server to the client browser.\"\n\nSelected Response members: Cache, Cookies, Output.\n\nIt may help to mention the System.Web.HttpContext class here because, like the Page object, it exposes the Request and Response objects. This allows \"business logic\" behind ASP.NET Web pages to handle Response and Request objects without referencing the System.Web.UI namespace of the Page object.",
    "ItemText": null,
    "CreateDate": "2005-01-12T18:52:39.9130000",
    "EndDate": null,
    "ModificationDate": "2005-01-12T18:52:39.9130000",
    "DocumentId": "2076071628",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5389",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Rockford Lhotka Remoting Terminology: Layer, Tier, Application, Service; SOA; Service Oriented Architecture",
    "SortOrdinal": null,
    "ItemChar": "Rockford Lhotka, his Blog entry \"Middle-tier hosting: Enterprise Services, IIS, DCOM, Web services and Remoting\" makes the effort to clearly define terminology used in \"remoting\" which is something that has to do with SOA---which is something that ultimately depends on XML technology and some kind of communication protocol. His whole story is here:\n\n    http://www.lhotka.net/WeBlog/\n        PermaLink.aspx?guid=a70aad9c-79fd-45cc-875f-00dfd3dc0fb6\n\nAnd now the definitions:\n\n* Layer: \"A logical grouping of similar functionality within an application. Often layers are separate .NET assemblies, though this is not a requirement.\"\n\n* Tier: \"A physical grouping of functionality within an application. There is a cross-process or cross-network boundary between tiers, providing physical isolation and separation between them.\"\n\n* Application: \"A complete unit of software providing functionality within a problem domain. Applications are composed of layers, and may be separated into tiers.\"\n\n* Service: \"A specific type of application interface that specifically allows other applications to access some or all of the functionality of the application exposing the service. Often this interface is in the form of XML. Often this XML interface follows the Web services specifications.\"\n\nIt may be well to couple these definitions with Lhotka's article \"The Fallacy of the Data Layer\" here:\n\n    http://www.theserverside.net/articles/showarticle.tss?id=FallacyDataLayer\n\nThis is his assertion, \"But I want to challenge this idea of a data layer. Over the past few months, in discussing service-orientation (SOA) as well as distributed object-oriented architecture, I have become increasingly convinced that the idea of a data tier, data layer or data storage layer is fundamentally flawed.\"",
    "ItemText": null,
    "CreateDate": "2005-01-11T18:57:16.5700000",
    "EndDate": null,
    "ModificationDate": "2005-01-11T18:57:16.5700000",
    "DocumentId": "2076071630",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5390",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Open Source Office Applications: Flippant Remarks about AbiWord 2.014",
    "SortOrdinal": null,
    "ItemChar": "I am a Microsoft guy for historical and practical reasons---not for ideological reasons. When some Oracle guy has a smart remark, I say, Hey, smarty slacks, back in the early 1990s when I was learning SQL I could not walk into an Office Depot and pick up a $99 Oracle database (with that special, software-laundering, anti-trusting \"competitive upgrade\" price). But I could get my hands on Microsoft products and this got me hooked---the MS Borg assimilated another victim.\n\nNow that my Office Depot days are over, here comes MSDN Universal Subscriptions via my W2 labors---so now I'm on the harder stuff and from my W2 point of view, I am getting Microsoft software \"for free.\" So why would I care to write about AbiWord, this Open Source fledgling?\n\nWell, Microsoft employees can console themselves by considering my flippant remarks a minority opinion (in every sense of the term) but I don't think I am suffering from a terminal case of brown-eyed myopia when I say that MS Office is a bloated nebula of COM objects---composed of balls of strange orange gas and truly stellar objects. The gassy part of MS Office is really starting to stink when I think of my data as cross-platform XML data sets---and I am writing this sentence being fully aware of InfoPath and the XML features in Word 2003. So when I hear that AbiWord can read and write XHTML, I sit up and take notice. Unfortunately, these are the first few AbiWord bullets flying past my head:\n\n* AbiWord 2.014 provides no way to edit http: or mailto: hyperlinks that I can see, coming from a Microsoft Word perspective (which means I right-click on the hyperlink and I see a command like Edit Hyperlink). This non-feature alone drives me away from AbiWord 2.014.\n\n* The toolbars in AbiWord 2.014 are out of the early 1990s. Don't take me back.\n\n* Features that resemble replacing-text-as-we-type (Auto-Correct or Intelli-Sense) does not appear to be in AbiWord 2.014. And I say this while seeing the Insert > AutoText command in AbiWord 2.014.\n\n* The kerning and hinting information of the default font in the Windows version of AbiWord 2.014 does not appear to be recognized. Inconveniences like these may be beyond AbiSource control. I am aware of how hostile Microsoft can be to its competitors big and small.\n\n* I see nothing in AbiWord 2.014 that handles XML Schema information. I do not think that AbiWord 2.014 is designed from the ground up to be part of an XML workflow. Microsoft is trying to begin to start thinking about tinkering with XML-based products but the design goals at Microsoft are preoccupied with domination instead of integration (and of course another patch Tuesday is coming up).\n\nThe main point of this rant is that I am completely unaware of a tool that is as convenient as a Word processor but it also is a built for rich data interchange. With MS InfoPath the price of entry is having a definite schema in mind. With MS Word 2003 you don't need to have a definite schema to get started (you can add that later), but the formatting of your document effectively---by default---belongs to Microsoft. Out of the box, Microsoft Word 2003 will allow you to interchange your raw text data with a custom schema but it will not let you interchange your formatting information with a custom schema---and I say this with the letters WORDML dancing in my head. I suppose you can \"schema-tize\" your formatting but the temptation to write your own code is not far away (and I am well beyond tempted). This limitation is unacceptable and as long as Microsoft pays little or no attention to this \"minority problem\" I will keep my brown eyes on tools like AbiWord.",
    "ItemText": null,
    "CreateDate": "2005-01-12T18:03:43.7000000",
    "EndDate": null,
    "ModificationDate": "2005-01-12T18:03:43.7000000",
    "DocumentId": "2076071631",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5391",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 3, Lesson 3; Maintaining State Information",
    "SortOrdinal": null,
    "ItemChar": "Lesson 3: Maintaining State Information\n\nThe purpose of this lesson is to introduce stateful web programming to former VB6 users, to reassure ASP \"classic\" programmers that ASP.NET backwards compatibility is robust and other stuff beyond my scope of awareness.\n\nThese are the \"levels of state\": Context.Handler object state, Query strings state, Cookies state, View state, Session state and Application state.\n\n* \"...when navigating between Web forms using the Transfer or Execute method, you can retrieve read-only properties from the previous Web form...\"\n\nThis is done with the Context.Handler object. For more information about this design pattern, see MSDN article \"Passing Values Between Web Forms Pages\" here:\n\n    http://msdn.microsoft.com/library/\n        en-us/vbcon/html/vbtskpassingvaluesbetweenwebformspages.asp\n\nIt may help the reader to mention that the Context object is a member of the Page object when the Page object was first introduced in Chapter 3, Lesson 3. The Context object is of type System.Web.HttpContext.\n\n* \"Because ViewState stores data on the page, it is limited to items that can be serialized. If you want to store more complex items in ViewState, you must convert the items to and from a string.\"\n\nThis quote opens up the way toward realizing that much of the ASP.NET state information is ultimately limited to two types, string and object. What is not suggested in this lesson is the possibility of storing state in user-defined static members of the Application object. I will assume that this is an \"advanced topic\" and that backwards compatibility is more important in this lesson than moving on to new object-oriented designs.\n\nInstead of this \"advanced topic,\" the first code listing of this lesson clearly shows that the Context1 type, extending System.Web.UI.Page, exposes the string type Value that can be accessed by the Context2 type (in the second code listing). It follows that this lesson shows that strongly typed Page-level state information can be passed (as long as it can be represented by strings).\n\nThe following quotes highlight the known issues associated with ASP.NET designs based on Application and Session states:\n\n* \"Application and Session state variables are created on the fly, without variable name or type checking. You should limit your access points to these variables.\"\n\n* \"Maintaining Session state affects performance.\"\n\n* \"Application state variables are available throughout the current process, but not across processes.\"\n\n* \"Application and Session state variables are powerful and therefore scary things.\"\n\n* \"If a page does not require state information at the session level, you can turn this off to achieve better performance.\"\n\nFor more information, see MSDN article \"ASP.NET Session State\" here:\n\n    http://msdn.microsoft.com/library/en-us/dnaspnet/html/asp12282000.asp\n\nSee also \"<sessionState> Element\" here:\n\n    http://msdn.microsoft.com/library/\n        en-us/cpgenref/html/gngrfSessionstateSection.asp\n",
    "ItemText": null,
    "CreateDate": "2005-03-15T14:17:23.4400000",
    "EndDate": null,
    "ModificationDate": "2005-03-15T14:17:23.4400000",
    "DocumentId": "2076071632",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5392",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WordProcessingML: Flippant remarks about the run element",
    "SortOrdinal": null,
    "ItemChar": "A run is an arbitrary sequence of characters in an Office System Word 2003 document. In Visual Basic for Applications for Word, this would probably be called a Range. The run element, <r /> is documented here:\n\n    http://msdn.microsoft.com/library/en-us/\n        WordXMLCDK/html/cdkweler_simpleFieldType_HV01114797.asp\n\nThe run property child element, <rPr /> , of the run element is designed to deal with the problem of \"multiple formatting\"---say, applying bold and italic to characters.",
    "ItemText": null,
    "CreateDate": "2007-05-15T12:32:58.0000000",
    "EndDate": null,
    "ModificationDate": "2007-05-15T12:32:58.0000000",
    "DocumentId": "2076071633",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5393",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Code: String Handling Functions from 1999; StringServices.bas",
    "SortOrdinal": null,
    "ItemChar": "Option Explicit\n'\n' rasx 05/25/1999\n'\n\nPublic Function CountStr(ByVal Str As String, SubStr As String, _\n    Optional StartPos = 1) As Long\n\n    Dim lngCount\n    \n    If VBA.VarType(StartPos) <> vbEmpty Then _\n        If VBA.VarType(StartPos) <> vbInteger Then _\n            If VBA.VarType(StartPos) <> vbLong Then VBA.Err.Raise 450\n    \n    Do\n        lngCount = VBA.InStr(StartPos, Str, SubStr)\n        StartPos = lngCount + VBA.Len(SubStr)\n        If lngCount > 0 Then\n            CountStr = CountStr + 1\n        Else\n            Exit Do\n        End If\n    Loop\n    \nEnd Function\n\nPublic Function GetCharPos(ByVal Str As String, ByVal Chars As String, _\n    Optional ByVal Iterations = -1) As Long\n    '\n    'This function returns the char' position of the first character\n    'in Chars. If Iterations = 0 then the position of the last occurrence\n    'of Chars is returned.\n    '\n    If VBA.VarType(Iterations) <> vbInteger Then\n        If VBA.VarType(Iterations) <> vbLong Then VBA.Err.Raise 450\n    End If\n    \n    Dim lngIn As Long\n    Dim lngOut As Long\n    Dim lngLoop As Long\n    \n    lngIn = 1: lngOut = -1\n    \n    Select Case Iterations\n        Case -1\n            Do\n                lngOut = VBA.InStr(lngIn, Str, Chars)\n                If lngOut Then\n                    lngIn = lngOut + 1\n                Else\n                    Exit Do\n                End If\n            Loop\n            \n        Case Else\n            Do While lngLoop < Iterations\n                lngOut = VBA.InStr(lngIn, Str, Chars)\n                If lngOut Then\n                    lngIn = lngOut + 1\n                Else\n                    Exit Do\n                End If\n                lngLoop = lngLoop + 1\n            Loop\n            \n    End Select\n    \n    GetCharPos = lngIn - 1\n                                                        \nEnd Function\n\nPublic Function GetDigits(ByVal Str As String, _\n    Optional ByVal IncludeDecimal = False) As String\n    '\n    'This function returns only numeric characters.\n    'and, optionally, one decimal point.\n    '\n    Dim lngCount As Long\n    Dim strChar As String\n    Dim strRet As String\n    Dim strCmp As String\n\n    If IncludeDecimal Then\n        strCmp = \"1234567890.\"\n    Else\n        strCmp = \"1234567890\"\n    End If\n\n    For lngCount = 1 To Len(Str)\n        strChar = Mid$(Str, lngCount, 1)\n        If InStr(strCmp, strChar) > 0 Then\n            strRet = strRet & strChar\n        End If\n    Next\n\n    GetDigits = strRet\n  \nEnd Function\n\nPublic Function GetSubStr(ByVal Str As String, _\n    Optional ByVal StartCol = 0, _\n    Optional ByVal EndCol = 0, _\n    Optional ByVal StartChar = Empty, _\n    Optional ByVal EndChar = Empty) As String\n    'For all cases, this function returns what is between\n    'the characters and/or columns searched. This design\n    'assumes the leftmost column is column 1 so that\n    'character position equals column position.\n    \n    Dim lngLength As Long\n    \n    On Error GoTo GetSubStr_Err\n    \n    'Check Optional input.\n    If VBA.VarType(StartCol) <> vbInteger Then\n        If VBA.VarType(StartCol) <> vbLong Then VBA.Err.Raise 450\n    End If\n    If VBA.VarType(EndCol) <> vbInteger Then\n        If VBA.VarType(EndCol) <> vbLong Then VBA.Err.Raise 450\n    End If\n    If VBA.VarType(StartChar) <> vbString Then\n        If VBA.VarType(StartChar) <> vbEmpty Then VBA.Err.Raise 450\n    End If\n    If VBA.VarType(EndChar) <> vbString Then\n        If VBA.VarType(EndChar) <> vbEmpty Then VBA.Err.Raise 450\n    End If\n    \n    If StartChar = EndChar And VBA.Len(StartChar) And VBA.Len(EndChar) Then\n        VBA.MsgBox \"Error: This function cannot handle strings\" _\n            & \" with separators.\", _\n            vbCritical + vbOKOnly, \"GetSubStr Error\"\n        GoTo GetSubStr_Exit\n    End If\n    \n    If VBA.Len(StartChar) > 1 Or VBA.Len(EndChar) > 1 Then\n        VBA.MsgBox \"Error: This function cannot searches with strings\" _\n            & \" of length greater than one.\", _\n            vbCritical + vbOKOnly, \"GetSubStr Error\"\n        GoTo GetSubStr_Exit\n    End If\n    \n    'Searched on single characters only.\n    If VBA.Len(StartChar) And VBA.Len(EndChar) Then\n        lngLength = VBA.InStr(1, Str, EndChar) _\n                            - VBA.InStr(1, Str, StartChar)\n        GetSubStr = VBA.Mid$(Str, VBA.InStr(1, Str, StartChar) + 1, lngLength - 1)\n        \n    'Searched on column numbers only.\n    ElseIf StartCol >= 1 And EndCol >= 1 Then\n        lngLength = EndCol - StartCol\n        GetSubStr = VBA.Mid$(Str, StartCol, lngLength)\n        \n    'Searched on known starting column and known end character.\n    ElseIf StartCol >= 1 And VBA.Len(EndChar) Then\n        lngLength = VBA.InStr(1, Str, EndChar) - StartCol\n        GetSubStr = VBA.Mid$(Str, StartCol, lngLength)\n        \n    'Searched on known starting character and known end column.\n    ElseIf VBA.Len(StartChar) And EndCol >= 1 Then\n        lngLength = EndCol - VBA.InStr(1, Str, StartChar)\n        GetSubStr = VBA.Mid$(Str, VBA.InStr(1, Str, StartChar) + 1, lngLength - 1)\n        \n    End If\n    \nGetSubStr_Exit:\n    Exit Function\n    \nGetSubStr_Err:\n     Select Case VBA.Err\n        Case Else\n            VBA.MsgBox VBA.Err.Description, vbCritical + vbOKOnly, \"GetSubStr Error\"\n            Resume GetSubStr_Exit\n\n    End Select\n   \nEnd Function\n\nPublic Function InsNewLines(ByVal InpString As String, _\n    ByVal LineLen As Long) As String\n    \n    Dim lngPosCrLfIn As Long\n    Dim lngPosCrLfOut As Long\n    Dim lngPosSpc As Long\n    Dim strSpc As String\n    Dim strIn As String\n    Dim strOut As String\n    \n    strSpc = VBA.Space$(1)\n    strIn = InpString\n        \n    Do\n    \n            lngPosCrLfIn = GetCharPos(strIn, vbCrLf, 1)\n            lngPosSpc = GetCharPos(strIn, strSpc, 1)\n            \n            If lngPosCrLfIn <= LineLen And lngPosCrLfIn > 0 _\n               And (VBA.Len(strOut) - lngPosCrLfIn) + lngPosCrLfOut < LineLen Then\n               'Substring contains a linebreak and carriage return\n               'and its length is smaller than LineLen.\n                strOut = strOut & VBA.Mid$(strIn, 1, lngPosCrLfIn + 1)\n                strIn = VBA.Mid$(strIn, lngPosCrLfIn + 2)\n                \n            ElseIf lngPosSpc > 0 Then\n                'Split strIn at the last position of the space character.\n                strOut = strOut & VBA.Mid$(strIn, 1, lngPosSpc - 1)\n                strIn = VBA.Mid$(strIn, lngPosSpc + 1)\n                \n                'Store last position of carriage return and line feed in strOut.\n                lngPosCrLfOut = GetCharPos(strOut, vbCrLf)\n                \n                If VBA.Len(strOut) - lngPosCrLfOut >= LineLen Then\n                    'Break line.\n                    strOut = strOut & vbCrLf\n                Else\n                    'Don't break line.\n                    strOut = strOut & strSpc\n                End If\n                \n            ElseIf lngPosSpc = 0 Then\n                'In prose this must be the end of the string.\n                strOut = strOut & strIn\n                strIn = Empty\n            \n            End If\n            \n    Loop Until strIn = Empty\n        \n    InsNewLines = strOut\n    \nEnd Function\n\nPublic Function PathExists(ByVal PathName As String, _\n    Optional ByVal PathAttr = vbNormal) As Boolean\n    \n    On Error Resume Next\n    \n    If VBA.VarType(PathAttr) <> vbInteger Then _\n        If VBA.VarType(PathAttr) <> vbLong Then VBA.Err.Raise 450\n    \n    PathExists = Not (VBA.Dir(PathName, PathAttr) = Empty)\n    \nEnd Function\n\nPublic Function ReplaceChars(ByVal Str As String, ByVal OldChars As String, _\n    Optional ByVal NewChars = Empty, Optional Iterations = -1, _\n    Optional StartPos = 1, Optional ByVal UpCase = False) As String\n    '\n    'This function was conceived in the old days\n    'before the VBA.Replace() method.\n    '\n    Dim lngCounter As Long, lngLoop As Long\n    Dim lngNewPos As Long\n    \n    If VBA.VarType(NewChars) <> vbEmpty Then _\n        If VBA.VarType(NewChars) <> vbString Then VBA.Err.Raise 450\n    \n    If VBA.VarType(Iterations) <> vbEmpty Then _\n        If VBA.VarType(Iterations) <> vbInteger Then _\n            If VBA.VarType(Iterations) <> vbLong Then VBA.Err.Raise 450\n    \n    If VBA.VarType(StartPos) <> vbEmpty Then _\n        If VBA.VarType(StartPos) <> vbInteger Then _\n            If VBA.VarType(StartPos) <> vbLong Then VBA.Err.Raise 450\n    \n    If VBA.VarType(UpCase) <> vbEmpty Then _\n        If VBA.VarType(UpCase) <> vbBoolean Then VBA.Err.Raise 450\n    \n    If Iterations = -1 Then\n        'Count how many times OldChars appears.\n        Iterations = CountStr(Str, OldChars)\n    End If\n    ReplaceChars = Str\n    \n    If NewChars <> Empty Then\n        lngLoop = VBA.InStr(StartPos, Str, OldChars, vbBinaryCompare)\n        For lngCounter = 1 To Iterations\n            Str = Mid$(Str, StartPos, lngLoop - 1) & NewChars & VBA.Mid$(Str, lngLoop + VBA.Len(OldChars))\n            ReplaceChars = Str\n            lngNewPos = lngLoop + VBA.Len(NewChars)\n            lngLoop = VBA.InStr(lngNewPos, Str, OldChars, vbBinaryCompare)\n        Next\n    Else\n        If UpCase Then\n            lngLoop = VBA.InStr(StartPos, Str, OldChars, vbBinaryCompare)\n            For lngCounter = 1 To Iterations\n                Str = VBA.Mid$(Str, 1, lngLoop - 1) & VBA.UCase$(OldChars) _\n                    & VBA.Mid$(Str, lngLoop + VBA.Len(OldChars))\n                ReplaceChars = Str\n                lngNewPos = lngLoop + VBA.Len(NewChars)\n                lngLoop = VBA.InStr(lngNewPos, Str, OldChars, vbBinaryCompare)\n            Next\n        Else\n            lngLoop = VBA.InStr(1, Str, OldChars)\n            For lngCounter = 1 To Iterations\n                Str = VBA.Mid$(Str, 1, lngLoop - 1) & VBA.Mid$(Str, lngLoop + VBA.Len(OldChars))\n                ReplaceChars = Str\n                lngNewPos = lngLoop + VBA.Len(NewChars)\n                lngLoop = VBA.InStr(lngNewPos, Str, OldChars, vbBinaryCompare)\n            Next\n        End If\n    End If\n    \nEnd Function\n\nPublic Function SearchLine(ByVal Str As String, _\n    ByVal SearchStr As String) As String\n\n    'This function returns the line containing SearchStr\n    'where \"line\" implies Str contains several vbCrLf char's.\n\n    Dim lngLen As Long\n    Dim lngStart As Long\n    Dim lngEnd As Long\n    \n    lngLen = VBA.Len(Str)\n    \n    If VBA.InStr(1, Str, SearchStr) = 0 Then Exit Function\n    \n    lngStart = 1\n    lngEnd = VBA.InStr(lngStart, Str, vbCrLf)\n    Do\n        SearchLine = GetSubStr(Str, lngStart, lngEnd)\n        If VBA.InStr(1, SearchLine, SearchStr) Then Exit Do\n        lngStart = lngEnd + 2 'Recall that vbCrLf is two char's!\n        lngEnd = VBA.InStr(lngStart, Str, vbCrLf)\n    Loop\n    \nEnd Function\n\nPublic Function TitleCase(ByVal Str As String) As String\n\n    Dim lngLoop As Long\n    Dim strMid As String\n    \n    'Handle the remaining characters.\n    For lngLoop = 1 To VBA.Len(Str)\n        strMid = VBA.Mid$(Str, lngLoop, 2)\n        If strMid = \" \"\"\" Or strMid = \" '\" Then\n            'Respond to leading quotes.\n            strMid = VBA.Mid$(Str, lngLoop, 3)\n            VBA.Mid(Str, lngLoop, 3) = VBA.UCase(strMid)\n        ElseIf strMid Like \" ?\" Then\n            VBA.Mid(Str, lngLoop, 2) = VBA.UCase(strMid)\n        End If\n    Next lngLoop\n    \n    'Handle simple grammar rules.\n    'Articles:\n    Str = ReplaceChars(Str, \" The \", \" the \")\n    Str = ReplaceChars(Str, \" A \", \" a \")\n    \n    'Common Prepositions:\n    Str = ReplaceChars(Str, \" Against \", \" against \")\n    Str = ReplaceChars(Str, \" Along \", \" along \")\n    Str = ReplaceChars(Str, \" At \", \" at \")\n    Str = ReplaceChars(Str, \" Between \", \" between \")\n    Str = ReplaceChars(Str, \" By \", \" by \")\n    Str = ReplaceChars(Str, \" Down \", \" down \")\n    Str = ReplaceChars(Str, \" For \", \" for \")\n    Str = ReplaceChars(Str, \" In \", \" in \")\n    Str = ReplaceChars(Str, \" Of \", \" of \")\n    Str = ReplaceChars(Str, \" On \", \" on \")\n    Str = ReplaceChars(Str, \" Over \", \" over \")\n    Str = ReplaceChars(Str, \" To \", \" to \")\n    Str = ReplaceChars(Str, \" Up \", \" up \")\n    Str = ReplaceChars(Str, \" With \", \" with \")\n    \n    'Handle the first character.\n    strMid = VBA.Mid$(Str, 1, 1)\n    VBA.Mid(Str, 1, 1) = VBA.UCase(strMid)\n        \n    TitleCase = Str\n    \nEnd Function",
    "ItemText": "Option Explicit\n'\n' rasx 05/25/1999\n'\n\nPublic Function CountStr(ByVal Str As String, SubStr As String, _\n    Optional StartPos = 1) As Long\n\n    Dim lngCount\n    \n    If VBA.VarType(StartPos) <> vbEmpty Then _\n        If VBA.VarType(StartPos) <> vbInteger Then _\n            If VBA.VarType(StartPos) <> vbLong Then VBA.Err.Raise 450\n    \n    Do\n        lngCount = VBA.InStr(StartPos, Str, SubStr)\n        StartPos = lngCount + VBA.Len(SubStr)\n        If lngCount > 0 Then\n            CountStr = CountStr + 1\n        Else\n            Exit Do\n        End If\n    Loop\n    \nEnd Function\n\nPublic Function GetCharPos(ByVal Str As String, ByVal Chars As String, _\n    Optional ByVal Iterations = -1) As Long\n    '\n    'This function returns the char' position of the first character\n    'in Chars. If Iterations = 0 then the position of the last occurrence\n    'of Chars is returned.\n    '\n    If VBA.VarType(Iterations) <> vbInteger Then\n        If VBA.VarType(Iterations) <> vbLong Then VBA.Err.Raise 450\n    End If\n    \n    Dim lngIn As Long\n    Dim lngOut As Long\n    Dim lngLoop As Long\n    \n    lngIn = 1: lngOut = -1\n    \n    Select Case Iterations\n        Case -1\n            Do\n                lngOut = VBA.InStr(lngIn, Str, Chars)\n                If lngOut Then\n                    lngIn = lngOut + 1\n                Else\n                    Exit Do\n                End If\n            Loop\n            \n        Case Else\n            Do While lngLoop < Iterations\n                lngOut = VBA.InStr(lngIn, Str, Chars)\n                If lngOut Then\n                    lngIn = lngOut + 1\n                Else\n                    Exit Do\n                End If\n                lngLoop = lngLoop + 1\n            Loop\n            \n    End Select\n    \n    GetCharPos = lngIn - 1\n                                                        \nEnd Function\n\nPublic Function GetDigits(ByVal Str As String, _\n    Optional ByVal IncludeDecimal = False) As String\n    '\n    'This function returns only numeric characters.\n    'and, optionally, one decimal point.\n    '\n    Dim lngCount As Long\n    Dim strChar As String\n    Dim strRet As String\n    Dim strCmp As String\n\n    If IncludeDecimal Then\n        strCmp = \"1234567890.\"\n    Else\n        strCmp = \"1234567890\"\n    End If\n\n    For lngCount = 1 To Len(Str)\n        strChar = Mid$(Str, lngCount, 1)\n        If InStr(strCmp, strChar) > 0 Then\n            strRet = strRet & strChar\n        End If\n    Next\n\n    GetDigits = strRet\n  \nEnd Function\n\nPublic Function GetSubStr(ByVal Str As String, _\n    Optional ByVal StartCol = 0, _\n    Optional ByVal EndCol = 0, _\n    Optional ByVal StartChar = Empty, _\n    Optional ByVal EndChar = Empty) As String\n    'For all cases, this function returns what is between\n    'the characters and/or columns searched. This design\n    'assumes the leftmost column is column 1 so that\n    'character position equals column position.\n    \n    Dim lngLength As Long\n    \n    On Error GoTo GetSubStr_Err\n    \n    'Check Optional input.\n    If VBA.VarType(StartCol) <> vbInteger Then\n        If VBA.VarType(StartCol) <> vbLong Then VBA.Err.Raise 450\n    End If\n    If VBA.VarType(EndCol) <> vbInteger Then\n        If VBA.VarType(EndCol) <> vbLong Then VBA.Err.Raise 450\n    End If\n    If VBA.VarType(StartChar) <> vbString Then\n        If VBA.VarType(StartChar) <> vbEmpty Then VBA.Err.Raise 450\n    End If\n    If VBA.VarType(EndChar) <> vbString Then\n        If VBA.VarType(EndChar) <> vbEmpty Then VBA.Err.Raise 450\n    End If\n    \n    If StartChar = EndChar And VBA.Len(StartChar) And VBA.Len(EndChar) Then\n        VBA.MsgBox \"Error: This function cannot handle strings\" _\n            & \" with separators.\", _\n            vbCritical + vbOKOnly, \"GetSubStr Error\"\n        GoTo GetSubStr_Exit\n    End If\n    \n    If VBA.Len(StartChar) > 1 Or VBA.Len(EndChar) > 1 Then\n        VBA.MsgBox \"Error: This function cannot searches with strings\" _\n            & \" of length greater than one.\", _\n            vbCritical + vbOKOnly, \"GetSubStr Error\"\n        GoTo GetSubStr_Exit\n    End If\n    \n    'Searched on single characters only.\n    If VBA.Len(StartChar) And VBA.Len(EndChar) Then\n        lngLength = VBA.InStr(1, Str, EndChar) _\n                            - VBA.InStr(1, Str, StartChar)\n        GetSubStr = VBA.Mid$(Str, VBA.InStr(1, Str, StartChar) + 1, lngLength - 1)\n        \n    'Searched on column numbers only.\n    ElseIf StartCol >= 1 And EndCol >= 1 Then\n        lngLength = EndCol - StartCol\n        GetSubStr = VBA.Mid$(Str, StartCol, lngLength)\n        \n    'Searched on known starting column and known end character.\n    ElseIf StartCol >= 1 And VBA.Len(EndChar) Then\n        lngLength = VBA.InStr(1, Str, EndChar) - StartCol\n        GetSubStr = VBA.Mid$(Str, StartCol, lngLength)\n        \n    'Searched on known starting character and known end column.\n    ElseIf VBA.Len(StartChar) And EndCol >= 1 Then\n        lngLength = EndCol - VBA.InStr(1, Str, StartChar)\n        GetSubStr = VBA.Mid$(Str, VBA.InStr(1, Str, StartChar) + 1, lngLength - 1)\n        \n    End If\n    \nGetSubStr_Exit:\n    Exit Function\n    \nGetSubStr_Err:\n     Select Case VBA.Err\n        Case Else\n            VBA.MsgBox VBA.Err.Description, vbCritical + vbOKOnly, \"GetSubStr Error\"\n            Resume GetSubStr_Exit\n\n    End Select\n   \nEnd Function\n\nPublic Function InsNewLines(ByVal InpString As String, _\n    ByVal LineLen As Long) As String\n    \n    Dim lngPosCrLfIn As Long\n    Dim lngPosCrLfOut As Long\n    Dim lngPosSpc As Long\n    Dim strSpc As String\n    Dim strIn As String\n    Dim strOut As String\n    \n    strSpc = VBA.Space$(1)\n    strIn = InpString\n        \n    Do\n    \n            lngPosCrLfIn = GetCharPos(strIn, vbCrLf, 1)\n            lngPosSpc = GetCharPos(strIn, strSpc, 1)\n            \n            If lngPosCrLfIn <= LineLen And lngPosCrLfIn > 0 _\n               And (VBA.Len(strOut) - lngPosCrLfIn) + lngPosCrLfOut < LineLen Then\n               'Substring contains a linebreak and carriage return\n               'and its length is smaller than LineLen.\n                strOut = strOut & VBA.Mid$(strIn, 1, lngPosCrLfIn + 1)\n                strIn = VBA.Mid$(strIn, lngPosCrLfIn + 2)\n                \n            ElseIf lngPosSpc > 0 Then\n                'Split strIn at the last position of the space character.\n                strOut = strOut & VBA.Mid$(strIn, 1, lngPosSpc - 1)\n                strIn = VBA.Mid$(strIn, lngPosSpc + 1)\n                \n                'Store last position of carriage return and line feed in strOut.\n                lngPosCrLfOut = GetCharPos(strOut, vbCrLf)\n                \n                If VBA.Len(strOut) - lngPosCrLfOut >= LineLen Then\n                    'Break line.\n                    strOut = strOut & vbCrLf\n                Else\n                    'Don't break line.\n                    strOut = strOut & strSpc\n                End If\n                \n            ElseIf lngPosSpc = 0 Then\n                'In prose this must be the end of the string.\n                strOut = strOut & strIn\n                strIn = Empty\n            \n            End If\n            \n    Loop Until strIn = Empty\n        \n    InsNewLines = strOut\n    \nEnd Function\n\nPublic Function PathExists(ByVal PathName As String, _\n    Optional ByVal PathAttr = vbNormal) As Boolean\n    \n    On Error Resume Next\n    \n    If VBA.VarType(PathAttr) <> vbInteger Then _\n        If VBA.VarType(PathAttr) <> vbLong Then VBA.Err.Raise 450\n    \n    PathExists = Not (VBA.Dir(PathName, PathAttr) = Empty)\n    \nEnd Function\n\nPublic Function ReplaceChars(ByVal Str As String, ByVal OldChars As String, _\n    Optional ByVal NewChars = Empty, Optional Iterations = -1, _\n    Optional StartPos = 1, Optional ByVal UpCase = False) As String\n    '\n    'This function was conceived in the old days\n    'before the VBA.Replace() method.\n    '\n    Dim lngCounter As Long, lngLoop As Long\n    Dim lngNewPos As Long\n    \n    If VBA.VarType(NewChars) <> vbEmpty Then _\n        If VBA.VarType(NewChars) <> vbString Then VBA.Err.Raise 450\n    \n    If VBA.VarType(Iterations) <> vbEmpty Then _\n        If VBA.VarType(Iterations) <> vbInteger Then _\n            If VBA.VarType(Iterations) <> vbLong Then VBA.Err.Raise 450\n    \n    If VBA.VarType(StartPos) <> vbEmpty Then _\n        If VBA.VarType(StartPos) <> vbInteger Then _\n            If VBA.VarType(StartPos) <> vbLong Then VBA.Err.Raise 450\n    \n    If VBA.VarType(UpCase) <> vbEmpty Then _\n        If VBA.VarType(UpCase) <> vbBoolean Then VBA.Err.Raise 450\n    \n    If Iterations = -1 Then\n        'Count how many times OldChars appears.\n        Iterations = CountStr(Str, OldChars)\n    End If\n    ReplaceChars = Str\n    \n    If NewChars <> Empty Then\n        lngLoop = VBA.InStr(StartPos, Str, OldChars, vbBinaryCompare)\n        For lngCounter = 1 To Iterations\n            Str = Mid$(Str, StartPos, lngLoop - 1) & NewChars & VBA.Mid$(Str, lngLoop + VBA.Len(OldChars))\n            ReplaceChars = Str\n            lngNewPos = lngLoop + VBA.Len(NewChars)\n            lngLoop = VBA.InStr(lngNewPos, Str, OldChars, vbBinaryCompare)\n        Next\n    Else\n        If UpCase Then\n            lngLoop = VBA.InStr(StartPos, Str, OldChars, vbBinaryCompare)\n            For lngCounter = 1 To Iterations\n                Str = VBA.Mid$(Str, 1, lngLoop - 1) & VBA.UCase$(OldChars) _\n                    & VBA.Mid$(Str, lngLoop + VBA.Len(OldChars))\n                ReplaceChars = Str\n                lngNewPos = lngLoop + VBA.Len(NewChars)\n                lngLoop = VBA.InStr(lngNewPos, Str, OldChars, vbBinaryCompare)\n            Next\n        Else\n            lngLoop = VBA.InStr(1, Str, OldChars)\n            For lngCounter = 1 To Iterations\n                Str = VBA.Mid$(Str, 1, lngLoop - 1) & VBA.Mid$(Str, lngLoop + VBA.Len(OldChars))\n                ReplaceChars = Str\n                lngNewPos = lngLoop + VBA.Len(NewChars)\n                lngLoop = VBA.InStr(lngNewPos, Str, OldChars, vbBinaryCompare)\n            Next\n        End If\n    End If\n    \nEnd Function\n\nPublic Function SearchLine(ByVal Str As String, _\n    ByVal SearchStr As String) As String\n\n    'This function returns the line containing SearchStr\n    'where \"line\" implies Str contains several vbCrLf char's.\n\n    Dim lngLen As Long\n    Dim lngStart As Long\n    Dim lngEnd As Long\n    \n    lngLen = VBA.Len(Str)\n    \n    If VBA.InStr(1, Str, SearchStr) = 0 Then Exit Function\n    \n    lngStart = 1\n    lngEnd = VBA.InStr(lngStart, Str, vbCrLf)\n    Do\n        SearchLine = GetSubStr(Str, lngStart, lngEnd)\n        If VBA.InStr(1, SearchLine, SearchStr) Then Exit Do\n        lngStart = lngEnd + 2 'Recall that vbCrLf is two char's!\n        lngEnd = VBA.InStr(lngStart, Str, vbCrLf)\n    Loop\n    \nEnd Function\n\nPublic Function TitleCase(ByVal Str As String) As String\n\n    Dim lngLoop As Long\n    Dim strMid As String\n    \n    'Handle the remaining characters.\n    For lngLoop = 1 To VBA.Len(Str)\n        strMid = VBA.Mid$(Str, lngLoop, 2)\n        If strMid = \" \"\"\" Or strMid = \" '\" Then\n            'Respond to leading quotes.\n            strMid = VBA.Mid$(Str, lngLoop, 3)\n            VBA.Mid(Str, lngLoop, 3) = VBA.UCase(strMid)\n        ElseIf strMid Like \" ?\" Then\n            VBA.Mid(Str, lngLoop, 2) = VBA.UCase(strMid)\n        End If\n    Next lngLoop\n    \n    'Handle simple grammar rules.\n    'Articles:\n    Str = ReplaceChars(Str, \" The \", \" the \")\n    Str = ReplaceChars(Str, \" A \", \" a \")\n    \n    'Common Prepositions:\n    Str = ReplaceChars(Str, \" Against \", \" against \")\n    Str = ReplaceChars(Str, \" Along \", \" along \")\n    Str = ReplaceChars(Str, \" At \", \" at \")\n    Str = ReplaceChars(Str, \" Between \", \" between \")\n    Str = ReplaceChars(Str, \" By \", \" by \")\n    Str = ReplaceChars(Str, \" Down \", \" down \")\n    Str = ReplaceChars(Str, \" For \", \" for \")\n    Str = ReplaceChars(Str, \" In \", \" in \")\n    Str = ReplaceChars(Str, \" Of \", \" of \")\n    Str = ReplaceChars(Str, \" On \", \" on \")\n    Str = ReplaceChars(Str, \" Over \", \" over \")\n    Str = ReplaceChars(Str, \" To \", \" to \")\n    Str = ReplaceChars(Str, \" Up \", \" up \")\n    Str = ReplaceChars(Str, \" With \", \" with \")\n    \n    'Handle the first character.\n    strMid = VBA.Mid$(Str, 1, 1)\n    VBA.Mid(Str, 1, 1) = VBA.UCase(strMid)\n        \n    TitleCase = Str\n    \nEnd Function",
    "CreateDate": "2005-01-20T12:44:44.7570000",
    "EndDate": null,
    "ModificationDate": "2005-01-20T12:44:44.7570000",
    "DocumentId": "2076071635",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5394",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WordPress PROBLEM: Backslashes Stripped from Posts",
    "SortOrdinal": null,
    "ItemChar": "WordPress strips backslashes out of posts. Escape to &#092;. For more info check out this:\n\n    http://blog.carthik.net/vault/2004/06/19/bob-bemer-is-to-blame/",
    "ItemText": null,
    "CreateDate": "2005-01-26T15:53:59.7130000",
    "EndDate": null,
    "ModificationDate": "2005-01-26T15:53:59.7130000",
    "DocumentId": "2076071636",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5395",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WordPress PROBLEM: \"Sorry, you need to enable sending referrers, for this feature to work\" error; Enabling Referrers",
    "SortOrdinal": null,
    "ItemChar": "This is security issue: \"Your WordPress installation checks 'sending referrers' as a basic form of security to protect your admin area from unauthorized users; disabling it in your WP install would be a bad idea.\" For the details please see:\n\n    http://codex.wordpress.org/Enable_Sending_Referrers",
    "ItemText": null,
    "CreateDate": "2005-01-26T15:57:44.6900000",
    "EndDate": null,
    "ModificationDate": "2005-01-26T15:57:44.6900000",
    "DocumentId": "2076071637",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5396",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Regex Object Is Not Available by Default in VBA; Microsoft VBScript Regular Expressions 5.5 Library",
    "SortOrdinal": null,
    "ItemChar": "\"If you use the objects that are available in the Microsoft VBScript Regular Expressions 5.5 library, you can compare a string against a specific pattern, replace a string pattern with another string, or retrieve only portions of a formatted string. This article describes how to construct a pattern to parse a string that contains multiple instances of the same pattern...\":\n\n    http://support.microsoft.com/default.aspx?scid=kb%3Ben-us%3B818802",
    "ItemText": null,
    "CreateDate": "2005-01-26T16:01:44.9130000",
    "EndDate": null,
    "ModificationDate": "2005-01-26T16:01:44.9130000",
    "DocumentId": "2076071638",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5397",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Office 2003: Enduring Keyboard Shortcuts for Office Word, Useful Webcasts and Other Flippant Remarks; Office Word 2003",
    "SortOrdinal": null,
    "ItemChar": "* The Table > Autofit commands were seriously overlooked.\n\n* Enhanced metafile is the graphics format that Word \"likes\" (won't bloat file size).\n\n* Keyboard shortcuts for Office Word that have lasted over the years:\n\n    Ctrl + c (Copy)\n    Ctrl + v (Paste)\n    Ctrl + z (Undo)\n    Ctrl + y (Redo)\n\n    Ctrl + n (set Normal Paragraph Style)\n    Ctrl + l (set to List Bullet Paragraph Style)\n\n    Shift + F3 (toggle case)\n\n    Ctrl + Alt + 1 (set Heading 1 Paragraph Style)\n    Ctrl + Alt + 2 (set Heading 2 Paragraph Style)\n    Ctrl + Alt + 3 (set Heading 3 Paragraph Style)\n\n* New Word shortcuts picked up from the Web-casts:\n\n    F4 (Redo)\n\n    Ctrl + Q (clear paragraph formatting)\n    Ctrl + Spacebar (clear character formatting)\n\n    Ctrl + Shift + F9 (convert object in Field to picture)\n\nAs of this note, the relevant Web-casts can be found here:\n\n    http://www.microsoft.com/seminar/events/series/connectedproductivity.mspx\n\nThe two presenter names that stick out are Stephanie Krieger and Chris Bertelson.",
    "ItemText": null,
    "CreateDate": "2005-01-28T01:21:30.5930000",
    "EndDate": null,
    "ModificationDate": "2005-01-28T01:21:30.5930000",
    "DocumentId": "2076071639",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5398",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Office System 2003: The Open Office Document shortcut and \"My Places\"; Office Shared Features",
    "SortOrdinal": null,
    "ItemChar": "You may have noticed that you can resize the Open and Save As... dialogs in all Office System applications. You probably have seen the strip of icons on the left side of these dialogs. This strip is called the My Places bar and it is customizable. The details are in MS KB article 826214 (\"How to customize the My Places bar in both the Open and the Save As dialog boxes in Office 2003\"):\n\n    http://support.microsoft.com/default.aspx?scid=kb;en-us;826214\n\nOnce you have set up a list of your favorite folders, you can really take advantage of the Open dialog by adding the Open Office Document shortcut to your Start menu. Microsoft Office Online details this procedure in \"Find the New Office Document and Open Office Document shortcuts\" here:\n\n    http://office.microsoft.com/en-us/assistance/HA010591561033.aspx",
    "ItemText": null,
    "CreateDate": "2005-01-28T23:53:58.8800000",
    "EndDate": null,
    "ModificationDate": "2005-01-28T23:53:58.8800000",
    "DocumentId": "2076071640",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5399",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "basIsEmailValid(); This function checks for a valid email address.",
    "SortOrdinal": null,
    "ItemChar": "Function basIsEmailValid(ByVal EmailAddr As String) As Boolean\n    'This function checks for a valid email address.\n    Dim lngPosAtSymbol As Long\n    Dim lngPosPeriod As Long\n    Dim lngPosSpace As Long\n    Dim lngLength As Long\n    \n    basIsEmailValid = False\n    If VBA.Len(EmailAddr) = 0 Then Exit Function\n    If VBA.InStr(1, EmailAddr, \"@\", vbTextCompare) = 0 Then Exit Function\n\n    lngPosAtSymbol = GetCharPos(EmailAddr, \"@\", 1)\n    lngPosPeriod = GetCharPos(EmailAddr, \".\")\n    lngPosSpace = GetCharPos(EmailAddr, VBA.Space$(1), 1)\n    lngLength = VBA.Len(EmailAddr)\n    \n    \n    If (lngPosAtSymbol < 1) _\n        Or (lngPosAtSymbol = lngLength) _\n        Or (VBA.Mid$(EmailAddr, lngPosAtSymbol + 1, 1) = \".\") _\n        Or (VBA.Mid$(EmailAddr, lngPosAtSymbol - 1, 1) = \".\") _\n        Or (lngPosPeriod > lngLength - 2) _\n        Or (lngPosSpace > 0) Then\n        basIsEmailValid = False\n    Else\n        basIsEmailValid = True\n    End If\nEnd Function\n",
    "ItemText": null,
    "CreateDate": "2005-02-03T21:05:23.6430000",
    "EndDate": null,
    "ModificationDate": "2005-02-03T21:05:23.6430000",
    "DocumentId": "2076071641",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5400",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "EncryptionServices; Class Module",
    "SortOrdinal": null,
    "ItemChar": "Option Compare Database\n\nOption Explicit\n\nPrivate x1a0(9) As Long\nPrivate cle(17) As Long\nPrivate x1a2 As Long\n\nPrivate inter As Long\nPrivate res As Long\n\nPrivate ax As Long\nPrivate bx As Long\nPrivate cx As Long\nPrivate dx As Long\nPrivate si As Long\n\nPrivate tmp As Long\nPrivate i As Long\nPrivate c As Byte\n\nPrivate lngCounter1 As Long\n\nPrivate pKey As String\nPrivate pClearText As String\nPrivate pEncText As String\n\nPublic Property Get ClearText() As String\n    ClearText = pClearText\nEnd Property\n\nPublic Property Let ClearText(ByVal str As String)\n    pClearText = str\nEnd Property\n\nPublic Property Get EncryptedText() As String\n    EncryptedText = pEncText\nEnd Property\n\nPublic Property Let EncryptedText(ByVal str As String)\n    pEncText = str\nEnd Property\n\nPublic Property Get Key() As String\n    Key = pKey\nEnd Property\n\nPublic Property Let Key(ByVal str As String)\n    pKey = VBA.Mid$(str, 1, 16)\nEnd Property\n\nPrivate Sub Class_Initialize()\n    pKey = vbNullString\n    pClearText = vbNullString\n    pEncText = vbNullString\nEnd Sub\n\nPrivate Sub Assemble()\n\n    x1a0(0) = ((cle(1) * 256) + cle(2)) Mod 65536\n    code\n    inter = res\n    \n    x1a0(1) = x1a0(0) Xor ((cle(3) * 256) + cle(4))\n    code\n    inter = inter Xor res\n    \n    x1a0(2) = x1a0(1) Xor ((cle(5) * 256) + cle(6))\n    code\n    inter = inter Xor res\n    \n    x1a0(3) = x1a0(2) Xor ((cle(7) * 256) + cle(8))\n    code\n    inter = inter Xor res\n    \n    x1a0(4) = x1a0(3) Xor ((cle(9) * 256) + cle(10))\n    code\n    inter = inter Xor res\n    \n    x1a0(5) = x1a0(4) Xor ((cle(11) * 256) + cle(12))\n    code\n    inter = inter Xor res\n    \n    x1a0(6) = x1a0(5) Xor ((cle(13) * 256) + cle(14))\n    code\n    inter = inter Xor res\n    \n    x1a0(7) = x1a0(6) Xor ((cle(15) * 256) + cle(16))\n    code\n    inter = inter Xor res\n    \n    i = 0\n\nEnd Sub\n\nPrivate Sub code()\n    \n    dx = (x1a2 + i) Mod 65536\n    ax = x1a0(i)\n    cx = &H15A\n    bx = &H4E35\n    \n    tmp = ax\n    ax = si\n    si = tmp\n    \n    tmp = ax\n    ax = dx\n    dx = tmp\n    \n    If (ax <> 0) Then\n    ax = (ax * bx) Mod 65536\n    End If\n    \n    tmp = ax\n    ax = cx\n    cx = tmp\n    \n    If (ax <> 0) Then\n    ax = (ax * si) Mod 65536\n    cx = (ax + cx) Mod 65536\n    End If\n    \n    tmp = ax\n    ax = si\n    si = tmp\n    ax = (ax * bx) Mod 65536\n    dx = (cx + dx) Mod 65536\n    \n    ax = ax + 1\n    \n    x1a2 = dx\n    x1a0(i) = ax\n    \n    res = ax Xor dx\n    i = i + 1\n\nEnd Sub\n\nPublic Sub Encrypt()\n    Dim champ1 As String, lngchamp1 As Long\n    Dim cfc, cfd, compte, c, d, e\n\n    pEncText = vbNullString\n\n    si = 0\n    x1a2 = 0\n    i = 0\n\n    For lngCounter1 = 1 To 16\n    cle(lngCounter1) = 0\n    Next lngCounter1\n\n    champ1 = pKey\n    lngchamp1 = Len(champ1)\n\n    For lngCounter1 = 1 To lngchamp1\n    cle(lngCounter1) = Asc(Mid(champ1, lngCounter1, 1))\n    Next lngCounter1\n\n    champ1 = pClearText\n    lngchamp1 = Len(champ1)\n    For lngCounter1 = 1 To lngchamp1\n    c = Asc(Mid(champ1, lngCounter1, 1))\n\n    Assemble\n\n    cfc = (((inter / 256) * 256) - (inter Mod 256)) / 256\n    cfd = inter Mod 256\n\n    For compte = 1 To 16\n\n    cle(compte) = cle(compte) Xor c\n\n    Next compte\n\n    c = c Xor (cfc Xor cfd)\n\n    d = (((c / 16) * 16) - (c Mod 16)) / 16\n    e = c Mod 16\n\n    pEncText = pEncText + Chr$(&H61 + d)\n    ' d+&h61 give one letter range from a to p for the 4 high bits of c\n    pEncText = pEncText + Chr$(&H61 + e)\n    ' e+&h61 give one letter range from a to p for the 4 low bits of c\n\n    Next lngCounter1\n\nEnd Sub\n\nPublic Sub Decrypt()\n    Dim champ1 As String, lngchamp1 As Long\n    Dim cfc, cfd, compte, c, d, e\n\n    pClearText = vbNullString\n\n    si = 0\n    x1a2 = 0\n    i = 0\n\n    For lngCounter1 = 1 To 16\n    cle(lngCounter1) = 0\n    Next lngCounter1\n\n    champ1 = pKey\n    lngchamp1 = Len(champ1)\n\n    For lngCounter1 = 1 To lngchamp1\n    cle(lngCounter1) = Asc(Mid(champ1, lngCounter1, 1))\n    Next lngCounter1\n\n    champ1 = pEncText\n    lngchamp1 = Len(champ1)\n\n    For lngCounter1 = 1 To lngchamp1\n\n    d = Asc(Mid(champ1, lngCounter1, 1))\n    If (d - &H61) >= 0 Then\n    d = d - &H61  ' to transform the letter to the 4 high bits of c\n    If (d >= 0) And (d <= 15) Then\n    d = d * 16\n    End If\n    End If\n    If (lngCounter1 <> lngchamp1) Then\n    lngCounter1 = lngCounter1 + 1\n    End If\n    e = Asc(Mid(champ1, lngCounter1, 1))\n    If (e - &H61) >= 0 Then\n    e = e - &H61 ' to transform the letter to the 4 low bits of c\n    If (e >= 0) And (e <= 15) Then\n    c = d + e\n    End If\n    End If\n\n    Assemble\n\n    cfc = (((inter / 256) * 256) - (inter Mod 256)) / 256\n    cfd = inter Mod 256\n\n    c = c Xor (cfc Xor cfd)\n\n    For compte = 1 To 16\n\n    cle(compte) = cle(compte) Xor c\n\n    Next compte\n\n    pClearText = pClearText + Chr$(c)\n\n    Next lngCounter1\nEnd Sub\n",
    "ItemText": null,
    "CreateDate": "2005-02-03T21:09:12.0630000",
    "EndDate": null,
    "ModificationDate": "2005-02-03T21:09:12.0630000",
    "DocumentId": "2076071642",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5401",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "DAZ Studio 0.9.7.8: Merging DSB Files with a Scene File; DAZ|Script File",
    "SortOrdinal": null,
    "ItemChar": "Evidently, Pose, Material, Light and Camera presets (saved in DSB files) can be merged with a scene with the File > Merge... command.\n\nDSB files can be loaded in the Content pane (under Edit > Preferences... > Directories > DAZ|Studio Content Directories > Add...) but this merge command is an alternative.\n\nFor Pose presets, remember to select the object in the scene first before saving/applying the Preset. Otherwise nothing will happen. The relevant error messages have not been implemented yet!\n\nThere is no official DAZ documentation seen by me yet on this topic.",
    "ItemText": null,
    "CreateDate": "2005-02-05T10:20:02.5470000",
    "EndDate": null,
    "ModificationDate": "2005-02-05T10:20:02.5470000",
    "DocumentId": "2076071643",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5402",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Word 2003 VBA Code: Emergency Repair Routines for Schema Violations; RepairAttributeViolations()",
    "SortOrdinal": null,
    "ItemChar": "Public Sub RepairAttributeViolations(ByVal NodeBaseName As String, _\n    BadAttrBaseName As String, NewAttrBaseName As String)\n    '\n    'Fixes attribute-level schema violation problem\n    'when schema files are updated or replaced.\n    '\n    Dim nodes As Word.XMLNodes, node As Word.XMLNode, attr As Word.XMLNode\n    Dim newAttr As Word.XMLNode\n    \n    Dim strXPath As String, strAlias As String\n    \n    strAlias = \"xmlns:x='\" & XHTML_NAMESPACE_URI & \"'\"\n    strXPath = \"//x:\" & NodeBaseName\n    \n    Set nodes = ActiveDocument.SelectNodes(strXPath, strAlias)\n\n    For Each node In nodes\n        For Each attr In node.Attributes\n            Select Case attr.BaseName\n                Case BadAttrBaseName\n                    Set newAttr = _\n                        node.Attributes.Add(NewAttrBaseName, vbNullString)\n                    \n                    newAttr.NodeValue = attr.NodeValue\n                    Call attr.Delete\n            \n            End Select\n        Next\n    Next\nEnd Sub\n\nSub tmp()\n    '\n    'Copy the correct img element attributes from oldDoc to newDoc.\n    '\n    Dim oldDoc As Word.Document\n    Dim newDoc As Word.Document\n    \n    Dim oldNodes As Word.XMLNodes, newNodes As Word.XMLNodes\n    Dim node As Word.XMLNode, newNode As Word.XMLNode\n    Dim attr As Word.XMLNode, newAttr As Word.XMLNode, i As Long\n    \n    Dim strXPath As String, strAlias As String\n    \n    strAlias = \"xmlns:x='\" & XHTML_NAMESPACE_URI & \"'\"\n    strXPath = \"//x:img\"\n    \n    Set oldDoc = Application.Documents(1)\n    Set newDoc = Application.Documents(2)\n\n    Set oldNodes = oldDoc.SelectNodes(strXPath, strAlias)\n    Set newNodes = newDoc.SelectNodes(strXPath, strAlias)\n\n    For i = 1 To oldNodes.Count\n        For Each attr In oldNodes(i).Attributes\n            Select Case attr.BaseName\n                Case \"alt\"\n                    Set newNode = newNodes(i)\n                    Set newAttr = _\n                        newNode.Attributes.Add(\"alt\", vbNullString)\n                    newAttr.NodeValue = attr.NodeValue\n            \n                Case \"height\"\n                    Set newNode = newNodes(i)\n                    Set newAttr = _\n                        newNode.Attributes.Add(\"height\", vbNullString)\n                    newAttr.NodeValue = attr.NodeValue\n            \n                Case \"src\"\n                    Set newNode = newNodes(i)\n                    Set newAttr = _\n                        newNode.Attributes.Add(\"src\", vbNullString)\n                    newAttr.NodeValue = attr.NodeValue\n            \n                Case \"style\"\n                    Set newNode = newNodes(i)\n                    Set newAttr = _\n                        newNode.Attributes.Add(\"style\", vbNullString)\n                    newAttr.NodeValue = attr.NodeValue\n            \n                Case \"width\"\n                    Set newNode = newNodes(i)\n                    Set newAttr = _\n                        newNode.Attributes.Add(\"width\", vbNullString)\n                    newAttr.NodeValue = attr.NodeValue\n            End Select\n        Next\n    Next\nEnd Sub\n\nPrivate Sub tmp2()\n    '\n    'Delete incorrect attributes from img elements.\n    '\n    Dim nodes As Word.XMLNodes, node As Word.XMLNode, attr As Word.XMLNode\n    Dim newAttr As Word.XMLNode\n    \n    Dim strXPath As String, strAlias As String\n    \n    strAlias = \"xmlns:x='\" & XHTML_NAMESPACE_URI & \"'\"\n    strXPath = \"//x:img\"\n    \n    Set nodes = ActiveDocument.SelectNodes(strXPath, strAlias)\n\n    For Each node In nodes\n        For Each attr In node.Attributes\n            Select Case attr.BaseName\n                Case \"shape\"\n                    Call attr.Delete\n            End Select\n        Next\n    Next\nEnd Sub\n",
    "ItemText": null,
    "CreateDate": "2005-02-12T01:21:57.8330000",
    "EndDate": null,
    "ModificationDate": "2005-02-12T01:21:57.8330000",
    "DocumentId": "2076071644",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5403",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Web Service Exception: \"The type System.Collections.Hashtable is not supported because it implements IDictionary.\"; System.NotSupportedException",
    "SortOrdinal": null,
    "ItemChar": "Over two years ago, Dare Obasanjo explained to us why an ASMX exception can occur when a type implements IDictionary. In \"XML Serialization in the .NET Framework\" Dare writes, \"The XmlSerializer cannot process classes implementing the IDictionary interface. This was partly due to schedule constraints and partly due to the fact that a hashtable does not have a counterpart in the XSD type system. The only solution is to implement a custom hashtable that does not implement the IDictionary interface.\" The rest of this article, as of this writing, is here:\n\n    http://msdn.microsoft.com/library/en-us/dnexxml/html/xml01202003.asp\n\nUsing the [NonSerialized()] attribute to hide members that cannot be serialized does not appear to avoid this problem.",
    "ItemText": null,
    "CreateDate": "2005-02-13T21:07:58.7130000",
    "EndDate": null,
    "ModificationDate": "2005-02-13T21:07:58.7130000",
    "DocumentId": "2076071645",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5404",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Access Data Project PROBLEM: \"The stored procedure executed successfully but did not return records.\" Error When Opening a Table in DataSheet View",
    "SortOrdinal": null,
    "ItemChar": "When opening a SQL Server table in DataSheet View from an ADP file, the following error message might appear:\n\n    \"The stored procedure executed successfully but did not return records.\"\n\nThis problem is likely to be caused by an invalid SQL statement stored in an Extended SQL Server property called MS_RowSource assigned to the column of one of the tables in the project. This property can be viewed, edited or removed by the SQL Query Analyzer. For more information see MSDN article \"Extended Properties in SQL Server 2000\" by Mike Gunderloy at:\n\n    http://msdn.microsoft.com/library/en-us/dnsqlpro02/html/sql02a10.asp\n\nSee also:\n\n    \"Using Extended Properties on Database Objects\"\n    http://msdn.microsoft.com/library/en-us/createdb/cm_8_des_08_7qb7.asp\n\n    \"Using SQL Server 2000 Extended Properties\"\n    http://developer.com/db/article.php/10920_3361751_2",
    "ItemText": null,
    "CreateDate": "2005-02-14T13:55:42.1800000",
    "EndDate": null,
    "ModificationDate": "2005-02-14T13:55:42.1800000",
    "DocumentId": "2076071646",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5405",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "XSLT Markup: The Default Markup for HTML Output for an XSL Style Sheet Used in Visual Studio.net for HTML Intellisense Support",
    "SortOrdinal": null,
    "ItemChar": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<xsl:stylesheet\n    version=\"1.0\"\n    xmlns=\"http://schemas.microsoft.com/intellisense/ie5\"\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n\n    <xsl:output method=\"html\" />\n\n    <xsl:template match=\"/\">\n        <!--\n            Your XSL can start here.\n            And remember that http://schemas.microsoft.com/intellisense/ie5\n            can produce mal-formed XML!\n        -->\n    </xsl:template>\n\n</xsl:stylesheet>\n",
    "ItemText": null,
    "CreateDate": "2005-02-23T14:53:45.8470000",
    "EndDate": null,
    "ModificationDate": "2005-02-23T14:53:45.8470000",
    "DocumentId": "2076071647",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5406",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "TIMEKABOX System and Hardware Notes",
    "SortOrdinal": null,
    "ItemChar": "x",
    "ItemText": "x",
    "CreateDate": "2005-03-09T02:00:01.0670000",
    "EndDate": null,
    "ModificationDate": "2005-03-09T02:00:01.0670000",
    "DocumentId": "2076071652",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5407",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET Code: A Quick and Dirty Way to Make Cookies That Never Expire",
    "SortOrdinal": null,
    "ItemChar": "The following takes advantage of the System.DateTime.MaxValue property, making sure that your cookie will not expire for a large time:\n\n    // Create a cookie.\n    HttpCookie cookUPrefs = new HttpCookie(\"UPrefs\");\n    cookUPrefs.Value = \"English\";\n    cookUPrefs.Expires = System.DateTime.MaxValue;\n\nBy the way, removing cookies can also involve System.DateTime static members:\n\n    // Delete the cookie by setting its expiration.\n    Response.Cookies[\"UPrefs\"].Expires = System.DateTime.Now;\n",
    "ItemText": null,
    "CreateDate": "2005-03-15T14:29:31.9970000",
    "EndDate": null,
    "ModificationDate": "2005-03-15T14:29:31.9970000",
    "DocumentId": "2076071653",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5408",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about Building Events in C#",
    "SortOrdinal": null,
    "ItemChar": "Just remember the following:\n\n* An event must be of a delegate type\n\n* A delegate may require custom event arguments of a programmer-defined type\n\nSo we see three things to consider when building events: (i) the declaration of the event; (ii) the declaration of the delegate on which the event depends; (iii) the definition of any event arguments specified in the delegate declaration.\n\nFor more on this, see \"Events In C#\" by Sanju:\n\n    http://www.csharphelp.com/archives/archive253.html",
    "ItemText": null,
    "CreateDate": "2005-03-15T14:42:36.5230000",
    "EndDate": null,
    "ModificationDate": "2005-03-15T14:42:36.5230000",
    "DocumentId": "2076071654",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5409",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flash MX ActionScript 1.0/2.0: Avoid the use of _root",
    "SortOrdinal": null,
    "ItemChar": "According to the documentation, \"Use this, this._parent, or _parent keywords rather than _root, depending on where your ActionScript is located.\" This allows movies to work correctly when they are loaded by other movies. For more information please see:\n\n    http://livedocs.macromedia.com/flash/mx2004/\n        main_7_2/wwhelp/wwhimpl/common/html/wwhelp.htm?\n            context=Flash_MX_2004&file=00000846.html",
    "ItemText": null,
    "CreateDate": "2005-03-17T00:47:01.0800000",
    "EndDate": null,
    "ModificationDate": "2005-03-17T00:47:01.0800000",
    "DocumentId": "2076071655",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5410",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Adobe Acrobat 4.x: Legendary Command Line Arguments; Using Command Lines with Acrobat and Acrobat Reader under Windows",
    "SortOrdinal": null,
    "ItemChar": "Using Command Lines with Acrobat and Acrobat Reader under Windows\n\nThese are unsupported command lines, but have worked for some developers. There is no documentation for these commands other than what is listed below. You can display and print a PDF file using command lines with Acrobat and Acrobat Reader.\n\nAcroRd32.exe filename - Executes the Reader and displays a file.\nAcroRd32.exe /p filename - Executes the Reader and prints a file.\nAcroRd32.exe /t path printername drivername portname - Initiates Acrobat Reader, prints a file while suppressing the Acrobat print dialog box, then terminates Reader.\n\nThe four parameters of the /t option evaluate to path, printername, drivername, and portname (all strings).\n\nprintername - The name of your printer.\n\ndrivername - Your printer driver's name. Whatever appears in the Driver Used box when you view your printer's properties.\n\nportname - The printer's port. portname cannot contain any \"/\" characters; if it does, output is routed to the default port for that printer.\n\nIf using Acrobat, substitute Acrobat.exe in place of AcroRd32.exe in the command lines. ",
    "ItemText": null,
    "CreateDate": "2005-03-17T18:11:23.2430000",
    "EndDate": null,
    "ModificationDate": "2005-03-17T18:11:23.2430000",
    "DocumentId": "2076071656",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5411",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about Delegates in C#",
    "SortOrdinal": null,
    "ItemChar": "A delegate acts on behalf of a method. It is the representative of this method. The delegate below represents all methods that return a Boolean and have a single argument of type Integer:\n\n    delegate bool MathDelegate(int x);\n\nTo demonstrate this generality, we can create a void method that takes two arguments, the delegate itself and its single argument:\n\n    void AboutNumber(MathDelegate Func, int x)\n    {\n        if (Func(x)) //Invoke the delegate.\n            Response.Write(\" is \");\n        else\n            Response.Write(\" is not \");\n    }\n\nNow AboutNumber() can run all of the following methods:\n\n    bool IsEven(int x) \n    {\n        if (x % 2 == 0) \n            return true;\n        else\n            return false;\n    }\n\n    bool IsPrime(int x)\n    {\n        for(int i = 2; i > (x /2); i++)\n            if (x % i == 0) \n                return true;                                        \n            return false;\n    }\n\nSo, because of delegates a variable number of methods can be funneled through one method.",
    "ItemText": null,
    "CreateDate": "2005-03-21T15:56:07.3800000",
    "EndDate": null,
    "ModificationDate": "2005-03-21T15:56:07.3800000",
    "DocumentId": "2076071657",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5412",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET: Flippant Remarks about View State vs. Session State",
    "SortOrdinal": null,
    "ItemChar": "Flippantly speaking, View State is Session State that does not timeout. It is independent of the server and, as Hilton Giesenow says, \"it uses up more bandwidth but less memory.\" Simultaneously, it is recognized on the server with the same design patterns for Session state.\n\nView State is serialized to the page requested per user and vanishes when the browser closes. See Hilton's Blog, \"ViewState vs Session State vs...\" here:\n\n    http://hiltong.blogspot.com/2004/11/viewstate-vs-session-state-vs.html",
    "ItemText": null,
    "CreateDate": "2005-03-22T17:09:01.7230000",
    "EndDate": null,
    "ModificationDate": "2005-03-22T17:09:01.7230000",
    "DocumentId": "2076071658",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5413",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The Microsoft.mshtml Namespace; Accessing the DHTML DOM from C#",
    "SortOrdinal": null,
    "ItemChar": "Martin Tracy wrote a three-page walkthrough for MSDN \"Walkthrough: Accessing the DHTML DOM from C#\" here:\n\n    http://msdn.microsoft.com/library/default.asp?\n        url=/library/en-us/dv_vstechart/html/\n            vsgrfWalkthroughAccessingDHTMLDOMFromC.asp\n\nThis article features the use of the Microsoft.mshtml namespace used to display Internet Explorer in a Windows Form via the COM-based Microsoft Web Browser control (AxSHDocVw). Simultaneously, there are a number of articles on CodeProject.com that also use AxSHDocVw but they do not use the Microsoft.mshtml namespace. These articles are recorded in the kintespace.com Blog here:\n\n    http://www.kintespace.com/rasxlog/index.php?p=84\n\nThese articles are unaware of the Microsoft.mshtml namespace; they feature designs that are quite complex in part because they depend on the use of the IDocHostUIHandler interface. It appears that this interface is used instead of the Microsoft.mshtml namespace. The guidance in the Martin Tracy article should be prioritized before the other articles.",
    "ItemText": null,
    "CreateDate": "2005-03-26T23:33:49.9130000",
    "EndDate": null,
    "ModificationDate": "2005-03-26T23:33:49.9130000",
    "DocumentId": "2076071659",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5414",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL Code: Adding/Refreshing Login and User Metadata; CreateUsers.sql; Troubleshooting Orphaned Users",
    "SortOrdinal": null,
    "ItemChar": "/*\n\nThis script is inspired by two MS KB articles:\n\n\"PRB: 'Troubleshooting Orphaned Users' Topic in Books Online is Incomplete\"\n\n    http://support.microsoft.com/kb/274188\n\nand\n\n\"HOW TO: Resolve Permission Issues When You Move a Database Between Servers That Are Running SQL Server\"\n\n    http://support.microsoft.com/kb/240872\n\nThese articles remind us that there is difference between a \"login\" (defined at the server level) and a \"user\" (defined at the database level). The login name and the user name are often the same and this can lull us into the assumption that that a login and a user are the same.\n\nA login and a user are linked by a server-specific, security identifier (SID). When a database is moved to a new server (or removed and restored to the same server) this link can be undefined (or broken). This script attempts to define/repair this link.\n\n*/\n--Server level:\nUSE master\nIF NOT EXISTS(SELECT * FROM sysxlogins WHERE name = 'myLogin')\nBEGIN\n    EXECUTE sp_addlogin @loginame='myLogin',@passwd='mYp1wd',@defdb='myDb'\nEND\n\n-- Database level:\nUSE myDb\n\nIF NOT EXISTS(SELECT * FROM sysusers WHERE name = 'myLogin')\nBEGIN\n    EXECUTE sp_grantdbaccess 'myLogin'\n    EXECUTE sp_addrolemember 'db_datareader','myLogin'\n    EXECUTE sp_addrolemember 'db_datawriter','myLogin'\n    EXECUTE sp_addrolemember 'dbWebSolutionsUsers','myLogin'\nEND\nBEGIN\n    EXECUTE sp_change_users_login 'update_one','myLogin','myLogin'\nEND\n",
    "ItemText": null,
    "CreateDate": "2005-03-27T09:11:45.2070000",
    "EndDate": null,
    "ModificationDate": "2005-03-27T09:11:45.2070000",
    "DocumentId": "2076071660",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5415",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 4, Lesson 1; Using Controls",
    "SortOrdinal": null,
    "ItemChar": "Lesson 1: Using Controls\n\nThis lesson really begins to examine ASP.NET 1.X technology. Controls are the centerpiece of this technology. The first sentence of this lesson says, \"Controls are the tools for all the tasks you perform on a Web form.\"\n\nThere are two ways to arrange controls on a Web form, Grid layout and Flow layout. There are two types of controls, Server controls and HTML controls.\n\n* \"Because HTML controls have a one-two-one correspondence with standard HTML elements, they provide more direct control over what appears on a page.\"\n\nHTML controls are more efficient than Server controls when using data binding. \"...it's more efficient not to maintain state information for bound controls.\" This reinforces the opinion here that HTML controls should have precedence over Server controls in Web forms design.\n\n* \"Server controls provide overlapping functionality.\"\n\nFor some reason, the Literal control corresponds with the Horizontal Rule HTML control in Table 4-2. The opinion here is that Literal control along with the Placeholder control are the two most useful Server controls. This begs the question, 'Why is the Literal control omitted from the \"Working with Text\" section?'\n\n* \"Use the ListBox, DropDownList, and Table controls for simple dynamic tables and lists. Use the DataGrid, DataList, and Repeater controls for complex tables and lists that contain other controls or are bound to data.\"\n\nAdd static items to the ListBox, DropDownList and Table controls with the Collection Editor from the Properties pane at design time. Add items at runtime via the Add() method of the Items collection of the ListBox and DropDownList controls---and the Add() methods of the Rows and Cells collections of a Table control.\n\n* \"The Table control, however, will automatically store data only for the table cells created at design time in the Collection Editor.\"\n\nThis is the first example in the book that demonstrates the limitations of ViewState because, evidently, the Table control Rows and Cells collections cannot be serialized and stored between requests (probably for performance reasons). In fact, the RebuildTable() routine in the code samples is a design pattern for manually manipulating ViewState to maintain state for controls that are not adequately supported.\n\n* \"Use the SelectedItem property to get the current selection from a list.\"\n\nWhen an Item is not selected, the SelectedItem property returns null (or Nothing in VB.NET).\n\n* \"Controls can get their values from any data source in your application. Data sources can be any public data.\"\n\nAt design time data bindings can be defined in the DataBindings dialog box. The Custom binding expression option is used quite frequently and should naturally lead to the subject \"Data Binding Expression Syntax\" covered here:\n\n    http://msdn.microsoft.com/\n        library/en-us/cpgenref/html/\n            cpconDatabindingExpressionSyntax.asp\n\nThis in turn will lead to inline blocks like this:\n\n    <asp:DropDownList id=\"DropDownList1\" runat=\"server\" DataSource=\"<%# arrData %>\">\n    </asp:DropDownList>\n\nwhere the delcared attribute DataSource=\"<%# arrData %>\" is rendered in HTML like this:\n\n    <select name=\"DropDownList1\" id=\"DropDownList1\">\n        <option value=\"This\">This</option>\n        <option value=\"that\">that</option>\n        <option value=\"and\">and</option>\n        <option value=\"the\">the</option>\n        <option value=\"other\">other</option>\n    </select>\n\nKeep in mind that the same declaration can cause this to render:\n\n    <select name=\"DropDownList1\" id=\"DropDownList1\">\n    </select>\n\nThis happens when the DataBind() method is not called before the Web form loads.\n\n* \"When you use data binding with a server control, you can turn off state management for that control.\"\n\nThis implies that using data binding and ViewState for a control reduces performance and can be redundant. However, in the following lines of code, SelectedIndex will always be -1 when ViewState is turned off:\n\n    if(this.IsPostBack)\n    {\n        int idx = this.DropDownList1.SelectedIndex;\n        this.DataBind();\n        this.DropDownList1.SelectedIndex = idx;\n    }\n    else\n        this.DataBind();\n\nThe conclusion can be turn ViewState off when using data bound controls to display reports but leave it on for round-tripping (required for many editing scenarios).\n\n* \"A template is a set of HTML elements or server controls, or both, that will be repeated for each data item in the control.\"\n\nWhat resonates here is the wording, \"a template is a declaration of HTML formatting\" that will be repeated for each data item. This reminds me that Visual Studio saves my template \"drawing\" as ASP.NET tags in the HTML source. This is a superior alterative to the code auto-generated and hidden in a region in Windows forms applications.\n\n* \"The Button, LinkButton, and ImageButton server controls all trigger postback events to perform commands.\"\n\nThis is done through code-generating hookups to Javascript files installed by ASP.NET under a folder called \\aspnet_client.\n\n* \"Using the Button and LinkButton controls' Click event procedure is straightforward. The ImageButton control provides an additional capability.\"\n\nYes. And this capability is pretty cool! A server-side image map handler can be set up with the ImageButton control because System.Web.UI.ImageClickEventArgs has X and Y properties to capture mouse clicks. See:\n\n    http://msdn.microsoft.com/library/\n        en-us/cpgenref/html/cpconimagebuttonwebcontrol.asp\n\n* \"Use the RadioButton, RadioButtonList, Checkbox, or CheckboxList controls to get Boolean value settings from the user.\"\n\nThe RadioButtonList and CheckboxList controls solve the problem of toggling among a group of controls. Optionally, the RadioButton control has a GroupName property to allow toggling among a non-columnar list of radio buttons. The Checkbox control does not have such a property for grouping.\n\n* \"There are many ways to display graphics on a Web form...\"\n\nThe Background property of a Web form, the Image, ImageButton and the XML-driven AdRotator controls handle displaying graphics.\n\n* \"Use the Panel control to group controls on a Web form.\"\n\nThis control solves the problem of hiding and showing groups of controls (as it renders as the HTML div element). It only supports Flow layout.\n\n* \"Use the Calendar control to get or display date information.\"\n\nA pleasant surprise in this server control is its ability to select multiple dates. The following code sample run during the SelectionChanged event handles both single and multiple date selections:\n\n    if (calSource.SelectedDates.Count == 1)\n    // If one date is selected, display it.\n    lblDate.Text = \"Selected date: \" + calSource.SelectedDate;\n    else\n    // If multiple dates are selected, display them.\n    lblDate.Text = String.Format(\"Selected dates: {0} to {1}.\",\n            calSource.SelectedDates[0],\n            calSource.SelectedDates[calSource.SelectedDates.Count - 1]);\n\n* \"The File Field HTML control is actually a Text Field control and a Submit Button HTML control bound together.\"\n\nThis is a composite HTML control---not a server control. Trying and catching a System.UnauthorizedAccessException exception is good design. The HttpPostedFile object of the HtmlInputFile.PostedFile property has a ContentLength property to check the size of a file before saving it to server disk.\n",
    "ItemText": null,
    "CreateDate": "2005-04-08T16:47:30.6830000",
    "EndDate": null,
    "ModificationDate": "2005-04-08T16:47:30.6830000",
    "DocumentId": "2076071662",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5416",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Office System PROBLEM: \"The custom dictionary is full. The word was not added.\" Error; ANSI Custom Dictionaries",
    "SortOrdinal": null,
    "ItemChar": "The error message \"The custom dictionary is full. The word was not added.\" is not always due to custom dictionary \"corruption\" problems covered in MSKB article 224035 here:\n\n    http://support.microsoft.com/kb/224035\n\nThis error message can appear when you try to add a word to the custom dictionary file that contains Unicode characters and the custom dictionary text file (usually CUSTOM.DIC) is saved in ANSI format.\n\nTo correct this problem, save the custom dictionary file in Unicode format in Notepad.",
    "ItemText": null,
    "CreateDate": "2005-04-09T22:48:59.0300000",
    "EndDate": null,
    "ModificationDate": "2005-04-09T22:48:59.0300000",
    "DocumentId": "2076071664",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5417",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 4, Lesson 2; Using Validation",
    "SortOrdinal": null,
    "ItemChar": "Lesson 2: Using Validation\n\nThe purpose of this lesson is to detail the validation controls in ASP.NET.\n\n* \"Client-side validation is provided by a JScript library named WebUIValidation.js, which is downloaded separately to the client.\"\n\nIt is important to note that the client-side validation features in ASP.NET work only in Microsoft Internet Explorer version 4.0 and later. This is why validation controls automatically provide server-side validation. (Incidentally, the sample Web form Validation1.aspx uses a call to Server.Transfer() that breaks the automatic server-side validation functionality.)\n\nThe validation controls: RequiredFieldValidator, CompareValidator, RangeValidator, RegularExpressionValidator, CustomValidator and ValidationSummary.\n\n* \"A server control can have multiple validators.\"\n\nThe lesson details a problem (in Table 4-7) with the CompareValidator control that can be solved by combining it with a RequiredFieldValidator control.\n\n* \"To let the user cancel validation, provide a Submit HTML control that sets the Page_ValidationActive attribute...\"\n\nClicking on this Submit HTML control will cause a postback and in the Page_Load event procedure below, the variable bln will be false:\n\n    bool bln;\n    if(this.IsPostBack)\n    {\n        this.Validate();\n        bln = this.IsValid;\n    }\n\nThere is a typo in this lesson stating effectively that bln would be true.\n\n* \"Customizing Validation... On the server side, place your validation code in the ServerValidate event procedure... To provide client-side validation, specify a validation script in the CustomValidator control's ClientValidationFunction property.\"\n\nThis may be one of very few places where an external JavaScript file could seamlessly integrate with an ASP.NET Web form design pattern.",
    "ItemText": null,
    "CreateDate": "2005-04-11T23:16:31.9330000",
    "EndDate": null,
    "ModificationDate": "2005-04-11T23:16:31.9330000",
    "DocumentId": "2076071665",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5418",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2003: Flippant Remarks about Network Time Servers; NTP",
    "SortOrdinal": null,
    "ItemChar": "The System event log can show this W32Time error: \"The time provider NtpClient is configured to acquire time from one or more time sources, however none of the sources are currently accessible.\" In the \"good old\" days of the innocent Internet you could run this command and call it day:\n\n    net time /setsntp:tock.usno.navy.mil\n\nHowever, times have changed (pun not really inended) and the USNO NTP Network Time Servers Web page (http://tycho.usno.navy.mil/ntp.html) clearly states that access to these time servers limited. Lowly servers like mine are excluded.\n\nThis is understandable and recoverable. According to ntp.isc.org there are \"open access\" time servers available for us \"end-users.\" For details see:\n\n    http://ntp.isc.org/bin/view/Servers/NTPPoolServers\n\nAfter all these years, it follows that our net time command is now:\n\n    net time /setsntp:pool.ntp.org\n\nOne point of entry for more details about this matter with regard to Windows Server 2003, is MSKB article 816042 \"How to configure an authoritative time server in Windows Server 2003\" at:\n\n    http://support.microsoft.com/kb/816042/\n\nSee also \"Introduction to NTP\" here:\n\n    http://www.akadia.com/services/ntp_synchronize.html",
    "ItemText": null,
    "CreateDate": "2005-04-11T19:05:25.9400000",
    "EndDate": null,
    "ModificationDate": "2005-04-11T19:05:25.9400000",
    "DocumentId": "2076071666",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5419",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 4, Lesson 3; Navigating Between Forms",
    "SortOrdinal": null,
    "ItemChar": "Lesson 3: Navigating Between Forms\n\nThe purpose of this lesson is to detail the ways Web forms are linked together through client-side hyperlinking (with the Hyperlink control and the window.open() script method) and server-side HTTP-context-switching (with Response.Redirect(), Server.Transfer() and Server.Execute() methods).\n\n* \"Hyperlink server controls respond to user click events by displaying the page specified in the control's NavigateURL property.\"\n\nHyperlink server controls do not fire server-side events. This lesson offers LinkButton or ImageButton controls as a substitute for the Hyperlink control when server-side events are needed. However, this replacement implies that any equivalent to the NavigateURL property will be lost when using the LinkButton or ImageButton controls. The lesson suggests that using Response.Redirect() with the LinkButton or ImageButton controls is an adequate workaround to this design.\n\n* \"Setting the Transfer method's preserveForm argument to True makes the form's QueryString, ViewState, and event procedure information available in the destination form... To be able to read one Web form's ViewState from another, you must first set the EnableViewStateMac attribute in the Web form's Page directive to False.\"\n\nThe lesson goes on to warn us that implementing this design pattern is a security risk as ViewState information is no longer hashed and is as human-readable as HTML form POSTDATA.\n\n* \"The Server object's Transfer() and Execute() methods work exclusively with Web forms. Trying to navigate to an HTML page using one of these methods results in a run-time error.\"\n\n* \"Use the Server object's Execute() method to process a second Web form without leaving the first Web form.\"\n\nThe Server.Execute() method treats an ASP.NET page like a static method returning void. By default any HTML output is added to the output of the calling Page. When the optional writer argument is used, the output is sent to a System.IO.StringWriter object.\n\nThe Server.Execute() method effectively combines the calling Web form to another \nWeb form. Any postbacks to the Web form being called will clear any postbacks in the calling Web form. So the lesson warns that, \"...combining Web forms is mainly useful when the second Web form does not contain controls that trigger postback events.\"",
    "ItemText": null,
    "CreateDate": "2005-04-12T12:45:33.8470000",
    "EndDate": null,
    "ModificationDate": "2005-04-12T12:45:33.8470000",
    "DocumentId": "2076071667",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5420",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP Code: Call to Amazon.com Web Service with fopen(); phpGetAmazon()",
    "SortOrdinal": null,
    "ItemChar": "function phpGetAmazon($ASIN){\n\n    $amazonAffiliateTag = '';\n    $amazonURI = '';\n    $filePointer = false;\n    $HTML = '';\n    $index = '';\n    $key = '';\n    $stream = '';\n    $streamline = '';\n    //This URI seems to work for books as well:\n    $uri = \"http://www.amazon.com/o/ASIN/\"\n        . \"{$ASIN}/ref=nosim/{$amazonAffiliateTag}\";\n    $values = '';\n\n    /*\n        Amazon.com refers to this search as\n        a \"light\" ASIN and ISBN search.\n        Up to 30 ASIN's can be used\n        in the light search but this function\n        currently returns only one product per call.\n    */\n\n    //Protocol, domain, path and start of query string:\n    $amazonURI = 'http://xml.amazon.com/onca/xml3?';\n\n    /*\n        Associate ID (replaces the\n        \"webservices-20\" tag in examples) and Developer ID:\n    */\n    $amazonURI .= \"t={$amazonAffiliateTag}&dev-t=999\";\n\n    //ASIN specifier:\n    $amazonURI .= \"&AsinSearch=\" . $ASIN;\n\n    //Specify light search type and XML format:\n    $amazonURI .= '&type=lite&f=xml';\n\n    //Call web service.\n    $filePointer = @fopen($amazonURI,'r'); \n    if($filePointer){\n        //xmldom stuff:\n        //return phpGetAmazonXML($stream);\n\n        while($streamline = fgets($filePointer,4096)) $stream .= $streamline;\n        fclose($filePointer);\n\n        $xml_parser = xml_parser_create(); \n        xml_parser_set_option($xml_parser,XML_OPTION_CASE_FOLDING,0);\n        xml_parse_into_struct($xml_parser,$stream,$values,$index); \n        xml_parser_free($xml_parser); \n\n        foreach ($index as $key=>$val) {\n            switch ($key) {\n                case 'ImageUrlMedium':\n                    $imageURL = $values[$val[0]]['value'];\n                break;\n\n                case 'OurPrice':\n                    $ourPrice = $values[$val[0]]['value'];\n                break;\n\n                case 'ProductName':\n                    $productName = $values[$val[0]]['value'];\n                break;\n            }\n        }\n        //Add name of product:\n        $HTML = \"<br><small><a class=\\\"amazonLink\\\" \"\n            . \"href=\\\"{$uri}\\\" target=\\\"_blank\\\">{$productName}</a></small>\";\n        //Add image:\n        $HTML = \"<a class=\\\"amazonLink\\\" href=\\\"{$uri}\\\" \"\n            . \"target=\\\"_blank\\\"><img class=\\\"main\\\" \"\n            . \"alt=\\\"Support this web site!\\\" border=\\\"8\\\" \"\n            . \"src=\\\"{$imageURL}\\\"></a>\\n\" . $HTML;\n\n        return $HTML;\n\n    } else return 'Web Service call failed.';\n}\n",
    "ItemText": null,
    "CreateDate": "2005-04-27T19:59:37.5970000",
    "EndDate": null,
    "ModificationDate": "2005-04-27T19:59:37.5970000",
    "DocumentId": "2076071668",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5421",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2000: Flippant Remarks about Renaming Databases",
    "SortOrdinal": null,
    "ItemChar": "Use the ALTER DATABASE t-SQL instead of the system stored procedure sp_renameDB. For SQL Server 2000, the ALTER DATABASE solution is an improvement over the system stored procedure (which can get into goofy 'exclusive locking errors'). One too many SQL Server MVPs confuse the new SQL 2005 features with the old SQL 2000 limitations. Google sees all and you beta-junkies in the newsgroups are no help!\n\nIn old SQL Server 2000, the ALTER DATABASE syntax is only useful for renaming the logical database and not the physical files on disk. The best way to handle the physical files is to grit teeth and create a new database.\n\nHere is a sketch of the ALTER DATABASE syntax:\n\n    ALTER DATABASE 'my_old_ass_dbname'\n    MODIFY NAME 'my_funky_fresh_dbname'",
    "ItemText": null,
    "CreateDate": "2005-04-28T13:05:33.0500000",
    "EndDate": null,
    "ModificationDate": "2005-04-28T13:05:33.0500000",
    "DocumentId": "2076071669",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5422",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Office System Word: Compacting Template Files with Many Lines of VBA Code; Template Bloat in .DOT Files",
    "SortOrdinal": null,
    "ItemChar": "",
    "ItemText": null,
    "CreateDate": "2005-05-02T00:08:00.4000000",
    "EndDate": null,
    "ModificationDate": "2005-05-02T00:08:00.4000000",
    "DocumentId": "2076071671",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5423",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 5, Lesson 1; Accessing Data with ADO.NET",
    "SortOrdinal": null,
    "ItemChar": "Lesson 1: Accessing Data with ADO.NET\n\nThe purpose of this lesson is to provide an overview of ADO.NET and suggest design patterns featuring ADO.NET in ASP.NET. The center of the ADO.NET 1.x universe is the DataSet and the strongly typed dataset, extending the DataSet class, which is generated automatically in Visual Studio .NET.\n\n* \"Visual Studio .NET provides access to databases through the set of tools and namespaces collectively referred to as Microsoft ADO.NET.\"\n\nThere are four data access layers in ADO.NET (in order of execution): the physical data store, the data provider (the connection and adapter), the data set and the data view. ADO.NET 1.x shipped with three data providers: OLEDB, SQL and Oracle.\n\n* \"In addition to these database connections, you can access XML files directly from data sets using the DataSet object's ReadXML and WriteXML methods.\"\n\nUnfortunately this feature is not explored in this lesson but will resurface in Chapter 7.\n\n* \"ADO.NET provides its objects, properties, and methods through the three namespaces...\"\n\nThese \"three\" namespaces are: System.Data, System.Data.SqlClient, System.Data.OracleClient and System.Data.OleDb. These three namespaces lead to the three steps of database access: define a connection to the physical data store, define a set of commands to adapt the physical data store into a DataSet object, execute the commands.\n\n* \"Invoking commands without first invoking the [Connection.]Open method implicitly opens and closes the connection with each request.\"\n\nNamely, this applies to the data adapters Fill() and Update() methods.\n\n* \"Add code to the Web form's Page_Load event procedure to fill the data set from the data adapter and to bind the data from the DataSet object to the control.\"\n\nThis quote suggests that it is best (or 'good') practice to call any DataBind() methods of Web form controls during the Page_Load event. This might be misleading when designing responses to postbacks (see below).\n\n* \"Turning off state information improves performance because the data in the DataGrid control does not have to be saved to the page's ViewState between requests.\"\n\nThe code sample in DesignModeSql.aspx worked as expected when EnableViewState was set to false on the DataGrid.\n\n* \"However, you'll often want to sort and filter data within the DataGrid control. To do that, you'll need to bind the DataGrid to the DataSet object's DataView property.\"\n\nThe code samples, by the way, remind us that that DataTable objects have a DefaultView property which may come in handy for runtime enjoyment of filtering and sorting. But for design time declarations, a DataView component is needed.\n\nIt may help to mention that the printed code sample that follows this quote is in error. The software code sample (in DesignModeSql.aspx.cs) clearly shows that a PreRender event procedure is required for designing a Sort command. This is because, during a sort postback, the Load event will fire first, then the Sort event procedure and finally the PreRender event procedure. By calling DataBind() during PreRender, the DataGrid object can display the sort applied to its DataView object.\n\n* \"The DataSet is the central object in ADO.NET... When you create connection, adapter, and data set objects in Design mode, you enable data typing for those objects... Type information for data objects comes from the XML Schema that Visual Studio generates when you create a data set in Design mode.\"\n\n* \"Use the Rows collection to add, change, or delete rows in the DataSet object's Table object.\"\n\n* \"To change a row in a data set, get a Row object from the table using the FindBy method and then make changes to the fields in the row...\"\n\nThere is no \"FindBy\" method in the DataSet object. The printed code sample clearly shows that methods with this prefix are generated automatically for the strongly typed dataset, extending the DataSet object. This is an impressive feature!\n\n* \"...the Update method is usually called from the Page_PreRender event procedure...\"\n\nThis quote is in line with the commentary mentioned earlier about the error found in the printed code sample. It follows that DataBind() and Update() methods for controls and datasets respectively is \"usually\" handled in the PreRender event procedure.\n\n* \"...generate InsertCommand, DeleteCommand, and UpdateCommand properties at run time...\"\n\nThese adapter object properties can be generated at run time with a command builder object: for the SQL Server provider, it's the SqlCommandBuilder object. All the command builder object needs is a SelectCommand object defined in the adapter, using a SQL SELECT statement. Very impressive!\n\nNote that the generated \"properties\" are not stored in the adapter object. Instead, the command builder object will listen for the adapter's RowUpdating event.\n\n* \"...you'll usually want to save data sets as Application, Session, or Cache variables so that you don't have to re-create them each time the form is displayed... The Cache object is uniquely useful when you're working with data sets because it allows you to specify and expiration for the data it contains.\"\n\nMore on the Cache object in Chapter 12.\n\n",
    "ItemText": null,
    "CreateDate": "2005-05-03T14:47:43.8170000",
    "EndDate": null,
    "ModificationDate": "2005-05-03T14:47:43.8170000",
    "DocumentId": "2076071672",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5424",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "tSQL Code: Example of OPENROWSET with Trusted Connection; NTLM",
    "SortOrdinal": null,
    "ItemChar": "SELECT\n    p.*\nFROM\n    OPENROWSET\n    (\n        'SQLOLEDB'\n    ,   'Trusted_Connection=yes;\n         Integrated Security=SSPI;\n         DataSource=MyServer;Initial_Catalog=pubs;'\n    ,   '\n         SELECT * FROM \n         pubs.dbo.authors\n         ORDER BY au_lname, au_fname'\n    ) AS p\n",
    "ItemText": null,
    "CreateDate": "2005-05-06T12:23:15.5870000",
    "EndDate": null,
    "ModificationDate": "2005-05-06T12:23:15.5870000",
    "DocumentId": "2076071673",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5425",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio Tools for Office: Flippant Remarks about Office System Word VSTO 1.x Projects",
    "SortOrdinal": null,
    "ItemChar": ">>>General:\n\nFor the sake of \"code access security\" put all code into one project. It seems like more of an installation headache to track more than one DLL file. I could be wrong about this but I don't have time to look into this problem. Security problems continue to plague Office and I am not going to get sucked into details that can be made obsolete in a matter of months.\n\n\n>>>Attached Templates:\n\nUnderstand quickly that the auto-generated _StartUp() code-behind Interop event procedure passes only document and application objects from the COM world of Office Word. This implies that the only way to gain access to the template of a document is through its AttachedTemplate property (which is a bit confusing when you are building a VSTO template project). As of this writing, only VB.NET supports the AttachedTemplate property:\n\n    Dim temp As Word.Template = Me.ThisDocument.AttachedTemplate\n\nThe undocumented equivalent line in C# is this:\n\n    Word.Template temp =\n        (Word.Template)this.thisDocument.get_AttachedTemplate();\n\nCarl Franklin would definitely call this C# line \"ugly.\" Note that thisDocument is set during the auto-generated _StartUp() code-behind Interop event procedure.\n\n\n>>>'Bad' MSDN Code:\n\nNow the VB version of the MSDN code sample has this block:\n\n    Private Sub ThisApplication_DocumentBeforeClose(ByVal Doc As Word.Document, _\n        ByRef Cancel As Boolean) Handles ThisApplication.DocumentBeforeClose\n        Cancel = False\n    End Sub\n\nThis effectively 'hides' the need to save changes in documents and templates automated by VSTO. For the programmer that is not comfortable with deciding to save a document or template on behalf of the end user, this revelation can be quite disturbing. This issue becomes known when the programmer tries to add something as simple as a CommandBar to a document or template.\n\n\n>>> CustomizationContext Property Overlooked:\n\nAs of this writing, VSTO 1.x code samples from MSDN betray an ignorance of the CustomizationContext property. Lack of knowledge of this property may cause the developer to save changes to NORMAL.DOT instead of the code-behind template or document. This can inadvertently make VSTO code behave very much like a macro virus. For Word MVP information about this matter please see:\n\n    http://www.word.mvps.org/faqs/macrosvba/AddMenu.htm.\n\n\n>>>Local Variable Woes:\n\nAccessing the enumerator in a Word tables collection (WordTables[i]) yields the 'expected' results (for the expectations of experienced Word VBA programmers). Using a local variable like this:\n\n    Word.Table tbl = WordTables[2];\n\nyields 'unexpected' results.",
    "ItemText": null,
    "CreateDate": "2005-05-18T16:57:34.6630000",
    "EndDate": null,
    "ModificationDate": "2005-05-18T16:57:34.6630000",
    "DocumentId": "2076071675",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5426",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "InfoPath: Fully Trusted Forms and Direct Connections to SQL Server; \"ADO Security Warning\" Errors",
    "SortOrdinal": null,
    "ItemChar": "By making your form fully trusted, you can avoid the annoying \"ADO Security Warning\" messages that suggest a communication problem among development teams at Microsoft. You can make your form Fully Trusted by selecting Tools > Form Options > Security. You will then see that you have to sign your form with a Digital Signature. This may be a show stopper but you can generate one just for your machine/domain with the Digital Certificate for VBA Projects tool. For more information about this tool please see:\n\n    http://support.microsoft.com/kb/q217221/\n\nand\n\n    \"Using SelfCert to Create Digital Certificates in a Network Environment\"\n    http://pubs.logicalexpressions.com/Pub0009/LPMArticle.asp?ID=194\n\nAfter you sign the form then go to Tools > Options > General > Security Options and check \"Allow fully trusted forms to have access to files and settings on my computer.\" This should stop ADO error messages but other security messages (especially ones from Internet Explorer) are still out there... lurking...\n",
    "ItemText": null,
    "CreateDate": "2005-05-19T15:37:03.9930000",
    "EndDate": null,
    "ModificationDate": "2005-05-19T15:37:03.9930000",
    "DocumentId": "2076071676",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5427",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 5, Lesson 2; Using Data Sets on Web Forms",
    "SortOrdinal": null,
    "ItemChar": "Lesson 2: Using Data Sets on Web Forms\n\nThe purpose of this lesson is to detail the easiest ways to use the DataGrid and DataList controls, to bind data to other controls such as the DropDownList control and to briefly explore executing commands directly against a data connection.\n\n* \"The simplest way to display a data set on a Web form is through a DataGrid control using data binding.\"\n\nThe Visual Studio Web forms designer provides an interactive, design-time way to declare DataGrid display and editing functionality. Creating Template columns with Button columns, using the DataGrid Property Builder is the first step.\n\n* \"At run time, the DropDownList control displays a list... The limitation here is that you can include only one value for the list control's DataText and DataValue properties.\"\n\nThis is one example of how the Visual Studio .NET 1.x designer depends on code for \"advanced\" functionality.\n\n* \"...you can perform commands directly on a database connection.\"\n\nThese three methods are available from the database connection object: ExecuteScalar(), ExecuteNonQuery() and ExecuteReader().\n\n* \"Because any command that executes on a database has at least some potential to fail, you should always use exception handling... Calling the connection's Close method from a Finally/finally exception-handling clause ensures that the database connection is closed before the code continues.\"\n\nFor performance reasons, catching a \"context sensitive\" exception like InvalidOperationException or SqlException is best practice over dropping down to an Exception catcher.\n\n* \"The ExecuteNonQuery method acts directly on the database connection---it does not go through a data adapter or a data set... you must update any data sets affected by those changes by calling the Fill method on the adapter.\"\n\n* \"Using ExecuteReader to create data reader objects provides better performance than creating a data set from a data adapter object, but it doesn't provide you with much flexibility... A reader object locks the database connection while it is executing, so you should call the reader object's Close method when you have finished getting records...\"",
    "ItemText": null,
    "CreateDate": "2005-05-23T14:06:51.7430000",
    "EndDate": null,
    "ModificationDate": "2005-05-23T14:06:51.7430000",
    "DocumentId": "2076071677",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5428",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 5, Lesson 3; Processing Transactions",
    "SortOrdinal": null,
    "ItemChar": "Lesson 3: Processing Transactions\n\nThe purpose of this lesson is to recognize the existence of functionality in the .NET framework that can be considered transactional. However, it is clear that \"real\" (distributed) transactions are covered only by COM+ Enterprise Services. So the transaction features of ADO.NET 1.x are confined to a single connection object. The .NET Framework 2.0 context introduces the System.Transactions namespace. For more information please see \"ADO.NET and System.Transactions\" by John Papa here:\n\n    http://msdn.microsoft.com/msdnmag/issues/05/02/DataPoints/default.aspx\n\n* \"Database programmers determine what database commands belong in a transaction by using the ACID test...\"\n\nACID stands for Atomic, Consistent, Isolated and Durable. For more details please see \"The ACID Test: A mini database tutorial for those that are interested...\" by John Parker here:\n\n    http://www.archwing.com/technet/technet_ACID.html\n\n* \"Transaction processing follows these steps: 1. Begin a transaction. 2. Process database commands. 3. Check for errors. 4. If errors occurred, restore the database to its state at the beginning of the transaction. If no errors occurred, commit the transaction to the database.\"\n\nADO.NET 1.x handles transactions implicitly and explicitly. DataSet methods Update(), RejectChanges() and AcceptChanges() imply transactional processing. Use of the SqlTransaction, OracleTransaction and OleDbTransaction objects explicitly handle transactions against one database connection. These transaction objects are obtained from the BeginTransaction() method of the connection object. Once the transaction object is obtained, the Commit() and Rollback() methods are used to design a transaction.\n\nCommand objects are associated with a connection. When a connection begins a transaction, all command objects referencing that connection must have their Transaction property set. An important quote from \"Best Practices for Using ADO.NET\" by Dennis Lu and Doug Rothaus: \"If the Command.Transaction property is not set to a Transaction that has been started for the associated Connection, the Command fails and an exception is thrown.\" For more information see:\n\n   http://msdn.microsoft.com/library/en-us/dnadonet/html/adonetbest.asp\n\n* \"The transaction object determines how concurrent changes to a database are handled through the IsolationLevel property.\"\n\n* \"SQL database connections provide one transaction capability that is unavailable for OLE database connections: the ability to create save points within a transaction.\"\n\n* \"Because transactions can span multiple Web forms, or even multiple components within a distributed application, ASP.NET provides a way for Web forms to work with MS DTC.\"\n\nThe Transaction attribute of the @Page directive starts a new transaction. The static methods of the System.EnterpriseServices.ContextUtil class are used to commit or abort MTS (or MS DTS) transactions in ASP.NET pages. These static methods are SetComplete() and SetAbort() (which correspond to Page events CommitTransaction() and AbortTransaction() respectively). For more information see \"MTS Transactions\" here:\n\n    http://samples.gotdotnet.com/quickstart/aspplus/doc/mtstransactions.aspx",
    "ItemText": null,
    "CreateDate": "2005-05-24T13:49:19.4070000",
    "EndDate": null,
    "ModificationDate": "2005-05-24T13:49:19.4070000",
    "DocumentId": "2076071678",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5429",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 6, Lesson 1; Using Exception Handling",
    "SortOrdinal": null,
    "ItemChar": "Lesson 1: Using Exception Handling\n\nThe purpose of this lesson is to introduce \"error\" or \"exception\" handling in ASP.NET.\n\n* \"Errors that are not dealt with in code are called unhandled exceptions... There are three approaches to handling exceptions in a Web application...\"\n\nThe three are: structured exception handling (SEH), error event procedures defined in the System.Web.UI.Page class and custom error pages declared in the @Page directive, its errorPage attribute.\n\n* \"You can combine approaches to effectively handle all possible exceptions within your application...\"\n\n* \"Use exception handling structures to enclose statements that access nonmemory resources, such as files and database connections.\"\n\nThe use of the term \"nonmemory resources\" sounds strange. What is more perhaps is to say that try/catch/finally blocks are useful when crossing \"boundaries\" or \"layers\" in an application.\n\n* \"Use the Finally/finally block to include statements that are always executed before leaving the exception-handling structure.\"\n\nThe classic example for the above is closing a database connection when trying to connect to an external data source (and calling its Dispose() method).\n\n* \"The Microsoft .NET Framework includes specific exception types with the individual .NET Framework classes. This means that there is no single, comprehensive list of exception types in the .NET documentation. Instead, you must use the Visual Studio .NET Exceptions dialog box to view specific exception types...\"\n\n* \"...you use the Throw/throw keyword to cause specific exceptions to occur.\"\n\nThe suggestion in the lesson is that exceptions can be used a primary form of communication instead of suggesting it for a secondary (or tertiary) form because of performance reasons. To the contrary, the lesson introduces the ApplicationException class to encourage us to define new exceptions based on this class.\n\n* \"The ApplicationException class provides the same features as the standard Exception class. It simply provides a way to differentiate between those exceptions defined in the .NET Framework and those defined in your application.\"\n\n* \"When an unhandled exception occurs in a Web application, ASP.NET fires the error events...\"\n\nThese events are Page_Error, Global_Error and Application_Error. In the reality of Visual Studio .NET auto-generated code the Global_Error event procedure is not used.\n\n* \"Error events let you handle exceptions for an entire object in a single, centralized location---the error event procedure... When handling exceptions in error events, use the Server object to get information about the exception that occurred.\"\n\nThe Server.GetLastError() and Server.ClearError() methods gets \"the information\" and clears the error, respectively. The code samples suggest that a useful design pattern is to get the last error, store it in a Session variable, clear the error and use Server.Transfer() to re-load the page throwing the error.",
    "ItemText": null,
    "CreateDate": "2005-06-08T16:19:10.2100000",
    "EndDate": null,
    "ModificationDate": "2005-06-08T16:19:10.2100000",
    "DocumentId": "2076071679",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5430",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL: Stored Procedure Structure for Microsoft SQL Server 7.0/2000; Command Names Pattern",
    "SortOrdinal": null,
    "ItemChar": "IF OBJECT_ID('_newproc') IS NOT NULL\nBEGIN\n    DROP PROCEDURE _newproc\n    IF OBJECT_ID('_newproc') IS NOT NULL\n        PRINT '<<< FAILED DROPPING PROCEDURE _newproc >>>'\n    ELSE\n        PRINT '<<< DROPPED PROCEDURE _newproc >>>'\nEND\nGO\n\nCREATE PROCEDURE _newproc\n(\n    @cmdName   varchar(32)  = 'default'\n)\n\nAS\n\n-- Description: Renames the specified database.\n-- Developer: rasx@songhaysystem.com\nIF @cmdName = 'default'\nBEGIN\nEND\n\nGO\n\nGRANT EXECUTE ON _newproc TO dbWebSolutionsUsers\nGO\n\nIF OBJECT_ID('_newproc') IS NOT NULL\n    PRINT '<<< CREATED PROCEDURE _newproc >>>'\nELSE\n    PRINT '<<< FAILED CREATING PROCEDURE _newproc >>>'\nGO\n",
    "ItemText": null,
    "CreateDate": "2007-11-19T15:18:09.0000000",
    "EndDate": null,
    "ModificationDate": "2007-11-19T15:18:09.0000000",
    "DocumentId": "2076071681",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5431",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# and ASP.NET Code Snippet: RequestFormElement()",
    "SortOrdinal": null,
    "ItemChar": "/// <summary>\n/// Returns the ASP.NET-generated key\n/// for a <see cref=\"System.Web.UI.Control\"/>\n/// in a <see cref=\"System.Web.HttpRequest.Form\"/>\n/// collection.\n/// </summary>\n/// <param name=\"Control\">\n/// The <see cref=\"System.Web.UI.Control\"/> to find.\n/// </param>\npublic static string RequestFormElement(System.Web.UI.Control Control)\n{\n    string str =\n        Control.ClientID.Replace(String.Format(\"_{0}\",Control.ID),\n            String.Format(\":{0}\",Control.ID));\n    return str;\n}\n",
    "ItemText": null,
    "CreateDate": "2005-06-03T12:19:53.9570000",
    "EndDate": null,
    "ModificationDate": "2005-06-03T12:19:53.9570000",
    "DocumentId": "2076071682",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5432",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 6, Lesson 2; Using Error Pages",
    "SortOrdinal": null,
    "ItemChar": "Lesson 2: Using Error Pages\n\nThe purpose of this lesson is to introduce the concept of the Error Page and highlight the role Internet Information Server (IIS) plays in error-handling configuration.\n\n* \"...because Web applications run over the Internet, there's a whole class of exceptions that can't be detected from within code. To intercept these errors and provide the best possible response, you need to use error pages.\"\n\nOne common example of this \"whole class\" is the 404, \"file not found\" error. This error, by definition, cannot be handled within an ASPX page since no page was found to process.\n\nApplication-wide error page configuration can be defined in the Error Mapping Properties dialogs in IIS, the Web.config file of the ASP.NET application and setting the ErrorPage attribute of the @ Page directive of a given ASPX page.\n\n* \"Using IIS to change application-wide error pages makes the changes on the server where the application is deployed. If you redeploy your application, you will have to repeat those changes for the new server using IIS. Alternatively, you can make application-wide error page settings part of your application using the project's Web.config file.\"\n\nThis guidance may apply to ISS 6.x and above but we may need to be aware that earlier versions of IIS might not have ASP.NET loaded or 'prioritized in the HTTP pipeline' and will intercept errors before the Web.config file is consulted.\n\n* \"Use the customErrors section in the Web.config file to specify pages to display if specific, unhandled HTTP errors occur in a Web application.\"\n\nFor more information on HTTP error codes, please see:\n\n    http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\n\n* \"The HTTP status code 500 represents an unhandled exception in the Web application. This status code can be used to present a \"friendly\" message to users...\"\n\nThis appears to be the 'catch-all' error and handling this error should be the bare minimum for 'professional' ASP.NET applications.\n\n* \"Use the Page object's ErrorPage attribute to display a specific page when an unhandled exception occurs on a Web form. This page-level setting supersedes the application-level settings in the Web.config file.\"\n\nNote that this declaration causes the error page to be loaded by redirection. All error information will be lost after redirection (so Server.GetLastError() will be undefined).\n\n",
    "ItemText": null,
    "CreateDate": "2005-06-08T17:03:36.2730000",
    "EndDate": null,
    "ModificationDate": "2005-06-08T17:03:36.2730000",
    "DocumentId": "2076071683",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5433",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 6, Lesson 3; Logging Exceptions",
    "SortOrdinal": null,
    "ItemChar": "Lesson 3: Logging Exceptions\n\nThe purpose of this lesson is to introduce ASP.NET Trace functionality to record Web application exceptions.\n\nIt appears that ASP.NET tracing is an excellent alternative to a formal, generic .NET exception-handling \"code block\" when you need to run the ASP.NET application with reduced security privileges since writing to the Application Event Log or writing to the file system could introduce unwanted security risks.\n\n* \"Tracing is a technique for recording events, such as exceptions, in an application.\"\n\nThis underscores the idea that tracing is not solely used for exception handling.\n\n* \"Building tracing into the .NET Framework ensures that programming techniques are the same across all the applications you develop with .NET Framework.\"\n\nThe lesson suggests that this functionality provides \"standardization\" for all solutions based on the .NET Framework. Since tracing features are defined in the System.Web.TraceContext class we are free to assume that this 'standard' is confined to ASP.NET applications (HTTP-dependent applications including Web services).\n\n* \"Tracing can be turned on or off for an entire Web application or for an individual page in the application...\"\n\nApplication-level tracing is controlled by declaring the trace element in the Web.config file. Page-level tracing is controlled by declaring the Trace attribute in the @ Page directive.\n\n* \"When you have set the @ Page directive's Trace attribute to True or False, you can't restore the default setting from the Properties window in Visual Studio .NET.\"\n\nIn effect, all tracing functionality is controlled through declarative programming. In procedural code, tracing status is read-only through the Trace.IsEnabled property.\n\n* \"The Trace object provides the Write and Warn methods to allow you to write messages to a request's trace information. The two methods are identical with one exception: messages written with Write are displayed in black, whereas messages written with Warn are displayed in red.\"\n\n* \"...if the <trace> element's PageOutput attribute is set to False in the Web.config file, trace output is written instead to the Trace.axd file in your application's root directory.\"\n\nThe speculation here is that Trace.axd is not a \"file\" but a dynamically generated resource called from a ASP.NET library.\n\n* \"By default, you can view Trace.axd only from the local server running the application.\"\n\nYou can allow remote viewing of Trace.axd by declaring the localOnly attribute of Trace.axd and setting it to false.\n\n* \"ASP.NET tracing stops after the server receives the number of HTTP requests entered in the <trace> element's RequestLimit attribute.\"\n\nWhen this attribute is not declared, note that the default request limit is 10. To reset the count against the limit send this URI: \"Trace.axd?clear=1\".",
    "ItemText": null,
    "CreateDate": "2005-06-12T11:51:20.6970000",
    "EndDate": null,
    "ModificationDate": "2005-06-12T11:51:20.6970000",
    "DocumentId": "2076071684",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5434",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 98: \"How to Change Passwords in Windows Me/98/95\"",
    "SortOrdinal": null,
    "ItemChar": "\"How to Change Passwords in Windows Me/98/95\"\n\nhttp://support.microsoft.com/?kbid=257485&sd=RMVP\n\n\"NOTE: If you cancel the network logon, the Change Passwords tab may not be available. You must log on so the Change Passwords tab will be available.\"",
    "ItemText": null,
    "CreateDate": "2005-06-14T11:39:12.8170000",
    "EndDate": null,
    "ModificationDate": "2005-06-14T11:39:12.8170000",
    "DocumentId": "2076071685",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5435",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "UCLA MCCS: MedWire Settings",
    "SortOrdinal": null,
    "ItemChar": "Configuration:\n\nWireless Mode: Infrastructure\n\nService Set Identifier (SSID): MEDWIRE\n\nTransfer Rate: Auto Rate",
    "ItemText": null,
    "CreateDate": "2005-06-14T11:42:01.7200000",
    "EndDate": null,
    "ModificationDate": "2005-06-14T11:42:01.7200000",
    "DocumentId": "2076071686",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5436",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 7, Lesson 1; Saving and Retrieving User Information",
    "SortOrdinal": null,
    "ItemChar": "Lesson 1: Saving and Retrieving User Information\n\nThe purpose of this lesson is to introduce the concept of user customization features in ASP.NET. User-specific information can be stored on the client as cookies and/or on the server in an XML file managed by ADO and a predefined XML schema. Since this review is written \"close\" to the next release of Visual Studio, it may help to mention that ASP.NET 2.0 expands on this concept profoundly with a rich set of user customization features.\n\n* \"The advantage of using cookies is that the interaction happens invisibly to the user... The disadvantage of using cookies is that users can set their browsers not to accept cookies.\"\n\nThis lesson suggests two ways to design with cookies: store all information in the cookie, being aware of the 4096-byte limit or store a GUID in the cookie which is used to retrieve user, server data. In either case, the design features a check for client-support of cookies with the Boolean in Request.Browser.Cookies and, optionally, setting the expiration date of the cookies with the DateTime.Now.AddDays() method.\n\n* \"Cookies are case sensitive...\"\n\nThis implies that Response.Cookies[\"lastVisit\"] is not equal to Response.Cookies[\"LastVisit\"].\n\n* \"By default, cookies expire when the user's session ends. Setting Expires to the DateTime.MaxValue means that the cookie never expires.\"\n\nRemove a cookie by setting the Expires property to DateTime.Now.\n\n* \"To store user information on the server instead of the client's machine, simply use cookies as an identification device... The Microsoft .NET Framework provides the System.Guid namespace for creating globally unique identifiers (GUIDS).\"\n\nThe code sample demonstrates:\n\n    HttpCookie cookie = (Request.Cookies[\"userID\"] != null) ?\n        Request.Cookies[\"userID\"]\n            : new HttpCookie(\"userID\",System.Guid.NewGuid.ToString());\n\n* \"Data sets provide the Find method to retrieve rows of data by unique keys... Using a data set means that the file you create on the server must be either a database or an XML file.\"\n\nVisual Studio .NET provides XML and XSD editors to create XML files for use with DataSet objects when the formality of a database seems unnecessary. Defining a schema with an ID element that will store our GUID, allows us to use the DataSet.ReadXmlSchema() method to automatically create a DataTable that is compatible with our external XML file.\n\n* \"When you've created an XML file and an XML schema, you can read those files into a data set using the ReadXmlSchema and ReadXml methods, respectively... To save user information on the server as an XML file, use the DataSet object's SaveXML method.\"\n\nThe \"SaveXML method\" does not exist among the members of DataSet, so evidently this is an editorial error. The code sample that follows this error clearly suggests that we use the DataSet.WriteXML() method.",
    "ItemText": null,
    "CreateDate": "2005-06-28T22:12:33.0530000",
    "EndDate": null,
    "ModificationDate": "2005-06-28T22:12:33.0530000",
    "DocumentId": "2076071687",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5437",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 7, Lesson 2; Using Unmanaged Code",
    "SortOrdinal": null,
    "ItemChar": "Lesson 2: Using Unmanaged Code\n\nThe purpose of this lesson is to highlight the backwards-compatibility features of the .NET Framework, it's ability to create static entry points into Win32 COM interfaces. This lesson is quite forthcoming about the limitations of these features.\n\n* \"The process of executing native code from within a .NET assembly is called platform invoke, or pinvoke for short.\"\n\nThe \"native code\" is usually in the form of a COM DLL (of \"DLL Hell\" infamy). These are called by declaring the System.Runtime.InteropServices.DllImportAttribute as in the lesson's code sample:\n\n    [DllImport(\"KERNEL32.DLL\", ...)]...\n\nWhen \"invoking\" the Win32 platform, data is exchanged between the .NET Framework and the Win32 API in the form of passing parameters and reading results. This data exchange is often in the form of custom types defined by data structures.\n\n* \"Structures in .NET are defined in much the same way that they are for the Win32 API. By default, .NET structures are arranged sequentially in memory in the order in which they are defined... You can also explicitly define how structures are ordered in memory using the StructLayout attribute.\"\n\nThis is the System.Runtime.InteropServices.StructLayoutAttribute with the form:\n\n    [StructLayout(LayoutKind.Sequential)]...\n\nThis lesson may suggest that the reason why struct (in C#) and Structure (in VB.NET) exist in .NET languages is to facilitate structured data exchange between the .NET Framework and the Win32 API. It definitely suggests in the code samples that Class definitions (with all public fields) can also be used instead of struct types.\n\n* \"Declaring a layout is required when you're passing objects to unmanaged code, because objects might be moved around in memory after they are created.\"\n\nDiscovering exactly what data needs to be structured and passed into the Win32 API is no trivial task. For more information, please see:\n\n    \"Marshaling Data with Platform Invoke\"\n    http://msdn.microsoft.com/library/en-us/cpguide/\n        html/cpconmarshalingdatawithplatforminvoke.asp\n\n    \"P/Invoke (Platform Invoke) links and resources\"\n    http://dotnetjunkies.com/WebLog/imranko/archive/2004/10/24/29558.aspx\n\n    \"Platform Invoke Cheat Sheet\"\n    http://www.gotdotnet.com/team/clr/bcl/TechArticles/\n       TechArticles/PInvokeHelp/FAQ.aspx\n\n* \"Unmanaged procedures typically return a value that indicates whether an exception occurred... Nonzero return values usually indicate success, and a zero return value indicates that an exception occurred.\"\n\nThe lesson's code sample used to illustrate the use of Marshal.GetLastWin32Error() does not recognize the existence of the System.ComponentModel.Win32Exception type. With this recognition the code can refactored as:\n\n    // MoveTo returns False if there is an error.\n    Win32Exception ex = new Win32Exception(Marshal.GetLastWin32Error());\n    string msg = ex.Message;\n\ninstead of this:\n\n    // MoveTo returns False if there is an error.\n    string msg ;\n    // Set a message depending on error code returned.\n    switch (Marshal.GetLastWin32Error())\n    {\n        case 2:\n            msg = \"File not found.\";\n            break;\n        case 3:\n            msg = \"Path not found.\";\n            break;\n        case 5:\n            msg = \"Access denied.\";\n            break;\n        case 15:\n            msg = \"Drive not found.\";\n            break;\n        default:\n            msg = \"Unlisted error.\";\n            break;\n    }\n\n\n* \"Limitations of Unmanaged Code... Although native code can perform some operations more quickly than equivalent code managed by the CLR, these benefits might be offset by the time it takes to marshal the data to pass between the unmanaged procedure and the .NET assembly.\"\n\nThis performance limitation seems to be most surprising limitation of p-invoke. The others, \"type safety,\" \"versioning\" and \"code security\" are to be expected.",
    "ItemText": null,
    "CreateDate": "2005-06-29T17:20:27.1170000",
    "EndDate": null,
    "ModificationDate": "2005-06-29T17:20:27.1170000",
    "DocumentId": "2076071688",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5438",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASMX Web Services PROBLEM: Server Error; \"Cannot declare a namespace and a type\" Error; Strange Compilation Error",
    "SortOrdinal": null,
    "ItemChar": "Description: \"An error occurred during the compilation of a resource required to service this request. Please review the following specific error details and modify your source code appropriately.\"\n\nCompiler Error Message: \"CS0010: Cannot declare a namespace and a type both named\" 'foo.bar'...\n\nThis error occurs in Web Service projects referencing external assemblies. In my particular case these are Project references. The Solution will compile without errors or warnings. The server seems to throw when the ASMX files are unchanged but the referenced project code changes.\n\nThe error goes away when an ASMX file is purposely modified and the solution is recompiled. In my particular case, I have the misfortune of compiling/running these ASMX files on IIS for Windows 2000 Workstation.\n",
    "ItemText": null,
    "CreateDate": "2005-07-28T09:22:50.3530000",
    "EndDate": null,
    "ModificationDate": "2005-07-28T09:22:50.3530000",
    "DocumentId": "2076071689",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5439",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "InfoPath 2003 SP1: Flippant Remarks about Writing Code in InfoPath; Debugging",
    "SortOrdinal": null,
    "ItemChar": "Read \"How to debug a script for a Microsoft Office InfoPath 2003 form\" (MSKB Article 827002; http://support.microsoft.com/kb/827002/EN-US/) to see, \"To debug a script for an InfoPath form, you must first attach Microsoft Script Debugger to your InfoPath form.\" In JScript it's:\n\n    debugger;\n\nAlternatively, the alert() function can be accessed by\n\n    XDocument.UI.Alert(\"Hello world.\");\n\nRead \"How to create a custom validation error message that contains the name of the control that is being validated in InfoPath 2003\" (MSKB Article 822032; http://support.microsoft.com/kb/822032/EN-US/) to see how a validation event procedure is designed.\n\nConsult the \"InfoPath Object Model Diagram\" at:\n\n    http://msdn.microsoft.com/library/en-us/ipsdk/html/xdtocInfoPathObjectModel.asp",
    "ItemText": null,
    "CreateDate": "2005-07-10T18:34:13.5300000",
    "EndDate": null,
    "ModificationDate": "2005-07-10T18:34:13.5300000",
    "DocumentId": "2076071690",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5440",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "XSLT Markup: Flippant Remarks about Passing External Parameters to Style Sheets; MSXML",
    "SortOrdinal": null,
    "ItemChar": "Make sure to pass scalar values as external parameters to style sheets. Don't send XPath queries as parameters---especially an XPath query with a predicate like this:\n\n   /plays/playwright[last_name='Shakespeare']\n\nIt is better to just send the scalar text value:\n\n   'Shakespeare'\n\nThe MSXML engine, for example, will 'silently' fail providing no clues whatsoever about its type-resolution problems. Avoid the entangling mystery and keep it simple.",
    "ItemText": null,
    "CreateDate": "2005-07-20T20:41:34.5300000",
    "EndDate": null,
    "ModificationDate": "2005-07-20T20:41:34.5300000",
    "DocumentId": "2076071691",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5441",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "XSLT Markup: Flippant Remarks for Procedural Developers Writing XSL Templates; XSLT variables",
    "SortOrdinal": null,
    "ItemChar": "An XSL transformation is an XML document of declarations about how to rearrange the elements and attribute of another, source XML document. An XSL transformation might be seen as a \"type\" that derives from XML in the same way that any class definition ultimately extends the Object type.\n\nAn XSL transformation is made up of templates. Remember they are called \"templates\"; they are not functions. Templates always have a contextual relationship with the source document.\n\nXSLT variables can only be assigned a value once. By chaining together declarations of variables/parameters based on values of other variables you can simulate mutability. It follows that incrementing a variable in the XSL equivalent of the for-next loop is obtained through a template 'chained' to itself (recursion). For more details about this, please see \"Tip: Loop with recursion in XSLT\" at:\n\n    http://www-128.ibm.com/developerworks/xml/library/x-tiploop.html?ca=dnt-626\n\nXSLT variables/parameters are assigned values through their \"select\" attribute. What may not be readily apparent is that the xsl:variable and xsl:param elements can contain templates and/or xsl:template content. This implies that the procedural programming design pattern of assigning a function to a variable can be achieved in XSLT like this:\n\n    <xsl:variable name=\"has_supported_property\">\n        <xsl:choose>\n            <xsl:when test=\"w:rPr/w:b\">true</xsl:when>\n            <xsl:when test=\"w:rPr/w:caps\">true</xsl:when>\n            <xsl:when test=\"w:rPr/w:i\">true</xsl:when>\n            <xsl:when test=\"w:rPr/w:dstrike\">true</xsl:when>\n            <xsl:when test=\"w:rPr/w:smallCaps\">true</xsl:when>\n            <xsl:when test=\"w:rPr/w:strike\">true</xsl:when>\n            <xsl:when test=\"w:rPr/w:u\">true</xsl:when>\n            <xsl:otherwise>false</xsl:otherwise>\n        </xsl:choose>\n    </xsl:variable>\n\nIn procedural terms, the xsl:choose element above is part of an \"anonymous template\" that returns a value to the variable @has_supported_property. Note that contents of the xsl:when and xsl:otherwise elements are \"result tree fragments.\" The example above should include xsl:text elements to really show this. This means that XSLT variables can be assigned fragments of XML.",
    "ItemText": null,
    "CreateDate": "2005-07-21T12:43:11.2900000",
    "EndDate": null,
    "ModificationDate": "2005-07-21T12:43:11.2900000",
    "DocumentId": "2076071692",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5442",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 7, Lesson 3; Interoperating with COM",
    "SortOrdinal": null,
    "ItemChar": "Lesson 3: Interoperating with COM\n\nThe purpose of this lesson is to expand upon the backwards-compatibility feature set of .NET to include COM \"interop.\" This lesson makes explicit the relationship .NET has with legacy technologies like VB6. It may help to mention that COM stands for component object model, where the word \"component\" often indicates the physical boundary in which properties and procedures reside (effectively, this means a .DLL file).\n\n* \"When you add a reference to a COM object, Visual Studio automatically generates an interop assembly for the object and places it in the project's /bin folder.\"\n\nThis assembly can be viewed with Intermediate Language Disassembler (ILDASM.exe). For more information, see \"VS.NET Tools: Intermediate Language Disassembler(ILDASM)\" at:\n\n    http://www.c-sharpcorner.com/vsnet/IldasmTool.asp\n\n* \"Visual Basic 6.0 allowed you create COM properties (Property Let procedures) that were assigned by reference. Visual C# won't recognize those properties.\"\n\nThis looks like yet another very subtle difference between VB.NET and C#.\n\n* \"Visual Studio can automatically generate type library information and register a .NET class library assembly for use from COM. These automatic tools do not work for ASP.NET Web applications.\"\n\nOne could argue that ASP.NET applications are already interoperable with COM by default since Internet Information Server must still have COM interfaces at least up to version 6.0.\n\n* \"The ComVisible attribute allows you to select which public .NET classes and members are included in the generated type library.\"\n\nOne design pattern shown in the lesson sets the entire assembly to 'hidden' with:\n\n    [assembly: ComVisible(false)]\n\nso that members can \"opt in\" to COM visibility.\n\n* \".NET handles errors through exception classes. COM handles errors through 32-bit data types called HRESULTs.\"\n\nManaged exceptions under COM are mapped to the appropriate HRESULT and vice versa.\n\n* \"COM requires objects to be created before use, so it does not support .NET Shared/static members.\"\n\nThis limitation stands out foremost for managed code running under COM among the lack of support for construtors with parameters and \"shadow\" members not being callable.",
    "ItemText": null,
    "CreateDate": "2005-07-29T13:14:34.0700000",
    "EndDate": null,
    "ModificationDate": "2005-07-29T13:14:34.0700000",
    "DocumentId": "2076071693",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5443",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "System.Xml.Xsl.XslTransform PROBLEM: Document Type Declarations Are Ignored; xsl:output Element; DOCTYPE; .NET Framework 1.1",
    "SortOrdinal": null,
    "ItemChar": "The xsl:output element is supported by the .NET Framework. The xsl:output element is ignored when the output of the XslTransform.Transform method is an XmlReader or XmlWriter. These types are not byte-stream-based, using .NET-native UTF-16 encoded strings to store data.\n\nThe following sketch uses the MemoryStream type to represent data as bytes instead of UTF-16 strings:\n\n    XslTransform xslt = new XslTransform();\n    XPathDocument xml = new XPathDocument(\"data.xml\");\n    MemoryStream ms = new MemoryStream();\n\n    xslt.Load(\"template.xslt\");\n    xslt.Transform(xml,null,ms,null);\n\n    xhtml = Encoding.UTF8.GetString(ms.GetBuffer());\n\nFor details see \"Outputs from an XslTransform\" at:\n\n    http://msdn.microsoft.com/library/\n        en-us/cpguide/html/cpconInputsOutputsToXslTransform.asp",
    "ItemText": null,
    "CreateDate": "2005-10-28T15:43:41.9070000",
    "EndDate": null,
    "ModificationDate": "2005-10-28T15:43:41.9070000",
    "DocumentId": "2076071694",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5444",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 7, Lesson 4; Using Client-Side Scripts",
    "SortOrdinal": null,
    "ItemChar": "Lesson 4: Using Client-Side Scripts\n\nThis lesson reveals Microsoft's 'official' recommendations and design patterns for client-side scripts. Since Microsoft cannot as of this writing claim to have innovated in this area of technology, this lesson must be taken with suspicion for experienced programmers, the students of JavaScript and/or ECMA Script. What is important to observe in this lesson is how client-side script procedures are created Visual Studio .NET. Note that the visual design environment encourages hard-coding a procedure to a specific object, which is in contrast to more generic and reusable solutions.\n\n* \"Because not all browsers support scripts, you should check the browser capabilities before displaying pages that contain client-side scripts.\"\n\nSince before the year 2002, Eric Krok, Andy King and Michel Plungjan have been developing JavaScript Browser Sniffer, which may still be available at http://www.webreference.com/.\n\n* \"Both VBScript and JScript are functionally equivalent---they differ only in syntax and keywords... only Internet Explorer supports VBScript, so if your application needs to run on other browsers, you should use JScript.\"\n\nNote that Microsoft does not use the term \"JavaScript\" because they do not use JavaScript. Heidi Brumbaugh details the differences between JScript and JavaScript in \"Browser, Schmouser\" at:\n\n    http://www.webdeveloper.com/javascript/javascript_browser_checking.html ",
    "ItemText": null,
    "CreateDate": "2005-07-29T13:39:03.6030000",
    "EndDate": null,
    "ModificationDate": "2005-07-29T13:39:03.6030000",
    "DocumentId": "2076071695",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5445",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 7, Lesson 5; Consuming XML Web Services",
    "SortOrdinal": null,
    "ItemChar": "Lesson 5: Consuming XML Web Services\n\nThis lesson is a very brief overview of Web services support in the .NET Framework. The concept of the \"Microsoft WebService Behavior\" is introduced here.\n\n* \"XML Web services are business logic components that can be accessed over the Internet.\"\n\nThe above quote is listed here for 'posterity' as the use of the term \"business logic\" is by now threadbare!\n\n* \"XML Web services are made public over the Web using a Universal Description, Discovery, and Integration (UDDI) registry. Currently, Microsoft and IBM manage two UDDI nodes available for locating XML Web services.\"\n\nAs of this writing, IBM, Microsoft, NTT Communications, and SAP jointly own the registry. For more information, see:\n\n    http://uddi.org/find.html\n\n* \"Using an XML Web service is much the same as using a .NET or COM component: you establish a reference to the class, create an instance of an object from the class, and then use the object's properties and methods within your code.\"\n\nThe opinion here is that this a true Microsoft innovation. Adding a Web Reference in Visual Studio .NET, automatically creates WSDL (Web Services Description Language) for SOAP calls through a proxy class. For a Microsoft-centric understanding of WDSL, see \"Understanding WSDL\" at:\n\n    http://msdn.microsoft.com/library/en-us/dnwebsrv/html/understandWSDL.asp\n\nThe following is a SOAP call to Amazon.com:\n\n    com.amazon.soap.AmazonSearchService ws =\n        new com.amazon.soap.AmazonSearchService();\n    com.amazon.soap.AsinRequest req =\n        new MCSDWebAppsCS.com.amazon.soap.AsinRequest();\n    com.amazon.soap.ProductInfo info =\n        new MCSDWebAppsCS.com.amazon.soap.ProductInfo();\n\n    req.asin = \"0782113273\";\n    req.devtag = \"XXXXXXXXXXXXXX\";\n    req.tag = \"thekintespacec00A\";\n    req.type = \"lite\";\n\n    info = ws.AsinSearchRequest(req);\n    com.amazon.soap.Details product = info.Details[0];\n    body.InnerHtml = String.Format(\"Product Name: {0}\",product.ProductName);\n\n* \"In some cases it makes more sense to call an XML Web service from client-side scripts than from server code.\"\n\nThe Microsoft WebService Behavior is one asynchronous solition to the problem of waiting on Web services. The sample code for this lesson includes a \"WebService Behavior\" HTC file that has over 2000 lines of code! For more information, see \"Using the WebService Behavior\" at:\n\n   http://msdn.microsoft.com/workshop/author/webservice/using.asp\n",
    "ItemText": null,
    "CreateDate": "2005-07-29T15:58:46.7570000",
    "EndDate": null,
    "ModificationDate": "2005-07-29T15:58:46.7570000",
    "DocumentId": "2076071696",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5446",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "XHTML Problem: Internet Explorer Shows Blank Page When <script /> Is Present; Minimized script elements",
    "SortOrdinal": null,
    "ItemChar": "Minimized script elements are interpreted as open elements by Internet Explorer up to version 6.x. It follows that\n\n    <script type=\"text/javascript\" src=\"...\" />\n\nwill be seen as\n\n    <script type=\"text/javascript\" src=\"...\">\n\nThis will effectively consume any elements following. So when a script element appears within the head element, an entire document can disappear! This, of course, is the workaround:\n\n    <script type=\"text/javascript\" src=\"...\"></script>",
    "ItemText": null,
    "CreateDate": "2005-08-02T16:09:20.7900000",
    "EndDate": null,
    "ModificationDate": "2005-08-02T16:09:20.7900000",
    "DocumentId": "2076071697",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5447",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Extensible Markup: Flippant Remarks about Typographic Representations in XML",
    "SortOrdinal": null,
    "ItemChar": ">>>The number one rule:\nThe number one rule for me is to trust in glyphs. I used to depend on entities back the HTML 4.x days, but now it's all about Unicode glyphs.\n\n>>>No-break space:\nXML (namely XHTML) will collapse spaces (entered by the spacebar). To avoid this, use Alt+0160 (the no-break space). The no-break space is also the no-collapse space!",
    "ItemText": null,
    "CreateDate": "2005-08-04T10:06:34.4630000",
    "EndDate": null,
    "ModificationDate": "2005-08-04T10:06:34.4630000",
    "DocumentId": "2076071698",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5448",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 8, Lesson 1; Authenticating and Authorizing Users",
    "SortOrdinal": null,
    "ItemChar": "Lesson 1: Authenticating and Authorizing Users\n\nThe purpose of this lesson is to provide basic security concepts and implementation guidance for ASP.NET Web applications running on IIS 5.x and versions earlier. This lesson introduces the concepts of authentication, authorization, impersonation and anonymous access.\n\n* \"ASP.NET Web applications provide anonymous access to resources by impersonation.\"\n\nThe local Windows account, named in the form IUSER_machinename, is used to \"impersonate\" users allowed anonymous access permissions. This account should belong to a security group with reduced privileges.\n\n* \"Under the default settings, ASP.NET uses the ASPNET account to run the Web application.\"\n\nWhen impersonation is not enabled, the Web application uses the ASPNET account to access all resources. The ASPNET account can, say, have higher privileges than IUSER_machinename or lower ones for an authenticated administrative account. So when impersonation is enabled, security settings can be spread out among multiple Windows accounts.\n\n* \"You restrict the access of anonymous users by setting Windows file permissions.\"\n\nThis design requires NTFS file systems and error pages designed to capture security exceptions is optional.\n\n* \"There are three major ways to authenticate and authorize users...\"\n\nPassport authentication stands apart from Windows authentication and forms authentication as Microsoft's \"single sign-on\" solution. All of these solutions depend on the System.Web.Security namespace. However, as of the publication of this lesson, Passport involves an SDK and redirection to a Microsoft Web site.\n\n* \"If you want to authenticate users who access HTML pages from within your Web application using Windows, Forms, or Passport authentication modes, you must map those files to the ASP.NET executable.\"",
    "ItemText": null,
    "CreateDate": "2005-08-23T14:25:12.8830000",
    "EndDate": null,
    "ModificationDate": "2005-08-23T14:25:12.8830000",
    "DocumentId": "2076071699",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5449",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET: Flippant Remarks about SQL Server Session State",
    "SortOrdinal": null,
    "ItemChar": "This is a sessionState element configured for SQL Server Session State:\n\n    <sessionState\n        cookieless=\"true\"\n        mode=\"SQLServer\"\n        sqlConnectionString=\"Data Source=MyDBServer;Integrated Security=SSPI\"\n        timeout=\"20\" />\n\nIn order for the server MyDBServer to be ready for this configuration, the InstallSqlState.sql script needs to run. This script creates a dependency on tempdb in SQL Server 2000 and permissions need to be set for ASPNET. And some of us may forget that tempdb is cleared and recreated every time SQL Server starts. This can be a management irritant for developers. It should not be a problem for operations staff supporting servers with large uptimes.\n\nSQL Server Session state can only persist objects that can be serialized. One way to get around this limitation is to load an array of the non-serializeable objects into Application memory and store index references to them in Session State.\n\nSQL Server Session state is more reliable but is not as fast as the alternatives.",
    "ItemText": null,
    "CreateDate": "2005-08-22T13:01:19.7030000",
    "EndDate": null,
    "ModificationDate": "2005-08-22T13:01:19.7030000",
    "DocumentId": "2076071700",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5450",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 8, Lesson 2; Using Windows Authentication",
    "SortOrdinal": null,
    "ItemChar": "Lesson 2: Using Windows Authentication\n\nThe purpose of this lesson is to show the relationship between Windows (or NTLM) authentication and ASP.NET. This lesson also delves into the concept of impersonation.\n\n* \"Windows authentication is the default authentication method when you create a new Web application project.\"\n\nThis Web application configuration denies anonymous users:\n\n    <authentication mode=\"Windows\"/>\n    <authorization>\n        <deny users=\"?\"/>\n        <!-- Deny unauthenticated users -->\n    </authorization>\n\nFor more information on authentication configuration see:\n\n    http://msdn.microsoft.com/library/en-us/\n        cpgenref/html/gngrfauthorizationsection.asp\n\n* \"If impersonation is enabled, the application executes using the permissions found in your user account. Otherwise, the application executes using the limited ASPNET user account... When a user is authorized, ASP.NET issues an authorization certificate in the form of a cookie that persists for the duration of the user's session.\"\n\nKeep in mind that the impersonated credentials must have the same rights as the \"limited\" ASPNET account otherwise lack of access to folders like \\Temporary ASP.NET Files will cause exceptions. For more details, see \"How To: Create a Custom Account to Run ASP.NET\" by J.D. Meier, Alex Mackman, Michael Dunner and Srinath Vasireddy here:\n\n    http://msdn.microsoft.com/library/en-us/dnnetsec/html/SecNetHT01.asp\n\n* \"When a user is authorized, ASP.NET issues a certificate in the form of a cookie that persists for the duration of the user's session.\"\n\nThe speculation here suggests that this certificate \"persists\" elsewhere when cookie-less sessions are enabled.\n\n* \"One of the key advantages of Windows authentication is that users who are logged on to the network don't have to log on again to access the Web application.\"\n\nThis feature is best enjoyed in a domain-based Intranet setting using Microsoft Web browsers.\n\n* \"To restrict access to specific users, list their names separated by commas in an <allow> element.\"\n\nThis is the example:\n\n    <authorization>\n        <allow users=\"contoso\\DeannaMeyer,contoso\\MichaelEmanuel\" />\n        <deny users=\"*\" />\n    </authorization>\n\n* \"To allow or deny access to certain groups of users, add the <roles> element to the authorization list...\"\n\nThis is the example:\n\n    <authorization>\n        <allow roles=\"contoso\\Administrators\" />\n        <deny users=\"*\" />\n    </authorization>\n\n* \"The Identity property returns an object that includes the user name and role information...\"\n\nThe Identity property is a member of System.Web.UI.Page.User.\n\n* \"These methods and properties can be used in conjunction with the Global module's AuthorizeRequest event to check user names against an external user file rather than use the list in Web.config.\"\n\nThis topic seems to be connected with HTTP Modules such as in \"INFO: ASP.NET HTTP Modules and HTTP Handlers Overview\" at:\n\n    http://support.microsoft.com/default.aspx?scid=kb;EN-US;Q307985\n\n* \"If authorization is set both in Web.config and in IIS, the IIS setting is evaluated first...\"\n\nBecause the \"most restrictive\" setting is used the order of events here seems irrelevant.\n\n* \"Allowing IIS to control the password for the anonymous account is highly recommended, but this setting might need to be overridden if your application is deployed over multiple servers.\"\n\nThis recommendation must also be weighed against the MSKB article \"Password Synchronization/Allow IIS to Control Password May Cause Problems\" at:\n\n    http://support.microsoft.com/default.aspx?scid=kb;en-us;Q216828\n\n* \"...you can enable multiple authentication methods through IIS...you can detect which method was used to authenticate a user in code by using the Identity object's AuthenticationType method...\"\n\n* \"...once a user is authenticated, the application runs under the identity of the ASP.NET user account by default.\"\n\nThis default behavior is changed by declaring the identity element with the form:\n\n    <configuration>\n        <system.web>\n            <identity impersonate=\"true\" />\n        </system.web>\n    </configuration>\n\nThe authenticated user that ASP.NET runs under must have the same (or more) security privileges as the ASP.NET user account. The WindowsIdentity.GetCurrent() method of System.Security.Principal can be used to verify the running account.\n\nASP.NET can also run under a single, known account with a configuration like this:\n\n    <configuration>\n        <system.web>\n            <identity impersonate=\"true\" userName=\"root\" password=\"jkdfjds#X5g\" />\n        </system.web>\n    </configuration>\n\nThis configuration (in a file called Web.config) can be placed in a subfolder of the Web application to define certain areas of the application that run under impersonation.",
    "ItemText": null,
    "CreateDate": "2005-08-30T18:21:15.7970000",
    "EndDate": null,
    "ModificationDate": "2005-08-30T18:21:15.7970000",
    "DocumentId": "2076071701",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5451",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio .NET: xsi:no­NamespaceSchemaLocation and xsi:schema­Location Attributes is not supported in VS.NET 2003",
    "SortOrdinal": null,
    "ItemChar": "Many an experienced Visual Studio .NET user who is an inexperienced XSD designer will be wont to take advantage of this path:\n\n    %ProgramFiles%\\Microsoft Visual Studio .NET 2003\\Common7\\Packages\\schemas\\xml\\\n\nThis path is involved in adding Intellisense support for user-defined schemas. An alternative to this approach would be to use the xsi:no­NamespaceSchemaLocation and xsi:schema­Location attributes instead. But Visual Studio .NET 2003 does not support this! This is corrected in Visual Studio .NET 2005. These attributes are discussed in general by Eric van der Vlist in \"Using W3C XML Schema\" here:\n\n    http://www.xml.com/pub/a/2000/11/29/schemas/part1.html?page=9\n\nThe \n        x­mlns=\"http://example.org/ns/books/\"\n        x­mlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://example.org/ns/books/ file:library.xsd\">\n\nNote that <book> is the document element or root node and\n\nIn the above example, the schema location URI used the file: protocol. Of course, the http: protocol is used as well.",
    "ItemText": null,
    "CreateDate": "2009-08-09T17:06:08.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-09T17:06:08.0000000",
    "DocumentId": "2076071702",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5452",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 8, Lesson 4; Using Passport Authentication",
    "SortOrdinal": null,
    "ItemChar": "Lesson 4: Using Passport Authentication\n\nThis lesson recognizes that Microsoft attempted to solve the \"Single Sign-On\" problem for the Windows platform. SSO is an industry-wide acronym maintained by OpenGroup.org (among others) at http://www.opengroup.org/security/sso/.\n\nAs of this writing there is doubt that this technology is an active concern at Microsoft. The Passport SDK is currently not available for download from here:\n\n    http://msdn.microsoft.com/library/default.asp?url=/downloads/list/websrvpass.asp\n\n* \"Passport authentication identifies users via Microsoft Passport's single sign-on service. Microsoft Passport is meant to provide Internet users with a single identity that they can use to visit a wide variety of Web sites that require authentication.\"\n\nTo declare Passport authentication in Web.config, this is a pattern:\n\n    <authentication mode=\"Passport\" />\n    <authorization>\n        <deny users=\"?\" />\n        <!-- Deny unauthenticated users -->\n    </authorization>\n\nThe code used to implement authentication is almost identical to the code used for NTLM authentication discussed in \"Lesson 2: Using Windows Authentication,\" featuring use of System.Web.UI.Page.User.Identity.",
    "ItemText": null,
    "CreateDate": "2005-09-16T15:10:20.2000000",
    "EndDate": null,
    "ModificationDate": "2005-09-16T15:10:20.2000000",
    "DocumentId": "2076071703",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5453",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 8, Lesson 3; Using Forms Authentication",
    "SortOrdinal": null,
    "ItemChar": "Lesson 3: Using Forms Authentication\n\nThe purpose of this lesson is to introduce ASP.NET Forms Authentication and to encourage the expectation that Web Application frameworks provide their own security \"controls.\" With Microsoft technologies, this expectation is recognized in ASP.NET 2.0, its Login controls (which are part of the new personalization and membership features of ASP.NET 2.0). More details are found in \"New Security Features in ASP.NET 2.0\" here:\n\n    http://msdn.microsoft.com/library/en-us/dnvs05/html/SecFeatNT2.asp\n\n* \"Forms authentication automatically displays a designated Web form to collect user name and password information... The advantage of Forms authentication is that users do not have to be [a] member of a domain-based network to have access to your application.\"\n\nFor more details see \"Designing Secure ASP.NET Applications\" here:\n\n    http://msdn.microsoft.com/library/en-us/cpguide/html/\n        cpconDesigningSecureASPNETApplications.asp\n\nThe following is sample Web.config declaration for Forms Authentication:\n\n    <authentication mode=\"Forms\" > <!-- Set authentication mode -->\n        <forms loginUrl=\"LogIn.aspx\" > <!-- Specify a log on form -->\n        <credentials passwordFormat=\"Clear\"> <!-- Create a user list -->\n            <user name=\"Jesse\" password=\"JuneBug\"/>\n            <user name=\"Linda\" password=\"Liste\"/>\n            <user name=\"Henry\" password=\"Henry\"/>\n        </credentials>\n        </forms>\n    </authentication>\n\n    <authorization>\n        <deny users=\"?\" /> <!—Deny all unauthenticated users -->\n    </authorization>\n\n\nFor this declaration, the static member FormsAuthentication.Authenticate() of the System.Web.Security namespace takes a user name and password and returns a Boolean. ASP.NET View State can be used to store the number of authentication attempts and the FormsAuthentication.SignOut() method is used to clear the authenticated session and permit a new login attempt. When FormsAuthentication.Authenticate() is true, the FormsAuthentication.RedirectFromLoginPage() method can be used to move from the login page specified in Web.config to the originally requested page.\n\n* \"When storing names and passwords in a file or database, you have the option of encrypting them using the FormsAuthentication class's HashPasswordForStoringInConfigFile method.\"\n\nThe hash algorithms SHA1 or MD5 are used. There are \"urban legends\" out there insisting that one or both of these algorithms is compromised. However, as of July 11, 2005 Microsoft makes no mention of this in \"How to create keys by using Visual C# .NET for use in Forms authentication\" here:\n\n    http://support.microsoft.com/default.aspx?scid=kb;en-us;Q312906\n\n* \"When you authenticate users from Web.config, you use the Authenticate method. When you authenticate users from a database, you must write your own code to find and compare user names and passwords.\"\n\nI'm almost certain that this is 'fixed' in ASP.NET 2.0!",
    "ItemText": null,
    "CreateDate": "2005-09-12T17:17:01.0670000",
    "EndDate": null,
    "ModificationDate": "2005-09-12T17:17:01.0670000",
    "DocumentId": "2076071705",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5454",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "DTS ActiveX Script Task: Assigning SQL Statements to Execute SQL Tasks Based on Global Variables",
    "SortOrdinal": null,
    "ItemChar": "'Based on Global Variables and SQL statements in DTS by Darren Green\n'http://www.sqldts.com/Default.aspx?205,2\nOption Explicit\n\nFunction Main()\n    Dim objDtsPack,vSQL\n\n    ' Get reference to the Exec SQL Task\n    Set objDtsPack = DTSGlobalVariables.Parent\n\n    'Delete Quiz Participant tasks:\n    vSQL = \"DELETE FROM ParticipantQuiz WHERE pID IN(\" _\n        & \"SELECT pID FROM Participant WHERE domainUserName = '\" _\n        & DTSGlobalVariables(\"ImportGroup\").Value _\n        & \"')\"\n\n    Call SetDtsSql(objDtsPack,\"DTSTask_DTSExecuteSQLTask_3\",vSQL)\n    Call SetDtsSql(objDtsPack,\"DTSTask_DTSExecuteSQLTask_6\",vSQL)\n\n    ' Clean Up\n    Set objDtsPack = Nothing\n\n    Main = DTSTaskExecResult_Success\nEnd Function\n\nSub SetDtsSql(objDtsPack,vTaskName,vSQL)\n    Dim objExecSqlTask\n    Set objExecSqlTask = objDtsPack.Tasks(CStr(vTaskName)).CustomTask\n\n    ' Assign SQL Statement to Exec SQL Task\n    objExecSqlTask.SQLStatement = vSQL\n\n    ' Clean Up\n    Set objExecSqlTask = Nothing\nEnd Sub",
    "ItemText": null,
    "CreateDate": "2005-09-15T15:22:30.5830000",
    "EndDate": null,
    "ModificationDate": "2005-09-15T15:22:30.5830000",
    "DocumentId": "2076071706",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5455",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP 5.0.4 Installation Notes",
    "SortOrdinal": null,
    "ItemChar": "The \"advanced\" installation option allows the php 'root' folder to be selected among other bits.\n\nupload_tmp_dir and session.save_path values may need to be enclosed in quotes to prevent parsing errors for unexpected characters.\n\nthe \\ext folder under the php root needs to be installed by hand after the automated install from the compressed archive php-pecl-5.0.4-Win32. For MySQL use, libmysql.dll and ntwdblib.dll libraries need to be in the php root folder.\n\nPECL stands for \"PHP Extension Community Library\" and is maintained at http://pecl.php.net but can be downloaded with the installer at http://php.net.\n\nThe extensions currently used by Songhay System are: php_mysql.dll, php_mysqli.dll, php_soap.dll, php_sockets.dll, php_tidy.dll and php_xsl.dll. (These modules are loaded by extension_dir = \"./ext\" in php.ini.)",
    "ItemText": null,
    "CreateDate": "2005-09-20T12:30:56.8930000",
    "EndDate": null,
    "ModificationDate": "2005-09-20T12:30:56.8930000",
    "DocumentId": "2076071709",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5456",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 8, Lesson 5; Providing Secure Communication",
    "SortOrdinal": null,
    "ItemChar": "Lesson 5: Providing Secure Communication\n\nThe purpose of this lesson is to explain how Secure Sockets Layer (SSL) communication is implemented with IIS configuration and URIs.\n\n* \"To provide secure communication across the Internet, IIS supports a standardized means of encrypting and decrypting Web requests and responses.\"\n\nA third-party corporate authority provides an encryption key called a \"server certificate\" for cryptographic communication on the SSL.\n\n* \"The Secure Sockets Layer\" (SSL) is the standard means of ensuring that data sent over the Internet can't be read by others.\"\n\nOne article, \"Enabling SSL in IIS on Windows XP Professional,\" shows how to set up SSL for testing purposes using SSL:\n\n    http://www.somacon.com/p41.php\n\n* \"Because the difference between using http and https is a somewhat obscure distinction for most users to remember, it's important to provide an http entry point for your application that links to the secure (HTTPS) pages.\"\n\nThe Blog post \"Setting up SSL correctly with IIS and ASP.NET\" by Paul Wilson touches upon this matter:\n\n    http://weblogs.asp.net/pwilson/archive/2004/12/23/331455.aspx",
    "ItemText": null,
    "CreateDate": "2005-09-23T16:59:50.9230000",
    "EndDate": null,
    "ModificationDate": "2005-09-23T16:59:50.9230000",
    "DocumentId": "2076071713",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5457",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "XSLT Markup: The importance of the XPath Boolean functions false() and true()",
    "SortOrdinal": null,
    "ItemChar": "The strings 'true' and 'false' have no meaning for XPath functions. Please note that the following two lines are both true:\n\n    boolean('true')\n\n    boolean('false')\n\nMoreover, the following is a node test for a node called \"true\":\n\n    boolean(true)\n\nThis function will return false when it cannot find an element called \"true\" in the current context.\n\nThe Boolean functions false() and true() produce the expected results for our first example. So this is true:\n\n    boolean(true())\n\nand this is false:\n\n    boolean(false())",
    "ItemText": null,
    "CreateDate": "2005-09-27T14:21:24.9570000",
    "EndDate": null,
    "ModificationDate": "2005-09-27T14:21:24.9570000",
    "DocumentId": "2076071714",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5458",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": ".htaccess WARNING for Apache Servers: Do not encode the .htaccess file in UTF-8",
    "SortOrdinal": null,
    "ItemChar": "Do not encode the .htaccess file in UTF-8. This will cause an internal server error. Just because you can do this:\n\n    AddDefaultCharset UTF-8\n\ndoes not mean that the .htaccess file itself should be encoded as UTF-8. For more information, see \"Various .htaccess samples and tutorials\" here:\n\n    https://panel.dreamhost.com/kbase/\n        index.cgi?area=3083&keyword=redirect",
    "ItemText": null,
    "CreateDate": "2005-11-30T17:16:05.6870000",
    "EndDate": null,
    "ModificationDate": "2005-11-30T17:16:05.6870000",
    "DocumentId": "2076071716",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5459",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "bash: Clearing the Command Line History",
    "SortOrdinal": null,
    "ItemChar": "Alexey Fadyushin of the redhat.com list archives writes: \"The correct way to clear history is to use 'history -c' because this will clear all history, including commands used in the session from which the command 'history -c' is given.\"\n\nThis is not as formal or effective as 'rm -f ~/.bash_history'.",
    "ItemText": null,
    "CreateDate": "2005-11-01T14:38:56.3370000",
    "EndDate": null,
    "ModificationDate": "2005-11-01T14:38:56.3370000",
    "DocumentId": "2076071719",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5460",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP Code: A REST Call Using readfile(); WARNING: Mysterious \"Cannot modify header information\" Warnings in UTF-8 Encoded Documents",
    "SortOrdinal": null,
    "ItemChar": "The following uses the readfile() function to load an XML file. This pattern can be used for AJAX calls outside of the security sandbox:\n\n    header('Content-type:text/xml');\n    /*\n        WARNING:\n        Do not include a Unicode Signature or\n        Byte-order Mark (BOM) in this UTF8-encoded document.\n        Doing so should generate \"Cannot modify\n        header information...\" warnings in PHP.\n    */\n    $uri = $_GET['uri'];\n    @readfile($uri);",
    "ItemText": null,
    "CreateDate": "2005-11-14T16:54:11.2300000",
    "EndDate": null,
    "ModificationDate": "2005-11-14T16:54:11.2300000",
    "DocumentId": "2076071720",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5461",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript Code: DOM Routines; Dom.js; Abandoned Code",
    "SortOrdinal": null,
    "ItemChar": "\nfunction jsAnchorElement()\n{\n    var vCount = arguments.length\n\n    var oElement = window.document.createElement('a')\n\n    if(vCount > 0) oElement.href = arguments[0]\n    if(vCount > 1) oElement.innerHTML = arguments[1]\n    if(vCount > 2) oElement.id = arguments[2]\n    if(vCount > 3) oElement.className = arguments[3]\n    if(vCount > 4) oElement.title = arguments[4]\n\n    return oElement\n}\n\nfunction jsDivElement()\n{\n    var vCount = arguments.length\n\n    var oElement = window.document.createElement('div')\n\n    if(vCount > 0) oElement.innerHTML = arguments[0]\n    if(vCount > 1) oElement.id = arguments[1]\n    if(vCount > 2) oElement.className = arguments[2]\n\n    return oElement\n}\n\nfunction jsImageElement()\n{\n    var vCount = arguments.length\n\n    var oElement = window.document.createElement('img')\n\n    if(vCount > 0) oElement.src = arguments[0]\n    if(vCount > 1) oElement.alt = arguments[1]\n    if(vCount > 2) oElement.id = arguments[2]\n    if(vCount > 3) oElement.className = arguments[3]\n\n    return oElement\n}\n\n/*\n\nfunction jsTableElement()\n{\n    var vCount = arguments.length\n    var oXmlRows = null\n    var oTableFormatting = null\n\n    var oElement = window.document.createElement('table')\n\n    if(vCount > 0) oXmlRows = arguments[0]\n    if(vCount > 1) oElement.id = arguments[1]\n    if(vCount > 2) oElement.className = arguments[2]\n    if(vCount > 3) oTableFormatting = arguments[3]\n\n    var oRow = null\n    var oCell = null\n\n    for(var y = 0;y < oXmlRows.length;y++)\n    {\n        oRow = window.document.createElement('tr')\n        for(var x = 0;x < oXmlRows[y].childNodes.length;x++)\n        {\n            if(oXmlRows[y].childNodes[x].nodeType == 1)\n            {\n                oCell = window.document.createElement('td')\n                oCell.innerHTML = oXmlRows[y].childNodes[x].firstChild.nodeValue\n                oRow.appendChild(oCell)\n            }\n        }\n        oElement.appendChild(oRow)\n    }\n\n    return oElement\n}\n\nfunction TableFormatting()\n{\n    this.firstColumnIsHeader = null\n    this.headerArray = null\n    this.oddRowClassName = null\n    this.useElementNames = null\n    this.lastRowClassName = null\n    this.columnArray = null\n}\n\n*/\n",
    "ItemText": null,
    "CreateDate": "2005-12-02T22:30:35.9630000",
    "EndDate": null,
    "ModificationDate": "2005-12-02T22:30:35.9630000",
    "DocumentId": "2076071722",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5462",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flash MX ActionScript 2.0: Flippant Remarks about createClassObject(); Array()",
    "SortOrdinal": null,
    "ItemChar": "createClassObject() is a method of UIObject. \"UIObject is the base class for all version 2 components; it is not a visual component. The UIObject class wraps the ActionScript MovieClip object and contains functions and properties that allow version 2 components to share some common behavior. Wrapping the MovieClip class allows Macromedia to add new events and extend functionality in the future without breaking content.\"\n\nUIObject for Flash MX 2004 is referenced here:\n\n    http://livedocs.macromedia.com/flash/mx2004/\n        \\main_7_2/wwhelp/wwhimpl/common/html/\n            wwhelp.htm?context=Flash_MX_2004&file=00002930.html\n\ncreateClassObject() may \"silently\" fail when object initiation parameters are incorrect with respect to the current build of the ActionScript compiler. For example, the List object will not populate an instance properly such that this pattern is recommended for the moment:\n\n    import mx.controls.List;\n    this.createClassObject(List,'oList',\n        this.getNextHighestDepth());\n    \n    var oPlayList:Array = new Array();\n    \n    with(oList)\n    {\n        move(10,96);\n        dataProvider = oPlayList;\n        rowCount = 14;\n    }\n    \n    oPlayList.push({label:'song one',\n        data:'./audio/mp3/Mikey Dread - 05.mp3'});\n    oPlayList.push({label:'song two',\n        data:'./audio/mp3/Mikey Dread - 06.mp3'});\n    oPlayList.push({label:'song three',\n        data:'./audio/mp3/Mikey Dread - 07.mp3'});\n    \n    oList.selectedIndex = 0;\n    //selectedIndex is undefined by default.\n    \n    var oListenChange:Object = new Object();\n    oListenChange.change = function(e:Object)\n    {\n        var oSelectedItem:Object = e.target.selectedItem;\n        with(oAudioDisplay)\n        {\n            setMedia(oSelectedItem.data,'MP3');\n            play();\n        }\n    }\n    oList.addEventListener('change',oListenChange);\n    ",
    "ItemText": null,
    "CreateDate": "2005-12-22T11:27:05.7200000",
    "EndDate": null,
    "ModificationDate": "2005-12-22T11:27:05.7200000",
    "DocumentId": "2076071723",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5463",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flash MX ActionScript 2.0: Explicitly Adding the DataProvider API to An Array()",
    "SortOrdinal": null,
    "ItemChar": "//This may be useful:\n\nimport mx.controls.listclasses.DataProvider;\nDataProvider.Initialize(Array);",
    "ItemText": null,
    "CreateDate": "2005-12-22T11:37:16.8570000",
    "EndDate": null,
    "ModificationDate": "2005-12-22T11:37:16.8570000",
    "DocumentId": "2076071724",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5464",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Word 2003: Flippant Remarks about XML Expansion Packs",
    "SortOrdinal": null,
    "ItemChar": "I will never build an XML Expansion Pack. This sacred vow is based on the description of them in \"XML Expansion Packs [Word 2003 XML Reference]\":\n\n    http://msdn.microsoft.com/library/en-us/\n        WordXMLCDK/html/cdkAdvancedExpansion_HV01112412.asp\n\nThe XML Expansion pack \"may include any type of file, such as, but not limited to: XML schemas, Extensible Stylesheet Language Transforms (XSLTs), dynamic-link libraries (DLLs), and image files, as well as additional XML files, HTML files, Microsoft® Office Word 2003 or Microsoft Office Excel 2003 documents, and text files.\" What about a kitchen sink? I am overwhelmed with a sense of clutter and chaos. XML Expansion packs are the ideal \"Smart Document\" solution for bloated organizations.\n\nThe only reason why I mention XML Expansion Packs is because of its relationship to this Registry Key:\n\n    \\HKEY_CURRENT_USER\\Software\\Microsoft\\Schema Library\\\n\nI thought this key would help me remove orphan references to schemas. This is unclear but what is clear is that, \"To properly set up the XML expansion pack on the user's computer, Office must also set up the Schema Library registry subkey to link the XML namespace used by the XML expansion pack to each of the associated files.\" A quote from \"How Office Installs XML Expansion Packs\":\n\n    http://msdn.microsoft.com/library/\n        en-us/sdsdk/html/sdconDeployment\n            HowXEPInstalled_HV01085034.asp",
    "ItemText": null,
    "CreateDate": "2006-01-10T23:16:17.7400000",
    "EndDate": null,
    "ModificationDate": "2006-01-10T23:16:17.7400000",
    "DocumentId": "2076071725",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5465",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL: User-Defined Function Structure; Scalar Form",
    "SortOrdinal": null,
    "ItemChar": "USE [Database]\nGO\n\nIF OBJECT_ID('fUserDefined') IS NOT NULL \nBEGIN \n    DROP FUNCTION fUserDefined\n    IF OBJECT_ID('fUserDefined') IS NOT NULL\n        PRINT '<<< FAILED DROPPING FUNCTION fUserDefined >>>'\n    ELSE \n        PRINT '<<< DROPPED FUNCTION fUserDefined >>>'\nEND\nGO\n\nCREATE FUNCTION dbo.fUserDefined\n    (\n        @param1 varchar(255) = NULL\n    )\nRETURNS bit\nAS\n/*\n    Description: \n    Developer: Bryan Wilhite\n*/\nBEGIN\n    DECLARE\n        @bit bit\n\nRETURN @bit\nEND\nGO\n\nGRANT EXECUTE ON fUserDefined TO public\nGO\n\nIF OBJECT_ID('fUserDefined') IS NOT NULL \n    PRINT '<<< CREATED FUNCTION fUserDefined >>>' \nELSE \n    PRINT '<<< FAILED CREATING FUNCTION fUserDefined >>>' \nGO\n",
    "ItemText": null,
    "CreateDate": "2007-03-19T19:51:30.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-19T19:51:30.0000000",
    "DocumentId": "2076071726",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5466",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL: User-Defined Function Structure; Table/Set Form",
    "SortOrdinal": null,
    "ItemChar": "USE [Database]\nGO\n\nIF OBJECT_ID('fUserDefined') IS NOT NULL \nBEGIN \n    DROP FUNCTION fUserDefined\n    IF OBJECT_ID('fUserDefined') IS NOT NULL\n        PRINT '<<< FAILED DROPPING FUNCTION fUserDefined >>>'\n    ELSE \n        PRINT '<<< DROPPED FUNCTION fUserDefined >>>'\nEND\nGO\n\nCREATE FUNCTION dbo.fUserDefined\n    (\n        @param1 varchar(255) = NULL\n    )\nRETURNS @set TABLE (idx smallint PRIMARY KEY, value varchar(1024))\nAS\nBEGIN\n\n/*\n    Description: \n    Developer: Bryan Wilhite\n\n    INSERT INTO @set (idx, value) VALUES (@idx, @value)\n*/\n\nRETURN\nEND\nGO\n\nGRANT SELECT ON fUserDefined TO public\nGO\n\nIF OBJECT_ID('fUserDefined') IS NOT NULL \n    PRINT '<<< CREATED FUNCTION fUserDefined >>>' \nELSE \n    PRINT '<<< FAILED CREATING FUNCTION fUserDefined >>>' \nGO\n",
    "ItemText": null,
    "CreateDate": "2007-03-19T19:51:58.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-19T19:51:58.0000000",
    "DocumentId": "2076071727",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5467",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL Code: Date Format User-Defined Function; dbo.fDateFormat()",
    "SortOrdinal": null,
    "ItemChar": "IF OBJECT_ID('fDateFormat') IS NOT NULL \nBEGIN \n    DROP FUNCTION fDateFormat\n    IF OBJECT_ID('fDateFormat') IS NOT NULL\n        PRINT '<<< FAILED DROPPING FUNCTION fDateFormat >>>'\n    ELSE \n        PRINT '<<< DROPPED FUNCTION fDateFormat >>>'\nEND\n;\n/*\n    Based on dbo.FormatDateTime\n    at http://www.aspfaq.com/show.asp?id=2460.\n\n    \"You cannot use a non-deterministic function\n    within a UDF, e.g. GETDATE().\"\n    (http://www.aspfaq.com/show.asp?id=2439)\n*/\nCREATE FUNCTION dbo.fDateFormat\n    (\n        @cmdName varchar(16) = NULL\n    ,   @dt      datetime    = NULL\n    )\nRETURNS varchar(64)\nAS\nBEGIN\n    DECLARE @dtStr VARCHAR(64)\n\n    IF @cmdName = 'LONGDATE'\n    BEGIN\n        SET @dtStr = DATENAME(dw, @dt) \n        + ',' + SPACE(1) + DATENAME(m, @dt) \n        + SPACE(1) + CAST(DAY(@dt) AS VARCHAR(2)) \n        + ',' + SPACE(1) + CAST(YEAR(@dt) AS CHAR(4)) \n    END\n\n    IF @cmdName = 'LONGDATEANDTIME'\n    BEGIN\n        SET @dtStr = DATENAME(dw, @dt) \n        + ',' + SPACE(1) + DATENAME(m, @dt) \n        + SPACE(1) + CAST(DAY(@dt) AS VARCHAR(2)) \n        + ',' + SPACE(1) + CAST(YEAR(@dt) AS CHAR(4)) \n        + SPACE(1) + RIGHT(CONVERT(CHAR(20), \n        @dt - CONVERT(DATETIME, CONVERT(CHAR(8), \n        @dt, 112)), 22), 11)\n    END\n\n    IF @cmdName = 'SHORTDATE'\n    BEGIN \n        SET @dtStr = LEFT(CONVERT(CHAR(19), @dt, 0), 11)\n    END\n \n    IF @cmdName = 'SHORTDATEANDTIME'\n    BEGIN\n        SET @dtStr = REPLACE(REPLACE(CONVERT(CHAR(19), @dt, 0), \n            'AM', ' AM'), 'PM', ' PM') \n    END\n\n    IF @cmdName = 'UNIXTIMESTAMP'\n    BEGIN\n        SET @dtStr = CAST(DATEDIFF(SECOND, '19700101', @dt) AS VARCHAR(64)) \n    END\n\n    IF @cmdName = 'YYYYMMDD'\n    BEGIN\n        SET @dtStr = CONVERT(CHAR(8), @dt, 112) \n    END\n\n    IF @cmdName = 'YYYY-MM-DD'\n    BEGIN\n        SET @dtStr = CONVERT(CHAR(10), @dt, 23) \n    END\n\n    IF @cmdName = 'YYMMDD'\n    BEGIN\n        SET @dtStr = CONVERT(VARCHAR(8), @dt, 12) \n    END\n\n    IF @cmdName = 'YY-MM-DD'\n    BEGIN\n        SET @dtStr = STUFF(STUFF(CONVERT(VARCHAR(8), @dt, 12),5, 0, '-'), 3, 0, '-')\n    END\n\n    IF @cmdName = 'MMDDYY'\n    BEGIN\n        SET @dtStr = REPLACE(CONVERT(CHAR(8), @dt, 10), '-', SPACE(0)) \n    END\n\n    IF @cmdName = 'MM-DD-YY'\n    BEGIN\n        SET @dtStr = CONVERT(CHAR(8), @dt, 10) \n    END\n\n    IF @cmdName = 'MM/DD/YY' \n    BEGIN\n        SET @dtStr = CONVERT(CHAR(8), @dt, 1) \n    END\n\n    IF @cmdName = 'MM/DD/YYYY'\n    BEGIN\n        SET @dtStr = CONVERT(CHAR(10), @dt, 101) \n    END\n    IF @cmdName = 'DDMMYY'\n    BEGIN\n        SET @dtStr = REPLACE(CONVERT(CHAR(8), @dt, 3), '/', SPACE(0)) \n    END\n    IF @cmdName = 'DD-MM-YY'\n    BEGIN\n        SET @dtStr = REPLACE(CONVERT(CHAR(8), @dt, 3), '/', '-') \n    END\n\n    IF @cmdName = 'DD/MM/YY'\n    BEGIN\n        SET @dtStr = CONVERT(CHAR(8), @dt, 3) \n    END\n\n    IF @cmdName = 'DD/MM/YYYY'\n    BEGIN\n        SET @dtStr = CONVERT(CHAR(10), @dt, 103) \n    END\n\n    IF @cmdName = 'HH:MM:SS 24'\n    BEGIN\n        SET @dtStr = CONVERT(CHAR(8), @dt, 8) \n    END\n\n    IF @cmdName = 'HH:MM 24'\n    BEGIN\n        SET @dtStr = LEFT(CONVERT(VARCHAR(8), @dt, 8), 5) \n    END\n\n    IF @cmdName = 'HH:MM:SS 12'\n    BEGIN\n        SET @dtStr = LTRIM(RIGHT(CONVERT(VARCHAR(20), @dt, 22), 11)) \n    END\n\n    IF @cmdName = 'HH:MM 12'\n    BEGIN\n        SET @dtStr = LTRIM(SUBSTRING(CONVERT( \n        VARCHAR(20), @dt, 22), 10, 5) \n        + RIGHT(CONVERT(VARCHAR(20), @dt, 22), 3)) \n    END\n\n    IF @cmdName = 'RFC822'\n    BEGIN\n        IF LEN(DATENAME(dd,@dt)) > 1\n        BEGIN\n            SET @dtStr = SUBSTRING(DATENAME(dw,@dt),1,3)\n            + ', '\n            + DATENAME(dd,@dt)\n            + ' '\n            + SUBSTRING(DATENAME(m,@dt),1,3)\n            + ' '\n            + DATENAME(yy,@dt)\n            + ' '\n            + CONVERT(CHAR(8), @dt, 8)\n            + ' +0000'\n        END\n        ELSE\n        BEGIN\n            SET @dtStr = SUBSTRING(DATENAME(dw,@dt),1,3)\n            + ', 0'\n            + DATENAME(dd,@dt)\n            + ' '\n            + SUBSTRING(DATENAME(m,@dt),1,3)\n            + ' '\n            + DATENAME(yy,@dt)\n            + ' '\n            + CONVERT(CHAR(8), @dt, 8)\n            + ' +0000'\n        END\n\n    END\n\n    RETURN @dtStr\nEND\n;\nGRANT EXECUTE ON fDateFormat TO public\n;\nIF OBJECT_ID('fDateFormat') IS NOT NULL \n    PRINT '<<< CREATED FUNCTION fDateFormat >>>' \nELSE \n    PRINT '<<< FAILED CREATING FUNCTION fDateFormat >>>' \n;\n",
    "ItemText": null,
    "CreateDate": "2006-01-14T09:47:32.5330000",
    "EndDate": null,
    "ModificationDate": "2006-01-14T09:47:32.5330000",
    "DocumentId": "2076071728",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5468",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2000: UTC datetime values; GETUTCDATE()",
    "SortOrdinal": null,
    "ItemChar": "From Eron Wright's Blog: \"You can convert local datetime values to UTC datetime values, and vice-versa, using the built-in GETUTCDATE() function:\"\n\n    DECLARE @LocalDate DATETIME\n    SET @LocalDate = GETDATE()\n\n    -- convert local date to utc date\n    DECLARE @UTCDate DATETIME\n    SET @UTCDate = DATEADD(Hour,DATEDIFF(Hour,GETUTCDATE(), GETDATE()),@LocalDate)\n\n    -- convert utc date to local date\n    DECLARE @LocalDate2 DATETIME\n    SET @LocalDate2 = DATEADD(Hour, DATEDIFF(Hour, GETDATE(), GETUTCDATE()), @UTCDate)\n    SELECT @LocalDate, @UTCDate, @LocalDate2\n\n\"Note that GETUTCDATE() returns the current datetime in UTC. By comparing the value with GETDATE() we can determine the time zone, which can then be used to adjust any date.\" For more information see:\n\n    http://geekswithblogs.net/ewright/archive/2004/09/14/11180.aspx",
    "ItemText": null,
    "CreateDate": "2006-01-14T09:52:53.3470000",
    "EndDate": null,
    "ModificationDate": "2006-01-14T09:52:53.3470000",
    "DocumentId": "2076071729",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5469",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows XP PROBLEM: Internet Explorer Script Error; Error 608; Library not registered; shdoclc.dll; printing problem",
    "SortOrdinal": null,
    "ItemChar": "Internet Explorer 6.x in Windows XP may not print or show the Print Preview dialog. Instead an \"Internet Explorer Script Error\" message is shown, indicating that a \"library\" (*.dll) is not registered.\n\nAccording to Nick at askatechguy.com, this library is iepeers.dll so the following command should fix the problem:\n\n    regsvr32 iepeers.dll",
    "ItemText": null,
    "CreateDate": "2006-01-22T10:03:38.4600000",
    "EndDate": null,
    "ModificationDate": "2006-01-22T10:03:38.4600000",
    "DocumentId": "2076071730",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5470",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows XP PROBLEM: Windows Update/Microsoft Update Error 0x8002801D",
    "SortOrdinal": null,
    "ItemChar": "Windows Update/Microsoft Update Error 0x8002801D indicates a \"library not registered\" error. It follows that the this command should fix the problem:\n\n    regsvr32 msxml3.dll",
    "ItemText": null,
    "CreateDate": "2006-01-22T10:08:35.9700000",
    "EndDate": null,
    "ModificationDate": "2006-01-22T10:08:35.9700000",
    "DocumentId": "2076071731",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5471",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Word 2003 Problem: Word Loads VSTO Projects with Latest .NET Runtime by Default for Debugging; Visual Studio Tools for Office 2003",
    "SortOrdinal": null,
    "ItemChar": "Ken Laws of Microsoft writes the following: \"Once Visual Studio 2005 is installed you may encounter problems debugging your VSTO 2003 project from within Visual Studio 2003. This is again a result of Microsoft Office loading the project in the 2.0 Framework. A couple of options that you have for debugging would be to convert the project to a VSTO 2005 project and you could then debug using Visual Studio 2005 or you could also implement an app config file to force Microsoft Office to load the project in the 1.1. Framework.\"\n\nThis is the format of the configuration file:\n\n    <configuration>\n    <startup>\n        <supportedRuntime version=\"v1.1.4322\"/> \n    </startup>\n    </configuration>\n\nThis fragment should be saved in an XML file saved at this path:\n\n    %Program Files%\\Microsoft Office\\OFFICE11\\WINWORD.EXE.CONFIG\n\nFor more details, see \"Targeting a .NET Framework Version\" at:\n\n    http://msdn.microsoft.com/library/\n        en-us/cpguide/html/cpcontargetingnetframeworkversion.asp",
    "ItemText": null,
    "CreateDate": "2006-01-25T10:59:07.5670000",
    "EndDate": null,
    "ModificationDate": "2006-01-25T10:59:07.5670000",
    "DocumentId": "2076071732",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5472",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MCAD/MCSD Notes: Chapter 9, Lesson 1; Building a Web Application",
    "SortOrdinal": null,
    "ItemChar": "Lesson 1: Building a Web Application\n\nThis lesson quickly introduces the concepts of the meta-data associated with .NET assemblies and the configuration of automatic assembly compilation with \"build options.\"\n\n* \"Web applications have two build options: debug and release.\"\n\nIt may be better to remind us that Visual Studio solutions have two, default, build options: Debug and Release. Other configurations can be added. For more, see \"Default and Custom Builds\" at:\n\n    http://msdn.microsoft.com/library/en-us/\n        vsintro7/html/vxconprojectbuilds.asp\n\nProject-level build options in the Property Pages dialog can be set for additional control over the build process.\n\n* \"The application's build option and Web.config setting should agree. There is no advantage in having one set to debug and the other set to release...\"\n\n* \"To identify your application, open the AssemblyInfo file and enter the application's information in the assembly attributes.\"\n\nThese declarative attributes should not be confused with similar procedural properties in the System.Windows.Forms.Application class.\n\n",
    "ItemText": null,
    "CreateDate": "2006-02-09T21:04:14.0800000",
    "EndDate": null,
    "ModificationDate": "2006-02-09T21:04:14.0800000",
    "DocumentId": "2076071733",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5473",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: Instantiating an XPathDocument() Object from a String",
    "SortOrdinal": null,
    "ItemChar": "//Instantiating an XPathDocument() Object from a String:\nXPathDocument xsl;\nString xslString;\nxsl = new XPathDocument(new StringReader(xslString));",
    "ItemText": null,
    "CreateDate": "2006-01-26T15:11:21.7070000",
    "EndDate": null,
    "ModificationDate": "2006-01-26T15:11:21.7070000",
    "DocumentId": "2076071734",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5474",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET Code: Saving Form Data in a Click Event",
    "SortOrdinal": null,
    "ItemChar": "    protected void CmdSave_Click(object sender, EventArgs e)\n    {\n        Response.Clear();\n        Response.ContentType = \"application/octet-stream\";\n        Response.AddHeader(\"Content-Disposition\",\n            @\"attachment; filename=\"\"XmlFile.html\"\"\");\n        Response.Flush();\n        Response.End();\n    }\n\n",
    "ItemText": null,
    "CreateDate": "2006-03-07T11:48:02.9670000",
    "EndDate": null,
    "ModificationDate": "2006-03-07T11:48:02.9670000",
    "DocumentId": "2076071740",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5475",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: ADSI Class for .NET 1.1 Active Directory Searching",
    "SortOrdinal": null,
    "ItemChar": "    /// <summary>\n    /// Static members for ADSI.\n    /// </summary>\n    public class Adsi\n    {\n        /// <summary>\n        /// Wrapper for the\n        /// <see cref=\"System.DirectoryServices.DirectoryEntry.Exists\"/>\n        /// method.\n        /// </summary>\n        /// <param name=\"Path\">\n        /// An LDAP-style query string.\n        /// </param>\n        /// <returns>\n        /// Returns <c>true</c> when a valid entry is found.\n        /// </returns>\n        public static bool EntryExists(string Path)\n        {\n            bool bln = false;\n\n            try\n            {\n                bln = DirectoryEntry.Exists(Path);\n            }\n            catch { return bln; }\n\n            return bln;\n        }\n\n        /// <summary>\n        /// Returns an\n        /// <see cref=\"System.Collections.ArrayList\"/>\n        /// of the Active Directory Security Groups\n        /// for the target\n        /// <see cref=\"System.DirectoryServices.DirectoryEntry\"/>.\n        /// </summary>\n        /// <param name=\"Path\">\n        /// An LDAP-style query string.\n        /// </param>\n        public static ArrayList EntryGroups(string Path)\n        {\n            ArrayList al = new ArrayList();\n\n            if (!EntryExists(Path)) return al;\n\n            using (DirectoryEntry user = new DirectoryEntry(Path))\n            {\n\n                object adsGroups = user.Invoke(\"Groups\");\n\n                foreach (object adsGroup in (IEnumerable)adsGroups)\n                {\n                    using (DirectoryEntry group = new DirectoryEntry(adsGroup))\n                    {\n                        al.Add(group.Name);\n                    }\n                }\n            }\n            return al;\n        }\n\n        /// <summary>\n        /// Returns a\n        /// <see cref=\"System.Collections.SortedList\"/>\n        /// of\n        /// <see cref=\"System.DirectoryServices.DirectoryEntry.Properties\"/>.\n        /// </summary>\n        /// <param name=\"Path\">\n        /// An LDAP-style query string.\n        /// </param>\n        public static SortedList EntryProperties(string Path)\n        {\n            SortedList entries = null;\n            DirectoryEntry entry = null;\n\n            if (EntryExists(Path))\n            {\n                entry = new DirectoryEntry(Path);\n                entries = new SortedList();\n\n                foreach (string name in entry.Properties.PropertyNames)\n                {\n                    if (entry.Properties[name].Value is Byte[])\n                    {\n                        entries.Add(name, \"[Complex Data Structure]\");\n                    }\n                    else\n                    {\n                        entries.Add(name, entry.Properties[name].Value.ToString());\n                    }\n                }\n            }\n\n            return entries;\n        }\n    }\n",
    "ItemText": null,
    "CreateDate": "2006-03-07T20:34:22.3730000",
    "EndDate": null,
    "ModificationDate": "2006-03-07T20:34:22.3730000",
    "DocumentId": "2076071741",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5476",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET 2.0 PROBLEM: \"The current identity (NT AUTHORITY\\NETWORK SERVICE) does not have write access to 'C:\\WINDOWS\\Microsoft.NET\\Framework\\v2.0.50215\\Temporary ASP.NET Files'\"",
    "SortOrdinal": null,
    "ItemChar": "Switching a root-level Web site over to ASP.NET 2.0 may cause this error: \"The current identity (NT AUTHORITY\\NETWORK SERVICE) does not have write access to 'C:\\WINDOWS\\Microsoft.NET\\Framework\\v2.0.50215\\Temporary ASP.NET Files'\".\n\nThis problem is usually resolved by defining the same Security Permissions for %SYSTEMROOT%\\Microsoft.NET\\Framework\\v1.1.4322\\Temporary ASP.NET Files for %SYSTEMROOT%\\Microsoft.NET\\Framework\\v2.0.50215\\Temporary ASP.NET Files---and the same permissions for \\wwwroot for the root directory of the Web site.\n\nThis problem usually appears in Windows Server 2003 because of its tight security settings.",
    "ItemText": null,
    "CreateDate": "2006-04-11T16:11:08.5030000",
    "EndDate": null,
    "ModificationDate": "2006-04-11T16:11:08.5030000",
    "DocumentId": "2076071742",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5477",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code in Cold Storage: A Schema-Based Data Input Wrapper for XML Input",
    "SortOrdinal": null,
    "ItemChar": "using Songhay.Xml;\nusing System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Schema;\n\nnamespace Songhay.Data\n{\n    /// <summary>\n    /// Data input wrapper for XML input.\n    /// </summary>\n    public abstract class XmlDataInput\n    {\n        /// <summary>\n        /// When <c>true</c> the constructor input is valid.\n        /// </summary>\n        public bool IsValid\n        {\n            get { return this._isValid; }\n            set { this._isValid = value; }\n        }\n\n        /// <summary>\n        /// Validation report.\n        /// </summary>\n        public string ValidationMessage\n        {\n            get { return this._validationMessage; }\n            set { this._validationMessage = value; }\n        }\n\n        /// <summary>\n        /// Required validation implementation.\n        /// </summary>\n        /// <param name=\"xpDoc\">\n        /// The <see cref=\"System.Xml.XPath.XPathDocument\"/> to validate.\n        /// </param>\n        protected void Validate(String XmlPostData, String SchemaPath)\n        {\n            XmlReaderSettings settings = new XmlReaderSettings();\n            settings.CheckCharacters = true;\n            settings.ValidationType = ValidationType.Schema;\n            settings.Schemas.Add(null,SchemaPath);\n            settings.ValidationFlags = XmlSchemaValidationFlags.ReportValidationWarnings;\n            settings.ValidationEventHandler +=\n                new ValidationEventHandler(XmlValidationEventHandler);\n\n            this.ValidationMessage = String.Empty;\n            this._isValid = true;\n\n            XmlReader reader =\n                XmlReader.Create(new StringReader(XmlPostData),settings);\n        }\n\n        private void XmlValidationEventHandler(object sender, ValidationEventArgs e)\n        {\n            this._validationMessage =\n                String.Format(\"{0}{1}{2}{1}\",\n                    this._validationMessage,Environment.NewLine,e.Message);\n\n            if (e.Severity == XmlSeverityType.Error)\n            {\n                this._isValid = false;\n\n                if(e.Exception != null)\n                {\n                    this._validationMessage =\n                        String.Format(\"{0}{1}{1}Exception:{1}\",\n                            this._validationMessage,Environment.NewLine);\n                    this._validationMessage =\n                        String.Format(\"{0}{1}    Line Number:{2}{1}\",\n                            this._validationMessage, Environment.NewLine, e.Exception.LineNumber);\n                    this._validationMessage =\n                        String.Format(\"{0}{1}    Line Position:{2}{1}\",\n                            this._validationMessage, Environment.NewLine, e.Exception.LinePosition);\n                    this._validationMessage =\n                        String.Format(\"{0}{1}    Message:{2}{1}\",\n                            this._validationMessage, Environment.NewLine, e.Exception.Message);\n                }\n            }\n        }\n\n        private bool _isValid;\n        private string _validationMessage;\n    }\n}\n",
    "ItemText": null,
    "CreateDate": "2006-04-25T12:22:38.6570000",
    "EndDate": null,
    "ModificationDate": "2006-04-25T12:22:38.6570000",
    "DocumentId": "2076071743",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5478",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: GetNamespaceManager() Member for Static XPathDocument Helper Class; Songhay.Xml.XmlUtility",
    "SortOrdinal": null,
    "ItemChar": "/// <summary>\n/// Returns an <see cref=\"System.Xml.XmlNamespaceManager\"/>\n/// with respect to the scope element of the specified node.\n/// </summary>\n/// <param name=\"XpNode\">\n/// The <see cref=\"System.Xml.XPath.XPathNavigator\"/> node.\n/// </param>\npublic static XmlNamespaceManager GetNamespaceManager(XPathNavigator XpNode)\n{\n    XmlNamespaceManager nsman = new XmlNamespaceManager(XpNode.NameTable);\n    IDictionary<String, String> names = XpNode.GetNamespacesInScope(XmlNamespaceScope.Local);\n    foreach (KeyValuePair<String, String> kv in names)\n    {\n        nsman.AddNamespace(kv.Key, kv.Value);\n    }\n\n    return nsman;\n}\n",
    "ItemText": null,
    "CreateDate": "2006-05-08T12:41:06.2430000",
    "EndDate": null,
    "ModificationDate": "2006-05-08T12:41:06.2430000",
    "DocumentId": "2076071744",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5479",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code in Cold Storage: ConnectionStringIsValid()",
    "SortOrdinal": null,
    "ItemChar": "\n        private static bool ConnectionStringIsValid(SqlConnection SqlCnn,\n            string ConnectionString)\n        {\n            /*\n                FUNKYKB:\n                The connection string is parsed immediately after being set.\n                If errors in syntax are found when parsing, a runtime exception,\n                such as ArgumentException, is generated.\n                Other errors can be found only when an attempt is made\n                to open the connection.\n\n                In ADO.NET 2.0 this procedure is replaced by the\n                SqlConnectionStringBuilder.\n            */\n            bool success = false;\n\n            if (SqlCnn.State == ConnectionState.Open) return success;\n\n            SqlCnn.ConnectionString = ConnectionString;\n            success = true;\n\n            return success;\n        }\n",
    "ItemText": null,
    "CreateDate": "2006-05-09T15:12:30.4870000",
    "EndDate": null,
    "ModificationDate": "2006-05-09T15:12:30.4870000",
    "DocumentId": "2076071745",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5480",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: Loading A Bunch of Files",
    "SortOrdinal": null,
    "ItemChar": "\n#region Unpack server log files and combine:\n\nstring root = Environment.ExpandEnvironmentVariables(@\"C:\\data\\raw_logs\");\nif (Directory.Exists(root))\n    this.WriteToLog(String.Format(\"Root found: {0} {1}\", root, Environment.NewLine));\nelse\n{\n    this.WriteToLog(String.Format(\"Root not found: {0} {1}\", root, Environment.NewLine));\n    return;\n}\n\nstring zipExe = Environment.ExpandEnvironmentVariables(@\"%ProgramFiles%\\7-Zip\\7z.exe\");\nstring zipExeArgs = @\"e -tother -o{0} {1}\";\nif (File.Exists(zipExe))\n    this.WriteToLog(String.Format(\"Archive utility found: {0} {1}\", zipExe, Environment.NewLine));\nelse\n{\n    this.WriteToLog(String.Format(\"Archive utility not found: {0} {1}\", zipExe, Environment.NewLine));\n    return;\n}\n\nstring archiveTmpFolder = Environment.ExpandEnvironmentVariables(@\"C:\\data\\raw_logs\\out\");\nif (Directory.Exists(archiveTmpFolder))\n    this.WriteToLog(String.Format(\"Archive temp folder found: {0} {1}\", archiveTmpFolder, Environment.NewLine));\nelse\n{\n    this.WriteToLog(String.Format(\"Archive temp folder not found: {0} {1}\", archiveTmpFolder, Environment.NewLine));\n    return;\n}\n\nforeach (string p in Directory.GetFiles(root))\n{\n    if (p.Contains(\".gz\"))\n    {\n        this.WriteToLog(String.Format(\"Extracting {0}…{1}\", p, Environment.NewLine));\n        ProcessStartInfo info = new ProcessStartInfo(zipExe);\n        info.Arguments = String.Format(zipExeArgs, archiveTmpFolder, p);\n        info.CreateNoWindow = true;\n        info.UseShellExecute = false;\n        Process.Start(info);\n    }\n    else if (p.Contains(\"access.log.\"))\n        File.Copy(p, String.Concat(archiveTmpFolder, String.Concat(archiveTmpFolder, @\"\\\", IO.FileName(p))));\n}\n\nstring combineCommand = String.Format(@\"copy {0}\\access* {1}\\log.txt\", archiveTmpFolder, root);\nthis.WriteToLog(String.Format(\"Copying and combining log file data…{0}\", Environment.NewLine));\nthis.WriteToLog(String.Format(\"{0}{1}\", Diagnostics.RunConsoleCommand(combineCommand), Environment.NewLine));\n\nthis.WriteToLog(String.Format(\"Clearing archive temp folder…{0}\", Environment.NewLine));\nthis.WriteToLog(String.Format(\"{0}{1}\", Diagnostics.RunConsoleCommand(String.Format(@\"del /q {0}\\access*\", archiveTmpFolder)), Environment.NewLine));\n\n#endregion\n\n",
    "ItemText": null,
    "CreateDate": "2006-06-02T21:46:42.9670000",
    "EndDate": null,
    "ModificationDate": "2006-06-02T21:46:42.9670000",
    "DocumentId": "2076071746",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5481",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Money 2006 Standard PROBLEM: \"You cannot change the credit limit for a credit card account in Money 2005 Standard or in Money Standard 2006\"",
    "SortOrdinal": null,
    "ItemChar": "The title of the article is self-explanatory: \"You cannot change the credit limit for a credit card account in Money 2005 Standard or in Money Standard 2006.\" As of this writing, the article is here:\n\n   http://support.microsoft.com/?scid=kb;en-us;914968",
    "ItemText": null,
    "CreateDate": "2006-06-24T23:04:06.5300000",
    "EndDate": null,
    "ModificationDate": "2006-06-24T23:04:06.5300000",
    "DocumentId": "2076071755",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5482",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2000: CONVERT() Style Identifiers",
    "SortOrdinal": null,
    "ItemChar": "0 or 100: mon dd yyyy hh:miAM (or PM)\n101: mm/dd/yy\n102: yy.mm.dd\n103: dd/mm/yy\n104: dd.mm.yy\n105: dd-mm-yy\n106: dd mon yy\n107: Mon dd, yy\n108: hh:mm:ss\n9 or 109: mon dd yyyy hh:mi:ss:mmmAM (or PM)\n110: mm-dd-yy\n111: yy/mm/dd\n112: yymmdd\n13 or 113: dd mon yyyy hh:mm:ss:mmm(24h)\n114: hh:mi:ss:mmm(24h)\n20 or 120: yyyy-mm-dd hh:mi:ss(24h)\n21 or 121: yyyy-mm-dd hh:mi:ss.mmm(24h)\n126: yyyy-mm-dd Thh:mm:ss.mmm(no spaces)\n130: dd mon yyyy hh:mi:ss:mmmAM\n131: dd/mm/yy hh:mi:ss:mmmAM",
    "ItemText": null,
    "CreateDate": "2006-07-12T16:16:42.7300000",
    "EndDate": null,
    "ModificationDate": "2006-07-12T16:16:42.7300000",
    "DocumentId": "2076071756",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5483",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# 2.0 Design Notes: default Keyword in Generic Code",
    "SortOrdinal": null,
    "ItemChar": "From the C# Programming Guide:\n\n\"Given a variable t of a parameterized type T, the statement t = null is only valid if T is a reference type and t = 0 will only work for numeric value types but not for structs. The solution is to use the default keyword, which will return null for reference types and zero for numeric value types.\"\n\n    public T GetNext()\n    {\n        T temp = default(T);\n\n        Node current = head;\n        if (current != null)\n        {\n            temp = current.Data;\n            current = current.Next;\n        }\n        return temp;\n    }\n\nFor more information, see:\n\n    http://msdn2.microsoft.com/en-us/library/xwth0h0d.aspx",
    "ItemText": null,
    "CreateDate": "2006-07-12T16:22:21.3500000",
    "EndDate": null,
    "ModificationDate": "2006-07-12T16:22:21.3500000",
    "DocumentId": "2076071757",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5484",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Default XSLT File for PHP REST Framework",
    "SortOrdinal": null,
    "ItemChar": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<xsl:stylesheet\n    version=\"1.0\"\n    xmlns=\"http://www.w3.org/1999/xhtml\"\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n    >\n\n    <xsl:output\n        encoding=\"utf-8\"\n        indent=\"yes\"\n        media-type=\"text/xml\"\n        omit-xml-declaration=\"yes\"\n        standalone=\"no\" />\n\n    <xsl:param name=\"cmd\" />\n\n    <xsl:template match=\"/\">\n        <div>\n        <xsl:choose>\n            <xsl:when test=\"/InternalMessage\"><xsl:call-template name=\"app_message\" /></xsl:when>\n\n            <xsl:otherwise>\n                <h1>Unknown Input</h1>\n                <p>Command: <xsl:value-of select=\"$cmd\"/></p>\n                <p>Server Response:</p>\n                <p><textarea id=\"RawServerResponse\"><xsl:copy-of select=\"/\" /></textarea></p>\n            </xsl:otherwise>\n        </xsl:choose>\n        </div>\n    </xsl:template>\n\n    <xsl:template name=\"app_message\">\n        <h1><xsl:value-of select=\"//Header\"/></h1>\n        <xsl:for-each select=\"//Line\">\n            <p><xsl:value-of select=\"node()\"/></p>\n        </xsl:for-each>\n    </xsl:template>\n\n</xsl:stylesheet> \n",
    "ItemText": null,
    "CreateDate": "2006-09-14T15:34:32.0830000",
    "EndDate": null,
    "ModificationDate": "2006-09-14T15:34:32.0830000",
    "DocumentId": "2076071758",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5485",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Linux Command: iptables",
    "SortOrdinal": null,
    "ItemChar": "\"Iptables is a firewall, installed by default on the Ubuntu Server.\"\n\n    https://help.ubuntu.com/community/IptablesHowTo\n\nFor more information, see \"Netfilter/iptables\":\n\n    http://en.wikipedia.org/wiki/Iptables",
    "ItemText": null,
    "CreateDate": "2006-09-22T20:46:17.2700000",
    "EndDate": null,
    "ModificationDate": "2006-09-22T20:46:17.2700000",
    "DocumentId": "2076071759",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5486",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu Linux Security Logs",
    "SortOrdinal": null,
    "ItemChar": "/var/log/syslog - general system log\n/var/log/auth.log - system authentication logs\n/var/log/mail.log - system mail logs\n/var/log/messages - general log messages\n/var/log/dmesg - kernel ring buffer messages, usually since system bootup\n\nFor more information, see \"Tips on keeping your Ubuntu Linux server secure\":\n\n    http://www.computerworld.com/action/article.do?\n        command=viewArticleBasic&articleId=9002691&pageNumber=3\n\n\"This article is excerpted from /The Official Ubuntu Book/ by Benjamin Mako Hill, Jono Bacon, Corey Burger, Jonathan Jesse and Ivan Krstic, copyright Prentice Hall. Reprinted with permission of Prentice Hall, all rights reserved.\"",
    "ItemText": null,
    "CreateDate": "2006-09-22T20:51:27.1070000",
    "EndDate": null,
    "ModificationDate": "2006-09-22T20:51:27.1070000",
    "DocumentId": "2076071760",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5487",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu Linux: Upgrading from Ubuntu Linux breezy to dapper by Hand",
    "SortOrdinal": null,
    "ItemChar": "This procedure is best for the server version of Ubuntu:\n\nEdit /etc/apt/sources.list\n\nChange the keyword \"breezy\" to \"dapper\".\n\nComment out any lines  starting with \"deb cdrom\" with the pound sign (#).\n\nsudo apt-get update\n\nsudo apt-get -y dist-upgrade\n\nFor more information on the /etc/apt/sources.list file, see \"Chapter 2 - Basic Configuration\" in the APT HOWTO:\n\n    http://www.debian.org/doc/manuals/apt-howto/ch-basico.en.html",
    "ItemText": null,
    "CreateDate": "2006-09-28T12:21:16.0630000",
    "EndDate": null,
    "ModificationDate": "2006-09-28T12:21:16.0630000",
    "DocumentId": "2076071761",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5488",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu Linux: Flippant Remarks about Setting Up Ubuntu Server in Virtual PC 2004",
    "SortOrdinal": null,
    "ItemChar": "Allocating 48MB of RAM for an Ubuntu Server VM running a LAMP image is reasonable. 96MB seems more than enough for a single-user development environment. The VM hard drive image should be about 1GB.\n\nThe foremost issue is getting the console display to appear correctly in Virtual PC 2004. Edit /boot/grub/menu.lst to change the first entry in the list of Automagic Kernels such that:\n\n    kernel /boot/vmlinuz-2.6.10-5-386 root=/dev/hda1 ro quiet splash\n\nbecomes\n\n    kernel /boot/vmlinuz-2.6.10-5-386 root=/dev/hda1 ro quiet splash vga=0x314\n\nYou can also hit ESC during the GRUB boot sequence and set vga=0x314.\n\nInstall hung at times. It was probably looking for updates on the network but the virtual networking was not working. This command made ping work as expected:\n\n    sudo ifconfig eth0 192.168.254.33\n\nThe IP address in the example above, 192.168.254.33, should be entered in the Windows HOSTS file for machine/netbios name resolution. Edit the HOSTS file here:\n\n    %SystemRoot%\\System32\\DRIVERS\\ETC\\HOSTS\n\nTo install new software, the recommendation here is to use APT. See \"Package management with apt\" here:\n\n    https://help.ubuntu.com/community/AptGetHowto\n\nAn excellent summarizing source for Ubuntu Linux hardware tips is \"Unofficial Ubuntu 5.10 (Breezy Badger) Starter Guide\":\n\n    http://ubuntuguide.org/wiki/Ubuntu#Hardware\n\nThis was useful for understanding, say, how accessing a CD-ROM drive works in Linux.\n\nWhat may prove to be useful is \"Linux Guest Support for Virtual Server 2005 R2\" covered here:\n\n    http://www.microsoft.com/windowsserversystem/\n        virtualserver/evaluation/linuxguestsupport/default.mspx",
    "ItemText": null,
    "CreateDate": "2006-09-28T13:08:05.9930000",
    "EndDate": null,
    "ModificationDate": "2006-09-28T13:08:05.9930000",
    "DocumentId": "2076071762",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5489",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu Linux: LAMP Setup; Linux-Apache-MySQL-PHP; Ubuntu Server 6.0.6 (dapper)",
    "SortOrdinal": null,
    "ItemChar": "The detailed documentation for this procedure is here:\n\n    https://help.ubuntu.com/community/ApacheMySQLPHP\n\nOur summary is this:\n\n    sudo apt-get install apache2\n    sudo a2enmod rewrite\n\n    sudo apt-get install php5\n    sudo apt-get install mysql-server\n    sudo apt-get install libapache2-mod-auth-mysql\n    sudo apt-get install php5-mysql\n    sudo apt-get install php5-curl\n    sudo apt-get install php5-xsl\n\n    sudo /etc/init.d/apache2 force-reload\n\n    sudo nano /etc/php5/apache2/php.ini\n\n    sudo apt-get install phpmyadmin\n\nNote that in Ubuntu Server 6.0.6 (dapper), mod_rewrite is disabled by default. By the way, the convention here is to use/configure mod_rewrite per .htaccess file.\n\nNote that libapache2-mod-auth-mysql allows you to use MySQL to authenticate users. For more information on this framework, see \"Mod Auth MySQL Under Apache 2 and Debian\":\n\n    http://www.howtoforge.com/mod_auth_mysql_apache2_debian\n\nNote that you can enable external MySql connections by editing the bind-address line in /etc/mysql/my.cnf.",
    "ItemText": null,
    "CreateDate": "2006-09-27T12:04:21.6230000",
    "EndDate": null,
    "ModificationDate": "2006-09-27T12:04:21.6230000",
    "DocumentId": "2076071763",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5490",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MySQL 5.0: Flippant Remote Connection Troubleshooting",
    "SortOrdinal": null,
    "ItemChar": "When bind-address in my.cnf is set to a value other than 127.0.0.1 MySQL will receive remote connections.\n\nHowever, this error (1045) implies that you are using a user name that is not mysql.user table:\n\n    Access denied for user foo@192.168.254.64\n\nNow this error (2003) implies that your user name is in the mysql.user table but the Host value is not found in mysql.user.Host:\n\n    Can't connect to MySQL server on '192.168.254.64'\n    Access denied for user\n\nIn the latter case, you can add the name user name for the host 192.168.254.64 or you can leave the Host blank which should direct MySQL to look up the valid host names in the mysql.host table.\n\nIn phpMyAdmin (for Debian and others), the Add New User > Login Information > Host: field provides Use Host Table option.",
    "ItemText": null,
    "CreateDate": "2006-09-25T23:45:21.1300000",
    "EndDate": null,
    "ModificationDate": "2006-09-25T23:45:21.1300000",
    "DocumentId": "2076071764",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5491",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu Linux: Removing the MySQL Daemon from Startup",
    "SortOrdinal": null,
    "ItemChar": "Remove the MySQL daemon from startup with the Debian Runlevel configuration tool, rcconf. More details about this tool is here:\n\n    http://packages.debian.org/stable/admin/rcconf\n\nInstall the tool with APT:\n\n    sudo apt-get install rcconf\n\nThen run the configuration tool:\n\n    sudo rcconf\n\nThis will display a basic GUI that will allow you to uncheck the MySQL daemon, mysql. There may be two other MySQL related items, mysql-ndb and mysql-ndb-mgm. It is not essential to disable these administrative services to prevent the MySQL server from running. To start the daemon manually enter:\n\n    sudo /etc/init.d/mysql start\n\nTo edit the configuration before starting the server, run:\n\n    sudo nano /etc/mysql/my.cnf\n\nVerify that the server is running with:\n\n    mysqladmin -u root -p version\n",
    "ItemText": null,
    "CreateDate": "2006-09-27T22:52:49.0500000",
    "EndDate": null,
    "ModificationDate": "2006-09-27T22:52:49.0500000",
    "DocumentId": "2076071765",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5492",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu Linux: Flippant Remarks about Using the Command Line",
    "SortOrdinal": null,
    "ItemChar": "LinuxQuestions.org has an excellent summary of the Linux command line here:\n\n    http://wiki.linuxquestions.org/wiki/Commands\n\nWhen you, say, start MySQL from the command line from PuTTY you may quickly discover that you need to learn how to run commands in the background. Read \"Controlling Jobs in Linux\" here:\n\n\n    http://www.cpqlinux.com/jobcontrol.html\n\nThis command line stuff should lead to need to script. Begin study with \"Bash Guide for Beginners\" here:\n\n    http://tldp.org/LDP/Bash-Beginners-Guide/html/index.html",
    "ItemText": null,
    "CreateDate": "2006-09-28T12:09:25.5530000",
    "EndDate": null,
    "ModificationDate": "2006-09-28T12:09:25.5530000",
    "DocumentId": "2076071766",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5493",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu Linux Network Connectivity",
    "SortOrdinal": null,
    "ItemChar": "Ubuntu, by default, is configured for DHCP. You can verify this by examining some configuration files related to networking:\n\n    less /etc/dhcp3/dhclient.conf\n    less /etc/network/interfaces\n\nIn the default interfaces file, edit the last lines thusly:\n\n    # The primary network interface\n    auto eth0\n    iface eth0 inet dhcp\n\nwhere auto eth0 is the recommended change. Refresh the DHCP relationship by running\n\n    sudo ifdown eth0; sudo ifup eth0\n\nIn the Microsoft Windows world, this is equivalent to ipconfig /release; ipconfig /renew.\n\nEnsure that your machine can resolve IP addresses into DNS names by editing /etc/resolv.conf and making 'nameserver' entries.\n\nWhat also may be handy is to restart the network:\n\n    /etc/init.d/networking restart\n\nA step-by-step Ubuntu server set up is at howtoforge.com, \"ISP Server Setup—Ubuntu 5.10 'Breezy Badger'\" here:\n\n    http://www.howtoforge.com/perfect_setup_ubuntu_5.10\n\nYou can display the IP address of the server by tacking on ifconfig in /etc/rc.local. This is useful for us unfortunates who cannot obtain a static IP address and we cannot use port forwarding.\n\nAnother DHCP issue is that, by default, /etc/dhcp3/dhclient.conf requests a list of DNS servers (see the request line in dhclient.conf). This will automatically overwrite /etc/resolv.conf. You can specify a list of domain name servers by adding/uncommenting the prepend line in dhclient.conf:\n\n    prepend domain-name servers 127.0.0.1,127.0.0.2;\n\nwhere the IP addresses of the domain name servers are separated by commas. Please compare editing resolv.conf manually to \"refreshing\" DHCP with ifdown eth0; ifup eth0.\n\nOne possible solution to the problem related to the error message “No such device” (most likely on eth0), is to comment out the MAC address definition in /etc/iftab.\n",
    "ItemText": null,
    "CreateDate": "2007-10-11T15:42:31.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-11T15:42:31.0000000",
    "DocumentId": "2076071767",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5494",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "eclipse 3.2.0 SDK Plugin PROBLEM: tk.eclipse.plugin.htmleditor loads *.html Files Slowly; Naoki Takezoe; HTML/JSP/XML Editor 2.0.2 Plugin; amateras",
    "SortOrdinal": null,
    "ItemChar": "The tk.eclipse.plugin.htmleditor may load slowly due to the enabled HTML validation option under\n\n    Project > Properties > Amateras > Validation:\n\nUncheck the HTML Validation box and this should improve performance. This guidance applies to version 2.0.2 of the plugin.",
    "ItemText": null,
    "CreateDate": "2006-10-03T16:31:12.9770000",
    "EndDate": null,
    "ModificationDate": "2006-10-03T16:31:12.9770000",
    "DocumentId": "2076071768",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5495",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu Linux: Installing Tomcat 5.x",
    "SortOrdinal": null,
    "ItemChar": "This is the command summary for installing Tomcat on Ubuntu Linux:\n\n    sudo apt-get install sun-java5-jdk\n    sudo apt-get install apache2\n    sudo apt-get install tomcat5\n    sudo apt-get install tomcat5-admin\n\nPoint Ubuntu to the newly installed Java JDK with:\n\n    sudo update-alternatives --config java\n\nSelect /usr/lib/jvm/java-1.5.0-sun/jre/bin/java.\n\nConfigure Tomcat for the Java JDK. Edit /etc/default/tomcat5 for this line:\n\n    JAVA_HOME=/usr/lib/jvm/java-1.5.0-sun/\n\nReview the users for Tomcat in /var/lib/tomcat5/conf/tomcat-users.xml. Here is one relatively terrible way to configure the default user, tomcat:\n\n    <user username=\"tomcat\"\n        password=\"foo\" roles=\"tomcat,manager,admin\" />\n\nStart Tomcat with:\n\n    sudo /etc/init.d/tomcat5 start\n\nTest for connectivity by browsing http://localhost:8180. You can change this port number by editing the standalone server service, Tomcat-Standalone, in /usr/share/tomcat5/conf/server.xml.\n\nMuch of this summary is based on \"Setting Up Tomcat 5 on Ubuntu 6.06\" here:\n\n    http://blixtra.org/blog/2006/07/14/\n        setting-up-tomcat-5-on-ubuntu-606/\n\nand \"Installing Java 5 JDK and Tomcat on Ubuntu (using VMWare)\" here:\n\n    http://www.spaceprogram.com/knowledge/2006/\n        05/installing-java-5-jdk-and-tomcat-on.html\n\nFor additional configuration details, see \"Top Ten Tomcat Configuration Tips\" by Jason Brittain  and Ian F. Darwin here:\n\n    http://www.onjava.com/pub/a/onjava/2003/06/25/tomcat_tips.html",
    "ItemText": null,
    "CreateDate": "2006-10-12T12:02:00.0870000",
    "EndDate": null,
    "ModificationDate": "2006-10-12T12:02:00.0870000",
    "DocumentId": "2076071769",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5496",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant remarks about \"Knowing\" Java",
    "SortOrdinal": null,
    "ItemChar": "The opinion here is that it is misleading and a waste of time to ask an experienced C# programmer, \"Do you know Java?\" What is useful and educational is the question, 'Do you know the Java Bean?'\n\nThe first question is a matter of syntax and is trivial compared to the complicated world of Java Beans. There are two types of Java Beans known to me: the Java Bean and the Enterprise JavaBean (EJB) of J2EE. What may seem strange to a .NET developer is how Sun Microsystems and its affiliates depend on convention rather than the implementation of interfaces. This means that Sun and friends go far beyond the relatively soft spoken Microsoft \"Patterns and Practices\" and 'demand' that you write code according to a specification. This 'demand' is implied in the fact that your code will not work (easily) in any popular application server. So you can \"know\" Java all you want: not knowing the relevant convention means that your code will not work in the server/framework du jour.\n\nThe Java community revolts against the EJB regime with The Spring Framework. This is one of the latest frameworks of the day. It goes a long way to eliminate the complexity that made J2EE solutions notorious. Spring is fighting retreat back to the Java Bean, considered a \"Plain Old Java Object\" (POJO). Another fact that should seem strange to a .NET developer is that Java solutions depend on the underlying operating system for almost nothing. This means that in Java you have to bring almost everything---everything means that transaction processing, concurrency control, events using Java Message Service, naming and directory services (JNDI), security ( JCE and JAAS ) are stacked on top of your operating system. Most Java people would say that this heavy lifting and a few gigabytes of RAM is a small price to pay for \"freedom.\" .NET people expect that \"managed\" services such as these come baked into Windows.\n",
    "ItemText": null,
    "CreateDate": "2006-10-04T12:47:29.8000000",
    "EndDate": null,
    "ModificationDate": "2006-10-04T12:47:29.8000000",
    "DocumentId": "2076071770",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5497",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP 5.x Code: Building a SQL Format String for sprintf()",
    "SortOrdinal": null,
    "ItemChar": "<?php        \n    $sql = <<<BLOCK\nSELECT\n    `server`.`server_id`\n,   `server`.`server_name`\n,   `server`.`ip` \n,   `server`.`mac`\n,   `server`.`sn`\n,   server_status.status\n,   `notes`\nFROM\n    `server`\n,   server_status\nWHERE\n    `server`.status_id = server_status.status_id\nAND\n    `%1\\$s` LIKE '%%%2\\$s%%'\n;\nBLOCK;\n\n    $s = sprintf($sql,'ip','10.');\n?>\n",
    "ItemText": null,
    "CreateDate": "2006-10-05T15:32:20.1200000",
    "EndDate": null,
    "ModificationDate": "2006-10-05T15:32:20.1200000",
    "DocumentId": "2076071771",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5498",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ADO.NET: CommandType.TableDirect Is Not Supported by SqlCommand.CommandType ",
    "SortOrdinal": null,
    "ItemChar": "CommandType.TableDirect Is Not Supported by SqlCommand.CommandType. The System.Data.OleDb namespace supports it. It follows that the following form works:\n\n    string cnnStr = \"Provider=SQLOLEDB; Server=(local); Database=pubs; Integrated Security=SSPI;\";\n\n    using(OleDbConnection cnn = new OleDbConnection(cnnStr))\n    {\n        OleDbCommand cmd = null;\n        OleDbDataReader reader = null;\n        try\n        {\n            cnn.Open();\n            string tbl = \"authors\";\n            cmd = new OleDbCommand(tbl, cnn);\n            cmd.CommandType = CommandType.TableDirect;\n            reader = cmd.ExecuteReader();\n\n            //TODO: use reader.\n        }\n        finally\n        {\n            if ((reader != null) && (!reader.IsClosed))\n            {\n                reader.Close();\n                reader.Dispose();\n            }\n\n            if (cmd != null) cmd.Dispose();\n        }\n    }",
    "ItemText": null,
    "CreateDate": "2006-10-06T15:16:28.8530000",
    "EndDate": null,
    "ModificationDate": "2006-10-06T15:16:28.8530000",
    "DocumentId": "2076071772",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5499",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET: Loading Cached User Controls; ASCX Files",
    "SortOrdinal": null,
    "ItemChar": "The page loading an ASCX file via an object created of type Control becomes complicated when you need to programmatically manipulate this ASCX file as almost certainly this object of type control will have to be cast into the type of the ASCX file. The complications are centered upon the temptation to cache this control.\n\nThis aspnetpro.com article,\"Dynamically Load Cached User Controls (and Live to Tell About It),\" addresses this problem here:\n\n    http://www.aspnetpro.com/NewsletterArticle/\n        2003/08/asp200308pj_l/asp200308pj_l.asp\n",
    "ItemText": null,
    "CreateDate": "2006-10-11T11:04:40.7600000",
    "EndDate": null,
    "ModificationDate": "2006-10-11T11:04:40.7600000",
    "DocumentId": "2076071773",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5500",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "eclipse 3.x SDK: Filtering TODO Tasks Per Package",
    "SortOrdinal": null,
    "ItemChar": "Filtering TODO tasks per package means filtering \"On selected resource and its children.\" In the Tasks View (Window > Show View > Tasks), click the Filters... button to show the Filters dialog. Select the \"On selected resource and its children\" option to filter Tasks per package---or any Resource with child items.",
    "ItemText": null,
    "CreateDate": "2006-10-13T04:23:13.6500000",
    "EndDate": null,
    "ModificationDate": "2006-10-13T04:23:13.6500000",
    "DocumentId": "2076071775",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5501",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JSP Markup: Declaring UTF-8 Support in a JSP File with UTF-8 Encoding",
    "SortOrdinal": null,
    "ItemChar": "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<%@page pageEncoding=\"UTF-8\" contentType=\"text/html; charset=UTF-8\" %>\n<html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>Example :: Spring Application</title>\n</head>\n<body>\n    <h1>Example—Spring Application</h1>\n    <p>This is my test.</p>\n</body>\n</html>",
    "ItemText": null,
    "CreateDate": "2006-10-13T07:41:26.8300000",
    "EndDate": null,
    "ModificationDate": "2006-10-13T07:41:26.8300000",
    "DocumentId": "2076071776",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5502",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PowerShell: \"The Four Pillars of Discoverability\" by Jeff Snover",
    "SortOrdinal": null,
    "ItemChar": "Get-Command\n\nGet-Help\n\nGet-PSDrive\n\n-?\n\nGet-Members\n",
    "ItemText": null,
    "CreateDate": "2006-10-13T08:01:29.1000000",
    "EndDate": null,
    "ModificationDate": "2006-10-13T08:01:29.1000000",
    "DocumentId": "2076071777",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5503",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005 t-SQL: Bulk Insert Operation",
    "SortOrdinal": null,
    "ItemChar": "DECLARE @cmd VARCHAR(512)\nDECLARE @lf CHAR(1)\nSET @lf = CHAR(10) --Unix line break\nSET @cmd='\nBULK INSERT LogImport\nFROM ''{0}''\nWITH\n(\n    ROWTERMINATOR = '''+@lf+'''\n)\n",
    "ItemText": null,
    "CreateDate": "2006-10-20T04:00:35.1900000",
    "EndDate": null,
    "ModificationDate": "2006-10-20T04:00:35.1900000",
    "DocumentId": "2076071778",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5504",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript Code: Dom() Class; Abandoned Code",
    "SortOrdinal": null,
    "ItemChar": "//Bryan Wilhite (rasx@kintespace.com)\n\n//WARNING: this object depends on Sniffer.js!\nDom = function()\n{\n    this.IsMs = (is_ie5_5up || is_opera6up)? true : false\n    this.IsMsMac = (is_mac && is_ie5up)? true : false\n    this.IsMz = is_gecko\n    this.IsSafari = is_safari\n    this.IsSupportedBrowser = (this.IsMs || this.IsMsMac || this.IsMz || this.IsSafari)\n\n    this.GetEventSourceElement = function(e)\n    {\n        if(e == null) return null\n\n        if(this.IsMs) return e.srcElement\n\n        //Based on http://developer.apple.com/internet/javascript/ie5macscripting.html\n        if(this.IsMsMac) return e.target\n\n        if(this.IsMz) return e.currentTarget\n    }\n\n    this.GetEventSourceStyle = function(e)\n    {\n        var o = null\n        if(this.IsMs || this.IsMsMac) o = e.srcElement.style\n        if(this.IsMz) o = e.currentTarget.style\n        return o\n    }\n}\n\nvar dom = new Dom()\n",
    "ItemText": null,
    "CreateDate": "2007-01-09T21:38:11.0000000",
    "EndDate": null,
    "ModificationDate": "2007-01-09T21:38:11.0000000",
    "DocumentId": "2076071780",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5505",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET ERROR in Visual Studio: \"Unable to start debugging on the web server. Debugging failed because integrated Windows authentication is not enabled. Please see Help for assistance.\"",
    "SortOrdinal": null,
    "ItemChar": "Windows XP Solution: In the Internet Information Services (IIS) Management Console under Default Web Site Properties > Directory Security > Anonymous Access and Authentication Control > Edit... > Authenticated Access > Integrated Windows authentication, check the check box.",
    "ItemText": null,
    "CreateDate": "2007-01-13T19:14:31.0000000",
    "EndDate": null,
    "ModificationDate": "2007-01-13T19:14:31.0000000",
    "DocumentId": "2076071781",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5506",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Virtual Machine PROBLEM: VMWare Sounds Loud Beeps",
    "SortOrdinal": null,
    "ItemChar": "To disable System Beep sounds in Windows, the \"safe\" method is to try Tweak UI. Look under General > Settings. Uncheck the Beep on errors box.\n\nAs of this writing, Tweak UI is available here:\n\n    http://www.microsoft.com/windowsxp/downloads/\n        powertoys/xppowertoys.mspx\n\nThe other method that is guaranteed to work (but may strangely enough require reboot) uses the Device Manager. First select View > Show hidden devices. Then look under Non Plug and Play Drivers for Beep. Disable Beep and reboot (when prompted).\n\nBy the way, the command-line way to call the Device Manager is this:\n\n    %SystemRoot%\\System32\\DEVMGMT.MSC\n",
    "ItemText": null,
    "CreateDate": "2007-04-12T18:06:06.0000000",
    "EndDate": null,
    "ModificationDate": "2007-04-12T18:06:06.0000000",
    "DocumentId": "2076071782",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5507",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005 PROBLEM: Using the ADO.NET DbCommand.ExecuteScalar() Method Truncates at 2033 Characters",
    "SortOrdinal": null,
    "ItemChar": "This statement used with ExecuteScalar() will truncate at 2033 characters:\n\n    SELECT\n        *\n    FROM\n        Segment\n    ,   [Document]\n    WHERE\n        Segment.SegmentId = [Document].SegmentId\n    FOR XML AUTO, ELEMENTS, ROOT('SegmentTreeSet')\n\nSolve this problem with this design:\n\n    DECLARE @xml XML\n\n    SET @xml = \n        (\n            SELECT\n                *\n            FROM\n                Segment\n            ,   [Document]\n            WHERE\n                Segment.SegmentId = [Document].SegmentId\n            FOR XML AUTO, ELEMENTS, ROOT('SegmentTreeSet')\n        )\n\n    SELECT @xml\n\nAs of this writing, DbCommand.ExecuteScalar() returns a String object of the appropriate length.\n\nThis problem is chronicled in detail (for SQL Server 2000 and 2005) here:\n\n    http://www.aspnetresources.com/blog/executescalar_truncates_xml.aspx\n",
    "ItemText": null,
    "CreateDate": "2007-01-16T15:16:13.0000000",
    "EndDate": null,
    "ModificationDate": "2007-01-16T15:16:13.0000000",
    "DocumentId": "2076071783",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5508",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "UCLA MCCS CVS Root",
    "SortOrdinal": null,
    "ItemChar": ":extssh:bwilhite@vcvs01:/home/cvs",
    "ItemText": null,
    "CreateDate": "2007-02-02T15:27:17.0000000",
    "EndDate": null,
    "ModificationDate": "2007-02-02T15:27:17.0000000",
    "DocumentId": "2076071784",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5509",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "UCLA MCCS Data Migration Project",
    "SortOrdinal": null,
    "ItemChar": "* Create a new Dynamic Web Project.\n\n* Name the project MigrationNetAppSToEMC, leave the project defaults and select finish.\n\n* Right-click on the newly created project and choose Team > Share Project… Under Select a repository type: choose CVS. Click Next. Choose the predefined CVS repository (:extssh:bwilhite@vcvs01:/home/cvs).\n\n* Under Enter Module Name, select Use specified module name: and enter PODS/PODS4/WORKSPACE/WEBSPHERE/MigrationNetAPPSToEMC.\n\n* Under Select Tag, the list for Select tag to synchronize with: select HEAD.\n\n* Right-click on the newly created project and choose Team > Update… to get code from CVS.\n\nDB2 Connection Info:\n* Hostname: cerebrus.medctr.ucla.edu\n* Port: 50001\n* User: db2inst2\n\nDatabases: PODS and MIGRDB\n* db2 list node directory\n* db2 catalog tcpip node cerebrus remote cerebrus.medctr.ucla.edu server 50001\n* db2 catalog db pods as pods at node cerebrus\n* db2 connect to pods user db2inst2\n* db2 list tables\n* db2 list tables for schema DB2INST1\n",
    "ItemText": null,
    "CreateDate": "2007-02-02T15:31:17.0000000",
    "EndDate": null,
    "ModificationDate": "2007-02-02T15:31:17.0000000",
    "DocumentId": "2076071785",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5510",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "bash command: Comparing Two Folders with diff",
    "SortOrdinal": null,
    "ItemChar": "From Timothy Haroutunian, Armenian Eagle:\n\ndiff -Bbrq folder folder2\n\n-B = Ignore changes that just insert or delete blank lines.\n-b = Ignore changes in amount of white space.\n-r = When comparing directories, recursively compare any subdirectories found.\n-q = Report only whether the files differ, not the details of the differences.",
    "ItemText": null,
    "CreateDate": "2007-02-02T16:22:19.0000000",
    "EndDate": null,
    "ModificationDate": "2007-02-02T16:22:19.0000000",
    "DocumentId": "2076071786",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5511",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaServer Faces in Action Notes: Chapter 1; Introducing JavaServer Faces",
    "SortOrdinal": null,
    "ItemChar": "RAD tools have four layers: (i) an underlying component architecture, (ii) a set of standard widgets, (iii) and application infrastructure, (iv) the tool itself.\n\nJavaServer Faces (JSF or Faces) defines three of the four layers of RAD tools, leaving \"the tool itself\" to be the NetBeans or Eclipse IDE.\n\n\"Faces can also automatically keep your UI components in sync with Java objects that collect user input values and respond to events, which are called backing beans.\"\n\n\"JSF runs on the server. As such, a Faces application will run in a standard Java web container like Apache Tomcat [ASF, Tomcat]...\"\n\n\"JavaServer Faces was introduced as Java Specification Request (JSR) 127 by Sun in May 2001...and JSF 1.1 (a maintenance release) arrived on May 27th, 2004.\"",
    "ItemText": null,
    "CreateDate": "2007-02-27T13:35:08.0000000",
    "EndDate": null,
    "ModificationDate": "2007-02-27T13:35:08.0000000",
    "DocumentId": "2076071787",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5512",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaServer Faces in Action Notes: Chapter 1; Introducing JavaServer Faces; 1.2.2 Servlets; 1.2.3 Portlets",
    "SortOrdinal": null,
    "ItemChar": "1.2.2 Servlets\n\nHTTP requests to a Java Application server are handled by Servlets. Servlets provide \"an object-oriented view of the world that makes it easier to develop web applications.\"\n\n\"A standard J2EE web application is, by definition, based on the Servlet API. Servlets run inside a container... The most popular servlet container is Tomcat...\"\n\n\"Sessions are one of the biggest benefits that the Servlet API provides... The Servlet API also provides lots of other goodies, like security, logging, life-cycle events, filters, packaging and deployment... all JSF applications are standard J2EE web applications.\"\n\n\n1.2.3 Portlets\n\nA portlet is the atomic unit of a Web portal. It is a region on a Web page that displays data from remote sources. This is similar to the Microsoft Web Part used in ASP.NET in general and SharePoint Server n particular. The portlet is defined by the Portlet API. It will not be discussed in detail in this book.",
    "ItemText": null,
    "CreateDate": "2007-02-27T14:59:14.0000000",
    "EndDate": null,
    "ModificationDate": "2007-02-27T14:59:14.0000000",
    "DocumentId": "2076071788",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5513",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaServer Faces in Action Notes: Chapter 1; Introducing JavaServer Faces; 1.2.4 JavaBeans; 1.2.5 JSP",
    "SortOrdinal": null,
    "ItemChar": "1.2.4 JavaBeans\n\n\"JavaBeans is a full-fledged component architecture designed with tool support in mind... JavaBeans is the technology that enables Swing... JavaBeans also includes a powerful event model (the same one used with Swing and JSF components), persistence services, and other neat features.\"\n\n1.2.5 JSP\n\n\"Servlets are great low-level building blocks for web development, but they don't adequately simplify the task of displaying dynamic content... JavaServer Pages look like an HTML page, but they have special tags that do custom processing or display JavaBean values... Ultimately, they behave like a servlet...\"\n\nJSP supports custom tags (or custom actions). \"...there's a useful set of standard tags called the JavaServer Pages Standard Tag Library (JSTL) [Sun, JSTL]. The idea is that you can define the UI with HTML-like tags, not Java code.\"\n\n\"One of the key design goals of JSF was to avoid relying on a particular display technology... Faces comes with a JSP implementation (via custom tags) right out of the box.\"\n",
    "ItemText": null,
    "CreateDate": "2007-02-27T15:37:22.0000000",
    "EndDate": null,
    "ModificationDate": "2007-02-27T15:37:22.0000000",
    "DocumentId": "2076071789",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5514",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaServer Faces in Action Notes: Chapter 1; Introducing JavaServer Faces; 1.3.1 Why do we need frameworks?; 1.3.2 She's a Model 2; 1.3.3 JSF, Struts, and other frameworks",
    "SortOrdinal": null,
    "ItemChar": "1.3.1 Why do we need frameworks?\n\n\"Forms are just one example of tasks that servlets and JSP don't completely solve. Web applications have to manage a lot of pages and images, and referencing all of those elements within larger applications can become a nightmare if you don't have a central way of managing it.\"\n\n\"Although JSP provides a simple mechanism for creating a dynamic page, it doesn't provide extensive support for composing a page out of smaller, reusable parts. Other fun things that servlets don't handle include internationalization, type conversion, and error handling.\"\n\n\n1.3.2 She's a Model 2\n\nThe MVC analogy: \"When you watch a story on the news, you view a version of reality. ...The news channel is controlling the interaction between the TV program---the view---and the actual event---the model.\"\n\n\"...most frameworks, including JSF, support some variation of the MVC design pattern.\"\n\n\n1.3.3 JSF, Struts, and other frameworks\n\nJava frameworks have a lot of overlap. A lot of this has to do with the \"open\" nature of Java culture, which could easily be mistaken for a state of affairs just short of total chaos.\n\nThere is the idea that JSF and Struts \"compete\" or that JSF replaces Struts. The lead developer of Struts, Craig McClanahan, also played a large role in the development of JSF. For more details see \"Struts Or JSF? Struts And JSF?\" here:\n\n    http://blogs.sun.com/craigmcc/entry/struts_or_jsf_struts_and\n",
    "ItemText": null,
    "CreateDate": "2007-02-27T16:22:07.0000000",
    "EndDate": null,
    "ModificationDate": "2007-02-27T16:22:07.0000000",
    "DocumentId": "2076071790",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5515",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Tomcat 5.x INFO Message: \"INFO: The Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: ...\"",
    "SortOrdinal": null,
    "ItemChar": "According to ranch hand, Scott Dunbar at saloon.javaranch.com, the Tomcat 5.x message during start up, \"INFO: The Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: ...,\" means that the Apache Portable Runtime (APR) was not found. To quote:\n\n\"You can safely ignore this message if you want. Basically it is telling you that an optional shared library (dll on Windows) is not found. The APR is the Apache Portable Runtime. This is a native (non-java) library that can improve the performance of Tomcat in certain situations.\"\n\n\"On both Windows and Unix/Linux you will need a C compiler to build this library.\"\n\nThe APR project is here:\n\n    http://apr.apache.org/\n",
    "ItemText": null,
    "CreateDate": "2007-02-28T11:26:53.0000000",
    "EndDate": null,
    "ModificationDate": "2007-02-28T11:26:53.0000000",
    "DocumentId": "2076071791",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5516",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "XSLT Snippet: Degrading XHTML for Macromedia/Adobe Flash; inner_xhtml Template",
    "SortOrdinal": null,
    "ItemChar": "<xsl:template name=\"inner_xhtml\">\n    <xsl:param name=\"p_class_name\" select=\"''\"/>\n\n    <xsl:for-each select=\"text()|*\">\n        <xsl:choose>\n            <xsl:when test=\"local-name(.) = 'a'\">\n                <a href=\"{./@href}\"><xsl:call-template name=\"inner_xhtml\" /></a>\n            </xsl:when>\n            <xsl:when test=\"local-name(.) = 'div'\">\n                <xsl:if test=\"string-length(.) &gt; 1\">\n                    <p>\n                        <xsl:if test=\"string-length($p_class_name) &gt; 0\">\n                            <xsl:attribute name=\"class\"><xsl:value-of select=\"$p_class_name\" /></xsl:attribute>\n                        </xsl:if>\n                        <xsl:call-template name=\"inner_xhtml\" /><br/>\n                    </p>\n                </xsl:if>\n            </xsl:when>\n            <xsl:when test=\"local-name(.) = 'em'\">\n                <i><xsl:value-of select=\".\" /></i>\n            </xsl:when>\n            <xsl:when test=\"local-name(.) = 'h1'\">\n                <p class=\"Header1\"><xsl:value-of select=\".\" /></p>\n            </xsl:when>\n            <xsl:when test=\"local-name(.) = 'h2'\">\n                <p class=\"Header2\"><xsl:value-of select=\".\" /></p>\n            </xsl:when>\n            <xsl:when test=\"local-name(.) = 'h3'\">\n                <p class=\"Header3\"><xsl:value-of select=\".\" /></p>\n            </xsl:when>\n            <xsl:when test=\"local-name(.) = 'strong'\">\n                <b><xsl:value-of select=\".\" /></b>\n            </xsl:when>\n            <xsl:otherwise>\n                <xsl:value-of select=\".\" />\n            </xsl:otherwise>\n        </xsl:choose>\n    </xsl:for-each>\n</xsl:template>\n",
    "ItemText": null,
    "CreateDate": "2007-03-02T13:27:23.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-02T13:27:23.0000000",
    "DocumentId": "2076071792",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5517",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaServer Faces in Action Notes: Chapter 1; Introducing JavaServer Faces; 1.4 Components Everywhere",
    "SortOrdinal": null,
    "ItemChar": "1.4 Components Everywhere\n\n\"A software component is a unit of composition with contractually specified interfaces and explicit context dependencies only. A software component can be deployed independently and is subject to composition by third parties [Szyperski].\"\n\n\"In essence, the context is the container for all of the components. A container is a system that hosts components and provides a set of services that allow those components to be manipulated.\"\n\nThis manipulation can be at design time (in the IDE) or runtime (in the application server).\n\n\"A UI component, or control, is a component that provides specific functionality for interacting with an end user. Classic examples include toolbars, buttons, panels, and calendars.\"",
    "ItemText": null,
    "CreateDate": "2007-03-05T16:47:51.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-05T16:47:51.0000000",
    "DocumentId": "2076071793",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5518",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaServer Faces in Action Notes: Chapter 1; Introducing JavaServer Faces; 1.5.1 Dissecting hello.jsp",
    "SortOrdinal": null,
    "ItemChar": "1.5.1 Dissecting hello.jsp\n\nThe tag library indicated by http://java.sun.com/jsf/core provides for validation, event handling and the like.\n\nThe tag library indicated by http://java.sun.com/jsf/html provides for the JSF UI components like text boxes, output labels and forms.\n\n\"The <f:view> custom tag must enclose all other Faces-related tags...\"\n\nThe HtmlOutputText component, represented by the <h:outputText> tag, represents all read-only text generated by JSF. It follows that the HtmlOutputLabel component (<h:outputLabel>) encloses an <h:outputText> tag to display its data.\n\nThe HtmlMessage component (<h:message>) displays validation and conversion errors for a specific component, identified by its for attribute.\n\n#{helloBean.numControls} is an example of JSF Expression Language (EL) used to bind backing bean data to JSF components.\n\n\"Faces will automatically search the different scopes of the web application (request, session, application) for the specified backing bean.\"\n\n\"JSF also supports validators, which are responsible for making sure that the user enters an acceptable value.\"\n\nThe HtmlPanelGrid component renders as a <table> element.\n\nThe HtmlCommandButton has action and actionListener properties that can be bound to backing bean methods. The action method takes no parameters, and returns a String which is passed to the NavigationHandler. The actionListener method takes an ActionEvent parameter and has a return type of void.\n\nWhen HtmlCommandButton.immediate = true, this means that this component's value must be converted and validated during the Apply Request phase, rather than waiting for the Process Validations phase.",
    "ItemText": null,
    "CreateDate": "2007-03-08T15:02:57.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-08T15:02:57.0000000",
    "DocumentId": "2076071794",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5519",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu Hardware: Setting Up a New Monitor; Flat Panel Monitor",
    "SortOrdinal": null,
    "ItemChar": "This is the command to use to step through an automated process when installing a new monitor:\n\n    sudo dpkg-reconfigure xserver-xorg\n\nA new flat panel monitor has a preferred resolution so this setting should be used. Also there should be an option to use the kernel to drive the video. You might want to avoid this option first to make sure it works.",
    "ItemText": null,
    "CreateDate": "2007-03-07T16:34:57.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-07T16:34:57.0000000",
    "DocumentId": "2076071795",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5520",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaServer Faces in Action Notes: Chapter 1; Introducing JavaServer Faces; 1.5.2 Dissecting goodbye.jsp; 1.5.3 Examining the HelloBean class",
    "SortOrdinal": null,
    "ItemChar": "1.5.2 Dissecting goodbye.jsp\n\n\"One of the HtmlOutputText components references the same helloBean object as the previous page. This works fine because the object lives in the application's session and consequently lives between page requests.\"\n\n\n1.5.3 Examining the HelloBean class\n\n\"Unlike a lot of other frameworks, JSF backing beans don't have to inherit from a specific class. They simply need to expose their properties using ordinary JavaBean conventions and use specific signatures for their event-handling methods.\"\n\n\"Because goodbye doesn't perform any processing... we could have achieved the same effect by hardcoding the text \"success\" in the button's action property. This is because the navigation system will either use the literal value of an HtmlCommandButton's action property or the outcome of an action method...\"",
    "ItemText": null,
    "CreateDate": "2007-03-08T15:30:12.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-08T15:30:12.0000000",
    "DocumentId": "2076071796",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5521",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaServer Faces in Action Notes: Chapter 1; Introducing JavaServer Faces; 1.5.4 Configuration with faces-config.xml; 1.5.5 Configuration with web.xml",
    "SortOrdinal": null,
    "ItemChar": "1.5.4 Configuration with faces-config.xml\n\n\"Technically, JSF supports multiple configuration files, but we'll keep things simple for now.\"\n\n\"...a JSF configuration file is an XML document whose root node is <faces-config>...\"\n\nTo reference beans via JSF EL expressions, JavaBeans can be declared with the <managed-bean> element. These beans are called managed beans. The <managed-bean-name> element contains the string that used in JSF EL expressions to refer to the managed bean. You can even initialize bean properties with the <managed-property> element.\n\n\"The managed bean name and the object's class name don't have to be the same.\"\n\n\"A navigation rule specifies the possible routes from a given page. Each route is called a navigation case.\" The <navigation-rule> element contains the <navigation-case> element.\n\n\n1.5.5 Configuration with web.xml\n\n\"All J2EE web applications are configured with a web.xml deployment descriptor; Faces applications are no different.\" However, JSF deployment descriptors require that the <servlet> element contain a <servlet-class> declaration referencing the FacesServlet (javax.faces.webapp.FacesServlet).\n\nWith the <servlet> declaration, a <servlet-mapping> declaration must follow. In Eclipse running a Tomcat-based Dynamic Web Project, the auto-generated <url-pattern> element contains *.faces. This implies that your faces markup in hello.jsp can only be called with hello.faces. This does not imply that the <welcome-file-list> should contain <welcome-file> elements with hello.jsp or hello.faces.\n",
    "ItemText": null,
    "CreateDate": "2007-03-12T15:15:33.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-12T15:15:33.0000000",
    "DocumentId": "2076071797",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5522",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaServer Faces in Action Notes: Chapter 2; JSF Fundamentals; 2.1 The key pieces of the pie",
    "SortOrdinal": null,
    "ItemChar": "2.1 The key pieces of the pie\n\n\"Eight core terms come into play when you're developing JSF applications...\": (i) UI component (control or component); (ii) Renderer; (iii) Validator; (iv) Backing beans; (v) Converter; (vi) Events and listeners; (vii) Messages; (viii) Navigation.\n\nJSF uses the JavaBeans event/listener model, the same used by Swing.\n\n\"Backing beans contain event listeners and action methods, which are event listeners that are specialized for navigation.\"\n\n\"You may have noticed that events, messages, and model objects are passive from the perspective of JSF... This is an important point for model objects, because it means that the model doesn't know about the user interface. This is part of how JSF enforces an MVC-style architecture.\"\n",
    "ItemText": null,
    "CreateDate": "2007-03-12T16:18:38.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-12T16:18:38.0000000",
    "DocumentId": "2076071798",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5523",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaServer Faces in Action Notes: Chapter 2; JSF Fundamentals; 2.1.1 User interface components",
    "SortOrdinal": null,
    "ItemChar": "2.1.1 User interface components\n\n\"Packaging UI elements as a component... makes development easier because the core functions are encapsulated within a reusable piece of code.\"\n\n\"The way a component looks is how it is rendered.\" A properly designed JSF component is \"renderer neutral\" when it behaves the same regardless of how it appears to the user.\n\nJSF maintains \"state\" between HTTP requests. \"Faces components can remember their values between requests because the framework maintains a tree of the UI components for a given page. This component tree, called the view, is JSF's internal representation of the page, and it allows parent-child relationships... Using 'view' instead of 'page' underscores the fact that the  user's representation doesn't always have to be an HTML web page.\"\n\nComponents saved in this state tree are identified by a \"component identifier\" and multiple components can be associated into groups called \"facets.\"",
    "ItemText": null,
    "CreateDate": "2007-03-12T16:36:01.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-12T16:36:01.0000000",
    "DocumentId": "2076071799",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5524",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaServer Faces in Action Notes: Chapter 2; JSF Fundamentals; 2.1.2 Renderers; 2.1.3 Validators",
    "SortOrdinal": null,
    "ItemChar": "2.1.2 Renderers\n\n\"When components render themselves, it's called the direct implementation model, but JSF also supports the delegated implementation model...\" The classes that implement these implementation models are called \"renderers.\" All of the standard JSF components use the delegated implementation model.\n\n\"Renderers are organized into render kits... JSF ships with a standard render kit for HTML 4.01...\"\n\nIt is important to understand that renderers implement encoding and decoding for the response and the request, respectively. \"Because all encoding and encoding is handled by a single entity... the visual representation of the component and the underlying protocol for translating between request parameters and objects on the server are nicely self-contained.\"\n\nIt follows that the ability to change a render kit means that \"displaying a different markup language is just a matter of changing the render kit.\"\n\n\n2.1.3 Validators\n\n\"Faces handles validation in three ways---at the UI component level [declaratively], via validator methods in backing beans, or in validator classes.\"\n\nHere is an example of declarative validation:\n\n    <h:inputText>\n        <f:validateLength minimum=\"2\" maximum=\"10\" />\n    </h:inputText>\n",
    "ItemText": null,
    "CreateDate": "2007-03-13T13:00:21.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-13T13:00:21.0000000",
    "DocumentId": "2076071800",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5525",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaServer Faces in Action Notes: Chapter 2; JSF Fundamentals; 2.1.4 Backing beans",
    "SortOrdinal": null,
    "ItemChar": "2.1.4 Backing beans\n\nIn the MVC world backing beans play the part of the controller, the interaction between the UI and the model. \"Backing beans generally contain properties you want to retrieve from users and event listener methods... that process those properties and either manipulate the UI or perform some sort of application processing.\"\n\n\"You associate a component with a backing bean via the JSF expression language (EL), which is similar to the JSP 2.0 and JSTL expression languages.\" The expression for the rendered attribute in the <panelGrid> declaration below says, 'Do not render the component unless the backing bean counts more than 0 controls':\n\n    <h:panelGrid\n        rendered=\"#{helloBean.numControls > 0}\"\n        id=\"controlPanel\"\n        binding=\"#{helloBean.controlPanel}\"\n        columns=\"20\"\n        border=\"1\"\n        cellspacing=\"0\" />\n\n\"Here, the component's binding property uses a JSF EL expression to associate it with the HelloBean property controlPanel, which is of type HtmlPanelGrid.\" One difference between a backing bean and a \"Model Object\" is that the Model Object would not define types like HtmlPanelGrid. Model Objects should \"know nothing\" about the UI. It follows that, in our example above, you cannot use the binding property with Model Objects.\n",
    "ItemText": null,
    "CreateDate": "2007-03-13T14:24:29.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-13T14:24:29.0000000",
    "DocumentId": "2076071801",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5526",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaServer Faces in Action Notes: Chapter 2; JSF Fundamentals; 2.1.5 Converters",
    "SortOrdinal": null,
    "ItemChar": "2.1.5 Converters\n\nConverters do the job converting object and scalar values into strings. They also handle the task of localization. The sample below declares a DateTime converter for an HtmlOutputText component:\n\n    <h:outputText value=\"#{user.dateOfBirth}\">\n        <f:convert_datetime type=\"both\" dateStyle=\"full\" />\n    </h:outputText>\n\n\"JSF ships with converters for common types like dates and numbers, but you or third parties, can develop additional ones as well.\"\n",
    "ItemText": null,
    "CreateDate": "2007-03-13T14:45:21.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-13T14:45:21.0000000",
    "DocumentId": "2076071802",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5527",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Java Platform, Enterprise Edition 5 SDK: Post-Installation Message",
    "SortOrdinal": null,
    "ItemChar": "Read me file:\n\n./docs/about.html\n\nGlassfish server:\n./bin/asadmin start-domain domain1\n\nGlassfish server administration:\nadmin console:\nhttp://localhost:4848\n",
    "ItemText": null,
    "CreateDate": "2007-03-13T18:27:39.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-13T18:27:39.0000000",
    "DocumentId": "2076071803",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5528",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaServer Faces in Action Notes: Chapter 2; JSF Fundamentals; 2.1.6 Events and listeners",
    "SortOrdinal": null,
    "ItemChar": "2.1.6 Events and listeners\n\n\"JSF leverages JavaBeans to handle events with event objects and listeners, just like Swing. Any component may fire zero or more events, and developers (or components themselves) can register zero or more listeners to handle those events.\" Encouraging developers to think in terms of events is meant to free them from thinking about HTTP requests and responses.\n\n\"There are four standard events: value-change events, action events, data model events, and phase events.\" Phase events \"execute while JSF processes an HTTP request.\"\n\n\nValue-change events\n\nA sample value-change event declaration:\n\n    valueChangeListener=\"#{myForm.processValueChanged}\"\n\nThe corresponding, backing-bean stub:\n\n    public void processValueChanged(ValueChangeEvent event)\n    {\n        //...\n    }\n\n\nAction events\n\nComponents that generate action events are also called \"action sources.\" Two types of \"action listeners\" handle action events: \"those that affect navigation [wired to an action method], and those that don't [wired to an action listener method].\" Those that don't cause the page firing the event to be redisplayed.\n\n\"Technically all navigation is handled by a single action listener. This listener automatically handles any action events fired by the component, so it doesn't need to be registered manually. By default, this action listener delegates all of its work to action methods in your backing beans... most of your application logic will be located in these methods.\"\n\nA sample action event declaration:\n\n    action=\"#{loginForm.login}\"\n\nThe corresponding, backing-bean method:\n\n    public class LoginForm\n    {\n        public String login() { return \"success\"; }\n    }\n\nThe login() method returns a \"dynamic outcome\" a \"static outcome\" (with the same affect as the above looks like this:\n\n    action=\"success\"\n\nA sample action listener event declaration:\n\n    actionListener=\"#{myForm.doIt}\"\n\nThe corresponding, backing-bean method stub:\n\n    public void doIt(ActionEvent event)\n    {\n        //...\n    }\n\n\"Usually, you use action listener methods for changes that affect the current view.\" Note that action listener methods do not return values (but accept one parameter of type ActionEvent), while action methods take no parameters but require a String return value.\n\n\nData model events\n\n\"Data model events are a little different than the other events because they're not actually fired by the UI component... you can't register a listener on the component itself in JSP. You have to register it in Java code instead...\" You must implement an interface to define a data model event.\n\n\"Since data model events are fired so many times, they're normally used when developing a data-driven component, rather than during application development.\" It seems like the author is saying that data model events are used at design time.\n\n\nPhase events\n\n\"Whenever a JSF application receives a request, it goes through a six-step process called the Request Processing Lifecycle\": (i) getting the view based on the request, (ii) obtaining component values from request parameters, (iii) validating input, (iv) updating backing beans and model objects, (v) invoking action listeners and (vi) returning a response.\n\nEach of these six \"phases\" has two associated phase events. \"Phase events are generated by JSF itself rather than by UI components, and require that you implement a Java interface to register event listeners. They're normally used internally by the JSF implementation...\"\n",
    "ItemText": null,
    "CreateDate": "2007-03-14T17:35:24.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-14T17:35:24.0000000",
    "DocumentId": "2076071804",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5529",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaServer Faces in Action Notes: Chapter 2; JSF Fundamentals; 2.1.7 Messages; 2.1.8 Navigation",
    "SortOrdinal": null,
    "ItemChar": "2.1.7 Messages\n\nMessages are communications with the user. Other UI components can be associated with the HtmlMessages components in a declarative way like this:\n\n    <h:message\n        id=\"errors\"\n        for=\"helloInput\"\n        style=\"color:red;display:block;\" />\n\nThey can also be used in Java code for, say, informational messages in an action listener method.\n\n\n2.1.8 Navigation\n\n\"Faces has a pretty elegant navigation system. The navigation handler is responsible for deciding what page to load based on the logical outcome of an action method.\" The following sample shows a \"navigation rule\" and associated navigation cases:\n\n    <navigation-rule>\n        <description>Navigation from the hello page.</description>\n        <from-view-id>/hello.jsp</from-view-id>\n        <navigation-case>\n            <from-outcome>success</from-outcome>\n            <to-view-id>/goodbye.jsp</to-view-id>\n        </navigation-case>\n    </navigation-rule>\n\n\"This is a handy feature of JSF that should look familiar if you've used frameworks like Struts... changes can be made in a central location [faces-config.xml] instead of across several pages.\n",
    "ItemText": null,
    "CreateDate": "2007-03-20T15:54:00.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-20T15:54:00.0000000",
    "DocumentId": "2076071805",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5530",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaServer Faces in Action Notes: Chapter 2; JSF Fundamentals; 2.2 The Request Processing Lifecycle",
    "SortOrdinal": null,
    "ItemChar": "2.2 The Request Processing Lifecycle\n\nThe Request Processing Lifecycle has 10 parts in six \"primary phases\": Restore View, Apply Request Values, Process Events, Process Validations, Process Events, Update Model Values, Process Events, Invoke Application, Process Events and Render Response. Note how 'Process Events' occurs multiple times. To avoid this redundancy, see the six-part diagram by IBM in \"JSF for nonbelievers: The JSF application lifecycle\" here:\n\n    http://www-128.ibm.com/developerworks/java/library/j-jsf2/\n\n\"After most phases, JSF will broadcast events to any interested listeners (events can be associated with a particular phase)... A listener can even skip the final phase and render a response itself.\"\n\n\"The main idea behind this whole process is that by the time the Invoke Application stage has been reached, there is a fully populated component tree, all validations have been completed, and any backing beans or model objects have been completely updated.\" It is clear that JSF realizes all of these application-centric concepts 'for free' over a primal HTTP request and response adding most or even all of the abstraction needed to implement a web application.\n\n\"Once JSF receives this HTTP request, it creates and populates an instance of javax.faces.context.FacesContext. This class represents the current state of the request...\"\n",
    "ItemText": null,
    "CreateDate": "2007-03-22T16:16:02.0000000",
    "EndDate": null,
    "ModificationDate": "2007-03-22T16:16:02.0000000",
    "DocumentId": "2076071806",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5531",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "T-SQL Code: A Function for Checking for the Existence of an Object; fItemExists()",
    "SortOrdinal": null,
    "ItemChar": "USE [Database]\nGO\nIF OBJECT_ID('fItemExists') IS NOT NULL \nBEGIN \n    DROP FUNCTION fItemExists\n    IF OBJECT_ID('fItemExists') IS NOT NULL\n        PRINT '<<< FAILED DROPPING FUNCTION fItemExists >>>'\n    ELSE \n        PRINT '<<< DROPPED FUNCTION fItemExists >>>'\nEND\nGO\nCREATE FUNCTION dbo.fItemExists\n(\n    @objectName   nvarchar(128) = NULL\n,   @propertyName nvarchar(128) = NULL\n)\nRETURNS bit\nAS\nBEGIN\n    DECLARE @bit bit\n    SET @bit = 0\n    IF EXISTS(\n        SELECT\n            [object]   = o.name\n        ,   [property] = p.name\n        FROM\n            sysObjects o\n        ,   sysColumns p\n        WHERE\n            o.id = p.id\n        AND\n            o.name = @objectName\n        AND\n            p.name = @propertyName\n    )\n    BEGIN\n        SET @bit = 1\n    END\n\nRETURN @bit\nEND\nGO\nGRANT EXECUTE ON fItemExists TO public\nGO\nIF OBJECT_ID('fItemExists') IS NOT NULL \n    PRINT '<<< CREATED FUNCTION fItemExists >>>' \nELSE \n    PRINT '<<< FAILED CREATING FUNCTION fItemExists >>>' \nGO ",
    "ItemText": null,
    "CreateDate": "2007-04-04T12:44:27.0000000",
    "EndDate": null,
    "ModificationDate": "2007-04-04T12:44:27.0000000",
    "DocumentId": "2076071807",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5532",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Hibernate in Action Notes: Chapter 1; Understanding object/relational persistence; 1.1 What is persistence?",
    "SortOrdinal": null,
    "ItemChar": "1.1 What is persistence?\n\n\"To use Hibernate effectively, a solid understanding of the relational model and SQL is a prerequisite.\" Here is a list of SQL terms:\n\n* Data Definition Language (DDL): CREATE, ALTER\n* Data Manipulation Language (DML): INSERT, UPDATE, DELETE\n\n\"There are many reasons why SQL databases dominate the computing industry. Relational database management systems are the only proven data management technology and are almost always a requirement in any Java project.\"\n\n\"However, for the last 15 years, developers have spoken of a paradigm mismatch.\"\n\n\"Almost all Java applications contain a mix of persistent and transient objects; hence we need a subsystem that manages our persistent data.\" This \"subsystem\" requires a \"domain model.\"\n\n\"An application with a domain model doesn't work directly with the tabular representation of the business entities; the application has its own, object oriented model of the business entities.\"",
    "ItemText": null,
    "CreateDate": "2007-04-08T19:12:54.0000000",
    "EndDate": null,
    "ModificationDate": "2007-04-08T19:12:54.0000000",
    "DocumentId": "2076071808",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5533",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Hibernate in Action Notes: Chapter 1; Understanding object/relational persistence; 1.2 The paradigm mismatch",
    "SortOrdinal": null,
    "ItemChar": "1.2 The paradigm mismatch\n\n\"The problem of granularity\" identifies the mismatch between Java type definitions and the obstacles of SQL user-defined types (UDT).\n\n\"Unfortunately, UDT support is a somewhat obscure feature of most SQL database management systems and certainly isn't portable between different systems.\n\n\"The problem of subtypes\" reminds us that inheritance and polymorphism has no place in relational theory.\n\n\"The problem of identity\" shows us that Java objects are distinguished by tests for equality (== and !=) while the relational world uses the notion of the primary key.\n\n\"...we'll recommend that you use surrogate keys whenever possible. A surrogate key is a primary key column with no meaning to the user.\"\n\nThe \"problems relating to associations\" compare Java object references (directional) to foreign key associations (non-directional).\n\n\"The problem of object graph navigation\" refers to the \"fundamental difference in the way you access objects in Java and in a relational database.\" The dreaded \"n+1 selects problem\" is hidden here.\n\n\"This mismatch in the way we access objects in Java and in a relational database is perhaps the single most common source of performance problems in Java applications.\"\n",
    "ItemText": null,
    "CreateDate": "2007-04-08T19:41:18.0000000",
    "EndDate": null,
    "ModificationDate": "2007-04-08T19:41:18.0000000",
    "DocumentId": "2076071809",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5534",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Hibernate in Action Notes: Chapter 1; Understanding object/relational persistence; 1.3 Persistence layers and alternatives",
    "SortOrdinal": null,
    "ItemChar": "1.3 Persistence layers and alternatives\n\n\"A layered architecture defines interfaces between code that implements the various concerns, allowing a change to the way one concern is implemented without significant disruption to code in the other layers.\"\n\n\"Layers communicate top to bottom. A layer is dependent only on the layer\ndirectly below it... Each layer is unaware of any other layers except for the layer just below it.\"\n\n\"Different applications group concerns differently, so they define different layers. A typical, proven, high-level application architecture uses three layers, one each for presentation, business logic, and persistence...\" In addition to these layers, there are the Database and Helper/Utility classes.\n\nAbout four implementation options are listed for the persistence layer: Hand-coding a persistence layer with SQL/JDBC, serialization, EJB entity beans, object-oriented database systems and a snub for XML persistence.",
    "ItemText": null,
    "CreateDate": "2007-04-09T17:37:08.0000000",
    "EndDate": null,
    "ModificationDate": "2007-04-09T17:37:08.0000000",
    "DocumentId": "2076071810",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5535",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Hibernate in Action Notes: Chapter 1; Understanding object/relational persistence; 1.4 Object/relational mapping",
    "SortOrdinal": null,
    "ItemChar": "1.4 Object/relational mapping\n\n\"Now that we’ve looked at the alternative techniques for object persistence, it’s time to introduce the solution we feel is the best, and the one we use with Hibernate: ORM.\"\n\n\"Isn’t ORM a Visio plugin? The acronym ORM can also mean object role modeling, and this term was invented before object/relational mapping became relevant. It describes a method for information analysis, used in database modeling, and is primarily supported by Microsoft Visio, a graphical modeling tool. Database specialists use it as a replacement or as an addition to the more popular entity-relationship modeling. However, if you talk to Java developers about ORM, it’s usually in the context of object/relational mapping.\"\n\nThe research of Mark Fussel produced four kinds of ORM: Pure relational, Light object mapping, Medium object mapping and Full object mapping. These four kinds are increasing levels of granularity addressing the paradigm mismatch between the relational database and objects in an Application domain. Only the \"full object mapping\" solution solves the \"O/R mapping problems\" detailed in the book (1.4.2).\n\nSection 1.4.3 supports the use of ORM with benefits that include productivity, maintainability, performance and vendor independence. To support the performance argument the book asserts that \"the people who implemented your ORM software probably had much more time to investigate performance optimizations than you have...\" (1.4.3)\n",
    "ItemText": null,
    "CreateDate": "2007-04-09T17:53:52.0000000",
    "EndDate": null,
    "ModificationDate": "2007-04-09T17:53:52.0000000",
    "DocumentId": "2076071811",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5536",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Hibernate in Action Notes: Chapter 2; Introducing and\nintegrating Hibernate; 2.1 “Hello World” with Hibernate",
    "SortOrdinal": null,
    "ItemChar": "2.1 “Hello World” with Hibernate\n\n\"Hibernate applications define persistent classes that are 'mapped' to database tables... Our persistent class can be used in any execution context at all---no special container is needed.\" Hibernate depends on its Session object for its \"context\":\n\n    Session session = getSessionFactory().openSession();\n    Transaction tx = session.beginTransaction();\n    Message message = new Message(\"Hello World\");\n    session.save(message);\n    tx.commit();\n    session.close();\n\nThe Message is defined by:\n\n    package hello;\n    public class Message\n    {\n        /*\n            There is no need to set the id property explicitly.\n            The XML configuration file associates\n            the <generator /> element\n            with this \"identifier property\".\n        */\n        private Long id;\n\n        /*\n            The XML configuration file \"maps\" the private text\n            member to the MESSAGE_TEXT column in the database\n            with the <property /> element.\n        */\n        private String text;\n\n        /*\n            this reference to another Message object is used by\n            the XML configuration in the <many-to-one /> element.\n        */\n        private Message nextMessage;\n\n        //Hibernate requires this private constructor:\n        private Message() {}\n\n        public Message(String text) { this.text = text; }\n\n        public Long getId() { return id; }\n\n        /*\n            Note that setId() is private because\n            of Hibernate (see private id above):\n        */\n        private void setId(Long id) { this.id = id; }\n\n        public String getText() { return this.text; }\n        public void setText(String text) { this.text = text; }\n\n        /*\n            The members below are useful because of Hibernate,\n            its \"cascading save\" feature.\n        */\n        public Message getNextMessage() { return this.nextMessage; }\n        public void setNextMessage(Message this.nextMessage)\n        {\n            this.nextMessage = nextMessage;\n        }\n    }\n\nHibernate recognizes the Message class because of this XML configuration file or \"XML mapping document\":\n\n    <?xml version=\"1.0\"?>\n    <!DOCTYPE hibernate-mapping PUBLIC\n    \"-//Hibernate/Hibernate Mapping DTD//EN\"\n    \"http://hibernate.sourceforge.net/hibernate-mapping-2.0.dtd\">\n\n    <hibernate-mapping>\n    <class name=\"hello.Message\" table=\"MESSAGES\">\n\n    <id name=\"id\" column=\"MESSAGE_ID\">\n        <generator class=\"increment\"/>\n    </id>\n\n    <property name=\"text\" column=\"MESSAGE_TEXT\"/>\n\n    <many-to-one\n        name=\"nextMessage\"\n        cascade=\"all\"\n        column=\"NEXT_MESSAGE_ID\"/>\n\n    </class>\n    </hibernate-mapping>\n",
    "ItemText": null,
    "CreateDate": "2007-04-09T18:38:56.0000000",
    "EndDate": null,
    "ModificationDate": "2007-04-09T18:38:56.0000000",
    "DocumentId": "2076071812",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5537",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Hibernate in Action Notes: Chapter 2; Introducing and\nintegrating Hibernate; 2.2 Understanding the architecture",
    "SortOrdinal": null,
    "ItemChar": "2.2 Understanding the architecture\n\n\"The programming interfaces are the first thing you have to learn about Hibernate in order to use it in the persistence layer of your application.\" There are about four types of interfaces:\n\ni) The Session, Transaction, and Query interfaces perform basic CRUD and querying operations.\n\nii) The Configuration class for \"application infrastructure.\"\n\niii) Interceptor, Lifecycle, and Validatable characterize callback interfaces.\n\niv) UserType, CompositeUserType, and IdentifierGenerator are interfaces that extend \"Hibernate’s powerful mapping functionality.\"\n\n\"Hibernate makes use of existing Java APIs, including JDBC), Java Transaction API (JTA, and Java Naming and Directory Interface (JNDI). JDBC provides a rudimentary level of abstraction of functionality common to relational databases, allowing almost any database with a JDBC driver to be supported by Hibernate. JNDI and JTA allow Hibernate to be integrated with J2EE application servers.\"\n\nMost of the important Hibernate interfaces are in the net.sf.hibernate package. Five \"core interfaces\" form the basis of the majority of Hibernate applications:\n\ni) Session\nii) SessionFactory\niii) Configuration\niv) Transaction\nv) Query (and Criteria)\n\nHibernate uses Configuration to instantiate a SessionFactory which is shared among many threads. Each thread gets a lightweight Session object. \"Hibernate sessions are not threadsafe and should by design be used by only one thread at a time.\"\n\nTransaction is optional. \"Hibernate applications may choose not to use this interface, instead managing transactions in their own infrastructure code.\"\n\n\"The Lifecycle and Validatable interfaces allow a persistent object to react to events relating to its own persistence lifecycle... The Interceptor interface was introduced to allow the application to process\ncallbacks without forcing the persistent classes to implement Hibernate-specific APIs. Implementations of the Interceptor interface are passed to the persistent instances as parameters.\"\n\n\"A fundamental and very powerful element of the architecture is Hibernate’s notion of a Type. A Hibernate Type object maps a Java type to a database column type (actually, the type may span multiple columns)... Even better, Hibernate supports user-defined custom types. The interfaces UserType and CompositeUserType are provided to allow you to add your own types.\"\n",
    "ItemText": null,
    "CreateDate": "2007-04-10T18:30:47.0000000",
    "EndDate": null,
    "ModificationDate": "2007-04-10T18:30:47.0000000",
    "DocumentId": "2076071813",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5538",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Hibernate in Action Notes: Chapter 2; Introducing and\nintegrating Hibernate; 2.3 Basic configuration",
    "SortOrdinal": null,
    "ItemChar": "2.3 Basic configuration\n\n\"Hibernate can be configured to run in almost any Java application and development environment... It’s important to understand the difference in configuring Hibernate for managed and non-managed environments...\"\n\nTomcat is considered an unmanaged environment because it only provides \"basic concurrency management via thread pooling.\"\n\n\"A J2EE application server such as JBoss, BEA WebLogic, or IBM WebSphere implements the standard (J2EE-specific) managed environment for Java.\" A managed environment provides resource pooling (like database connections), transaction and security functionality.\n\n\"Hibernate attempts to abstract the environment in which it’s deployed. In the case of a non-managed environment, Hibernate handles transactions and JDBC connections (or delegates to application code that handles these concerns). In managed environments, Hibernate integrates with container-managed transactions and datasources. Hibernate can be configured for deployment in both environments.\"",
    "ItemText": null,
    "CreateDate": "2007-04-10T18:38:47.0000000",
    "EndDate": null,
    "ModificationDate": "2007-04-10T18:38:47.0000000",
    "DocumentId": "2076071814",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5539",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2003 PROBLEM: IIS Throws 404 Errors for ASP.NET 2.0 Applications; ASP.NET 2.x Web Service Extension Not Installed",
    "SortOrdinal": null,
    "ItemChar": "Internet Information Server in Windows Server 2003 will throw 404 errors when ASP.NET 2.0 is not installed but the server is configured for ASP.NET 2.x under Properties > ASP.NET > ASP.NET version in the IIS management console (MMC). Setting this value to ASP.NET 2.x will not install the ASP.NET Web Service Extension.\n\nTo install ASP.NET 2.x, open the Console to this location:\n\n    %systemRoot%\\Microsoft.NET\\Framework\\v2.0.50727\\\n\nthen run this command:\n\n    aspnet_regiis -i\n\nThis invokes the ASP.NET IIS Registration Tool. More information about this tool is here:\n\n    http://msdn2.microsoft.com/en-us/library/k6h9cz8h(VS.80).aspx",
    "ItemText": null,
    "CreateDate": "2007-04-12T14:22:45.0000000",
    "EndDate": null,
    "ModificationDate": "2007-04-12T14:22:45.0000000",
    "DocumentId": "2076071815",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5540",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2003: Installing OpenSSH",
    "SortOrdinal": null,
    "ItemChar": "These notes are a \"remixed\" version of \"OpenSSH for Windows 2003 Server\" by Stephen Pillinger of the University of Birmingham here:\n\n    http://www.cs.bham.ac.uk/%7Esmp/projects/ssh-windows/\n\nYou should look at this reference for issues related to host-based authentication and public key authentication.\n\nThere are two known ways to install a free ssh server on Windows Server 2003. The first way is to install the full Cygwin distribution with a package manager. This process in described by Kevin Scully of University of Waterloo here:\n\n    http://ist.uwaterloo.ca/%7Ekscully/CygwinSSHD_W2K3.html\n\nThe other method is installing OpenSSH that uses a subset of Cygwin. This process described by Stephen Pillinger (see above) requires Windows Server 2003 Resource Kit Tools, now available here:\n\n    http://www.microsoft.com/downloads/\n        details.aspx?FamilyID=\n            9d467a69-57ff-4ae7-96ee-b18c4790cffd&DisplayLang=en\n\nOpen SSH is available here:\n\n    http://sshwindows.sourceforge.net/\n\nThe default installation directory is this:\n\n    %ProgramFiles%\\OpenSSH\\\n\nEdit this file:\n\n    %ProgramFiles%\\OpenSSH\\etc\\sshd_config\n\nto make this line:\n\n    UsePrivilegeSeparation yes\n\nNow to the command line:\n\n    mkdir %ProgramFiles%\\OpenSSH\\var\\empty\\\n\nNote that the \\var\\empty\\ is a path that is required by default.\n\n    net user sshd yourPassword\n        /add /fullname:\"User for OpenSSH Service\"\n        /homedir:\"%ProgramFiles%\\OpenSSH\\var\\empty\\\"\n\n    sc config OpenSSHd obj= .\\sshd password= yourPassword\n\nNote that you cannot use the %ProgramFiles% syntax used above for the /homedir option.\n\n    net localgroup Administrators sshd /add\n\n    ntrights +r SeAssignPrimaryTokenPrivilege -u sshd\n    ntrights +r SeCreateTokenPrivilege -u sshd\n    ntrights +r SeDenyInteractiveLogonRight -u sshd\n    ntrights +r SeDenyNetworkLogonRight -u sshd\n    ntrights +r SeDenyRemoteInteractiveLogonRight -u sshd\n    ntrights +r SeIncreaseQuotaPrivilege -u sshd\n    ntrights +r SeServiceLogonRight -u sshd\n\nNote that ntrights.exe is part of the Windows Server 2003 Resource Kit Tools.\n\n    cacls \"%ProgramFiles%\\OpenSSH\" /E /T /G sshd:R\n    cacls \"%ProgramFiles%\\OpenSSH\\var\" /E /T /G sshd:F\n\n    subinacl /subdirectories \"%ProgramFiles%\\OpenSSH\\var\\*.*\" /setowner=\"sshd\" \n\nNote that in order for the above SUBINACL.EXE command to work you have to install an update from Microsoft here:\n\n    http://www.microsoft.com/downloads/\n        details.aspx?FamilyID\n            =e8ba3e56-d8fe-4a91-93cf-ed6985e3927b&displaylang=en\n\n    cd %ProgramFiles%\\OpenSSH\\bin\\\n    mkgroup -l > ..\\etc\\group\n    mkpasswd -l > ..\\etc\\passwd\n\nNote that you should delete any unnecessary groups and users from %ProgramFiles%\\OpenSSH\\etc\\group and %ProgramFiles%\\OpenSSH\\etc\\passwd respectively.\n\nAlso you might want to comment out the Banner message under \"# default banner path\" in %ProgramFiles%\\OpenSSH\\etc\\sshd_config.",
    "ItemText": null,
    "CreateDate": "2007-04-17T21:12:14.0000000",
    "EndDate": null,
    "ModificationDate": "2007-04-17T21:12:14.0000000",
    "DocumentId": "2076071816",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5541",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu/Debian: How to change the hostname or machine name",
    "SortOrdinal": null,
    "ItemChar": "Edit the hostname file:\n\n    sudo nano /etc/hostname\n\nPersist the hostname:\n\n    sudo /etc/init.d/hostname.sh start",
    "ItemText": null,
    "CreateDate": "2007-04-19T15:31:46.0000000",
    "EndDate": null,
    "ModificationDate": "2007-04-19T15:31:46.0000000",
    "DocumentId": "2076071817",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5542",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "XSLT Problem: The String \"x­mlns\" Can Mangle Output",
    "SortOrdinal": null,
    "ItemChar": "By simply typing the string \"x­mlns\" in an XSLT file, or inserting this string into an XSLT source XML file, XSL processing can mangle output in the PHP environments and on the .NET 2.x platform (and below).\n\nThe string \"x­mlns\" refers to declaring/registering a namespace in an XML document. So it is clear that this character combination has significant meaning. This mangling problem persists even when \"x­mlns\" appears in a CDATA block.\n\nOne horrid hack to deal with this problem (when you must deal with this problem) is to search character data and replace \"x­mlns\" with something like \"x[invisible character]mns\" where the invisible character can be, say, a soft-hyphen (&shy; or &#173; or &#xAD;).\n\nBy the way, Microsoft Word users can enter Ctrl+- (control hyphen) to enter a soft hyphen. The Windows key combination is Alt+0173.",
    "ItemText": null,
    "CreateDate": "2007-05-02T23:37:57.0000000",
    "EndDate": null,
    "ModificationDate": "2007-05-02T23:37:57.0000000",
    "DocumentId": "2076071823",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5543",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "XSLT in .NET: Default Security Used for xsl:include Element; XmlUrlResolver",
    "SortOrdinal": null,
    "ItemChar": "The xsl:include include element needs no special security procedure associated with it. It should behave as expected when an XSLT file is including another file on the same server---especially one in the same application domain.\n\n'No special security procedure' essentially means using XslTransform.Load() to load an XSLT file without providing a XmlUrlResolver as a parameter. According to the MSDN documentation, \"For overloads of XslTransform.Load() that do not take a resolver parameter, a default XmlUrlResolver with no credentials is created for the user by XslTransform.\" More information is here:\n\n    \"Secure XSL Transformations in Microsoft .NET\"\n    http://msdn2.microsoft.com/en-us/library/ms950792.aspx\n",
    "ItemText": null,
    "CreateDate": "2007-05-03T16:34:01.0000000",
    "EndDate": null,
    "ModificationDate": "2007-05-03T16:34:01.0000000",
    "DocumentId": "2076071824",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5544",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2003 Firewall: the Ports to Open that allow IIS to Receive Requests; Windows Firewall",
    "SortOrdinal": null,
    "ItemChar": "Under Control Panel > Windows Firewall > Exceptions > Programs and Services check File and Printer Sharing. This allows WINS-capable clients to resolve the IP address from the NETBIOS name.\n\nNext choose Windows Firewall > Exceptions > Add Port... and enter TCP:80 for IIS. Also, you may need TCP:22 in case you have OpenSSH installed.\n\nFor further reading, see \"Innovations in Internet Information Services Let You Tightly Guard Secure Data and Server Processes\" here:\n\n    http://msdn.microsoft.com/msdnmag/\n        issues/02/09/securityiniis60/default.aspx\n\nand \"Troubleshooting IIS and ASP.NET Settings Import\" here:\n\n    http://msdn2.microsoft.com/en-us/library/ms182001(VS.80).aspx\n",
    "ItemText": null,
    "CreateDate": "2007-05-06T19:44:00.0000000",
    "EndDate": null,
    "ModificationDate": "2007-05-06T19:44:00.0000000",
    "DocumentId": "2076071825",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5545",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VMware Workstation 5.x Problem: VMware Tools Does not Work with Ubuntu Running a Kernel Greater than 2.6.15-27-386",
    "SortOrdinal": null,
    "ItemChar": "The pre-compiled version(s) of VMware Tools does not work with Ubuntu running a kernel newer than 2.6.15-27-386. Note that this problem persists in VMware Workstation 5.5.4.\n\nThe quick and dirty solution to this problem is use GRUB to select the \"old\" kernel. This process is shown in the \"Menu Configuration\" section of \"Boot with GRUB\" by Wayne Marshall here:\n\n    http://www.linuxjournal.com/article/4622\n\nThe other option involves compiling your own version of VMware Tools.",
    "ItemText": null,
    "CreateDate": "2007-05-07T16:58:12.0000000",
    "EndDate": null,
    "ModificationDate": "2007-05-07T16:58:12.0000000",
    "DocumentId": "2076071826",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5546",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF XAML: Reading Properties.Settings Data",
    "SortOrdinal": null,
    "ItemChar": "<Window\n    x­mlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    x­mlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n\n    x­mlns:c=\"clr-namespace:My.WpfApp\"\n\n    x:Class=\"My.WpfApp.Client\"\n\n    Name=\"MyWindow\"\n>\n    <Window.Resources>\n        <ObjectDataProvider\n            x:Key=\"appSettings\"\n            ObjectType=\"{x:Type c:Properties.Settings}\">\n        </ObjectDataProvider>\n    </Window.Resources>\n\n    <Grid>\n        <TextBlock\n            Text=\"{Binding Source={StaticResource appSettings}, Path=Default.Test}\"\n            />\n    </Grid>\n</Window>",
    "ItemText": null,
    "CreateDate": "2007-05-15T12:36:01.0000000",
    "EndDate": null,
    "ModificationDate": "2007-05-15T12:36:01.0000000",
    "DocumentId": "2076071827",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5547",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": ".NET Framework 3.0: Highlights of November 2006 CTP Release Notes",
    "SortOrdinal": null,
    "ItemChar": "* \"Please note that this release only works with the Final release of Visual Studio 2005.\"\n\n* \"A few users have seen a situation where when they try to create a .NET Framework 3.0 project, they get a package load failure for the WPFFlavor.  This appears to be due to having a machine that had earlier versions of Visual Studio, .NET Framework 3.0, and Visual Studio 2005 extensions for .NET Framework 3.0 (WCF & WPF), November 2006 CTP.  If you hit this problem, run devenv /setup from the command line and this package load failure should be resolved.\"\n\n* \"Note that until a final release of the .NET Framework 3.0 runtime is available, publishing can only be used for internal testing.\"\n\n* \"You must close all generated files that are open in the Visual Studio editor with extensions .g.cs or .g.vb before building your project.  Failure to do so may result in these files not being updated in subsequent builds.\"\n\n* \"IntelliSense doesn't work for elements with a Name until you build once. The IntelliSense engine relies on the code in the markup-compiler generated code file to know what type the Name is.\"\n\n* \"The Windows Presentation Foundation and XAML schemas provided with the .NET Framework 3.0 SDK are not flawless. Today, many things can compile that the schema may not approve of. We also have things that the schema will approve that will not compile.\"\n\n* \"The WPF Designer no longer has a tab for viewing source code. In VB projects this can be confusing because the source code behind the .xaml files is a subnode and the Visual Basic project system hides subnodes from the user. To work around this you should use the 'Show All Files' button the solution explorer to access the source files.\"\n\n* \"We still have a way to go before the design/compilation process for xaml files gets smoother. In our first version, we aren’t going to be able to do as much content model and attribute value checking during compilation as we would like to. For hand coding xaml, until you start using a visual designer, it will be painful. To make it better, the XamlPresentation2006.xsd file has been significantly enhanced to give you better xaml editing in the xml editor. You can also choose to turn on Debug/Exceptions/Break when an exception is thrown for exceptions that you get when loading your xaml page. This will prevent .g.cs/.g.vb files from being opened which cause bad side effects. We realize that we need to invest significantly in this area in the future.\"\n\n\n",
    "ItemText": null,
    "CreateDate": "2007-05-15T22:39:10.0000000",
    "EndDate": null,
    "ModificationDate": "2007-05-15T22:39:10.0000000",
    "DocumentId": "2076071828",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5548",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "\"Picture superiority effect, pictograms, & culture\"",
    "SortOrdinal": null,
    "ItemChar": "\"Picture superiority effect, pictograms, & culture\":\n\n    http://www.presentationzen.com/presentationzen/\n        2007/04/the_picture_sup.html\n\n\"The picture superiority effect says that pictures are remembered better than words, especially when people are casually exposed to the information and the exposure is for a very limited time.\"",
    "ItemText": null,
    "CreateDate": "2007-06-01T10:42:56.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-01T10:42:56.0000000",
    "DocumentId": "2076071829",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5549",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Swami Vivekananda",
    "SortOrdinal": null,
    "ItemChar": "Swami Vivekananda:\n\n    http://en.wikipedia.org/wiki/Swami_Vivekananda\n",
    "ItemText": null,
    "CreateDate": "2007-06-01T10:47:01.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-01T10:47:01.0000000",
    "DocumentId": "2076071830",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5550",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio 2005 VB.NET Windows Forms Problem: Unable to Select Program or Sub Main to Start Windows Application; Enable application framework",
    "SortOrdinal": null,
    "ItemChar": "In a VB.NET Windows Application Project, you are unable to start the application without selecting a Windows Form because the Enable application framework checkbox is checked under the Program page in the Properties pane.\n\nFor more information, see \"How to: Change the Startup Object for an Application\" here:\n\n    http://msdn2.microsoft.com/en-us/library/17k74w0c(VS.80).aspx\n",
    "ItemText": null,
    "CreateDate": "2007-06-01T15:57:42.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-01T15:57:42.0000000",
    "DocumentId": "2076071831",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5551",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "UCLA MCCS: PODS 3.x Schema Generation and Deployment",
    "SortOrdinal": null,
    "ItemChar": "Schema Generation Servers\n\n* Build server: xpcpodsmgmt.medctr.ucla.edu\n* Development server: xdcpods02.medctr.ucla.edu\n* NAS filer: \\\\nasfs1 (or \\\\nasfs2)\n\n\nTesting and Deployment Server\n\n* Testing server: podstest.mednet.ucla.edu\n* Database server: cerebrus.medctr.ucla.edu\n* Production server: pods.mednet.ucla.edu\n\n1. Use IcapSchemaRequestVerification.xls to verify spreadsheet input.\nAs of this writing this file is located here:\n\n    \\\\nasfs1\\DevGroup\\PODS\\icap-schema-gen\n\n2. Verify the uniqueness of the IDs in the Form ID column of the spreadsheet input. Note that any characters in the IDs should be in upper case.\n\n3. Determine the new release number. This defaults to incrementing one from the last release number. The last release number can be seen in the xpcpodsmgmt*/home/podsdev/schema/*-list.txt files.\n\n4. Determine the new test number. This defaults to incrementing one from the last test number. The last test number can be seen by running ant in the xpcpodsmgmt*/home/podsdev/test/suite folder.\n\n5. Enter the unique IDs from the spreadsheet into a file called xpcpodsmgmt*/home/podsdev/schema/[release#]-list.txt where [release#] is the new release number (step 3). Note that any characters in the IDs should be in upper case. Omit empty lines and spaces.\n\n6. Run ./generate-schema.sh [release#]-list.txt [release#] [test#] Ignore any \"rm: cannot remove... No such file or directory\" errors.\n\n7. Make a new release candidates folder on the NAS filer with the form [release#] in \\\\nasfs1\\DevGroup\\PODS\\releaseCandidates\\. Make folders \\\\nasfs1\\DevGroup\\PODS\\releaseCandidates\\[release#]\\unzipped-schemas and \\\\nasfs1\\DevGroup\\PODS\\releaseCandidates\\[release#]\\sql-mapping.\n\n8. Copy xpcpodsmgmt*/home/podsdev/schema/[release#]/sql/*.* to \\\\nasfs1\\DevGroup\\PODS\\releaseCandidates\\[release#]\\sql-mapping.\n\n9. Copy xpcpodsmgmt*/home/podsdev/schema/[release#]/output/*.xsd to \\\\nasfs1\\DevGroup\\PODS\\releaseCandidates\\[release#]\\unzipped-schemas.\n\n10. Copy xpcpodsmgmt*/home/podsdev/schema/[release#]/output/*.xsd to \\\\nasfs1\\DevGroup\\PODS\\RELEASES\\PODS3.0\\SCHEMAS\\DEV\\xsds.\n\n11. Map a Windows drive from \\\\nasfs1\\DevGroup\\PODS\\RELEASES\\PODS3.0\\SCHEMAS\\DEV\\xsds and run dir > releasedoc.txt.\n\n12. Copy releasedoc.txt into \\\\nasfs1\\DevGroup\\PODS\\releaseCandidates\\[release#]\\ReleaseSummary_PODS_v[release#]_[date].txt. And example file would be ReleaseSummary_PODS_v3_6_11_Jun_05_2007.txt\n\n13. Copy xpcpodsmgmt*/home/podsdev/test/suite/build.xml into xpcpodsmgmt*/home/podsdev/test/suite/build.xml.bak.\n\n14. Add a new message under TARGET:HELP in build.xml of the form <echo message=\"[test#] - [release#]-schema\"/> .\n\n15. Add a new regression test <target /> block under the last test block in build.xml. (Look for blocks <!--TARGET: PODS REGRESSION TEST 000 -->.)\n\n16. Add a new <if /> block under the last test <if /> block in build.xml.\n\n17. Copy xpcpodsmgmt*/home/podsdev/schema/[release#]/output/*.xsd to xdcpods02*/PODS/all_online/dtd/3.1/ and send and email to the development database person:\n\n    subject: PODS 3.x Release Candidate [release#]\n    body:\n        Please deploy new schema changes to PODS 3.0 Test DB.\n        You can find the script in following location:\n        \\\\nasfs1\\DevGroup\\PODS\\releaseCandidates\\[release#]\\sql-mapping\n\n18. From the xpcpodsmgmt*/home/podsdev/test/suite/ folder run this command: ant pods-regression-batch -Dserver=xdcpods02.medctr.ucla.edu -Dbatch=001,002,003,[test#] -Dhost=xpcpodsmgmt.medctr.ucla.edu -Dnotify=bwilhite@mednet.ucla.edu,wting@mednet.ucla.edu,mchan@mednet.ucla.edu  Make sure to run this command from a terminal that can stay open for a large time!\n\n",
    "ItemText": null,
    "CreateDate": "2007-06-05T14:36:13.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-05T14:36:13.0000000",
    "DocumentId": "2076071832",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5552",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "\"Sacred Ibis\" and Our Word for \"discover\"",
    "SortOrdinal": null,
    "ItemChar": "According to Budge, the \"Sacred Ibis\" is in our Word for \"discover.\" Reference:\n\n    http://en.wikipedia.org/wiki/Sacred_Ibis\n\n\"The Sacred Ibis occurs in marshy wetlands and mud flats, both inland and on the coast.\"\n\n\"Venerated and often mummified by Ancient Egyptians as a symbol of the god Thoth, the Ibis was according to Herodotus and Pliny the Elder also invoked against incursions of serpents. It was also said that the flies that brought pestilence died immediately upon propitiatory sacrifices of this bird (Pliny, Natural History Book X Chapter 41).\"\n\nNote how its beak can probe into the ground---digging. Recall that our word for \"study\" is related to the word for \"dig.\"",
    "ItemText": null,
    "CreateDate": "2007-06-05T14:06:36.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-05T14:06:36.0000000",
    "DocumentId": "2076071833",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5553",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio 2005: Flippant Remarks about Application Settings",
    "SortOrdinal": null,
    "ItemChar": "A general overview (with some specific advice) is \"How to use the Settings class in C#\" by Seun found here:\n\n    http://www.codeproject.com/useritems/PropertiesSettings.asp\n\nUser-scope settings are saved in the Local Settings folder:\n\n    %UserProfile%\\Local Settings\\Application Data\\[Company]\\\n\nwhere [Company] is specified under Properties > Application > Assembly Information...\n\nThe Settings.Default.SettingsLoaded event will not fire until a setting is called.\n\nThe Settings.Default.Upgrade() method must be called in order to obtain previously saved settings. You can call this method when there are no previously saved settings without an exception penalty.\n",
    "ItemText": null,
    "CreateDate": "2007-06-12T16:42:10.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-12T16:42:10.0000000",
    "DocumentId": "2076071834",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5554",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Cheikh Anta Diop, Precolonial Black Africa, Political Organization in Black Africa; Diop on Mossi Constitutional Monarchy",
    "SortOrdinal": null,
    "ItemChar": "Thus, the ministers who assist the emperor, rather than being members of the high nobility of the Nakomsé, are systematically chosen from outside of it, from among the common people and the slaves. They represent at court, as we shall more clearly see, the different social categories, professions, and castes. “Those without birth,” slaves and laborers, organized into professions (castes), far from being kept separated from power in this period which extends far beyond the Occidental Middle Ages (since, very likely, it may go back to the first century and the foundation of Ghana), are associated with it, not in any symbolic but in an organic way. Each profession has its representatives within the government; they will, as needed, present its complaints.\n\nThat is the spirit of this constitution. In order to comprehend its originality, we would have to imagine, at midpoint of the Middle Ages (1352–53, the time of Ibn Battuta’s voyage to the Sudan and of the Hundred Years War), not just some provincial lord, but the King of France or of England, giving a share of his power, with a voice in decisions, to the rural serfs, bound to the soil, the free peasants, the town guildsmen, and the merchants. And beyond all that, imagine the existence of a tradition according to which the king, within the framework of an already constitutional monarchy, cannot reign, cannot have moral and political authority in the eyes of the people, unless he is invested by a bourgeois who is also chosen from among one or a few traditionally determined families. Neither the bourgeoisie nor the peasantry of the West would then have had the revolutionary virulence that once imbued them, and the course of Western European history would probably have been different.\n\nThe non-absolute nature of the monarchy is revealed by the fact, once invested, the ministers cannot be removed by the king.",
    "ItemText": null,
    "CreateDate": "2007-06-13T17:57:01.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-13T17:57:01.0000000",
    "DocumentId": "2076071835",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5555",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Cheikh Anta Diop, Precolonial Black Africa, Political Organization in Black Africa; Diop on Matrilineal Succession in Ghana",
    "SortOrdinal": null,
    "ItemChar": "In 1067, the sovereign of Bakri’s time was the Tunka Menin, who had succeeded his maternal uncle Bessi.\n\n[begin quote]\nAmong this people, custom and rules demand that the successor to the king be his sister’s son; for, they say, the sovereign can be sure that his nephew is indeed his sister’s son; but nothing can assure him that the son he considers his own in actuality is. [Al Bakri, Description de l’Afrique septentrionale (trans. Slane) (Algiers: Typographie Adolphe Jourdan, 1913), pp.327–328: “Description de Ghana et moeurs de ses habitants.”]\n[end quote]\n\nThe custom of matrilineal succession can be accepted without necessarily attaching any importance to the justification given for it, although the latter seems convincing. This explanation, very often heard in Black Africa, considerably postdates the clanic conditions of economic life which gave birth to the matriarchy. [Cf. Diop, L’Unité culturelle de l’Afrique noire, esp. ch. III.]",
    "ItemText": null,
    "CreateDate": "2007-06-13T19:05:36.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-13T19:05:36.0000000",
    "DocumentId": "2076071836",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5556",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Cheikh Anta Diop, Precolonial Black Africa, Political Organization in Black Africa; Diop on Monarchic and Tribal Africa",
    "SortOrdinal": null,
    "ItemChar": "Africans thus never experienced a lay republic, even though the regimes were almost everywhere democratic, with a balance of powers. That is why every African is at heart a hidden aristocrat, just as every French bourgeois was before the Revolution. The deeper reflexes of the present-day African are more closely tied to a monarchic regime than to a republican one. Rich or poor, peasant or urbanite, all dream of being a small or great lord rather than a small or great bourgeois. The quality of their gestures and attitudes, their manner of seeing things, whatever the caste, is lordly and aristocratic in contrast to bourgeois “pettiness.” There is still one revolution’s distance between African and Western consciences, in terms of instinctive behavior. These aftereffects of aristocratism would have been extirpated only if the African, in the course of his history, had become responsible for his own destiny within the framework of a republican regime. Western colonization, even when republican, could not change these facts. That also explains why many Blacks adjust perfectly to the manners of the British aristocracy.\n",
    "ItemText": null,
    "CreateDate": "2007-06-13T19:34:03.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-13T19:34:03.0000000",
    "DocumentId": "2076071837",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5557",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ali A. Mazrui, The Africans: A Triple Heritage; Chapter Three: Africa’s Identity: The Indigenous Personality; Mazrui on African Classlessness and Democracy; p.75",
    "SortOrdinal": null,
    "ItemChar": "Finally, romantic gloriana in its very admiration of kings, emperors and eminent scholars of the past, is predicated on a respect for hierarchy and stratification, with its capacity to produce historical achievements. Idealised primitivism on the other hand, is predicated on village egalitarianism. Important schools of African thought assert that traditional Africa was classless. Societies without rulers, and certainly without kings, were based on limited class differences and very modest disparities of power between and among the different sub-groups. Julius Nyerere combined this egalitarianism with the fellowship of village life to provide what he regarded as the ancestry of his own brand of socialism. Nyerere used the Swahili word “ujamaa” (familyhood) for the fellowship of modern Africa rooted in the ancient virtues of equality and co-operation. As Julius Nyerere once wrote,\n\n[begin quote]\nWe in Africa have no more need of being taught socialism than we have of being taught democracy. Both are rooted in our past, in the traditional society which produced us.\n[end quote]\n\nPresident Kenneth Kaunda of Zambia’s ideas on Africa’s humanism also include this assumption of equality in African traditional life. Kaunda once described his policy of decentralisation as a form of returning power to the people. He expressed faith in the people’s capacity to exercise power properly, in their natural wisdom as ordinary rural people and in the tradition of egalitarianism in Zambia from pre-colonial days. To some extent Kaunda’s conception of traditional Africa is somewhere between romantic primitivism and romantic gloriana.\n",
    "ItemText": null,
    "CreateDate": "2007-06-13T19:58:14.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-13T19:58:14.0000000",
    "DocumentId": "2076071838",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5558",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ali A. Mazrui, The Africans: A Triple Heritage; Chapter Nine: In Search of Stability; Mazrui on Julius Nyerere on Traditional African Democracy; p.180",
    "SortOrdinal": null,
    "ItemChar": "Julius Nyerere of Tanzania regarded traditional African democracy as a constant quest for consensus through discussion. ‘The elders sat under a tree and talked until they agreed.’ This was government by discussion; it was also government by consensus. Those two principles could best be modernised through the establishment of the one-party state.\n\nBut while each traditional African society might indeed have been best served by a single party, what would best serve a collection of traditional societies now enclosed into a single post-colonial state? The Ibo, the Yoruba and the Hausa separately might have been best served by the one-party principle in their own individual societies. But now that all three were enclosed in a single post-colonial Nigeria, would they not be best served by a multi-party plurality? These dilemmas have yet to be resolved in the vortex of post-colonial contradictions.\n",
    "ItemText": null,
    "CreateDate": "2007-06-13T20:09:50.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-13T20:09:50.0000000",
    "DocumentId": "2076071839",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5559",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "William H. Grier and Price M. Cobbs, Black Rage; Chapter III: Achieving Womanhood; Grier and Cobbs on Negro Ugliness; pp. 52",
    "SortOrdinal": null,
    "ItemChar": "The Negro woman’s black face, African features, and kinky hair are physical attributes which place her far from the American ideal of beauty, and make her, with reference to the American ideal, ugly. When the feeling of ugliness is reinforced by the rejection of family and society, the growing girl develops a feeling not only of being undesirable and unwanted but also of being mutilated—of having been fashioned by Nature in an ill-favored manner.",
    "ItemText": null,
    "CreateDate": "2007-06-14T20:53:38.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-14T20:53:38.0000000",
    "DocumentId": "2076071840",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5560",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "William H. Grier and Price M. Cobbs, Black Rage; Chapter III: Achieving Womanhood; Grier and Cobbs on the Natural Hairdo; p. 45",
    "SortOrdinal": null,
    "ItemChar": "It is against this endless circle of shame, humiliation, and the implied unacceptability of one’s own person that a small but significant number of black women have turned to the “natural hairdo”; no hot irons, no pressing combs, no oils, but a soft, black, gentle cloche of cropped velvet. The effect is engaging and feminine, and, in light of the above, so psychologically redemptive, that we can only wonder why it has taken them so long, and why even yet there are so few.",
    "ItemText": null,
    "CreateDate": "2007-06-14T19:46:51.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-14T19:46:51.0000000",
    "DocumentId": "2076071841",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5561",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "William H. Grier and Price M. Cobbs, Black Rage; Chapter V: Marriage and Love; Grier and Cobbs on a Common Pattern in Marriage; p. 75",
    "SortOrdinal": null,
    "ItemChar": "A schoolteacher married a laborer. They worked hard and with economy and planning managed to acquire a home and a car. Children came as planned, but conflict came and grew. The wife wanted a larger home with a yard. The husband resented her demands. He felt that she and her friends were “phony” and that she was preoccupied with maintaining senseless appearances. Their mutual hostility led to verbal and later physical assaults. Divorce was the result.",
    "ItemText": null,
    "CreateDate": "2007-06-14T20:04:37.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-14T20:04:37.0000000",
    "DocumentId": "2076071842",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5562",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "William H. Grier and Price M. Cobbs, Black Rage; Chapter V: Marriage and Love; Grier and Cobbs on Skin Color Consciousness; p. 77",
    "SortOrdinal": null,
    "ItemChar": "A minor point may be illustrative. The racial mixture in the background of black people is so varied that it is extremely rare to find two Negroes who have exactly the same brown tones to their skin. There is usually a bit more yellow or red or black that distinguishes seemingly identical skin colors from one another. But these are minor variations on a brown theme and their least deviations are generally of small moment to adults.\n\nThe infant’s world is so very different in this regard. His mother’s body is a vitally important part of his world. Her breasts, her hands, arms, face, are the most important things he sees and touches. She is the first human he recognizes and for a long time in his small life she is bringer of life.\n\nAs he plays with her breast or face, he looks intently, with the myopic vision of a child, at her skin. Its color becomes to him the color of all loving people’s skin, and in fact the particular skin tones he sees as a child will ever after evoke emotional overtones based on that intimacy. It is no wonder then that men choose women whose skin tones are closely matched to their mother’s, or that in multiple marriages all the wives will have the identical color.\n",
    "ItemText": null,
    "CreateDate": "2007-06-14T20:24:19.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-14T20:24:19.0000000",
    "DocumentId": "2076071843",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5563",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about Identifying a Nullable Type",
    "SortOrdinal": null,
    "ItemChar": "Look here, \"How to: Identify a Nullable Type (C# Programming Guide)\":\n\n    http://msdn2.microsoft.com/en-us/library/ms366789(vs.80).aspx\n\n\"You can use the C# typeof operator to create a Type object that represents a Nullable type... The C# is operator also operates on a Nullable's underlying type. Therefore you cannot use is to determine whether a variable is a Nullable type.\"\n\nThe Boolean test:\n\n    if (type.IsGenericType &&\n        type.GetGenericTypeDefinition() == typeof(Nullable<>)) {…}\n",
    "ItemText": null,
    "CreateDate": "2007-06-18T12:09:33.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-18T12:09:33.0000000",
    "DocumentId": "2076071844",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5564",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Agape Love; Several Greek Words for \"Love\"",
    "SortOrdinal": null,
    "ItemChar": "\"Agape (IPA: [?'g?.pe] or IPA: ['?g??pe]) (Gk. a??p? [a'?a.pi]), is one of several Greek words translated into English as love. The word has been used in different ways by a variety of contemporary and ancient sources, including Biblical authors. Many have thought that this word represents divine, unconditional, self-sacrificing, active, volitional, and thoughtful love. Greek philosophers at the time of Plato and other ancient authors have used forms of the word to denote love of a spouse or family, or affection for a particular activity, in contrast to philia—an affection that could denote either brotherhood or generally non-sexual affection, and eros, an affection of a sexual nature, usually between two unequal partners. The term agape is rarely used in ancient manuscripts, but was used by the early Christians to refer to the self-sacrificing love of God for humanity, which they were committed to reciprocating and practicing towards God and among one another.\"\n\nhttp://en.wikipedia.org/wiki/Agape\n",
    "ItemText": null,
    "CreateDate": "2007-06-25T19:19:51.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-25T19:19:51.0000000",
    "DocumentId": "2076071845",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5565",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WindowsXP: Removing Group Policy Control of Windows Firewall; Group Policy; gpedit.msc",
    "SortOrdinal": null,
    "ItemChar": "Run the Group Policy snap-in (gpedit.msc). Under Local Computer Policy > Computer Configuration > Administrative Templates > Network > Network Connections > Windows Firewall set \"Protect all network connections\" to Not Configured. Do this for Domain Profile and Standard Profile.\n\nRun gpupdate. This program is described here:\n\n    http://www.microsoft.com/resources/documentation/windows/xp/\n        all/proddocs/en-us/refrgp.mspx?mfr=true\n",
    "ItemText": null,
    "CreateDate": "2009-03-09T21:47:44.0000000",
    "EndDate": null,
    "ModificationDate": "2009-03-09T21:47:44.0000000",
    "DocumentId": "2076071846",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5566",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "James Henry Breasted, The Conquest of Civilization; XXV: World Dominion and Degeneracy; Breasted on Roman Governors and Publicans (c. 200B.C.); pp. 515–516",
    "SortOrdinal": null,
    "ItemChar": "Such a governor, enjoying unlimited power like that of an oriental sovereign, found himself far from home with Roman troops at his elbow awaiting his slightest command. He had complete control of all the taxes of the province, and he could take what he needed from its people to support his troops and the expenses of his government. He usually held office for a single year and was generally without experience in provincial government. His eagerness to gain a fortune in his short term of office and his complete ignorance of the needs of his province frequently reduced his government to a mere system of looting and robbery…\n\nThe effects of this situation were soon apparent in Italy. In the first place, the income of the Roman government was so enormously increased that it was no longer necessary to collect direct taxes from Roman citizens. This new wealth was not confined to the state. The spoils from the wars were usually taken by the victorious commanders and their troops. At the same time the provinces were soon filled with Roman business men. There were contractors, called publicans, who were allowed to collect taxes for the state at a great profit or gained the right to work state lands. We remember the common references to these publicans in the New testament, where they are regularly classified with “sinners.” With them came Roman money-lenders, who enriched themselves by loaning money at high rates of interest to the numerous provincials who were obliged to borrow to pay the extortionate taxes claimed by the Roman governors. The publicans were themselves money lenders, and all these men of money plundered the provinces worse than the greedy Roman governors themselves. As these people returned to Italy, there grew up a wealthy class such as had been unknown there before.\n",
    "ItemText": null,
    "CreateDate": "2007-06-27T20:48:00.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-27T20:48:00.0000000",
    "DocumentId": "2076071847",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5567",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "James Henry Breasted",
    "SortOrdinal": null,
    "ItemChar": "\"James Henry Breasted (August 27, 1865–December 2, 1935) was born in Rockford, Illinois and was an archaeologist and historian. He was educated at North Central College (then North-Western College) (1888), the Chicago Theological Seminary, Yale University (MA 1891) and the University of Berlin (PhD 1894). He was the first American citizen to obtain a PhD in Egyptology. Breasted was in the forefront of the generation of archeologist-historians who broadened the idea of Western Civilization to include the entire Near East in Europe's cultural roots. Breasted coined the term Fertile Crescent to describe the area from Egypt to Mesopotamia.\"\n\nhttp://en.wikipedia.org/wiki/James_Henry_Breasted\n",
    "ItemText": null,
    "CreateDate": "2007-06-27T20:52:41.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-27T20:52:41.0000000",
    "DocumentId": "2076071848",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5568",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Heinrich Schliemann",
    "SortOrdinal": null,
    "ItemChar": "\"Heinrich Schliemann ['?li?man] (January 6, 1822 - December 26, 1890) was a German-Russian treasure hunter, an advocate of the historical reality of places mentioned in the works of Homer, and an important excavator of Mycenaean sites, such as Troy, Mycenae and Tiryns.\"\n\nhttp://en.wikipedia.org/wiki/Heinrich_Schliemann\n",
    "ItemText": null,
    "CreateDate": "2007-06-27T20:53:34.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-27T20:53:34.0000000",
    "DocumentId": "2076071849",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5569",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows XP: Disabling Adobe Photo Downloader with Adobe Reader 8; apdproxy.exe; msconfig; Tweak UI",
    "SortOrdinal": null,
    "ItemChar": "Use the System Configuration Utility (msconfig.exe) to stop Adobe Photo Downloader (apdproxy.exe) from loading. Uncheck the box next to apdproxy.exe under Startup > Startup Item. This will cause Windows to switch into Selective Startup mode and the next time you reboot a message to this effect will be displayed. You should be able to disable this message.\n\nAdditionally, you can use Tweak UI to remove Adobe Photoshop Album Starter Edition as an AutoPlay handler under My Computer > AutoPlay > Handlers.\n\nAdobe Photo Downloader may appear again in the System Notification Area when the ‘relevant’ Adobe product is launched.\n",
    "ItemText": null,
    "CreateDate": "2007-06-29T17:58:36.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-29T17:58:36.0000000",
    "DocumentId": "2076071850",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5570",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET: “The Global.asax file does not raise events in an ASP.NET 2.0 application”; KB Article 937095",
    "SortOrdinal": null,
    "ItemChar": "KB Article 937095 “The Global.asax file does not raise events in an ASP.NET 2.0 application” addresses a possible problem that is likely to occur in my little ASP.NET corner of the world but has not happened yet.\n\n    http://support.microsoft.com/kb/937095\n\n“The Global.asax file does not raise events in a Microsoft ASP.NET 2.0 application. Additionally, the App_global.asax.dll file is not generated in the temporary ASP.NET folder… This behavior occurs because the Global.asax file is not precompiled.”\n\n“The ASP.NET 2.0 application root directory contains a file that is named the PreCompiledApp.config file. The PreCompiledApp.config file tracks the deployment of an application, and the PreCompiledApp.config file informs ASP.NET 2.0 if ASP.NET 2.0 must compile any files at request time. The standard contents of the PreCompiledApp.config file are as follows.”\n\n    <precompiledApp version=\"2\" updatable=\"true\"/>\n\n“The updatable attribute that is set to the true value applies to ASP.NET pages (.aspx files) and to user controls (.ascx files). The value does not apply to ASP.NET 2.0 application files (.asax files). Therefore, the Global.asax file is compiled, and the Global.asax file is not updatable.”\n",
    "ItemText": null,
    "CreateDate": "2007-06-29T20:19:13.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-29T20:19:13.0000000",
    "DocumentId": "2076071851",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5571",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Cheikh Anta Diop, Civilization or Barbarism; Chapter 8: Birth of the Different Types of States; Diop on the Four Types of States and the Absence of Indigenous Military Aristocracy in Ancient Africa; pp. 129–132",
    "SortOrdinal": null,
    "ItemChar": "There are at least four types of states.\n\nI. The state known as the “Asian” type—or of the “Asian mode of production (AMP) was born as a result of the great hydraulic works, described by Marx and Engels, the most perfected model of which is the Pharaonic Egyptian state. It should therefore be called, with utmost precision, the “African type of state.” In our opinion, one of the distinctive traits of this category is the weight of civilian power as compared to military power; military aristocracy is practically absent, and in normal times, the soldiers play only an unobtrusive, if not nonexistent, political role. The military aristocracy is not the focal point of society. War has rather a defensive function. The entire ideological substructure is only an apologetic for moral and human values, excluding the values of warfare.\n\nThe privileged physical situation of Egypt (abundance of resources, a valley protected by two mountainous deserts with only two access roads, at the north and south) ensured the quasi-permanence of these characteristics of the Egyptian state. Egypt had to be invaded by the Hyksos in order to embark, in reaction, on the conquest of western Asia beginning with the XVIIIth Dynasty, under Thutmose III (1470 B.C.).\n\n…\n\nII. State born out of resistance to the enemy. … A homogeneous ethnic group (a confederation of exogamous tribes) organizes, not for conquest, but to drive off a danger, an outside enemy.\n\n…\n\n\nIII. The third type of state is represented by the ancient Athenian model, a result of the dissolution of the mode of production of antiquity; the state is only the legal instrument of domination of one class over another.\n\n…\n\nIV. The Spartan and Tutsi type of state. If, for whatever reason, the conquering ethnic group refuses to mix with the indigenous conquered element and bases its domination on this absolute separation, the opposition is essentially ethnic and will always be resolved, in ancient and modern history, by genocide.\n",
    "ItemText": null,
    "CreateDate": "2007-06-29T21:16:46.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-29T21:16:46.0000000",
    "DocumentId": "2076071852",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5572",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ivan van Sertima (Editor), Great African Thinkers: Cheikh Anta Diop; Origin of the Ancient Egyptians; Diop on the Melanin Dosage Test; p. 41",
    "SortOrdinal": null,
    "ItemChar": "In practice it is possible to determine directly the skin colour and hence the ethnic affiliations of the ancient Egyptians by microscopic analysis in the laboratory; I doubt if the sagacity of the researchers who have studied the question has overlooked the possibility.\n\nMelanin (eumelanin), the chemical body responsible for skin pigmentation, is broadly speaking, insoluble and is preserved for millions of years in the skins of fossil animals. There is thus all the more reason for it to be readily recoverable in the skins of Egyptian mummies, despite a tenacious legend that the skin of mummies, tainted by the embalming material, is no longer susceptible to analysis. Although the epidermis is the main site of the melanin, the melanocytes penetrating the derm at the boundary between it and the epidermis, even where the latter has mostly been destroyed by the embalming materials, show a melanin level which is non-existent in the white-skinned races. The samples I myself analysed were taken in the physical anthropology laboratory of the Musée de l’Homme in Paris off the mummies from the Marietta excavations in Egypt. The same method is perfectly suitable for use on the royal mummies of Thutmoses III, Seti I and Ramses II in the Cairo Museum, which are in an  excellent state of preservation. For two years past I have been vainly begging the curator of the Cairo Museum for similar samples to analyse. No more than a few square millimetres of skin would be required to mount a specimen, the preparations being a few um in thickness and lightened with ethyl benzoate. They can be studied by natural light or with ultra-violet lighting which renders the melanin grains fluorescent.\n",
    "ItemText": null,
    "CreateDate": "2007-06-29T21:41:17.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-29T21:41:17.0000000",
    "DocumentId": "2076071853",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5573",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Jomo Kenyatta, Facing Mount Kenya; Chapter 6: Initiation of Boys and Girls; Kenyatta on the custom of irua (clitoridectomy); pp. 125–126",
    "SortOrdinal": null,
    "ItemChar": "The custom of clitoridectomy of girls, which we are going to describe here, has been strongly attacked by a number of influential European agencies—missionary, sentimental pro-African, Government, educational and medical authorities. We think it necessary to give a short historical background of the method employed by these bodies in attacking the custom of clitoridectomy of girls.\n\nIn 1929, after several attempts to break down the custom, the Church of Scotland Mission to Gikuyu issued an order demanding that all their followers and those who wish their children to attend schools should pledge themselves that they will not in any way adhere to or support this custom, and they will not in any way let their children undergo the initiation rite. …Children of those who did not denounce the custom were debarred from attending the missionary schools.\n\n…\n\nNo proper Gikuyu would dream of marrying a girl who has not been circumcised, and vice versa. It is taboo for a Gikuyu man or woman to have sexual relations with someone who has not undergone this operation. …A few detribalised Gikuyu, while they are away from home for some years, have thought fit to denounce the custom and to marry uncircumcised girls, especially from coastal tribes, thinking they could bring them back to their fathers’ homes without offending the parents.\n\n…\n\nThe initiation of both sexes is the most important custom among the Gikuyu. It is looked upon as a deciding factor in giving a boy or girl the status of manhood or womanhood in the Gikuyu community.\n",
    "ItemText": null,
    "CreateDate": "2007-06-30T22:45:05.0000000",
    "EndDate": null,
    "ModificationDate": "2007-06-30T22:45:05.0000000",
    "DocumentId": "2076071854",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5574",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "James Henry Breasted, The Conquest of Civilization; XIX Alexander the Great; Breasted on the Legend of Egyptian Validation at \"the shrine of Amon\"; pp. 415–416",
    "SortOrdinal": null,
    "ItemChar": "Early in his conquest of Egypt, while he was founding the city of Alexandria in the Western Delta, we learn that “a longing came upon him” to consult the famous oracle of Amon in the Sahara Desert, and to hear some assurance regarding the future of his hazardous campaign into the heart of the Persian Empire. While a still unconquered Persian army was awaiting him in Asia, therefore, he had taken the time to venture with a small following on a three weeks’ march far out into the Sahara Desert shrine of Amon. Here in the vast solitude Alexander entered the holy place alone. No one knew what took place there, but he was greeted by the high priest of the temple as the son of Zeus-Amon.\n\n…\n\nTo have been greeted by the Egyptian high priest as the son of Zeus-Amon himself must have produced a profound effect on a mind like that of Alexander, for he had an imagination that knew no bounds.\n\n…\n\nFour years later the young king found that this divinity which he began to claim lacked outward and visible manifestations. As an outward observance vividly suggesting his character as a god he adopted the oriental requirement that all who approached him on official occasions should bow down to the earth and kiss his feet.\n\n…\n\nThus were introduced into Europe absolute monarchy and the divine right of kings.\n",
    "ItemText": null,
    "CreateDate": "2007-07-12T20:06:37.0000000",
    "EndDate": null,
    "ModificationDate": "2007-07-12T20:06:37.0000000",
    "DocumentId": "2076071855",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5575",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ezrah Aharone, Pawned Sovereignty; III Plutocracy Disguised as Democracy; Aharone on U.S. Dollars as Fiat Money; p.98",
    "SortOrdinal": null,
    "ItemChar": "Contrary to the stipulation that “notes shall be redeemable in lawful money on demand,” U.S. dollars are not redeemable in anything. If anyone went to the Treasury Department to unconditionally demand gold for dollars, they would find themselves handcuffed in the back of a Secret Service squad car. Dollars are basically backed by hopes—hopes that the FED will call the right shots and that the stock market won’t crash—again. The FED is known to call some shots that have figuratively taken the public from the bank to the cleaners.\n\nThe public has been unwittingly lured into a winless game of collecting non-redeemable paper currency, while the FED and the government own gold and other resources of value. Nevertheless, as long the dollar maintains its purchasing power, the average person will probably remain unconcerned about the politics of money, the dealings of the FED, and things like inflation.\n\nBecause of the balance derived from the Gold Standard, there was no such thing as inflation before the FED. In fact, the dollar was worth the same in 1913 as in 1813. Inflation (too many dollars chasing too few goods) did not exist because the circulating currency was proportioned to the value of gold.\n",
    "ItemText": null,
    "CreateDate": "2007-07-12T21:15:02.0000000",
    "EndDate": null,
    "ModificationDate": "2007-07-12T21:15:02.0000000",
    "DocumentId": "2076071856",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5576",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ezrah Aharone, Pawned Sovereignty; Part I, III Fallacies of Democracy and Voting; Aharone on “American” Slaves; pp. 64–65",
    "SortOrdinal": null,
    "ItemChar": "Now, here is where factors of subtle indoctrination come into play. Despite most of our ancestors having no vision or desires to take part in an Americanized future, if you notice closely, you’ll find that the media and literature nowadays will cunningly refer to slaves as “Americans” or “African Americans.” A most extreme example of this is found with Nat Turner, who in no way has any intentions to be Americanized to any extent whatsoever. Yet the authors of the biographical section of Webster’s have taken the historical liberty to write that Turner was an “American leader of a slave rebellion.”\n\nSome people may regard this point as trivial or say that I am raising unnecessary controversy. But any suggestion of slaves being “Americans” sugarcoats the harshness of their reality, and should therefore be regarded as an insulting and misleading edit of history.\n",
    "ItemText": null,
    "CreateDate": "2007-07-12T21:39:55.0000000",
    "EndDate": null,
    "ModificationDate": "2007-07-12T21:39:55.0000000",
    "DocumentId": "2076071857",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5577",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Jomo Kenyatta, Facing Mount Kenya; Chapter 7: Sex Life Among Young People; Keynatta on the Regulation of Sexuality; pp. 149–153",
    "SortOrdinal": null,
    "ItemChar": "The physical operation on the genital organs of both sexes is regarded as a starting-point for various activities in the tribal organisation. It signifies that the individual operated upon has been given, during the course of the pre-initiation ceremonial dances and songs, all the essential information on the laws and customs of the tribe.\n\nAmong the things taught during this period are the matters relating to rules and regulations governing sexual indulgence. In order not to suppress entirely the normal sex instinct, the boys and girls are told that in order to keep good health they must acquire the technique of practising a certain restricted form of intercourse, called ombani na ngweko (platonic love and fondling). This form of intimate contact between young people is considered right and proper and the very foundation stone upon which to build a race morally, physically and mentally sound. For it safeguards the youth from nervous and psychic maladjustments.\n\n…\n\nNgweko, or fondling, is looked upon as a sacred act and one which must be done in a systematic, well-organised manner. The Gikuyu do not kiss girls on the lips as Europeans do; therefore, ngweko takes the place of lip kissing, but, unlike Europeans, who are fond of kissing in public places, the Gikuyu consider such public display of affection vulgar. All matters relating to sex are done according to a well-regulated code of convention.\n\n…\n\nThe tribal law prohibits a young man from pulling out a girl’s garment (kogucia mwengo wa moiretu) while having nqweko. He must put his sexual organ between his thighs so as to prevent touching the girl with it. The custom also prevents a girl from touching the male sexual organ with her hands. …Neither the man nor the girl can sleep with the back turned against the partner. The girl may not lie on top of the boy or across him…\n\n…\n\nThe girl is expected to be a virgin in the sense of having an unperforated hymenal membrane when she marries. Any intercourse which may result in pregnancy before marriage is strictly forbidden.\n",
    "ItemText": null,
    "CreateDate": "2007-07-18T20:44:56.0000000",
    "EndDate": null,
    "ModificationDate": "2007-07-18T20:44:56.0000000",
    "DocumentId": "2076071858",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5578",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Krishna Kaur; Kundalini Yoga Mantra for Heart Strength",
    "SortOrdinal": null,
    "ItemChar": "SAT NARAYAN\nWHA HE GURU\nHARI NARAYAN\nSAT NAM\n\nNarayan is the aspect of Infinity that relates to water, and Hari Narayan is Creative sustenance, which makes the one who chants it intuitively clear or healing. Sat Narayan is True Sustainer, Wahe Guru, indescribable Wisdom and Sat Nam, True Identity. This is the ancient Chotay Pad Mantra.\n\nhttp://www.kundaliniyoga.org/mantra.html\n",
    "ItemText": null,
    "CreateDate": "2007-07-19T12:24:19.0000000",
    "EndDate": null,
    "ModificationDate": "2007-07-19T12:24:19.0000000",
    "DocumentId": "2076071859",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5579",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Krishna Kaur; Kundalini Yoga Mantra for Cultivating the Power of Communication",
    "SortOrdinal": null,
    "ItemChar": "RA  RA  RA  RA\nMA  MA  MA  MA\nSA  SA  SA  SAT\nHARI HAR, HARI HAR\n\nHAR means Creative Infinity, a name of God.\nHARA is another form.\nHARI is the active form of Creation.\n\nRa is the sun, Ma is the Moon, Da is the earth, and Sa is Infinity.\n\nSA TA NA MA is the Panj Shabad expressing the five primal sounds of the universe. \"S\" is Infinity, \"T\" is life, \"N\" means death and \"M\" is rebirth. (The 5th sound is \"A\".) This is one of the most frequently used mantras in Kundalini Yoga.\n\nhttp://www.kundaliniyoga.org/mantra.html\n",
    "ItemText": null,
    "CreateDate": "2007-07-19T12:29:41.0000000",
    "EndDate": null,
    "ModificationDate": "2007-07-19T12:29:41.0000000",
    "DocumentId": "2076071860",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5580",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Krishna Kaur; Ten Bodies in Kundalini Yoga",
    "SortOrdinal": null,
    "ItemChar": "1.\n    Soul Body.\n\n2.\n    Negative Mind. [Not in our language, NIOL.]\n\n3.\n    Positive Mind. [NIOL]\n\n4.\n    Neutral Mind. [NIOL]\n\n6.\n    Arcline. Historically depicted as the halo.\n\n7.\n    Auric Body. The eighth chakra of the body, the aura, is the electromagnetic field of energy which surrounds every living creature.\n\n8.\n    Pranic Body. Controls the breath and takes in life force energy of the universe.\n\n9.\n    Subtle Body. This carries the Soul to the Infinite at the time of death.\n\n10.\n    Radiant Body. Gives spiritual royalty and radiance (charisma).\n\nhttp://www.shaktakaur.com/Information/Ten%20Bodies%20Explained.htm\n",
    "ItemText": null,
    "CreateDate": "2007-07-19T12:47:11.0000000",
    "EndDate": null,
    "ModificationDate": "2007-07-19T12:47:11.0000000",
    "DocumentId": "2076071861",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5581",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "bell hooks, Art on My Mind: visual politics; Altars of Sacrifice: Re-membering Basquiat; bell hooks on “Madison Avenue Primitive”; pp. 35–36",
    "SortOrdinal": null,
    "ItemChar": "Those folks who are not moved by Basquiat’s work are usually unable to think of it as “great” or even “good” art. Certainly this response seems to characterize much of what mainstream art critics think about Basquiat. Unmoved, they are unable to speak meaningfully about the work. Often with no subtlety or tact, they “diss” the work by obsessively focusing on Basquiat’s life or the development of his career, all the while insisting that they are in the best possible position to judge the work’s value and significance. A stellar example of this tendency is Adam Gopnik’s piece in the New Yorker. [Adam Gopnik, “Madison Avenue Primitive,” New Yorker, Nov. 9 1992, pp. 137–139]",
    "ItemText": null,
    "CreateDate": "2007-07-19T21:23:09.0000000",
    "EndDate": null,
    "ModificationDate": "2007-07-19T21:23:09.0000000",
    "DocumentId": "2076071862",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5582",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "bell hooks, Art on My Mind: visual politics; Altars of Sacrifice: Re-membering Basquiat; bell hooks on Basquiat in “African-American art history”; pp. 36, 38",
    "SortOrdinal": null,
    "ItemChar": "Designed to be a closed door, Basquiat’s work holds no warm welcome for those who approach it with a narrow Eurocentric gaze. That gaze which can recognize Basquiat only if he is in the company of Warhol or some other highly visible white figure. That gaze which can value Basquiat only if he can be seen as part of a continuum of contemporary American art with a genealogy traced through white males: Pollock, de Kooning, Rauschenberg, Twombly, and on to Andy. Rarely does anyone connect Basquiat’s work to traditions of African-American art history. While it is obvious that Basquiat was influenced and inspired by the work of established white male artists, the content of his work does not neatly converge with theirs.\n\n…\n\nWhen the art critic Thomas McEvilley suggests that “this black artist was doing exactly what classical-Modernist white artists such as Picasso and George Braque had done: deliberately echoing a primitive style,” he erases all of Basquiat’s distinct connections to a cultural and ancestral memory that linked him directly to “primitive” traditions. This then allows McEvilley to make the absurd suggestion that Basquiat was “behaving like white men who think they are behaving like black men”…\n",
    "ItemText": null,
    "CreateDate": "2007-07-19T21:46:57.0000000",
    "EndDate": null,
    "ModificationDate": "2007-07-19T21:46:57.0000000",
    "DocumentId": "2076071863",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5583",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "J.E. Manchip White, Ancient Egypt: Its Culture and History; Manchip White on the History of Money in Ancient Egypt; p. 124",
    "SortOrdinal": null,
    "ItemChar": "Business in ancient Egypt was carried on by means of barter. Coined money did not appear until the Persians introduced the silver shekel of Darius. In earlier times a complicated scale of comparative values was in existence whereby the value of an animal, a manufactured object or a piece of agricultural produce could be expressed in terms of other articles. A cow, for example, would be exchanged for an agreed but socially acceptable number of bushels of grain or flax. Graduated weights of stone or metal, sometimes marked to show that they were officially certified as accurate, were used in conjunction with the balance, which was of the type pictured in the psychostasia.\n",
    "ItemText": null,
    "CreateDate": "2007-07-22T19:06:13.0000000",
    "EndDate": null,
    "ModificationDate": "2007-07-22T19:06:13.0000000",
    "DocumentId": "2076071864",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5584",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "J.E. Manchip White, Ancient Egypt: Its Culture and History; Manchip White on “the absolute monarchy of the Old Kingdom” and the “cheerful,” “gay” Peasant; pp. 126–127, 132",
    "SortOrdinal": null,
    "ItemChar": "The lot of the peasantry, the third class of commoner to be considered, was a hard one. In ancient Egypt the rich were very rich and the poor very poor. The condition of the peasant under the absolute monarchy of the Old Kingdom was particularly burdensome, so much so that a savage social cataclysm was provoked. A tiny oligarchy commanded the physical resources of a vast labor force, organized in permanent battalions of fifty or a hundred men. …The gangs may have represented family units. The Old Kingdom peasant was bound to the soil. He was transferred from one owner to another as part of the estate to which he belonged.\n\n…\n\nIf the Cotswold labourer of a century and a half ago received a shilling a day for his services, it is unlikely that the wages in kind of the Egyptian peasant were more substantial. Yet the soil of the Black Land was not the most heartbreaking soil in the world to farm, the bad years were not harder to bear than they were elsewhere, the Egyptian landowner was not notorious as a cruel taskmaster. The peasant was in general a cheerful, indeed a gay person, not commonly stupefied by fatigue and brutalized by apprehensive fear. He had his songs, his pastimes, his children. Above all, he had the sun. The obligation which he owed his master was a reciprocal one, and he was sustained by the knowledge that he was a member of a sound and generally stable social organization. The tomb paintings which have immortalized his activities were not the expression of an arrogant and domineering power bent upon the subjugation of the lower classes. …The history of the Egyptian peasantry in its warm and sunlit retreat is singularly free from the brooding terror which oppressed the poorest classes of the neighbor countries of the ancient Near East.\n",
    "ItemText": null,
    "CreateDate": "2007-07-22T19:43:12.0000000",
    "EndDate": null,
    "ModificationDate": "2007-07-22T19:43:12.0000000",
    "DocumentId": "2076071865",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5585",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "J.E. Manchip White, Ancient Egypt: Its Culture and History; Manchip White on Egyptian Chronology; p. 136",
    "SortOrdinal": null,
    "ItemChar": "The problems of ancient Egyptian chronology are extremely complex. The Egyptians numbered their years regnally, not continually from a certain fixed point determined by the dawn of an era. Where we might write: ‘In 1951 A.D., in the reign of King George VI,’ an Egyptian would write: ‘In the twenty-fifth year of the reign of the Pharaoh Menkheperra Tuthmosis.’ Thus the beginning of every reign constituted a new dating point. The Egyptians were not given to thinking in terms of dynasties, neither were Pharoahs accustomed to call themselves Amenophis, Ramses or Tuthmosis I, II, III or IV. The Pharaoh we name Tuthmosis I is called in his monuments and official documents Akheperkara Tuthmosis, Tuthmosis II is Akheperenra Tuthmosis, Tuthmosis III is Menkheperra Tuthmosis, and so on. Pharaohs went by names, not numbers.\n",
    "ItemText": null,
    "CreateDate": "2007-07-22T20:00:36.0000000",
    "EndDate": null,
    "ModificationDate": "2007-07-22T20:00:36.0000000",
    "DocumentId": "2076071866",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5586",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Framework (SDK) Tools: The Difference between signtool.exe and sn.exe",
    "SortOrdinal": null,
    "ItemChar": "According to Michael Wood in “.NN #1: .Net 2.0 SDK Tools (Part 1 of 3),” signtool.exe is a “command line utility is used to digitally sign a file for Authenticode. This is different than strong naming your assembly. If you are a component vendor and you want to digitally sign your code so that individuals can verify that it came from you then you would get a digital certificate from a trusted certificate authority (such as Verisign) and then use this tool to include that certificate in the signing process of your code.” More here:\n\n    http://www.mvwood.com/blogs/blog/archive/2007/03/07/1408.aspx\n\nFor strong naming sn.exe is used. “This one should be very familiar for anyone that is serious about the security of their assemblies and/or loading assemblies into the GAC. The Strong Name tool (sn.exe) is used to digitally sign assemblies with an encrypted key.” More here:\n\n    “Using Strong Name Signatures”\n    http://msdn.microsoft.com/msdnmag/issues/06/07/CLRInsideOut/\n\nA flippant parting remark: the use of the Visual Studio PFX file implies that you trust your fellow developers. This is easy when there is just one developer. Delay signing is used when you do not have this trust and makes coding life complicated.\n",
    "ItemText": null,
    "CreateDate": "2007-07-25T11:29:59.0000000",
    "EndDate": null,
    "ModificationDate": "2007-07-25T11:29:59.0000000",
    "DocumentId": "2076071867",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5587",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ivan Van Sertima editing Charles S. Finch, Blacks in Science: Ancient and Modern; The African Background of Medical Science; pp. 146–147",
    "SortOrdinal": null,
    "ItemChar": "Like all African peoples, the Egyptians had a large materia medica, using as many as 1000 animal, plant, and mineral products in the treatment of illness. Night blindness, caused by vitamin A deficiency, was treated with ox livers, known to be rich in vitamin A. Poppy extract–the source of opium—was used to treat colicky babies. Modern physicians use paregoric—whose active ingredient is opium—for exactly the same purpose. Patients with scurvy—caused by vitamin C deficiency—were fed onions, a known source of vitamin C. Castor seeds, the source of castor oil, were used to make cathartic preparations. Mandrake and henbane, sources of belladonna alkaloids, were also known and used. The belladonnas possess properties that stimulate the heart, decrease stomach motility, dilate the pupils, and cause sedation. The Egyptians dispensed their prescriptions as pills, enemas, suppositories, infusions, and elixirs in accurate, standardized doses, causing some to wonder if they had separate pharmacies and pharmacists. [Ghalioungui, P: The House of Life: Magic and Medical Science in Ancient Egypt. Amsterdam, BM Israel, 1973. op. cit., pp. 148–9]\n\nThe Egyptians were also quite knowledgeable in handling obstetric and gynecological problems. They knew and treated uterine prolapse. They had means of inducing abortions and preventing conception. They even had an effective pregnancy test! A sample of a woman’s urine was sprinkled on growing cereals; if the cereals did not grow the woman was considered not pregnant; if they did grow she was declared pregnant. Modern experiments have shown that a pregnant woman’s urine has a permissive effect on the growth of barley in about 40% of the cases, demonstrating that there must have been some validity in the world’s first pregnancy test. [Ghalioungui, P: The House of Life: Magic and Medical Science in Ancient Egypt. Amsterdam, BM Israel, 1973. op. cit., pp. 112–3]\n\n",
    "ItemText": null,
    "CreateDate": "2007-08-01T20:25:03.0000000",
    "EndDate": null,
    "ModificationDate": "2007-08-01T20:25:03.0000000",
    "DocumentId": "2076071868",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5588",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2003: Comparison of Standard and Enterprise Editions",
    "SortOrdinal": null,
    "ItemChar": "The flippant summary of the differences between Windows Server 2003 Standard and Windows Server 2003 Enterprise is that the Enterprise versions have various forms of clustering support while the Standard Edition does not.\n\nFor the official overview, see the Microsoft Technet article “Compare the Editions of Windows Server 2003”:\n\n    http://www.microsoft.com/technet/windowsserver/\n        evaluate/features/compare.mspx\n",
    "ItemText": null,
    "CreateDate": "2007-08-28T14:22:27.0000000",
    "EndDate": null,
    "ModificationDate": "2007-08-28T14:22:27.0000000",
    "DocumentId": "2076071869",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5589",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PowerShell 1.x and CMD: Running a PowerShell Session with a Different Execution Policy",
    "SortOrdinal": null,
    "ItemChar": "@ECHO OFF\nREM    This command runs PowerShell\nREM    with a different execution policy\nREM    than the default Restricted mode\nREM    and restores the default mode upon exit.\nECHO This command will start PowerShell in RemoteSigned mode.\nECHO Are you sure you want to continue? (Press Ctrl C to quit.)\nPAUSE\n@CLS\npowershell -NoExit -Command \"& {Set-ExecutionPolicy RemoteSigned}\"\nECHO Stopping PowerShell in Restricted mode...\npowershell -Command \"& {Set-ExecutionPolicy Restricted}\"\nECHO Verifying policy status...\npowershell -Command \"& {Get-ExecutionPolicy}\"\n\nREM For a more formal approach, see “Signing PowerShell Scripts” here:\nREM http://www.hanselman.com/blog/SigningPowerShellScripts.aspx",
    "ItemText": null,
    "CreateDate": "2007-08-28T14:50:00.0000000",
    "EndDate": null,
    "ModificationDate": "2007-08-28T14:50:00.0000000",
    "DocumentId": "2076071870",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5590",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CMD: Console Command Template",
    "SortOrdinal": null,
    "ItemChar": "@ECHO OFF\nCOLOR 4F\nECHO This command will do something.\nECHO Are you sure you want to continue? (Press Ctrl C to quit.)\nPAUSE\n\nECHO Running...\ndir .\nECHO No more commands to process.\nECHO End of Command Script.\nPAUSE\n",
    "ItemText": null,
    "CreateDate": "2007-08-28T14:40:46.0000000",
    "EndDate": null,
    "ModificationDate": "2007-08-28T14:40:46.0000000",
    "DocumentId": "2076071871",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5591",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CMD: A Script That Deletes Recent Document References",
    "SortOrdinal": null,
    "ItemChar": "@ECHO OFF\nCOLOR 4F\nECHO *********************************************************************\nECHO *                                                                   *\nECHO * This command will delete the links in the Recent Documents list.  *\nECHO * Are you sure you want to continue? (Press Ctrl C to quit.)        *\nECHO *                                                                   *\nECHO *********************************************************************\nPAUSE\n\nCD %userprofile%\\Recent\nECHO Y|DEL .\n\nECHO ***************************************************************\nECHO *                                                             *\nECHO * No more commands to process.                                *\nECHO *                                                             *\nECHO ***************************************************************\nECHO *                                                             *\nECHO * End of Command Script.                                      *\nECHO *                                                             *\nECHO ***************************************************************\nPAUSE\n",
    "ItemText": null,
    "CreateDate": "2007-08-28T14:41:36.0000000",
    "EndDate": null,
    "ModificationDate": "2007-08-28T14:41:36.0000000",
    "DocumentId": "2076071872",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5592",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# 2.0 Code: Converting from IDataParameter to DbParameter[] with Array.ConvertAll<>() and an Anonymous Delegate",
    "SortOrdinal": null,
    "ItemChar": "private static DbParameter[] ConvertAllToDbParameter\n    ( IDataParameter[] p_idata )\n{\n    DbParameter[] p =\n        Array.ConvertAll<IDataParameter, DbParameter>( p_idata,\n\n           delegate( IDataParameter from )\n           {\n               DbParameter to = from as DbParameter;\n               return to;\n           }\n\n       );\n\n    return p;\n}\n",
    "ItemText": null,
    "CreateDate": "2007-08-29T12:15:09.0000000",
    "EndDate": null,
    "ModificationDate": "2007-08-29T12:15:09.0000000",
    "DocumentId": "2076071873",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5593",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PowerShell 1.x script: Toggling Servers on and off in Windows Server 2003",
    "SortOrdinal": null,
    "ItemChar": "Function StopService\n{\n    $s = Get-WmiObject -Class Win32_Service -Filter $args[0]\n    if ( $s )\n    {\n        Write-Host \"Service\"$s.Name\"found.\"\n        if ( $s.State -eq \"Running\" )\n        {\n            Write-Host \"Service is running. Stopping service…`n\"\n            StopServiceReturnValue $s.StopService().ReturnValue\n            Write-Host \"Waiting 5 seconds…`n\"\n            Sleep -seconds 5\n        }\n    }\n    else\n    {\n        Write-Host \"Service not found.`n\"\n    }\n}\n\nFunction StopServiceReturnValue\n{\n    $v = $args[0]\n\n    $msg = \"Unknown return value:$v\"\n\n    switch($v)\n    {\n        0 \t{ $msg = \"Success.`n\" }\n        1 \t{ $msg = \"Not Supported.`n\" }\n        2 \t{ $msg = \"Access Denied.`n\" }\n        3 \t{ $msg = \"Dependent Services Running.`n\" }\n        4 \t{ $msg = \"Invalid Service Control.`n\" }\n        5 \t{ $msg = \"Service Cannot Accept Control.`n\" }\n        6 \t{ $msg = \"Service Not Active.`n\" }\n        7 \t{ $msg = \"Service Request timeout.`n\" }\n        8 \t{ $msg = \"Unknown Failure.`n\" }\n        9 \t{ $msg = \"Path Not Found.`n\" }\n        10 \t{ $msg = \"Service Already Stopped.`n\" }\n        11 \t{ $msg = \"Service Database Locked.`n\" }\n        12 \t{ $msg = \"Service Dependency Deleted.`n\" }\n        13 \t{ $msg = \"Service Dependency Failure.`n\" }\n        14 \t{ $msg = \"Service Disabled.`n\" }\n        15 \t{ $msg = \"Service Logon Failed.`n\" }\n        16 \t{ $msg = \"Service Marked For Deletion.`n\" }\n        17 \t{ $msg = \"Service No Thread`n\" }\n        18 \t{ $msg = \"Status: Circular Dependency`n\" }\n        19 \t{ $msg = \"Status: Duplicate Name`n\" }\n        20 \t{ $msg = \"Status: Invalid Name`n\" }\n        21 \t{ $msg = \"Status: Invalid Parameter`n\" }\n        22 \t{ $msg = \"Status: Invalid Service Account`n\" }\n        23 \t{ $msg = \"Status: Service Exists`n\" }\n        24 \t{ $msg = \"Service Already Paused.`n\" }\n    }\n\n    Write-Host $msg\n}\n\nFunction ToggleService\n{\n\n    $s = Get-WmiObject -Class Win32_Service -Filter $args[0]\n\n    if ( $s )\n    {\n        Write-Host \"Service\"$s.Name\"found.\"\n        if ( $s.State -eq \"Stopped\" )\n        {\n            Write-Host \"Service is stopped. Starting service…`n\"\n            $s.StartService() | Out-Null\n        }\n        else\n        {\n            Write-Host \"Service is not stopped. Stopping service…`n\"\n            StopServiceReturnValue $s.StopService().ReturnValue\n\n            if ( $s.Name -eq \"W3SVC\" )\n            {\n                Write-Host \"Waiting 5 seconds…`n\"\n                Sleep -seconds 5\n\n                Write-Host \"Looking for dependencies for\"$s.Name\"…`n\"\n\n                Write-Host \"Looking for HTTP SSL Service…\"\n                StopService 'Name = \"HTTPFilter\"'\n\n                Write-Host \"Looking for IIS Admin Service…\"\n                StopService 'Name = \"IISADMIN\"'\n            }\n        }\n    }\n    else\n    {\n        Write-Host \"Service not found.`n\"\n    }\n}\n\nClear-Host\n\nWrite-Host \"Looking for WWW Publishing Service…\"\nToggleService 'Name = \"W3SVC\"'\n\n\"Looking for default instance of SQL Server 2000…\"\nToggleService 'Name = \"MSSQLSERVER\"'\n\n\"Looking for conventional instance of SQL Server 2005 Express…\"\nToggleService 'Name = \"MSSQL$MYDB\"'\n",
    "ItemText": null,
    "CreateDate": "2007-08-29T12:17:43.0000000",
    "EndDate": null,
    "ModificationDate": "2007-08-29T12:17:43.0000000",
    "DocumentId": "2076071874",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5594",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# 2.0 Code: Using a Generic List<T> to Build an Array from a Generic Dictionary<String, Object>",
    "SortOrdinal": null,
    "ItemChar": "One of the many, many ways to use Generics in C# 2.0 is to build a strongly-typed Array from a Generic Dictionary<String, Object>. This form of Dictionary is useful for generating parameters for data commands. The challenge is to get this general-purpose collection of parameters into a “real” array of parameters that can be used by the .NET Framework:\n\n    List<IDataParameter> list =\n        new List<IDataParameter>( parameterCollection.Count );\n    foreach ( KeyValuePair<String, Object> kvp in parameterCollection )\n    {\n        list.Add( GetParameter( dbmsCommand, kvp.Key, kvp.Value ) );\n    }\n    return list.ToArray();\n\nThe GetParameter() member generates an object that implements IDataParameter.",
    "ItemText": null,
    "CreateDate": "2007-08-29T12:37:28.0000000",
    "EndDate": null,
    "ModificationDate": "2007-08-29T12:37:28.0000000",
    "DocumentId": "2076071875",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5595",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "DreamHost: Maintaining an Offline Copy of WordPress",
    "SortOrdinal": null,
    "ItemChar": "This note refers to WordPress 2.2.2 from a DreamHost bash shell to an Ubuntu VM.\n\nScript mysqldump on the DreamHost server to export WordPress data. This is an example:\n\n    mysqldump --opt -u myuser -p -h mydbdomain.com my_wp_db \\\n        --ignore-table=my_wp_db.wp_sk2_logs \\\n        --ignore-table=my_wp_db.wp_sk2_spams \\\n        --default-character-set=\"latin1\" >mydb_bak.sql\n\n\nScript rsync to copy/overwrite the SQL backup (mydb_bak.sql).\n\nScript rsync to overwrite the local WordPress installation. This is an example:\n\n    rsync -e ssh -ar --delete-after \\\n        --exclude '*wp-content/themes*' \\\n        --progress \\\n        --stats \\\n        me@mydomain.com:myremotesite/wordpressfolder/ mylocalsite/wordpressfolder/\n\nNote that the freaking, huge themes folder is excluded.\n\nUse phpMyAdmin or mysql to load the SQL backup. Eventually the file size of the backup will get so large that you might have to use mysql exclusively to avoid screwing around with PHP settings.\n\nUse phpMyAdmin (or mysql) to update the following WordPress options for your local (offline) web server:\n\n    option_name='siteurl'\n    option_name='home'\n\nThese changes to the database should be enough to get the off-line site displaying properly. However, the enhanced security on DreamHost.com may prevent your local web server from loading wp-config.php. You might have to make sure that others can read this file on your local machine.\n\nEdit wp-config.php with lines like the following:\n\n    define('DB_NAME', 'your_local_wp_db');\n    define('DB_HOST', 'localhost');\n\nYou might need to change DB_USER and DB_PASSWORD as well.\n",
    "ItemText": null,
    "CreateDate": "2007-09-07T13:22:52.0000000",
    "EndDate": null,
    "ModificationDate": "2007-09-07T13:22:52.0000000",
    "DocumentId": "2076071876",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5596",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about the ConnectionStringSettings Class",
    "SortOrdinal": null,
    "ItemChar": "The ConnectionStringSettings Class means that database connection strings are recognized by app.config conventions and definitions in .NET 2.0. This class is documented here:\n\n    http://msdn2.microsoft.com/en-us/library/\n        system.configuration.connectionstringsettings.aspx\n\nThe use of connection strings is documented in “Storing and Retrieving Connection Strings” here:\n\n    http://msdn2.microsoft.com/en-us/library/\n        system.configuration.connectionstringsettings.aspx\n\nYou will notice that it is possible to store connection string data in an external file with this form:\n\n<configuration>\n    <connectionStrings\n        configSource=\"externalConfig/connectionStrings.config\"\n    />\n</configuration>\n\nHowever, in “Unraveling the Mysteries of .NET 2.0 Configuration” Jon Rista warns, “The downfall of using the configSource attribute is that it requires all configuration settings to be placed in the external file. No inheritance or overriding is possible, which in some cases makes it useless. All external configuration files used with the configSource attribute must also reside in a relative child path to the main .config file. I believe this is in regards to security concerns with storing the file in a relative parent path in a web environment.”\n\nThe flippant remarks here may sufficiently explain why my preference is to use custom, external XML configuration files that serialize into a native .NET object. This move does make a security hole when in the wrong hands.\n",
    "ItemText": null,
    "CreateDate": "2007-09-07T13:35:17.0000000",
    "EndDate": null,
    "ModificationDate": "2007-09-07T13:35:17.0000000",
    "DocumentId": "2076071877",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5597",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "gvim/vim: flippant remarks about customizing gvim",
    "SortOrdinal": null,
    "ItemChar": "You can start with this command:\n\n    :help gui-init\n\nThis will load gui.txt, which should reveal a portion called “Recommended place for your personal GUI initializations”—this will lead to this file:\n\n    $HOME/.gvimrc\n\nHere is a sample .gvimrc file:\n\n    colorscheme darkblue\n    set expandtab\n    set guifont=Monospace\\ 20\n    set hlsearch\n    set incsearch\n    set laststatus=2\n    set number\n    set shiftwidth=4\n    set tabstop=4\n    set tbis=large\n\nOptions like tbis and guifont can be found in quickref.txt, which can be loaded with this command:\n\n    :help option-list\n",
    "ItemText": null,
    "CreateDate": "2007-09-07T19:30:51.0000000",
    "EndDate": null,
    "ModificationDate": "2007-09-07T19:30:51.0000000",
    "DocumentId": "2076071878",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5598",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "gvim/vim: selected tips from the vim tip database; the r[ead] command; VimTip 40",
    "SortOrdinal": null,
    "ItemChar": "From VimTip 40: The r[ead] command can be used to insert the contents of a file or the output of a command. This is cool! An example that lists the contents of the present working directory below the cursor:\n\n    :r !ls -al\n\nThis variation inserts above the first line:\n\n    :0r !ls -al\n\nMore tips can be found at http://vim.sf.net/tip_index.php\n",
    "ItemText": null,
    "CreateDate": "2007-09-07T19:46:14.0000000",
    "EndDate": null,
    "ModificationDate": "2007-09-07T19:46:14.0000000",
    "DocumentId": "2076071879",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5599",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "gvim/vim: selected tips from the vim tip database; toggling case; VimTip 49",
    "SortOrdinal": null,
    "ItemChar": "To switch the case of one or more characters use these commands:\n    ~\n\n,\n\n    gU\n\nor\n\n    gu\n\nExamples:\n\nSwitch case of character under cursor (in visual-mode: switch case of highlighted text):\n\n    ~\n\nSwitch case of next three characters:\n\n    3~\n\nSwitch case of current line:\n\n    g~~\n\nIn visual-mode: make highlighted text uppercase:\n\n    U\n\nMake current line uppercase:\n\n    gUU\n\nIn visual-mode: make highlighted text lowercase:\n\n    u\n\nMake current line lowercase:\n\n    guu\n\nMake current word uppercase:\n\n    gUaw\n\nMake current word lowercase:\n\n    guaw\n",
    "ItemText": null,
    "CreateDate": "2007-09-07T19:57:02.0000000",
    "EndDate": null,
    "ModificationDate": "2007-09-07T19:57:02.0000000",
    "DocumentId": "2076071880",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5600",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "gvim/vim: selected tips from the vim tip database; digraphs; VimTip 51",
    "SortOrdinal": null,
    "ItemChar": "To get a list of currently defined digraphs type:\n\n    :dig[graphs]\n\nThis is a great way to browse the available “character map” that shows decimal values for glyphs as well.",
    "ItemText": null,
    "CreateDate": "2007-09-07T20:21:17.0000000",
    "EndDate": null,
    "ModificationDate": "2007-09-07T20:21:17.0000000",
    "DocumentId": "2076071881",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5601",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005 t-SQL: Linking an Orphaned Database User to a Server Login",
    "SortOrdinal": null,
    "ItemChar": "/*\n    A user gets often gets orphaned (or broken)\n    when attaching a database to a new server.\n\n    Documentation:\n        http://msdn2.microsoft.com/en-us/library/ms174378.aspx\n*/\nEXECUTE\n    sp_change_users_login\n        @Action='Auto_Fix',\n        @UserNamePattern='my_orphaned_user',\n        @Password='myS3curePassw0rd'\n\n-- This command is available in SQL Server 2000.",
    "ItemText": null,
    "CreateDate": "2007-09-17T13:16:37.0000000",
    "EndDate": null,
    "ModificationDate": "2007-09-17T13:16:37.0000000",
    "DocumentId": "2076071882",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5602",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about System.Uri and System.UriBuilder",
    "SortOrdinal": null,
    "ItemChar": "A new System.Uri accepts data in its constructor. Any subsequent usage of this object is on a read-only basis. A new System.UriBuilder supports read-write assignments after construction.\n\nFrom Microsoft, “The UriBuilder class provides a convenient way to modify the contents of a Uri instance without creating a new Uri instance for each modification.” More information:\n\n    http://msdn2.microsoft.com/en-us/library/system.uribuilder.aspx\n\nThe “contents” of the Uri are exposed by the UriBuilder as shown in PowerShell like this:\n\nFragment : #hash\nHost     : localhost\nPassword : MyPassword\nPath     : /Folder1/Folder2\nPort     : 999\nQuery    : ?var1=foo&var2=bar\nScheme   : http\nUri      : http://User1:MyPassword@localhost:999/Folder1/Folder2\n            ?var1=foo&var2=bar#hash\nUserName : User1\n\nYou should be able to see that all the members of UriBuilder (except UriBuilder.Uri) are used to “build” UriBuilder.Uri.\n",
    "ItemText": null,
    "CreateDate": "2007-09-14T16:51:41.0000000",
    "EndDate": null,
    "ModificationDate": "2007-09-14T16:51:41.0000000",
    "DocumentId": "2076071883",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5603",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about Encrypting Elements in web.config; ASP.NET 2.0",
    "SortOrdinal": null,
    "ItemChar": "You can use this command-line tool:\n\n    %WinDir%\\Microsoft.NET\\Framework\\v2.0.50727\\aspnet_regiis.exe\n\nOr you can do it inside a .NET process as described here:\n\n    http://davidhayden.com/blog/dave/archive/2005/11/17/2572.aspx\n\nMy preference today is to use this form in web.config:\n\n    <configSections>\n        <section\n              name=\"MySecrets\"\n              type=\"System.Configuration.SingleTagSectionHandler\"\n        />\n    </configSections>\n\n    <MySecrets\n       FavoriteMusic=\"Disco\"\n       FavoriteLanguage=\"COBOL\"\n       DreamJob=\"Dancing in the opening ceremonies of the Olympics\"\n    />\n\nThis allows me to target a specific Configuration Section by running this command from the directory in which web.config resides:\n\n    aspnet_regiis -pef MySecrets .\n\nNote that the period (.) is shorthand for the relative location of web.config.\n\nScott Guthrie introduces this pattern (by K. Scott Allen) here:\n\n    http://weblogs.asp.net/scottgu/archive/2006/01/09/434893.aspx\n\nDownload Robert Shelton’s video on this subject here:\n\n    http://channel9.msdn.com/Showpost.aspx?postid=134210\n\nYou may get an error like, “Error message from the provider: The RSA key container could not be opened.” This problem is covered in the Microsoft article, “Walkthrough: Encrypting Configuration Information Using Protected Configuration” here:\n\n    http://msdn2.microsoft.com/en-us/library/dtkwfdky.aspx\n\nThis RSA key container error is usually solved by this command (all on one line):\n\n     aspnet_regiis -pa\n        \"NetFrameworkConfigurationKey\" \"YOURSERVER\\IUSR_YOURSERVER\"\nand\n\n     aspnet_regiis -pa\n        \"NetFrameworkConfigurationKey\" \"NT AUTHORITY\\NETWORK SERVICE\"\n\nThis command, however, may throw an error like, “The RSA key container was not found.” This means that you need to encrypt something first so you are in a bit of a chicken-or-egg thing.\n",
    "ItemText": null,
    "CreateDate": "2007-09-18T16:01:17.0000000",
    "EndDate": null,
    "ModificationDate": "2007-09-18T16:01:17.0000000",
    "DocumentId": "2076071884",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5604",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PowerShell and ADSI: Searching the Registry to Find All Available Providers on Windows with PSDrive",
    "SortOrdinal": null,
    "ItemChar": "PS C:\\> Set-Location HKLM:\\SOFTWARE\\Microsoft\\ADs\\Providers\n\nPS HKLM:\\SOFTWARE\\Microsoft\\ADs\\Providers> Get-ChildItem | format-list\n\nHive: Microsoft.PowerShell.Core\\Registry::HKEY_LOCAL_MACHINE\\SOFTWARE\\Micros\noft\\ADs\\Providers\n\nName        : IIS\nValueCount  : 1\nProperty    : {(default)}\nSubKeyCount : 1\n\nName        : LDAP\nValueCount  : 2\nProperty    : {(default), Aliases}\nSubKeyCount : 2\n\nName        : NDS\nValueCount  : 1\nProperty    : {(default)}\nSubKeyCount : 0\n\nName        : NWCOMPAT\nValueCount  : 1\nProperty    : {(default)}\nSubKeyCount : 0\n\nName        : WinNT\nValueCount  : 1\nProperty    : {(default)}\nSubKeyCount : 1\n",
    "ItemText": null,
    "CreateDate": "2007-09-28T16:11:11.0000000",
    "EndDate": null,
    "ModificationDate": "2007-09-28T16:11:11.0000000",
    "DocumentId": "2076071885",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5605",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PowerShell and ADSI: Searching the Registry to Find All Available Providers on Windows with .NET Objects",
    "SortOrdinal": null,
    "ItemChar": "PS C:\\> $key = [Microsoft.Win32.Registry]::LocalMachine\n\nPS C:\\> $key.GetSubKeyNames()\nHARDWARE\nSAM\nSECURITY\nSOFTWARE\nSYSTEM\n\nPS C:\\> $subKey = $key.OpenSubKey(\"SOFTWARE\\\\Microsoft\\\\ADs\\\\Provide\nrs\")\n\nPS C:\\> $subKey.GetSubKeyNames()\nIIS\nLDAP\nNDS\nNWCOMPAT\nWinNT\n",
    "ItemText": null,
    "CreateDate": "2007-09-28T16:01:31.0000000",
    "EndDate": null,
    "ModificationDate": "2007-09-28T16:01:31.0000000",
    "DocumentId": "2076071886",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5606",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 2000, Windows XP and Windows Server 2003: Modify NTFS Permissions from the Command Line; Xcacls.exe",
    "SortOrdinal": null,
    "ItemChar": "Yes, you can modify NTFS permissions from the command line. Use the Microsoft tool, XCACLS.EXE. For more information, see “HOW TO: Use Xcacls.exe to modify NTFS permissions” here:\n\n    http://support.microsoft.com/kb/318754/\n",
    "ItemText": null,
    "CreateDate": "2007-10-01T13:57:11.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-01T13:57:11.0000000",
    "DocumentId": "2076071887",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5607",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "DateTime.ToString() Patterns in PowerShell",
    "SortOrdinal": null,
    "ItemChar": "This is the output:\n\nMM/dd/yyyy ==> 10/01/2007\n\ndddd, dd MMMM yyyy ==> Monday, 01 October 2007\n\nMM/dd/yyyy HH:mm ==> 10/01/2007 14:35\n\nMM/dd/yyyy hh:mm tt ==> 10/01/2007 02:35 PM\n\nMM/dd/yyyy h:mm tt ==> 10/01/2007 2:35 PM\n\nMM/dd/yyyy HH:mm:ss ==> 10/01/2007 14:35:48\n\nMMMM dd ==> October 01\n\nyyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK ==> 2007-10-01T14:35:48.7031250-07:00\n\nddd, dd MMM yyyy HH':'mm':'ss 'GMT' ==> Mon, 01 Oct 2007 14:35:48 GMT\n\nyyyy'-'MM'-'dd'T'HH':'mm':'ss ==> 2007-10-01T14:35:48\n\nHH:mm ==> 14:35\n\nhh:mm tt ==> 02:35 PM\n\nHH:mm:ss ==> 14:35:48\n\nyyyy'-'MM'-'dd HH':'mm':'ss'Z' ==> 2007-10-01 14:35:48Z\n\ndddd, dd MMMM yyyy HH:mm:ss ==> Monday, 01 October 2007 14:35:48\n\nyyyy MMMM ==> 2007 October\n\nd ==> 10/1/2007\n\nD ==> Monday, October 01, 2007\n\nf ==> Monday, October 01, 2007 2:35 PM\n\nF ==> Monday, October 01, 2007 2:35:48 PM\n\ng ==> 10/1/2007 2:35 PM\n\nG ==> 10/1/2007 2:35:48 PM\n\nm ==> October 01\n\nr ==> Mon, 01 Oct 2007 14:35:48 GMT\n\ns ==> 2007-10-01T14:35:48\n\nu ==> 2007-10-01 14:35:48Z\n\nU ==> Monday, October 01, 2007 9:35:48 PM\n\ny ==> October, 2007\n\n\n\nThis is the PowerShell script that produced the output:\n\n$d = [System.DateTime]::Now\n\n$s = \n    \"MM/dd/yyyy\",\n    \"dddd, dd MMMM yyyy\",\n    \"MM/dd/yyyy HH:mm\",\n    \"MM/dd/yyyy hh:mm tt\",\n    \"MM/dd/yyyy h:mm tt\",\n    \"MM/dd/yyyy HH:mm:ss\",\n    \"MMMM dd\",\n    \"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK\",\n    \"ddd, dd MMM yyyy HH':'mm':'ss 'GMT'\",\n    \"yyyy'-'MM'-'dd'T'HH':'mm':'ss\",\n    \"HH:mm\",\n    \"hh:mm tt\",\n    \"HH:mm:ss\",\n    \"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\",\n    \"dddd, dd MMMM yyyy HH:mm:ss\",\n    \"yyyy MMMM\",\n    \"d\",\n    \"D\",\n    \"f\",\n    \"F\",\n    \"g\",\n    \"G\",\n    \"m\",\n    \"r\",\n    \"s\",\n    \"u\",\n    \"U\",\n    \"y\"\n\nforeach( $format in $s )\n{\n    $output = [System.String]::Format(\"{0} ==> {1}{2}\",\n        $format,$d.ToString( $format ), [System.Environment]::NewLine )\n    Write-Host $output\n}",
    "ItemText": null,
    "CreateDate": "2007-10-01T14:39:54.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-01T14:39:54.0000000",
    "DocumentId": "2076071888",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5608",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about Delegates in C# 2.0",
    "SortOrdinal": null,
    "ItemChar": "Jeffrey Richter in “Working with Delegates Made Easier with C# 2.0” makes it plain: “Unfortunately, delegates are difficult for many developers to understand and use because delegates require special coordination between your programming language compiler and the CLR.” This “syntactic sugar” discussion is in this document:\n\n    http://www.codeguru.com/Csharp/Csharp/cs_delegates/article.php/c4767\n\nThis article introduces the ThreadPool.QueueUserWorkItem() Method, documented here:\n\n    http://msdn2.microsoft.com/en-us/library/\n        system.threading.threadpool.queueuserworkitem.aspx\n\nWith the above digested it may then be possible to understand the author motives behind “How to: Declare, Instantiate, and Use a Delegate (C# Programming Guide)” here:\n\n    http://msdn2.microsoft.com/en-us/library/ms173176(VS.80).aspx\n\nHowever, the first question posed in Steven Toub’s June 2006 article “Parameterized ThreadStart, EventWaitHandle, and More” explicitly uses the term “delegate inference,” which helps to make the aforementioned article just a little bit more summarizing and contextually coherent. The Steven Toub article is here:\n\n    http://msdn.microsoft.com/msdnmag/issues/06/06/NETMatters/\n\nNone of the above discuss the ThreadStart Delegate, documented here:\n\n    http://msdn2.microsoft.com/en-us/library/\n        system.threading.threadstart.aspx\n\nThe ThreadStart Delegate is ‘old’ and may not be in favor because of performance/scalability issues related to a “dedicated thread.” According to Gary J. Kuehn in “Threading paradigms available under the .NET CLR, using C#” he maintains that, “Empirical Analysis of thread CPU usage reveals that operations under the thread pool are more efficient. Processor utilization never reaches 100% while under thread pool control.” This article, as of this writing, is here:\n\n    http://www.codeproject.com/cs/threads/managedthreadcs-projects.asp\n\n\n",
    "ItemText": null,
    "CreateDate": "2007-10-01T15:32:13.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-01T15:32:13.0000000",
    "DocumentId": "2076071889",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5609",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about Canceling BackgroundWorker Operations",
    "SortOrdinal": null,
    "ItemChar": "In “Creating a better BackgroundWorker: CancelImmediately and other goodies,” Roy Osherove introduces my problem, “Right now BackgroundWorker has only one way to cancel: \"CancelAsync()\". The feature I was missing was \"CancelImmediately()\".  I've even gotten to talk a little with Mark Rideout, Program Manager for the .NET Client who supported my claim that this is not possible with the current version of BackgroundWorker.”\n\nWhat this means is that one of the design goals behind BackgroundWorker cancellation is to stop a background process that performs the same, ‘small’ operation that runs and returns to a loop. It follows that the problem of canceling one ‘big’ operation is not really solved by BackgroundWorker. This is because once the BackgroundWorker process runs it really cannot be stopped until it returns. I find this very counterintuitive.\n\nThe Roy Osherove article is here:\n\n    http://weblogs.asp.net/rosherove/pages/BackgroundWorkerEx.aspx\n",
    "ItemText": null,
    "CreateDate": "2007-10-01T15:42:54.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-01T15:42:54.0000000",
    "DocumentId": "2076071890",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5610",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Catching Exceptions from System.ComponentModel.BackgroundWorker; DispatcherUnhandledException Fails to Fire for Background Threads",
    "SortOrdinal": null,
    "ItemChar": "The details of this problem is introduced in “Catch DispatcherUnhandledException from other Thread” here:\n\n    http://forums.microsoft.com/msdn/showpost.aspx?postid=1164067&siteid=1\n\nChango V. of Microsoft answers this issue with this pattern:\n\n(i) Make the Dispatcher object of the main thread available to your worker thread. (You could either pass it as a parameter to the thread start method or just use Application.Current.Dispatcher.)\n\n(ii) Use a try-catch-finally in the worker thread. (In general, the catch block should immediately rethrow critical exceptions: OutOfMemoryException, SecurityException, SEHException, maybe also NullReferenceException.)\n\n(iii) The [worker-thread] catch block calls mainDispatcher.Invoke(DispatcherPriority.Send, ExceptionCallback, exception).\n\n(iv) ExceptionCallback() throws the exception object passed to it. This happens on the main thread, so handlers added to Application.DispatcherUnhandledException will be invoked and can “handle” the exception.\n\n(v) If your worker thread resumes execution, the exception was “handled.”\n\nThe following is a worker-thread catch block following this pattern in a WPF application:\n\n    catch ( Exception ex )\n    {\n        Dispatcher d = ClientApplication.Current.Dispatcher;\n        ClientApplication.WorkerThreadExceptionCallback delg =\n            ClientApplication.WorkerThreadException;\n        d.Invoke( DispatcherPriority.Send, delg, ex );\n\n    }\n\nThe main thread defines:\n\n    internal static void\n        WorkerThreadException( Exception WorkerThreadException )\n    {\n        throw WorkerThreadException as Exception;\n    }\n\n    internal delegate void\n        WorkerThreadExceptionCallback( Exception WorkerThreadException );\n",
    "ItemText": null,
    "CreateDate": "2007-10-02T11:51:34.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-02T11:51:34.0000000",
    "DocumentId": "2076071891",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5611",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Sony Sound Forge 9.0: Batch Converter Is Bundled in Sound Forge 9.0",
    "SortOrdinal": null,
    "ItemChar": "For those of us who remember Sonic Foundry Batch Converter, the functionality of this legacy product is now incorporated in Sound Forge 9.0. Craig Anderton details this functionality in “Batchin’ it with Sound Forge 9”:\n\n    http://www.sonycreativesoftware.com/news/article.asp\n        ?articleid=34&keycode=3503#cont\n",
    "ItemText": null,
    "CreateDate": "2007-10-02T11:55:34.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-02T11:55:34.0000000",
    "DocumentId": "2076071892",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5612",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "How To: Use Impersonation and Delegation in ASP.NET 2.0: Notes; http://msdn2.microsoft.com/en-us/library/ms998351.aspx",
    "SortOrdinal": null,
    "ItemChar": "* “Delegation allows you to use an impersonation token to access network resources.”\n\nThis official statement directly links delegation and impersonation and implies that you cannot use IIS to serve resources that are not on the same machine as IIS without delegation.\n\n* “By default, ASP.NET does not use impersonation, and your code runs using the ASP.NET application’s process identity. On the Microsoft® Windows Server™ 2003 operating system, ASP.NET applications run in an Internet Information Services (IIS) 6.0 application pool by default.”\n\nThis is this first of many statements that distinguish Windows Server 2003 from previous platforms capable of running IIS.\n\n* “If you need to impersonate at the method level to perform specific operations or access particular resources, then you can use programmatic impersonation by using the WindowsIdentity.Impersonate method.”\n\nThis statement introduces WindowsIdentity.Impersonate and later it will compared to the Win32 API call, LogonUser().\n\n* “If your application authenticates callers by using custom authentication, such as forms authentication, then you cannot impersonate the original caller through ASP.NET configuration. Instead you must call the Impersonate method of a WindowsIdentity object that you create for the original caller.”\n\nThis statement is a rare example of documenting the advantage WindowsIdentity.Impersonate() has over declaring <identity /> in web.config.\n\n* “If you are impersonating a local account, you must use LogonUser.”\n\nThe LogonUser API apparently is only available on Windows 2000 Server or Windows Server 2003.\n\n* “If your application has access to the user name and password of the caller (perhaps through a logon Web page) and needs to access local resources, you should use the Win32 LogonUser API. This is preferable to using the WindowsIdentity constructor because you do not need to grant the ASP.NET process account the ‘Act as part of the operating system’ privilege.”\n\nThis shows the advantage LogonUser has over the WindowsIdentity object and reading carefully to this point should clearly sketch out a relationship among the <identity /> declaration, WindowsIdentity and LogonUser. This relationship is very complex and should be studied carefully.\n\n* “In ASP.NET 2.0 applications, you can now change the default behavior to flow the impersonation token to newly created threads…”\n\nThis may be an indirect reference to the <alwaysFlowImpersonationPolicy /> element in addition to the AspCompat=\"true\" setting referred to later in the prose hyperlink.\n\n* “The token can represent the authenticated user, if IIS is configured for Integrated Windows authentication, or another form of authentication such as basic, digest, or client certificate authentication. The token represents the anonymous user identity (IUSR_MACHINENAME) if IIS is configured to enable anonymous access.”\n\nThis describes IIS behavior when <authentication mode=\"Windows\" /> and <identity impersonate=\"true\" /> is declared in web.config.\n\n* “Whether you can access local resources or network resources depends on the logon session type that you request (you specify the logon session type in the third argument of LogonUser).”\n\nWhen LogonSessionType.Interactive (=2) is sent to LogonUser, IIS can, “…access remote resources, request an interactive logon session. This results in a logon session that has network credentials. The user account passed to logon user must be granted the Log on locally user right.”\n\n* “When you request an interactive logon, LogonUser returns a primary token that allows you to create processes while impersonating. When you request a network logon, LogonUser returns an impersonation token that can be used to access local resources, but not to create processes.”\n\nThe LogonSessionType enum is defined in the subsequent code sample.\n\n* “When you use the LogonUser API for impersonation on Windows Server 2003, you do not need to grant your application's process identity the Act as part of the operating system user right.”\n\n*“…if you are running on Windows Server 2003 with IIS 6.0 configured to run in worker isolation mode (the default), you can avoid impersonation by configuring your ASP.NET application to run in a custom application pool that runs under a specific domain identity.”\n\n* “To obtain an impersonation token so that you can access network resources, you have a number of options.”\n\nThe options: Kerberos authentication and delegation, LogonUser and an Interactive logon session, protocol transition and basic authentication and impersonation.\n\n* “Note that you must have access to both the user name and password to call LogonUser. You can only use the token to access network resources over a single hop, whereas Kerberos delegation allows the impersonated identity to flow across multiple tiers.”\n\n* For protocol transition: “To get a delegate-level token with this approach, you must be running on a Windows Server 2003 in a Windows 2003 domain and you need to configure your computer or process account in Active Directory as trusted for delegation and protocol transition.”\n\n* “…For example, if you configure IIS to use integrated Windows authentication, it will use Kerberos authentication if possible, but otherwise default to NTLM authentication—which does not allow access to network resources with an impersonated identity.”\n\n* “Windows Server 2003 introduces constrained delegation. …With constrained delegation on Windows Server 2003, administrators can specify exactly which services on which servers a computer can access by using the impersonated user's security context.”",
    "ItemText": null,
    "CreateDate": "2007-10-04T15:53:47.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-04T15:53:47.0000000",
    "DocumentId": "2076071893",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5613",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "OpenSUSE 10.2 KDE: How to Set Pop Up Window Size in KDE",
    "SortOrdinal": null,
    "ItemChar": "A person named Thomas O. in http://www.groupsrv.com/linux/post-755906.html answers this question with this:\n\n“Resize the window to your liking and then right-click the titlebar and\nin the menu that comes up choose Advanced > Special Window Setting.”\n\n“Go to the ‘Geometry’ pane and activate ‘Size’ and then pick ‘Apply\nInitially’ in the drop-down menu.”\n\nAs of this writing, I refuse to believe that this is only kind of place where this information is available.",
    "ItemText": null,
    "CreateDate": "2007-10-08T15:50:16.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-08T15:50:16.0000000",
    "DocumentId": "2076071894",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5614",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Office Outlook 2003 PROBLEM: Junk Mail Filter Is Not Working",
    "SortOrdinal": null,
    "ItemChar": "Junk mail filtering does not work by design when Outlook is not running in cached exchange mode. To turn on cached exchange mode:\n\n1. On the Tools menu, click E-Mail Accounts, click View or change existing e-mail accounts, and then click Next.\n\n2. In the Outlook processes e-mail for these accounts in the following order list, click the Exchange Server e-mail account, and then click Change.\n\n3. Under Microsoft Exchange Server, select the Use Cached Exchange Mode check box.\n\n4. Exit and restart Microsoft Outlook.\n\nFor more information, see:\n\n    http://office.microsoft.com/en-us/outlook/HP010223431033.aspx\n",
    "ItemText": null,
    "CreateDate": "2007-10-08T15:56:07.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-08T15:56:07.0000000",
    "DocumentId": "2076071895",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5615",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PowerShell Profiles",
    "SortOrdinal": null,
    "ItemChar": "These are the locations of PowerShell profiles:\n\n%windir%\\system32\\WindowsPowerShell\\v1.0\\profile.ps1\n\n%windir%\\system32\\WindowsPowerShell\\v1.0\\Microsoft.PowerShell_profile.ps1\n\n%UserProfile%\\My Documents\\WindowsPowerShell\\profile.ps1\n\n%UserProfile%\\My Documents\\WindowsPowerShell\\Microsoft.PowerShell_profile.ps1\n\n\nFor more information, see “Windows PowerShell Profiles”:\n\n    http://msdn2.microsoft.com/en-us/library/bb613488.aspx",
    "ItemText": null,
    "CreateDate": "2007-10-08T16:04:08.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-08T16:04:08.0000000",
    "DocumentId": "2076071896",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5616",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET 2.0: Flippant Remarks about Server.UrlEncode and Server.UrlPathEncode",
    "SortOrdinal": null,
    "ItemChar": "There is a table that summarizes the behavior of Server.UrlEncode and Server.UrlPathEncode here:\n\n    http://engineering.meta-comm.com/blogs/misha/content/binary/results.html\n\nOne approach to establishing a kind of “coverage” with Server.UrlEncode is discussed Ray Jezek in “HttpUtility.UrlEncode Does not encode spaces properly” here:\n\n    http://blogs.geekdojo.net/jez/archive/2005/01/14/6462.aspx\n",
    "ItemText": null,
    "CreateDate": "2007-10-08T16:21:56.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-08T16:21:56.0000000",
    "DocumentId": "2076071897",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5617",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Conventional TCP Port Numbers",
    "SortOrdinal": null,
    "ItemChar": "1\tTCP Port Service Multiplexer (TCPMUX)\n5\tRemote Job Entry (RJE)\n7\tECHO\n18\tMessage Send Protocol (MSP)\n20\tFTP -- Data\n21\tFTP -- Control\n22\tSSH Remote Login Protocol\n23\tTelnet\n25\tSimple Mail Transfer Protocol (SMTP)\n29\tMSG ICP\n37\tTime\n42\tHost Name Server (Nameserv)\n43\tWhoIs\n49\tLogin Host Protocol (Login)\n53\tDomain Name System (DNS)\n69\tTrivial File Transfer Protocol (TFTP)\n70\tGopher Services\n79\tFinger\n80\tHTTP\n103\tX.400 Standard\n108\tSNA Gateway Access Server\n109\tPOP2\n110\tPOP3\n115\tSimple File Transfer Protocol (SFTP)\n118\tSQL Services\n119\tNewsgroup (NNTP)\n137\tNetBIOS Name Service\n139\tNetBIOS Datagram Service\n143\tInterim Mail Access Protocol (IMAP)\n150\tNetBIOS Session Service\n156\tSQL Server\n161\tSNMP\n179\tBorder Gateway Protocol (BGP)\n190\tGateway Access Control Protocol (GACP)\n194\tInternet Relay Chat (IRC)\n197\tDirectory Location Service (DLS)\n389\tLightweight Directory Access Protocol (LDAP)\n396\tNovell Netware over IP\n443\tHTTPS\n444\tSimple Network Paging Protocol (SNPP)\n445\tMicrosoft-DS\n458\tApple QuickTime\n546\tDHCP Client\n547\tDHCP Server\n563\tSNEWS\n569\tMSN\n1080\tSocks\n\nThis list comes from here:\n\n    http://www.webopedia.com/quick_ref/portnumbers.asp\n",
    "ItemText": null,
    "CreateDate": "2007-10-08T16:24:59.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-08T16:24:59.0000000",
    "DocumentId": "2076071898",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5618",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu/Debian Linux: How To Change the Hostname",
    "SortOrdinal": null,
    "ItemChar": "Edit this file:\n\n    /etc/hostname\n\nThen run this command:\n\n    /etc/init.d/hostname.sh start\n\nVerify that the name is changed with some of these commands:\n\n    uname -n\n    hostname -a\n    hostname -s\n    hostname -d\n    hostname -f\n    hostname\n\nFor more infomation, see:\n\n    “How to change the hostname of a Linux system”\n    http://www.ducea.com/2006/08/07/\n        how-to-change-the-hostname-of-a-linux-system/\n\n    “Change hostname or Server name of a Linux Machine”\n    http://www.debianadmin.com/\n        change-hostname-or-server-name-of-a-linux-machine.html\n",
    "ItemText": null,
    "CreateDate": "2007-10-08T16:35:47.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-08T16:35:47.0000000",
    "DocumentId": "2076071899",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5619",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu/Debian Problem: apt refers to the CD-ROM before Remote Sources",
    "SortOrdinal": null,
    "ItemChar": "Solution: edit the /etc/apt/sources.list file to comment out any CD-ROM references.",
    "ItemText": null,
    "CreateDate": "2007-10-11T16:02:53.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-11T16:02:53.0000000",
    "DocumentId": "2076071900",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5620",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "tar: To unpack a standard .tar file",
    "SortOrdinal": null,
    "ItemChar": "To unpack a standard .tar file, use this command (from the target directory):\n\n    tar -xvf [filename]\n\noptions:\n\n    x: decompress something\n    t: view contents\n    v: verbose mode\n    f: input from a file \n\nFor more information, see\n\n    http://wiki.linuxquestions.org/wiki/Tar\n",
    "ItemText": null,
    "CreateDate": "2007-10-11T16:36:00.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-11T16:36:00.0000000",
    "DocumentId": "2076071901",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5621",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Paternity Action",
    "SortOrdinal": null,
    "ItemChar": "Paternity refers to a legal action to establish that a man is the father of a child. A paternity action may be brought in order to impose a child support obligation, establish a right to inheritance, secure consent for the child's adoption, or gain or prohibit custody or visitation rights.",
    "ItemText": null,
    "CreateDate": "2007-10-12T12:32:59.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-12T12:32:59.0000000",
    "DocumentId": "2076071902",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5622",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Gang of Four Patterns: Flippant Remarks about Singleton and Monostate",
    "SortOrdinal": null,
    "ItemChar": "Singleton:\n\n    public class Singleton\n    {\n        private static Singleton theInstance = null;\n        private Singleton() {}\n\n        public static Singleton Instance()\n        {\n            if (theInstance == null) theInstance = new Singleton();\n            return theInstance;\n        }\n    }\n\nMonostate:\n\n    public class Monostate\n    {\n        private static int itsX = 0;\n        public Monostate() {}\n\n        public void setX(int x) { itsX = x; }\n        public int getX() { return itsX; }\n    }\n",
    "ItemText": null,
    "CreateDate": "2007-10-18T21:03:25.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-18T21:03:25.0000000",
    "DocumentId": "2076071903",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5623",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Introduction to the GOF Strategy Pattern in C#",
    "SortOrdinal": null,
    "ItemChar": "“Introduction to the GOF Strategy Pattern in C#”:\n\n    http://www.c-sharpcorner.com/UploadFile/\n        rmcochran/strategyPattern08072006095804AM/\n            strategyPattern.aspx\n\nThere are three  main parts to any strategy:\n\n    1. Strategy: the interface that defines how the algorithm will be called.\n    2. Concrete Strategy: the implementation of the strategy.\n    3. Context: the object holding the Concrete Strategy.\n\nThis strategy formally defines the use of the Interface.\n",
    "ItemText": null,
    "CreateDate": "2008-03-22T20:14:07.0000000",
    "EndDate": null,
    "ModificationDate": "2008-03-22T20:14:07.0000000",
    "DocumentId": "2076071904",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5624",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Sun JAXP Tutorial: 1. A Quick Introduction to XML",
    "SortOrdinal": null,
    "ItemChar": "* “To complete this journeyman’s introduction to XML, note that an XML file always starts with a prolog… it may contain the following attributes: version… encoding… standalone… The prolog can also contain definitions of entities…”\n\n* “An XML file can also contain processing instructions that give commands or information to an application that is processing the XML data. Processing instructions have the following format: <?target instructions?>”",
    "ItemText": null,
    "CreateDate": "2007-10-18T21:24:17.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-18T21:24:17.0000000",
    "DocumentId": "2076071905",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5625",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Sun JAXP Tutorial: 2. XML and Related Specs: Digesting the Alphabet Soup",
    "SortOrdinal": null,
    "ItemChar": "* “The current APIs for accessing XML documents either serially or in random access mode are, respectively, SAX and DOM…”\n\n* “The XSL standard has two parts, XSLT (the transformation standard, described next) and XSL-FO (the part that covers formatting objects, also known as flow objects).”\n\n* “A DTD can’t restrict the content of elements, and it can’t specify complex relationships.”\n\n* “…a DTD uses syntax which substantially different from XML, so it can’t be processed with a standard XML parser. That means you can’t read a DTD into a DOM, for example, modify it, and then write it back out again… To remedy these shortcomings, a number of proposals have been made for a more database-like, hierarchical \"schema\" that specifies validation criteria. The major proposals are shown below… RELAX… SOX… TREX…”\n\n* “The following standards aim at preserving the benefits of HTML in the XML arena, and to adding additional functionality, as well… XLink… XML Base… XPointer…”\n\nKnowledge standards: RDF (Resource Description Framework), RDF Schema, XTM (XML Topic Maps)…\n\nExtended document standards: SMIL (Synchronized Multimedia Integration Language), MathML (Mathematical Markup Language), SVG (Scalable Vector Graphics), DrawML (Drawing Meta Language)…\n\neCommerce standards: ICE (Information and Content Exchange), ebXML (Electronic Business with XML), cxml (Commerce XML), CBL (Common Business Library)…\n",
    "ItemText": null,
    "CreateDate": "2007-10-18T21:53:45.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-18T21:53:45.0000000",
    "DocumentId": "2076071906",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5626",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Sun JAXP Tutorial: 3. An Overview of the APIs",
    "SortOrdinal": null,
    "ItemChar": "JAXP and the associated XML APIs:\n\n    JAXP: Java API for XML Processing\n    JAXB: Java Architecture for XML Binding\n    JDOM: Java DOM\n    DOM4J\n    JAXM: Java API for XML Messaging\n    JAX-RPC: Java API for XML-based Remote Process Communications\n    JAXR: Java API for XML Registries\n\nThe JAXP APIs:\n\njavax.xml.parsers: The JAXP APIs, which provide a common interface for different vendors’ SAX and DOM parsers.\n\norg.w3c.dom: Defines the Document class (a DOM), as well as classes for all of the components of a DOM.\n\norg.xml.sax: Defines the basic SAX APIs. \n\njavax.xml.transform: Defines the XSLT APIs that let you transform XML into other forms.\n\n",
    "ItemText": null,
    "CreateDate": "2007-10-18T22:02:00.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-18T22:02:00.0000000",
    "DocumentId": "2076071907",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5627",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "GNOME/X: Restart GNOME without rebooting the computer",
    "SortOrdinal": null,
    "ItemChar": "Save and close all open applications.\n\nUse the Ctrl-Alt-Backspace shortcut keys to restart GNOME.\n\nIf Ctrl-Alt-Backspace is disabled, type\n\n    sudo /etc/init.d/gdm restart\n\nSource: http://linux.about.com/od/ubuntu_doc/a/ubudg10t18.htm\n",
    "ItemText": null,
    "CreateDate": "2007-10-29T13:33:49.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-29T13:33:49.0000000",
    "DocumentId": "2076071908",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5628",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP Warning: open_basedir restriction in effect … is not within the allowed path(s)",
    "SortOrdinal": null,
    "ItemChar": "Your friendly hosting service may have Safe Mode enabled for PHP. Safe Mode is described here:\n\n    http://us2.php.net/features.safe-mode\n\nThis means that you are not able to test for the existence of a file or directory with a root different from the “allowed path(s).” One way around this problem is to re-factor your PHP code to test for the allowed path(s) when possible.",
    "ItemText": null,
    "CreateDate": "2007-10-30T11:14:35.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-30T11:14:35.0000000",
    "DocumentId": "2076071909",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5629",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Richard M. King, M.D., Melanin: A Key to Freedom; Melanin and the Electromagnetic Theory of Life; pp. 58–59",
    "SortOrdinal": null,
    "ItemChar": "Melanin is present in brain cells, neurons, in many different sites throughout the brain. The Melanin found in such sites is known as neuromelanin. (Graham, D.G., On the Origin and Significance of Neuromelanin, Arch. Pathol Lab. Med. 103: pp. 359–362, 1979; Lindquist, N. G., Neuromelanin and its Possible Protective and Destructive Properties, Pigment Cell Research 1: pp. 133–136, 1987; Bazelon, M. Studies on neuromelanin. 1. A melanin system in the human adult brainstem. Neurology, 17: pp. 512–519, 1967; Fenichel, G. M., Studies on neuromelanin. II. Melanin in the brainstem of infants and children. Neurology, 18: pp. 817–820, 1968; Lacy, M. Neuromelanin: A hypothetical component of bioelectric mechanisms in brain function, Physiol. Chem. & Physics, 13: pp. 319–324, 1981; Lacy, M., Photon-electron coupling as a possible transducing mechanism in bioelectric processes involving neuromelanin, J. theor. Bioi., 111: pp. 201–204, 1984; ML-Ginness, J., A new view of pigmented neurons, J. theor. Bioi. 115: pp. 474–476, 1985; Marsden, C. D., Brain melanin. In: Pigments in pathology. M. Wollman ed. Academic Press, New York, pp. 395–420, 1969; Mann, D.M.A., The effect of aging on the pigmented nerve cell of the human locus coreuleus and substantial nigra, Acta Neuropathol. (Berl.) 47: pp. 93–97, 1979).",
    "ItemText": null,
    "CreateDate": "2007-10-30T21:41:48.0000000",
    "EndDate": null,
    "ModificationDate": "2007-10-30T21:41:48.0000000",
    "DocumentId": "2076071910",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5630",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Benjamin Lee Whorf; Whorf, B. L. (1940): 'Science and Linguistics', Technology Review 42(6): 229-31, 247-8. Also in B. L. Whorf (1956): Language, Thought and Reality (ed. J. B. Carroll). Cambridge, MA: MIT Press; The Sapir-Whorf Hypothesis",
    "SortOrdinal": null,
    "ItemChar": "Human beings do not live in the objective world alone, nor alone in the world of social activity as ordinarily understood, but are very much at the mercy of the particular language which has become the medium of expression for their society. It is quite an illusion to imagine that one adjusts to reality essentially without the use of language and that language is merely an incidental means of solving specific problems of communication or reflection. The fact of the matter is that the 'real world' is to a large extent unconsciously built upon the language habits of the group. No two languages are ever sufficiently similar to be considered as representing the same social reality. The worlds in which different societies live are distinct worlds, not merely the same world with different labels attached... We see and hear and otherwise experience very largely as we do because the language habits of our community predispose certain choices of interpretation. (Sapir 1958 [1929], p. 69)\n\n[See also: http://www.aber.ac.uk/media/Documents/short/whorf.html]\n",
    "ItemText": null,
    "CreateDate": "2007-11-07T10:59:26.0000000",
    "EndDate": null,
    "ModificationDate": "2007-11-07T10:59:26.0000000",
    "DocumentId": "2076071911",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5631",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005: Flippant Remarks about the New FOR XML PATH() Syntax",
    "SortOrdinal": null,
    "ItemChar": "The FOR XML PATH() syntax uses standard XPath queries to replace the proprietary and often extremely confusing syntax of the FOR XML EXPLICIT syntax. The following code block shows how this works:\n\n    DECLARE\n        @d1 XML\n    ,   @d2 XML\n\n    SET @d1 = '<one/>'\n\n    SET @d2 = '<two/>'\n\n    SELECT\n        @d1 \"node()\"\n    ,   @d2 \"node()\"\n    FOR XML PATH('root')\n\nwhere node() is a standard XPath function. This SELECT statement returns:\n\n    <root>\n      <one />\n      <two />\n    </root>\n\nYou can see how the pattern above can be used to assemble arbitrary fragments of XML into one document. This use of native SQL 2005 XML data type eliminates the need for UNION queries! This pattern coupled with the new TYPE directive in the FOR XML clause yields almost unlimited flexibility!\n\nFor more information, see:\n\n    “What's New in FOR XML in Microsoft SQL Server 2005”\n    http://msdn2.microsoft.com/en-us/library/ms345137.aspx\n\nand\n\n    “Bak2Basics: Learn T-SQL - FOR XML”\n    http://blah.winsmarts.com/2007-2-Bak2Basics__Learn_T-SQL_-_FOR_XML.aspx\n",
    "ItemText": null,
    "CreateDate": "2007-11-07T17:39:25.0000000",
    "EndDate": null,
    "ModificationDate": "2007-11-07T17:39:25.0000000",
    "DocumentId": "2076071912",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5632",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "eclipse 3.x SDK (WTP): Editing the Recent Workspaces List for the Select a Workspace Dialog",
    "SortOrdinal": null,
    "ItemChar": "You can clean your recent workspaces list in eclipse for the Select a Workspace dialog by editing a text file called org.eclipse.ui.ide.prefs in your eclipse installation folder at this relative path (in Linux):\n\n    configuration/.settings\n\nEdit the RECENT_WORKSPACES= line knowing that the Workspace paths are delimited by the Java newline character (\\n).\n",
    "ItemText": null,
    "CreateDate": "2007-11-09T12:52:29.0000000",
    "EndDate": null,
    "ModificationDate": "2007-11-09T12:52:29.0000000",
    "DocumentId": "2076071913",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5633",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Adobe Flex 2: The Minimal MXML Application with an ActionScript3 Package",
    "SortOrdinal": null,
    "ItemChar": "This is the MXML in a file called Client.mxml:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<mx:Application\n    x­mlns:mx=\"http://www.adobe.com/2006/mxml\"\n    horizontalAlign=\"center\" verticalAlign=\"center\"\n    initialize=\"ClientAction.Initialize()\"\n    >\n\n</mx:Application>\n\nThis is ActionScript3 package in a file called ClientAction.as:\n\npackage\n{\n\timport mx.controls.Alert;\n\timport mx.core.Application;\n\n\tpublic class ClientAction\n\t{\n\t\tpublic static function Initialize():void\n\t\t{\n\t\t\tif(ClientAction._action == null)\n\t\t\t{\n\t\t\t\tClientAction._action =\n\t\t\t\t\tnew ClientAction(Application.application as Application);\n\t\t\t}\n\t\t}\n\n\t\tpublic function ClientAction(thisApplication:Application)\n\t\t{\n\t\t\t//TODO: do some stuff with the root application.\n\t\t}\n\n\t\tprivate static var _action:ClientAction = null;\n\t}\n}\n",
    "ItemText": null,
    "CreateDate": "2007-11-13T21:08:56.0000000",
    "EndDate": null,
    "ModificationDate": "2007-11-13T21:08:56.0000000",
    "DocumentId": "2076071914",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5634",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Adobe Flex 2 and Fireworks CS3: Fireworks Only Supports mx:Image Elements",
    "SortOrdinal": null,
    "ItemChar": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<mx:Application\n    x­mlns:mx=\"http://www.adobe.com/2006/mxml\"\n    width=\"128\" height=\"128\"\n    layout=\"absolute\">\n\n<!--\n    The Adobe Fireworks CS3 File > Export command\n    has an export type called “MXML and Images”\n    that ALWAYS produces mx:Image elements.\n\n    There is NO SUPPORT for vector-like elements\n    such as mx:Shape.\n-->\n\n\t<mx:Image\n        source=\"Image.gif\"\n        x=\"5\" y=\"14\"\n        width=\"121\" height=\"111\"/>\n\n</mx:Application>\n",
    "ItemText": null,
    "CreateDate": "2007-11-21T23:06:42.0000000",
    "EndDate": null,
    "ModificationDate": "2007-11-21T23:06:42.0000000",
    "DocumentId": "2076071915",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5635",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Adobe ActionScript 3: Notes for “Beginners Guide to Getting Started with AS3 (Without Learning Flex)”; DisplayObject, Sprite, MovieClip, UIComponent",
    "SortOrdinal": null,
    "ItemChar": "Article location:\n\n    http://senocular.com/flash/tutorials/as3withmxmlc/\n\nThe package declaration is new to ActionScript 3.0. It replaces the fully-qualified names for classes used in ActionScript 2.0. It follows that:\n\n    class mx.controls.Button { ... }\n\nbecomes\n\n    package mx.controls { class Button { .. } }\n\n* “…a Sprite is basically a movie clip without a timeline and frames…”\n\nExtending Sprite is the basic technique for displaying an object in Flash using ActionScript 3. This is the form:\n\npackage\n{\n    import flash.display.Sprite;\n\n    public class BareBones extends Sprite\n    {\n    }\n}\n\n* “Objects you can see in the Flash player are known as display objects and are derived from the DisplayObject class. Such classes include, but are not limited to: Sprite, MovieClip (which is a subclass of Sprite), TextField, Bitmap, and Shape. All DisplayObject classes inherit from EventDispatcher so are inherently event-capable. In addition, the Sprite, MovieClip, and TextField classes (along with some others) inherit from the InteractiveObject class meaning they can recieve events from the mouse and keyboard such as mouseOver, click, and keyUp. Sprite and MovieClip also inherit from a class called DisplayObjectContainer meaning that they can contain other display objects within them. The application class of a SWF is derived from the Sprite class so it too is a DisplayObjectContainer. As such, it can add other classes to it as children.”\n\nFor the reader who may care just a little about Flex MXML (or using ActionScript 3 to render display objects behind MXML), the importance of the UIComponent Class cannot be overestimated and should be included in the list classes quoted above… In fact, when programmatically generating objects for display in Flex containers, the UIComponent should be used instead the Sprite. The location of UIComponent in the Adobe® Flex™ 2.0.1 Language Reference:\n\n    http://livedocs.adobe.com/flex/201/langref/mx/core/UIComponent.html\n\n* “The management of display objects in ActionScript 3 has completely changed. No longer do you use attachMovie, createEmptyMovieClip, or createTextField etc to create new MovieClip or TextField instances. Instead, you use the new keyword to create new instances of these objects and then add them to a DisplayObjectContainer using the addChild (or similar) method. If not added to a DisplayObjectContainer, the objects will exist and can be manipulated but are never seen as they will exist only in code.”\n\n* “With ActionScript 3 also came some changes to the vector drawing API. Not only are there a couple of new methods such as drawCircle and drawRect, but the API is also no longer associated directly with MovieClip instances. Instead, the drawing API is now used on Graphics class instances.”\n\nIt is important to stress that all vector drawing tasks are confined in the new Graphics class. The location of Graphics in the Adobe® Flex™ 2.0.1 Language Reference:\n\n    http://livedocs.adobe.com/flex/201/langref/\n        flash/display/Graphics.html\n\nThe Adobe documentation states, “You cannot create a Graphics object directly from ActionScript code. If you call new Graphics(), an exception is thrown.” Instead, you obtain an instance of the Graphics class from Shape, Sprite, and MovieClip (or their respective subclasses like UIComponent of FlexSprite).\n\n* “…mxmlc.exe will recognize meta tags within the ActionScript that allow you to embed assets into the published swf and have those assets accessible as a custom class. The meta tag allowing you to do this is Embed meta tag.”\n\nUnfortunately, this embed annotation does not declare support vector formats.\n\n* “There are no more ‘on’ event methods and no more addListener for objects like Mouse and Stage. Every event handler created will be associated with an event through addEventListener(); Note: There is no longer a need for the Delegate class used in ActionScript 2 since listener functions maintain their original scope.”\n\nFor more details, read “Tips for learning ActionScript 3.0” by Emmy Huang of Adobe here:\n\n    http://www.adobe.com/devnet/actionscript/\n        articles/actionscript_tips.html",
    "ItemText": null,
    "CreateDate": "2009-02-05T16:26:23.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-05T16:26:23.0000000",
    "DocumentId": "2076071916",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5636",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about Encrypting app.config in Client Applications",
    "SortOrdinal": null,
    "ItemChar": "First, encrypting app.config in client applications is not as easy as using aspnet_regiis.exe for a single IIS server because using the DPAPIProtectedConfigurationProvider or the RSAProtectedConfigurationProvider is machine-specific, requiring encryption to be run on every machine where the client application is installed.\n\nSecond, as of this writing any code sample tried by be using SectionInformation.ProtectSection() is not working at runtime from within the context of the executing assembly or by using ConfigurationManager.OpenExeConfiguration() pointing to an out-of-process configuration file.\n\nSee “SectionInformation.ProtectSection Method” here:\n\n    http://msdn2.microsoft.com/en-us/library/\n        system.configuration.sectioninformation.protectsection.aspx\n\n",
    "ItemText": null,
    "CreateDate": "2007-12-05T20:42:10.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-05T20:42:10.0000000",
    "DocumentId": "2076071917",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5637",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: Gathering Credentials from the Console; NetworkCredential; ConsoleKeyInfo",
    "SortOrdinal": null,
    "ItemChar": "Console.WriteLine( \"Enter username:\" );\nstring userName = Console.ReadLine();\n\nConsole.WriteLine( \"\\nEnter password:\" );\nStringBuilder password = new StringBuilder();\n\nConsoleKeyInfo info = Console.ReadKey( true );\nwhile ( info.Key != ConsoleKey.Enter )\n{\n    if ( info.Key != ConsoleKey.Backspace )\n    {\n        password.Append( info.KeyChar );\n        info = Console.ReadKey( true );\n    }\n    else if ( info.Key == ConsoleKey.Backspace )\n    {\n        if ( password.Length > 0 )\n            password.Remove( password.Length - 1, 1 );\n        info = Console.ReadKey( true );\n    }\n}\nfor ( int i = 0; i < password.Length; i++ ) Console.Write( \"*\" ); Console.WriteLine();\n\nstring domain = String.Empty;\nstring[] stringArray = userName.Split( new char[] { '\\\\' } );\nif ( stringArray.Length > 1 )\n{\n    domain = stringArray[0];\n    userName = stringArray[1];\n}\nelse\n{\n    domain = Environment.MachineName;\n}\n\nNetworkCredential cred =\n    new NetworkCredential( userName, password.ToString(), domain );\n\n/*\n    For more information see:\n\n    “How to: Authenticate with a User Name and Password”\n    http://msdn2.microsoft.com/en-us/library/ms733131.aspx\n\n    “ConsoleKeyInfo Structure”\n    http://msdn2.microsoft.com/en-us/library/system.consolekeyinfo.aspx\n*/",
    "ItemText": null,
    "CreateDate": "2007-12-06T14:39:30.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-06T14:39:30.0000000",
    "DocumentId": "2076071918",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5638",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005 t-SQL: Basic XQuery Example",
    "SortOrdinal": null,
    "ItemChar": "DECLARE @x xml\n\nSET @x = '\n<root>\n    <myElement myAttribute=\"attrValue\">The element value.</myElement>\n</root>\n'\n\nSELECT\n    @x.query('//myElement/node()') as [element value]\n,   @x.query('data(//myElement)') as [element value]\n,   @x.query('data(//myElement/@myAttribute)') as [elment attribute]\n\n/*\n\n    For more information see:\n\n    “Using the data() function in XQuery”\n    http://www.sqlskills.com/blogs/bobb/\n        2004/09/06/UsingTheDataFunctionInXQuery.aspx\n\n    “Introduction to XQuery in SQL Server 2005”\n    http://technet.microsoft.com/en-us/library/ms345122.aspx\n\n*/\n",
    "ItemText": null,
    "CreateDate": "2007-12-10T15:57:56.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-10T15:57:56.0000000",
    "DocumentId": "2076071919",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5639",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005 t-SQL: Flippant Remarks about Using XPath Assertions Instead of XML Schema",
    "SortOrdinal": null,
    "ItemChar": "For some crazy reason you may want to avoid making a CREATE XML SCHEMA COLLECTION statement but still validate your XML. Here is an example to do this with XPath assertions in XQuery:\n\n\n    IF (@xmlInput.exist('//HostName') = 0)\n    OR (@xmlInput.value('string-length((//HostName/text())[1])','int') = 0)\n    BEGIN\n        SET @xmlOutput = '\n        <Header>Failed to Receive Device Data</Header>\n        <Code>999</Code>\n        <Line>XML element “HostName” was not found or is empty.</Line>\n        '\n        GOTO RETURN_XML_MESSAGE\n    END\n\nThis technique can be used in the discussion by Denis Ruckebusch filed under “Complementing XSD with CHECK constraints” here:\n\n    http://blogs.msdn.com/denisruc/archive/2006/08/22/713342.aspx\n ",
    "ItemText": null,
    "CreateDate": "2007-12-11T12:57:09.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-11T12:57:09.0000000",
    "DocumentId": "2076071920",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5640",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows XP PROBLEM: Jerky DVD Playback; DVD Playback Stutters",
    "SortOrdinal": null,
    "ItemChar": "DVD playback in Windows can become too slow and appear stuttering or jerky when the transfer mode of the Device for the appropriate IDE Channel (usually the secondary IDE Channel) is in the wrong mode (usually PIO mode).\n\nThe fix is to uninstall the driver for the appropriate IDE channel and let Windows reinstall it automatically after a reboot. For more details see “Very slow, jerky dvd playback through Inspiron 6000” here:\n\n    http://forum.notebookreview.com/showthread.php?t=179216\n\nor “Jerky DVD playback in Windows” here:\n\n    http://www.techmind.org/dvd/index.html\n\n\n",
    "ItemText": null,
    "CreateDate": "2007-12-18T16:51:43.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-18T16:51:43.0000000",
    "DocumentId": "2076071921",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5641",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": ".NET 3.0/3.5: Flippant Remarks about the yield Keyword",
    "SortOrdinal": null,
    "ItemChar": "The yield keyword is used only inside of a for loop and with an IEnumerable<> generic type to form a pattern like this:\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            IEnumerable<int> integers = Program.YieldList( 1, 10, 2 );\n        }\n\n        public static IEnumerable<int> YieldList( int start,\n            int end, int increment )\n        {\n            for (int current = start;\n                current <= end; current += increment)\n            {\n                yield return current;\n            }\n        }\n    }\n\nThe variable current is the same type as that specified in IEnumerable<int> and the yield keyword fills IEnumerable<int> until the loop is finished. Without yield, the loop would return after one pass (actually the code won’t compile!).\n\nFor more information, see:\n\n    “yield (C# Reference)”\n    http://msdn2.microsoft.com/en-us/library/9k7k7cf0(VS.80).aspx\n\n    “Drop the temporary lists and leverage yield”\n    http://www.jpboodhoo.com/blog/\n        DropTheTemporaryListsAndLeverageYield.aspx\n\nAs elegant as this pattern appears, note that, as of this writing, setting a breakpoint inside of YieldList() and getting the Debugger to stop on it is “problematic” (just not possible). Targeting .NET 3.5 from Visual Studio 2008 provides a debugging visualizer for IEnumerable<>.\n",
    "ItemText": null,
    "CreateDate": "2007-12-18T21:50:43.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-18T21:50:43.0000000",
    "DocumentId": "2076071922",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5642",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": ".NET 2.0/3.0/3.5: Flippant Remarks about Windows Service Projects in Visual Studio 2005/2008",
    "SortOrdinal": null,
    "ItemChar": "The best approach is to build a Windows Service to also run as a console application. The pattern is described in “Run Windows Service as a console program” here:\n\n    http://tech.einaregilsson.com/2007/08/15/\n        run-windows-service-as-a-console-program/\n\nThis should eliminate much of the problems described in “Debugging Windows Services is a Pain” here:\n\n    http://theimes.com/archive/2006/12/28/\n        Debugging-Windows-Services-is-a-Pain.aspx\n\nWindows services are installed with Installer Tool (Installutil.exe) described here:\n\n    http://msdn2.microsoft.com/en-us/library/50614e95(vs.80).aspx\n\nThere is an Installer tool for one version of .NET up to .NET 3.5:\n\n    %SystemRoot%\\Microsoft.NET\\Framework\\v2.0.50727\\InstallUtil.exe\n\nThis tool will not work on the compiled assembly without running the Add Installer command described in “Creating a Windows Service in .NET” here:\n\n    http://www.developer.com/net/csharp/article.php/10918_2173801_2\n\nIt is also covered by Microsoft under the misleading title “How to create a Setup project for a Windows Service in Visual Basic .NET or in Visual Basic 2005” here:\n\n    http://support.microsoft.com/kb/317421/en-us\n",
    "ItemText": null,
    "CreateDate": "2007-12-18T22:20:32.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-18T22:20:32.0000000",
    "DocumentId": "2076071923",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5643",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005: “Create Interoperable Native Web Services” Notes; http://mcpmag.com/Features/print.asp?EditorialsID=1299",
    "SortOrdinal": null,
    "ItemChar": "* “SQL Server 2005 Express Edition doesn’t support HTTP endpoints, so you must license the Workgroup Edition or better to enable these features for production. Only Windows XP Service Pack 2 (SP2) and Windows 2003 Server install Http.sys; thus, you can't deploy native Web services to Windows 2000 servers.”\n\n* “The SQL Server team's design goal was twofold: Provide cross-platform data access that delivers parity with the Windows-only Tabular Data Stream (TDS) protocol, and move the SOAP stack from the IIS middle tier to the database engine's process.”\n\nFrom Wikipedia.org: “Tabular Data Stream (TDS) is a protocol, to transfer data between a database server and client. Initially designed and developed by Sybase Inc. for their Sybase SQL Server relational database engine in 1984, and later by Microsoft in Microsoft SQL Server.” (http://en.wikipedia.org/wiki/Tabular_Data_Stream)\n\n* “You also can take advantage of C# or VB CLR stored procedures to customize the service’s WSDL document for use by non-Microsoft SOAP toolkits, such as Borland’s JBuilder 9.0 or webMethods’ Glue 5.0.1.”\n\nThis is the first recognition of “non-Microsoft SOAP” but only proprietary “toolkits” are recognized.\n\n* “Setting SCHEMA = NONE removes the inline XML schema; most non-Microsoft SOAP toolkits won't process SOAP response messages with inline schemas.”\n\n* “WSDL = DEFAULT generates a dynamic WSDL document with complex or simple (xsd:any) data typing. Data typing depends on the service URL that you use to generate the Web service proxy, which I’ll discuss shortly. …Substituting ?wsdlsimple for ?wsdl in the WSDL document’s URL query string replaces proprietary SQL Server–specific types with XML schema simple datatypes and sqlresultstream:SqlResultStream with the XML schema xsd:any datatype wildcard.”\n\nThe ?wsdlsimple query string option is very important!\n",
    "ItemText": null,
    "CreateDate": "2007-12-22T20:55:39.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-22T20:55:39.0000000",
    "DocumentId": "2076071924",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5644",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005 t-SQL: The Use of the nodes() Method for XML Types",
    "SortOrdinal": null,
    "ItemChar": "DECLARE @xml xml\n\nSET @xml = '\n    <Root>\n        <Item1 />\n        <Item2 />\n        <Item3 />\n        <Item4 />\n        <Item5 />\n    </Root>\n'\n\nSELECT\n    Temp.Items.query('.') AS [Items]\nFROM\n    @xml.nodes('//Root/*') AS Temp(Items)\n\n/*\n    The SELECT form avoids an error like:\n\n    “The column 'Items' that was returned\n    from the nodes() method cannot be used directly.\n    It can only be used with one\n    of the four xml data type methods,\n    exist(), nodes(), query(), and value(),\n    or in IS NULL and IS NOT NULL checks.”\n\n    The table alias (with columns) avoids this error:\n\n    “The table (and its columns) returned\n    by a table-valued method need to be aliased.”\n\n    These two errors imply that:\n\n         * The nodes() method returns a table.\n         * The table returned from the nodes() has XML columns.\n\n    It follows that one may never persist a table with XML columns\n    but temporary XML columns are very likely to be used.\n\n    For general information, see\n    “Introduction to XQuery in SQL Server 2005”\n    http://technet.microsoft.com/en-us/library/ms345122.aspx\n*/\n",
    "ItemText": null,
    "CreateDate": "2007-12-22T22:06:50.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-22T22:06:50.0000000",
    "DocumentId": "2076071925",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5645",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005 t-SQL: The Use of the modify() Method for XML Types; insert element; XML Data Modification Language (DML)",
    "SortOrdinal": null,
    "ItemChar": "DECLARE @xml xml\n\nSET @xml =\n'\n<Root>\n    <Item1 />\n    <Item2 />\n    <Item3 />\n    <Item4 />\n    <Item5 />\n</Root>\n'\n\nSET\n    @xml.modify\n    ('\n        insert element Item6 {} as last into (/Root)[1]\n    ')\n\nSELECT @xml\n\n/*\n    This projection produces (note the empty brackets above, {},\n    indicating a nil value for Item6):\n\n    <Root>\n      <Item1 />\n      <Item2 />\n      <Item3 />\n      <Item4 />\n      <Item5 />\n      <Item6 />\n    </Root>\n\n    Note that the modify() method\n    uses Microsoft-specific XML DML.\n    This is not part of the XQuery standard.\n\n    For general information, see\n    “Introduction to XQuery in SQL Server 2005”\n    http://technet.microsoft.com/en-us/library/ms345122.aspx\n*/\n",
    "ItemText": null,
    "CreateDate": "2007-12-22T22:51:04.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-22T22:51:04.0000000",
    "DocumentId": "2076071926",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5646",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005 t-SQL: The Use of the modify() Method for XML Types; delete; XML Data Modification Language (DML)",
    "SortOrdinal": null,
    "ItemChar": "DECLARE @xml xml\n\nSET @xml =\n'\n<Root>\n    <Item1 />\n    <Item2 />\n    <Item3 />\n    <Item4 />\n    <Item5 />\n</Root>\n'\n\nSET\n    @xml.modify\n    ('\n        delete ((/Root/*[5])[1])\n    ')\n\nSELECT @xml\n\n/*\n    <Item5 /> should be deleted.\n\n    Note that the modify() method\n    uses Microsoft-specific XML DML.\n    This is not part of the XQuery standard.\n\n    For general information, see\n    “Introduction to XQuery in SQL Server 2005”\n    http://technet.microsoft.com/en-us/library/ms345122.aspx\n*/\n",
    "ItemText": null,
    "CreateDate": "2007-12-22T22:44:38.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-22T22:44:38.0000000",
    "DocumentId": "2076071927",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5647",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005 t-SQL: The Use of the modify() Method for XML Types; insert text; XML Data Modification Language (DML)",
    "SortOrdinal": null,
    "ItemChar": "DECLARE @xml xml\n\nSET @xml =\n'\n<Root>\n    <Item1 />\n    <Item2 />\n    <Item3 />\n    <Item4 />\n    <Item5 />\n</Root>\n'\n\nSET\n    @xml.modify\n    ('\n        insert text {\"Hello World\"} as first into (/Root/Item3)[1]\n    ')\n\nSELECT @xml\n\n/*\n    This projection produces:\n\n    <Root>\n      <Item1 />\n      <Item2 />\n      <Item3>Hello World</Item3>\n      <Item4 />\n      <Item5 />\n    </Root>\n\n    Note that the modify() method\n    uses Microsoft-specific XML DML.\n    This is not part of the XQuery standard.\n\n    For more information, see\n    “Silent XQuery failures” by Denis Ruckebusch\n    http://blogs.msdn.com/denisruc/archive/\n        2007/04/19/silent-xquery-failures.aspx\n\n    For general information, see\n    “Introduction to XQuery in SQL Server 2005”\n    http://technet.microsoft.com/en-us/library/ms345122.aspx\n*/\n",
    "ItemText": null,
    "CreateDate": "2007-12-22T23:03:00.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-22T23:03:00.0000000",
    "DocumentId": "2076071928",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5648",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005 t-SQL: The Use of the modify() Method for XML Types; insert text; replace value of; XML Data Modification Language (DML)",
    "SortOrdinal": null,
    "ItemChar": "DECLARE @xml xml\n\nSET @xml =\n'\n<Root>\n    <Item1 />\n    <Item2 />\n    <Item3 />\n    <Item4 />\n    <Item5 />\n</Root>\n'\n\nSET\n    @xml.modify\n    ('\n        insert text {\"Hello World\"} as first into (/Root/Item3)[1]\n    ')\n\nSET\n    @xml.modify\n    ('\n        replace value of (/Root/Item3/text())[1] with \"\"\n    ')\n\nSELECT @xml\n\n/*\n    This projection produces the original results:\n\n    <Root>\n      <Item1 />\n      <Item2 />\n      <Item3 />\n      <Item4 />\n      <Item5 />\n    </Root>\n\n    Note that the modify() method\n    uses Microsoft-specific XML DML.\n    This is not part of the XQuery standard.\n\n    For more information, see\n    “Silent XQuery failures” by Denis Ruckebusch\n    http://blogs.msdn.com/denisruc/archive/\n        2007/04/19/silent-xquery-failures.aspx\n\n    For general information, see\n    “Introduction to XQuery in SQL Server 2005”\n    http://technet.microsoft.com/en-us/library/ms345122.aspx\n*/\n",
    "ItemText": null,
    "CreateDate": "2007-12-22T22:58:02.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-22T22:58:02.0000000",
    "DocumentId": "2076071929",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5649",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Installing VMware Tools from the Command Line with the Tar Installer”; http://www.vmware.com/support/ws55/doc/ws_newguest_tools_linux.html#wp1127177",
    "SortOrdinal": null,
    "ItemChar": "Installing VMware Tools from the Command Line with the Tar Installer\n\nThe first steps are performed on the host, within Workstation menus:\n\n1. Power on the virtual machine.\n\n2. After the guest operating system has started, prepare your virtual machine to install VMware Tools.\n\nChoose VM > Install VMware Tools.\n\nThe remaining steps take place inside the virtual machine.\n\n3. As root (su -), mount the VMware Tools virtual CD-ROM image, change to a working directory (for example, /tmp), uncompress the installer, then unmount the CD-ROM image.\n\nNote: Some Linux distributions automatically mount CD-ROMs. If your distribution uses automounting, do not use the mount and umount commands below. You still must untar the VMware Tools installer to /tmp.\n\nSome Linux distributions use different device names or organize the /dev directory differently. If your CD-ROM drive is not /dev/cdrom or if the mount point for a CD-ROM is not /mnt/cdrom, you must modify the following commands to reflect the conventions used by your distribution.\n\nmount /dev/cdrom /mnt/cdrom\n\ncd /tmp\n\nNote: If you have a previous installation, delete the previous vmware-distrib directory before installing. The default location of this directory is\n/tmp/vmware-tools-distrib.\n\n4. Untar the VMware Tools tar file:\n\ntar zxpf /mnt/cdrom/VMwareTools-5.0.0-<xxxx>.tar.gz\n\numount /dev/cdrom\n\nWhere <xxxx> is the build/revision number of the VMware Workstation release.\n\nNote: If you attempt to install a tar installation over an rpm installation — or the reverse — the installer detects the previous installation and must convert the installer database format before continuing.\n\n5. Run the VMware Tools tar installer:\n\ncd vmware-tools-distrib\n\n./vmware-install.pl\n\nRespond to the configuration questions on the screen. Press Enter to accept the default value.\n\n6. Log off of the root account.\n\nexit\n\n7. Start X and your graphical environment.\n\n8. In an X terminal, launch the VMware Tools background application.\n\nvmware-toolbox &\n\nNote: You may run VMware Tools as root or as a normal user. To shrink virtual disks, you must run VMware Tools as root (su -). ",
    "ItemText": null,
    "CreateDate": "2007-12-28T10:35:53.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-28T10:35:53.0000000",
    "DocumentId": "2076071930",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5650",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "openSUSE Package Repositories; http://en.opensuse.org/Package_Repositories",
    "SortOrdinal": null,
    "ItemChar": "Oss\n\nThe main repository, open source software only.\n\nVersion: 10.3\n    http://download.opensuse.org/distribution/10.3/repo/oss/\n\nVersion: 10.2\n    http://download.opensuse.org/distribution/10.2/repo/oss/\n\nVersion: 10.1\n    http://download.opensuse.org/distribution/SL-10.1/inst-source/\n\nVersion: 10.0\n    http://download.opensuse.org/distribution/SL-10.0-OSS/inst-source/",
    "ItemText": null,
    "CreateDate": "2007-12-28T10:38:32.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-28T10:38:32.0000000",
    "DocumentId": "2076071931",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5651",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“How to Use Log4J within eclipse in 10 Minutes”; http://snippets.dzone.com/posts/show/3248",
    "SortOrdinal": null,
    "ItemChar": "1) Download log4j http://logging.apache.org/site/binindex.cgi\n\n2) Unpack the .zip file in your Java folder (In Windows it is usually C:\\Program Files\\Java\\)\n\n3) In Eclipse: Window > Preferences… > Java > Build Path > User Libraries > New: \"log4j\" > OK\nAdd JARs… > navigate to find your log4j .jar you just unpacked in the Java Folder > OK \n\n4) Right click on your project in the Package Explorer > New > Folder\nIn “Folder name” write \"log4j\", click Advanced. Select “Link to a folder in the file system” Create a new folder \"log4j\" in your project folder in the file system.\n\n5) Place this file you are reading right now in in the folder you just created. Name the file as log4j.properties\n\n6) In Eclipse: Run > Run…\nIn the navigation bar on the left select either the server, or the runnable class, or the JUnit test you want to log with log4j\n\nSelect the Classpath tab > User Entries > Advanced… > Add folders > OK\n\nSelect the \"log4j\" folder you created in your project and click OK\n\n7) Repeat step 6 for other servers, runnable classes or JUnit tests you want to log\n\n8) Change in the following line the \"org.example.foo.bar\" with whatever you want:\n\n    log4j.category.org.example.foo.bar=DEBUG\n\n9) Add the following import to the Java Class you want to log: import org.apache.log4j.Logger;\n\n10) Add this lines to the Java Class you want to log:\n\n    /**\n    * Log4j logger\n    */\n    static Logger log4j = Logger.getLogger(\"org.example.foo.bar\");\n\n11) Substitute in the code above \"org.example.foo.bar\" with whatever your wrote in the step 8.\n\n12) Add something like the following code in your Class whenever you want to log:\n\n    log4j.debug(\"WTF?\");\n\n13) Repeat steps 9, 10, 11 and 12 for every Java Class you want to log\n\n14) Enjoy!",
    "ItemText": null,
    "CreateDate": "2007-12-28T10:52:08.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-28T10:52:08.0000000",
    "DocumentId": "2076071932",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5652",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Wrong Icons After Installing Internet Explorer 7”; http://www.neowin.net/forum/index.php?showtopic=480531",
    "SortOrdinal": null,
    "ItemChar": "[from exmsft:]\n\nI contacted Microsoft Support, and after working my way up the escallation tree, I got to a tech with some knowledge.\n\nApparently this problem is related to the Shell Icon size. If you are using large icons in your shell and install IE 7, this problem appears.\n\nYou can test this by changing your shell icon size by right clicking on the desktop (in a blank area of course), select the Appearance Tab, click the Effects… button, and uncheck Use Large Icons. Then go to the CD drive in Windows Explorer and observe that the bug goes away.\n\nThe use large icons sets a registry setting to 48.\n\nYou can use regedit to set that eky and one (1) other key to 47 so that you have large icons and no bug when viewing your CD drive in Windows Explorer.\n\nSet the following two (2) registry keys to 47.\n\n    HKEY_CURRENT_USER\\Control Panel\\Desktop\\WindowMetrics\\Shell Icon BPP\n\n    HKEY_CURRENT_USER\\Control Panel\\Desktop\\WindowMetrics\\Shell Icon Size\n\nHappy Computing!\n",
    "ItemText": null,
    "CreateDate": "2007-12-28T10:59:22.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-28T10:59:22.0000000",
    "DocumentId": "2076071933",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5653",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WordPress PHP: “WordPress Restore with phpMyAdmin”; http://www.tamba2.org.uk/wordpress/restore/",
    "SortOrdinal": null,
    "ItemChar": "“If after moving everything you get a blank page when looking at your blog, check your themes. A faulty theme file will cause this blank page.”\n",
    "ItemText": null,
    "CreateDate": "2007-12-28T11:00:39.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-28T11:00:39.0000000",
    "DocumentId": "2076071934",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5654",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2000: DTS; “Package Ownership Issues”; http://www.sqldts.com/212.aspx",
    "SortOrdinal": null,
    "ItemChar": "“spDTSChangeOwner, available on the downloads page, is a convenient wrapper around sp_reassign_dtspackageowner. It accepts two parameters @old_owner and @new_owner, which should be self explanatory.”\n\nAs of this writing, download the script here:\n\n    http://www.sqldts.com/redir.aspx?1212\n\nSample usage:\n\n    EXEC dbo.spDTSChangeOwner 'Fred', 'John'\n\n    EXEC dbo.spDTSChangeOwner \n        @old_owner='MyDomain\\OldUser', \n        @new_owner='MyDomain\\OldUser'\n",
    "ItemText": null,
    "CreateDate": "2007-12-28T11:28:48.0000000",
    "EndDate": null,
    "ModificationDate": "2007-12-28T11:28:48.0000000",
    "DocumentId": "2076071935",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5655",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "bash Script: a rough draft that splits a monthly Apache web log into days with zgrep",
    "SortOrdinal": null,
    "ItemChar": "#!/bin/bash\n\nfile=$2\nmonth=$1\nyear=`date +%Y`\n\necho \"Searching $file for days in $month...\"\n\nfor day in {1..31}\ndo\n    query=$(printf \"\\[%02d/%s/%s\" $day $month $year)\n    outfile=$(printf \"out_%s_%s_%02d.gz\" $year $month $day)\n    count=$(zgrep -c \"$query\" \"$file\")\n    if [ $count -gt 0 ]\n    then\n        printf \"Found %d entries for %s/%02d/%s...\\n\" $count $month $day $year\n        zgrep \"$query\" \"$file\" | gzip >> \"$outfile\"\n    fi\ndone\n\nexit 0\n",
    "ItemText": null,
    "CreateDate": "2008-01-02T11:59:34.0000000",
    "EndDate": null,
    "ModificationDate": "2008-01-02T11:59:34.0000000",
    "DocumentId": "2076071936",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5656",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Adobe ActionScript 3.0 code block: get/set Template; Object Properties",
    "SortOrdinal": null,
    "ItemChar": "The get/set form looks like this:\n\n    public function get prop():[type]\n    {\n        return this._prop;\n    }\n\n    public function set prop( value:[type] ):void\n    {\n        this._prop = value;\n    }\n\nA more compact spacing:\n\n    public function get prop():[type] { return this._prop; }\n\n    public function set prop( value:[type] ):void { this._prop = value; }\n",
    "ItemText": null,
    "CreateDate": "2008-01-14T17:59:56.0000000",
    "EndDate": null,
    "ModificationDate": "2008-01-14T17:59:56.0000000",
    "DocumentId": "2076071937",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5657",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005 t-SQL: The Use of the nodes() Method for SQL Types; Converting XML Data into SQL Types",
    "SortOrdinal": null,
    "ItemChar": "DECLARE @xml xml\n\nSET @xml = '\n    <Root>\n        <Item>one</Item>\n        <Item>two</Item>\n        <Item>three</Item>\n        <Item>four</Item>\n        <Item>five</Item>\n    </Root>\n'\n\nSELECT\n    Temp.Items.value('.','varchar(16)') AS [Items]\nFROM\n    @xml.nodes('//Item') AS Temp(Items)\n\n/*\n    For general information, see\n    “Introduction to XQuery in SQL Server 2005”\n    http://technet.microsoft.com/en-us/library/ms345122.aspx\n*/\n",
    "ItemText": null,
    "CreateDate": "2008-01-15T17:38:06.0000000",
    "EndDate": null,
    "ModificationDate": "2008-01-15T17:38:06.0000000",
    "DocumentId": "2076071938",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5658",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Team Foundation Source Control Command-Line Notes",
    "SortOrdinal": null,
    "ItemChar": "The general reference is here:\n\n    http://msdn2.microsoft.com/en-us/library/cc31bk2e(vs.80).aspx\n\nThe practice here is to use tf.exe from version 9.0 of Visual Studio here:\n\n    \"%ProgramFiles%\\Microsoft Visual Studio 9.0\\Common7\\IDE\\tf.exe\"\n\ntf.exe is used against a ‘disconnected’ copy of Visual Studio project files to define a Workspace that is separate from my ‘real’ Visual Studio code. This was done because any Team Foundation GUI fun running in Visual Studio is annoying to me!\n\nThe files in the Workspace should be read-only because of the checkin command in the procedure below:\n\ni) Check out the files with a command like this:\n\n    tf checkout /recursive /login:your\\login codeplex_yourfolder/*.*\n\nii) Copy the changes from your ‘real’ code into the Workspace folder(s). You might want to use the XCOPY command in a script.\n\niii) Verify any changes with this command:\n\n    tf status /recursive /login:your\\login codeplex_yourfolder/*.*\n\niv) Check in your changes with a command like this:\n\n    tf checkin /comment:\"My comment...\"\n        /recursive /login:your\\login codeplex_yourfolder/*.*\n\nIn this example, all commands were run from the parent folder of \\codeplex_yourfolder.\n",
    "ItemText": null,
    "CreateDate": "2008-06-02T14:57:37.0000000",
    "EndDate": null,
    "ModificationDate": "2008-06-02T14:57:37.0000000",
    "DocumentId": "2076071939",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5659",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "XAMPP Installation Notes",
    "SortOrdinal": null,
    "ItemChar": "The relevant documentation is here:\n\n    http://www.apachefriends.org/en/xampp-linux.html\n\nStop any previous running version of XAMPP with this:\n\n    sudo /opt/lampp/lampp stop\n\nIt may be a best practice to uninstall any previous version of XAMPP for a “clean install” with this:\n\n    sudo rm -rf /opt/lampp\n\nInstall the new version from the archive with this:\n\n    sudo tar xvfz xampp-linux-1.6.6.tar.gz -C /opt\n\nStart the new version of XAMPP and set the security with this:\n\n    sudo /opt/lampp/lampp start\n\n    sudo /opt/lampp/lampp security\n\nThe practice here is to stop the FTP server (after setting a password) with this:\n\n    sudo /opt/lampp/lampp stopftp\n\nThe basics are now in place. From here MySQL databases are generated in loaded. And a script is run to generate symbolic links from /opt/lampp/htdocs to my local development web sites in my home directory (because XAMPP configures Apache to follow symbolic links by default).\n",
    "ItemText": null,
    "CreateDate": "2008-02-21T14:41:05.0000000",
    "EndDate": null,
    "ModificationDate": "2008-02-21T14:41:05.0000000",
    "DocumentId": "2076071940",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5660",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "bash script: a script that generates symbolic links based on subdirectory names in a target folder",
    "SortOrdinal": null,
    "ItemChar": "#!/bin/bash\n\necho \"Removing any existing symbolic links...\"\nrm /opt/lampp/htdocs/dev_*\n\nfor folder in `find ~/webRoot/ -name 'dev_*' -type d`\ndo\n    echo \"Linking to $folder...\"\n    ln -s $folder /opt/lampp/htdocs/`basename $folder`\ndone\n\nexit 0\n",
    "ItemText": null,
    "CreateDate": "2008-02-21T14:46:10.0000000",
    "EndDate": null,
    "ModificationDate": "2008-02-21T14:46:10.0000000",
    "DocumentId": "2076071941",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5661",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Money 2006 Standard: “You cannot change the credit limit or the interest rate for a credit card account in the Standard editions of Microsoft Money”",
    "SortOrdinal": null,
    "ItemChar": "From a MSKB article here:\n\n    http://support.microsoft.com/kb/914968\n\n1. Start Money.\n\n2. On the Banking tab, click Account List.\n\n3. In the Account list, right-click the credit card account that you want to use, and then click See Account Settings.\n\n4. In the Account type list, click Bank.\n\n5. In the Balance Information section, type the credit card limit as a negative number. For example, if the limit for the credit card is $1,000.00, type -1000.\n\n6. In the Account type list, click Credit Card.\n\n7. In the Change account settings dialog box, click Done.\n",
    "ItemText": null,
    "CreateDate": "2008-03-11T17:13:54.0000000",
    "EndDate": null,
    "ModificationDate": "2008-03-11T17:13:54.0000000",
    "DocumentId": "2076071942",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5662",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Zend Framework Upgrade of SonghaySystem.com: Mapping the old URIs with the new",
    "SortOrdinal": null,
    "ItemChar": "document.php?docCode=privacy => document/code/privacy\n\ndocument.php?doc=56 => document/number/56\n\ndocument.php?kbCode=acc2 => kb/subject/acc2\n\ndocument.php?kbDoc=acc97_-253764156 => kb/number/-253764156/subject/acc97\n\ndocument.php?search => document/search\n\nmail.php?referrer => mail/sent\n\nrss.php?cmd=listHome => rss\n\nrss.php?cmd=listSubjects&code=java => rss/kb/subject/java\n",
    "ItemText": null,
    "CreateDate": "2008-03-11T17:55:50.0000000",
    "EndDate": null,
    "ModificationDate": "2008-03-11T17:55:50.0000000",
    "DocumentId": "2076071943",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5663",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Zend Framework Upgrade of SonghaySystem.com: the “legacy” .htaccess file",
    "SortOrdinal": null,
    "ItemChar": "# Disallow file browsing:\n#Options -Indexes\n\n# Custom errors:\n#ErrorDocument 401 /ex.php?status=401\n#ErrorDocument 403 /ex.php?status=403\n#ErrorDocument 404 /ex.php?status=404\n#ErrorDocument 500 /ex.php?status=500\n\n\nRewriteEngine on\n\n# Production server rewrites:\n#RewriteCond %{SERVER_NAME} songhaysystem.com\n#RewriteRule ^public_tools/js/rootData\\.js$ /js/routines/DataValidation\\.js [redirect,last]\n#RewriteCond %{SERVER_NAME} songhaysystem.com\n#RewriteRule ^public_tools/js/rootSniffer\\.js$ /js/routines/Sniffer.js [redirect,last]\n#RewriteCond %{SERVER_NAME} songhaysystem.com\n#RewriteRule ^public_tools/rss/news_feeds\\.opml /samples/OPML/sage\\.opml [redirect,last]\n#RewriteCond %{SERVER_NAME} songhaysystem.com\n#RewriteRule ^public_tools/(CSS|CrystDDF|DOM) /samples/$1 [redirect,last]\n\n# Development server rewrites (for testing):\n#RewriteCond %{SERVER_NAME} songhay7lxv\n#RewriteRule ^public_tools/js/rootData\\.js$ /dev_SonghaySystem/js/routines/DataValidation\\.js [redirect,last]\n#RewriteCond %{SERVER_NAME} songhay7lxv\n#RewriteRule ^public_tools/js/rootSniffer\\.js$ /dev_SonghaySystem/js/routines/Sniffer.js [redirect,last]\n#RewriteCond %{SERVER_NAME} songhay7lxv\n#RewriteRule ^public_tools/rss/news_feeds\\.opml /dev_SonghaySystem/samples/OPML/sage\\.opml [redirect,last]\n#RewriteCond %{SERVER_NAME} songhay7lxv\n#RewriteRule ^public_tools/(CSS|CrystDDF|DOM) /dev_SonghaySystem/samples/$1 [redirect,last]\n",
    "ItemText": null,
    "CreateDate": "2008-03-12T14:04:00.0000000",
    "EndDate": null,
    "ModificationDate": "2008-03-12T14:04:00.0000000",
    "DocumentId": "2076071944",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5664",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "iTunes 7.x: iTunes Ignores ID3 version 1.x Tag Information and Embedded Images in MP3 files",
    "SortOrdinal": null,
    "ItemChar": "iTunes ignores ID3 version 1.x tag information and embedded images in MP3 files. For those of us who wrote 1.x tags first and then used 2.x tags for “long string” support, we must use a tool like MP3 Tag Tools (on Windows) to copy 1.x tags to the 2.x fields (use the F6 key in MP3 Tag Tools).\n\nAlbum cover art is another problem with iTunes. According to onetipaday.com, “The problem is though, iTunes doesn’t add the artwork to the actual ID3 tag within the file that is read when other applications play your mp3s, so the artwork is only visible to iTunes.” For more information, see:\n\n    http://www.onetipaday.com/2006/12/31/\n        how-to-add-itunes-artwork-to-mp3-id3-tags-using-itunes/\n\nSee also “ iTunes: Working with ID3 Tags” here:\n\n    http://docs.info.apple.com/article.html?artnum=88186\n",
    "ItemText": null,
    "CreateDate": "2008-03-19T15:46:54.0000000",
    "EndDate": null,
    "ModificationDate": "2008-03-19T15:46:54.0000000",
    "DocumentId": "2076071945",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5665",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "php5-cli: running PHP from the command line",
    "SortOrdinal": null,
    "ItemChar": "This is the command:\n\n    sudo apt-get install php5-cli\n\nTest the installation by running this:\n\n    php -v\n\nFor more information, read the man page:\n\n    man php\n\nOr you can see this:\n\n    http://man.linuxquestions.org/index.php?\n        section=0&type=2&print=1&query=php&sourceid=mozilla-search\n",
    "ItemText": null,
    "CreateDate": "2008-03-19T22:24:55.0000000",
    "EndDate": null,
    "ModificationDate": "2008-03-19T22:24:55.0000000",
    "DocumentId": "2076071946",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5666",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2003: How to enable and to configure Remote Desktop for Administration",
    "SortOrdinal": null,
    "ItemChar": "From MSKB article “How to enable and to configure Remote Desktop for Administration in Windows Server 2003” here:\n\n    http://support.microsoft.com/kb/814590\n\n“You do not have to have a Terminal Server Client Access License to use Remote Desktop for Administration. However, only members of the Administrators group can gain access to the server.”\n\n“Enable Remote Desktop for Administration”\n\n“By default, Remote Desktop for Administration is disabled. To enable it, follow these steps:”\n\n“1. Click Start, click Control Panel, and then click System.”\n“2. Click the Remote tab, click to select the Allow users to connect remotely to your computer check box, and then click OK.”\n\n“Note You do not have to have a Terminal Server Client Access License for Remote Desktop for Administration. A maximum of two concurrent connections are automatically permitted on a terminal server with Remote Desktop for Administration enabled.”\n",
    "ItemText": null,
    "CreateDate": "2008-03-20T18:11:40.0000000",
    "EndDate": null,
    "ModificationDate": "2008-03-20T18:11:40.0000000",
    "DocumentId": "2076071947",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5667",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "M. E. Chevreul; The Principles of Harmony and Contrast of Colors and Their Applications to the Arts; Glossary; p. 47",
    "SortOrdinal": null,
    "ItemChar": "Chevreul’s Terminology\n\nAccidental Colors—this term refers to afterimages and to color sensations experienced subjectively.\n\nBinary Colors—colors compounded or made up of two primaries, or groups of two colors.\n\nBroken Colors—pure colors mixed with black.\n\nBroken Tones—pure colors mixed with white.\n\nComplementary Colors—red-green, yellow-violet, orange-blue.\n\nCompound Colors—colors compounded of primaries.\n\nContiguous—side by side, in close proximity.\n\nHeight, Height of Tone—the lightness or darkness of colors. Yellow and pink are colors of high tone, while violet and olive are colors of low tone.\n\nIntensity—a term commonly used by Chevreul in a rather loose way to indicate purity or brightness in color.\n\nLuminous Colors—red, orange, yellow, bright green.\n\nMixed Contrast—the influence of afterimages on other colors. Also the visual mixture or diffusion of colors on the retina of the eye.\n\nPrimary Colors—red, yellow, blue.\n\nScales—variations or sequences of chromatic colors (hue scales) or sequence of a color toward white or black (tone scales).\n\nSecondary Colors—orange, green, violet.\n\nShades—colors mixed with black.\n\nSimultaneous Contrast—the visual influence of colors in close proximity to one another when viewed at the same time.\n\nSomber Colors—blue and violet.\n\nSuccessive Contrast—the visual influence of colors on each other when viewed separately after short periods of time.\n\nTernary—groups of three colors.\n\nTertiary Colors—grayed colors, such as russet, citrine, olive, (Usually, the colors that result from mixtures of secondaries, orange, green violet.)\n\nTints—colors mixed with white.\n\nTones—one of the most broadly used terms of Chevreul to indicate variations and graduations that result from the dilution of a pure color with white or black.\n",
    "ItemText": null,
    "CreateDate": "2008-03-20T21:12:28.0000000",
    "EndDate": null,
    "ModificationDate": "2008-03-20T21:12:28.0000000",
    "DocumentId": "2076071948",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5668",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "M. E. Chevreul; The Principles of Harmony and Contrast of Colors and Their Applications to the Arts; M. E. Chevreul—His Influence;p. 35",
    "SortOrdinal": null,
    "ItemChar": "Impressionism\n\nAmong the books on color theory, Chevreul’s classic stood virtually alone until the age of Neo-Impressionism when writers like Helmhotz, Blanc, Rood, Sutter, and Henry undertook complex and elaborate dissertations. These newer theorists, however, did not publish until 1867 and after, when Chevreul was in his eighties. Thus Chevreul’s masterpiece was the one and only important text and gospel on color during the Impressionist period.\n",
    "ItemText": null,
    "CreateDate": "2008-03-20T21:28:42.0000000",
    "EndDate": null,
    "ModificationDate": "2008-03-20T21:28:42.0000000",
    "DocumentId": "2076071949",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5669",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "LINQ to XML: Generating XML with a Custom Namespace; System.Xml.Linq",
    "SortOrdinal": null,
    "ItemChar": "//Dependencies:\n//using System; using System.Xml.Linq;\n\n//Let the compiler infer an XNamespace:\nXNamespace customNamespace = \"urn:foo\";\n\n//Infer a custom namespace with prefix (with + operator overloading):\nXName customAttributeName = XNamespace.Xmlns + \"rx\";\n\n//Generate an XAttribute from the above:\nXAttribute customAttribute =\n    new XAttribute( customAttributeName, customNamespace.NamespaceName );\n\n//Generate a custom element in our namespace (with + operator overloading):\nXElement custom = new XElement( customNamespace + \"custom\", \"Hello world\" );\n\n//Generate an XML document with the namespace declared at document-level:\nXElement document =\n    new XElement( \"root\", new Object[] { customAttribute, custom } );\n\nConsole.WriteLine( document.ToString() );\n\n/*\n    For more information see\n\n    “How to: Create a Document with Namespaces (LINQ to XML) (C#)”\n    http://msdn2.microsoft.com/en-us/library/bb387075(printer).aspx\n\n    and\n\n    “Atomized XName and XNamespace Objects”\n    http://blogs.msdn.com/ericwhite/pages/\n        atomized-xname-and-xnamespace-objects.aspx\n\n    Note: “To enable atomization of XName objects,\n    the constructor is not public, so you are not able\n    to directly instantiate an XName object.”\n*/",
    "ItemText": null,
    "CreateDate": "2008-03-22T20:58:42.0000000",
    "EndDate": null,
    "ModificationDate": "2008-03-22T20:58:42.0000000",
    "DocumentId": "2076071950",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5670",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "LINQ to XML: Two Ways of Generating the xml:space Attribute",
    "SortOrdinal": null,
    "ItemChar": "This is our “spacey” string:\n\n    String s = @\"\nThis\n    is\n        a\n            spacey\n                string...\n\";\n\nThe first method is to “brutally” use the XElement.Parse() method:\n\n    XElement spacey = XElement.Parse(\n        String.Format(\"<spacey xml:space=\\\"preserve\\\">{0}</spacey>\", s) );\n\nThe second (preferred) method builds with .NET 3.5 types in System.Xml.Linq:\n\n    XName xmlAttributeName = XNamespace.Xml + \"space\";\n    XAttribute xmlAttribute = new XAttribute( xmlAttributeName, \"preserve\" );\n\n    XElement spacey =\n        new XElement( \"spacey\", new Object[] { xmlAttribute, s } );\n\n    XElement document = new XElement( \"root\", spacey );\n\n    Console.WriteLine( document.ToString() );\n",
    "ItemText": null,
    "CreateDate": "2008-03-22T21:00:17.0000000",
    "EndDate": null,
    "ModificationDate": "2008-03-22T21:00:17.0000000",
    "DocumentId": "2076071951",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5671",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "LINQ to XML: Using System.Linq.Enumerable to Generate XML; Code from Mike Taulty, Microsoft UK",
    "SortOrdinal": null,
    "ItemChar": "/*\nusing System;\nusing System.Linq;\nusing System.Xml.Linq;\n*/\n\nvar numbers =\n\n    from n in Enumerable.Range( 1, 20 )\n\n    let attributes =\n        new Object[]{\n            new XAttribute( \"value\", n ),\n            new XAttribute( \"squared\", n * n ) }\n\n    select new XElement( \"number\", attributes );\n\nXElement document = new XElement( \"numbers\", numbers );\n\nConsole.WriteLine( document.ToString() );\n\n/*\n\n    This code is derived from Mike Taulty (Microsoft UK Ltd.) here:\n    http://mtaulty.com/downloads/MTLaunchLINQXML.zip\n\n    For more information, see\n    “LINQ Talk at UK Visual Studio 2008 Launch”\n    http://mtaulty.com/CommunityServer/blogs/mike_taultys_blog/\n        archive/2008/03/20/10255.aspx\n\n*/\n",
    "ItemText": null,
    "CreateDate": "2008-03-22T20:09:19.0000000",
    "EndDate": null,
    "ModificationDate": "2008-03-22T20:09:19.0000000",
    "DocumentId": "2076071952",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5672",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "LINQ to XML: The Equivalent of XPath Assertions; Basic Validation without XSD (schema)",
    "SortOrdinal": null,
    "ItemChar": "/*\nusing System;\nusing System.Linq;\nusing System.Xml.Linq;\n*/\n\nstring xml = @\"\n<root>\n<one>this one</one>\n<two>this two</two>\n<three>\nthis one <three_5>and a half</three_5>\n</three>\n</root>\n\";\n\nXDocument document = XDocument.Parse( xml );\n\nvar assertions = from n in document.Descendants( \"root\" )\n\n    select new\n    {\n        HasOne = n.Element( \"one\" ),\n        HasTwo = n.Element( \"two\" ),\n        HasThree = n.Element( \"three\" ),\n        HasTen = n.Element( \"ten\" )\n    };\n\n//Verify that there is one root element:\nif ( assertions.Count() == 1 )\n{\n    var test = assertions.First();\n\n    Console.WriteLine( test.HasOne != null );\n    Console.WriteLine( test.HasTwo != null );\n\n    //Search for nested element:\n    if ( test.HasThree != null )\n    {\n        Console.WriteLine( test.HasThree.Element( \"three_5\" ) != null );\n    }\n\n    Console.WriteLine( test.HasTen != null );\n}\n\n/*\n\nConsole output:\n\nTrue\nTrue\nTrue\nFalse\n\n*/\n",
    "ItemText": null,
    "CreateDate": "2008-03-31T12:11:15.0000000",
    "EndDate": null,
    "ModificationDate": "2008-03-31T12:11:15.0000000",
    "DocumentId": "2076071953",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5673",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "LINQ to Objects: Querying a Generic Dictionary Collection",
    "SortOrdinal": null,
    "ItemChar": "/*\nusing System;\nusing System.Linq;\nusing System.Collections.Generic;\n*/\n\nDictionary<String,Boolean> tests = new Dictionary<string,bool>\n{\n    { \"one\", true },\n    { \"two\", false },\n    { \"three\", true },\n    { \"four\", false },\n    { \"five\", true },\n    { \"six\", true }\n};\n\nvar testData = from t in tests\n\n    where t.Value == false\n\n    select t;\n\nforeach ( var item in testData )\n{\n    Console.WriteLine( item.Key );\n}\n\n/*\n    Output:\n\n        two\n        four\n*/\n",
    "ItemText": null,
    "CreateDate": "2008-04-04T20:02:18.0000000",
    "EndDate": null,
    "ModificationDate": "2008-04-04T20:02:18.0000000",
    "DocumentId": "2076071954",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5674",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "XPathDocument.XPathNavigator Throws NotSupportedException for AppendChild() and AppendchildElement() Methods",
    "SortOrdinal": null,
    "ItemChar": "XPathDocument.XPathNavigator throws NotSupportedException for AppendChild() and AppendchildElement() methods. Generating XPathNavigator from XmlDocument behaves as expected:\n\n    string contoso = @\"\n<bookstore>\n<book genre=\"\"autobiography\"\" publicationdate=\"\"1981-03-22\"\" ISBN=\"\"1-861003-11-0\"\">\n    <title>The Autobiography of Benjamin Franklin</title>\n    <author>\n        <first-name>Benjamin</first-name>\n        <last-name>Franklin</last-name>\n    </author>\n    <price>8.99</price>\n</book>\n<book genre=\"\"novel\"\" publicationdate=\"\"1967-11-17\"\" ISBN=\"\"0-201-63361-2\"\">\n    <title>The Confidence Man</title>\n    <author>\n        <first-name>Herman</first-name>\n        <last-name>Melville</last-name>\n    </author>\n    <price>11.99</price>\n</book>\n<book genre=\"\"philosophy\"\" publicationdate=\"\"1991-02-15\"\" ISBN=\"\"1-861001-57-6\"\">\n    <title>The Gorgias</title>\n    <author>\n        <name>Plato</name>\n    </author>\n    <price>9.99</price>\n</book>\n</bookstore>\n\" ;\n    XmlDocument document = new XmlDocument();\n    document.LoadXml( contoso );\n    XPathNavigator navigator = document.CreateNavigator();\n\n    navigator.MoveToChild( \"bookstore\", \"\" );\n    navigator.MoveToChild( \"book\", \"\" );\n\n    navigator.AppendChildElement( \"\", \"pages\", \"\", \"100\" );\n\n    Console.WriteLine( navigator.OuterXml );\n\nHowever, the following (with XPathDocument) does not work:\n\n    XPathDocument document =\n        new XPathDocument( new StringReader( contoso ) );\n    XPathNavigator navigator = document.CreateNavigator();\n\n    navigator.MoveToChild( \"bookstore\", \"\" );\n    navigator.MoveToChild( \"book\", \"\" );\n\n    navigator.AppendChildElement( \"\", \"pages\", \"\", \"100\" );\n    //NotSupportedException thrown here! \n\n    Console.WriteLine( navigator.OuterXml );\n\nTo be generous, one can argue that this behavior is “by design” because the XPathdocument is designed to be read only.\n\nThe examples here are derived from the Microsoft documentation:\n\n    http://msdn.microsoft.com/en-us/library/\n        system.xml.xpath.xpathnavigator.appendchildelement.aspx\n\n",
    "ItemText": null,
    "CreateDate": "2008-05-02T09:45:15.0000000",
    "EndDate": null,
    "ModificationDate": "2008-05-02T09:45:15.0000000",
    "DocumentId": "2076071955",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5675",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: Using System.IO.FileStream and System.IO.StreamWriter to Write a String to a File",
    "SortOrdinal": null,
    "ItemChar": "/*\nusing System.IO;\n*/\n\nusing ( FileStream fs = new FileStream( @\"C:\\File.txt\", FileMode.Create ) )\n{\n    using ( StreamWriter sw = new StreamWriter( fs ) )\n    {\n        sw.Write( \"My text.\" );\n    }\n}\n",
    "ItemText": null,
    "CreateDate": "2008-05-02T09:43:40.0000000",
    "EndDate": null,
    "ModificationDate": "2008-05-02T09:43:40.0000000",
    "DocumentId": "2076071956",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5676",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft SQL Server 2005/2000 Compatibility Problem: SQL 2005 CREATE TABLE Syntax Fails in SQL 2000",
    "SortOrdinal": null,
    "ItemChar": "One glaring difference in the CREATE TABLE syntax between SQL 2000 and 2005 is this 2005 clause:\n\n    WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]\n\nThe only WITH clause support in SQL Server 2000 is WITH FILLFACTOR.",
    "ItemText": null,
    "CreateDate": "2008-05-12T13:19:56.0000000",
    "EndDate": null,
    "ModificationDate": "2008-05-12T13:19:56.0000000",
    "DocumentId": "2076071957",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5677",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Jacob H. Carruthers, MDW NTR: Divine Speech; Chapter 1: Modern African Thinking about African Thought; A constructive critique of George G.M. James, his Stolen Legacy; p.20",
    "SortOrdinal": null,
    "ItemChar": "James also demonstrated that the basic ideas of Socrates, Plato and Aristotle came from the Kemetic deep well. Ideas such as the “demiurge,” the “unmoved mover” and the “immortality of the soul” are obviously Kemetic and unlike Greek traditional thought, James continued. The arguments James put forth in this regard are so compelling that when Diop and Obenga turned to the sources of Kemetic thought, they reached the same conclusions evidently without the benefit of James’ work (For a short discussion of James’ ideas see my “In Defense of Civilization” in the Kemetic Voice).\n\nJames’ work does, however, raise a few interrelated problems which characterize much of the discussion by the most recent defenders of African Deep Thought. First, he does not make a clear distinction between the deep thought of Kemet and Greek philosophy. Second, he implies that the whole of Greek philosophy was stolen, without convincingly demonstrating the basis of some of the connections he claims. Third, he does not make a distinction between classical Kemetic thought and the later Hermetic corpus which was in part a reaction to foreign intellectual doctrines and in many respects quite different from classical Kemetic thought.\n\nOne result of these tendencies is the assumption that because Greeks got the ideas about fire, earth, water and air from their studies in Kemet, that therefore the Kemites established a concept of four basic elements…\n\nSuch a reading is even more problematic with concepts like the “Highest Good” and the “Law of Opposites.” These ideas are very Greek but they cannot be explicitly found in the Kemetic texts (at least not in the ones cited), nor in my opinion are they implicit. (I have searched for such statements to no avail.) These concepts may be inferred from the Kemetic teachings, but they were probably incorrect inferences due more to the persistence of the Greek traditional worldview than to any valid African foundations.\n",
    "ItemText": null,
    "CreateDate": "2008-06-02T19:35:24.0000000",
    "EndDate": null,
    "ModificationDate": "2008-06-02T19:35:24.0000000",
    "DocumentId": "2076071958",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5678",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "vi: Keyboard Shortcuts; keyxl.com",
    "SortOrdinal": null,
    "ItemChar": "From http://www.keyxl.com/aaab462/105/VIM-Text-Editor-keyboard-shortcuts.htm\n\nInsert:\n\ni\n    Inserts text to the left of the cursor.\n\nI\n    Inserts text at the beginning of the line, no matter where the cursor is positioned on the current line.\n\n\nAppend:\n\na\n    Begins inserting after the character (append) on which the cursor is positioned.\n\nA\n    Begins inserting at the end of the current line, no matter where the cursor is positioned on that line.\n\n\nOpen:\n\no\n    Begins inserting text on a new, empty line that is opened for you, below the current line. This is the only command that will allow you to insert text BELOW the LAST line of the file.\n\nO\n    Begins inserting text on a new, empty line that is opened for you, above the current line. This is the only command that will allow you to insert text ABOVE the FIRST line of the file.\n\n\nDeleting,copying and changing:\n\nd\n    Delete text. (see explanation above)\n\ny\n    Copy text (that is, yank it into a holding area for later use). (see explanation above)\n\nc\n    Change text from one thing to another, which you will type. (see explanation above)\n\n!\n    Filter text through a program.\n\n<\n    Shift a region of text to the left.\n\n>\n    Shift a region of text to the right.\n\n\nSingle Key Movements:\n\nh\n    Move cursor to the left one character. \n\nl\n    Move cursor to the right one character. \n\nj\n    Move cursor down one line. \n\nk\n    Move cursor up one line. \n\n^\n    Move cursor to the beginning of the line. \n\n$\n    Move cursor to the end of the current line. \n\n1G\n    Move cursor to the first line of your document. Other numbers will move to the line specified by number (ex. 50G goes to the 50th line). \n\nG\n    Move cursor to the last line of your file. \n\nCTRL U\n    Move cursor up in file 12 lines. Hold down the key marked CTRL (stands for control) and type U. CTRL is like another shift key. \n\nCTRL D\n    Move cursor down in file 15 lines. \n\nw\n    Move cursor forward to the next word, stopping at punctuation. \n\nW\n    Move cursor forward to the next word, ignoring punctuation. \n\ne\n    Move cursor forward to the end of the word, stopping at punctuation. \n\nE\n    Move cursor forward to the end of the word, ignores punctuation. \n\nb\n    Move cursor backwards to the previous word, stopping at punctuation. \n\nB\n    Move cursor backwards to the previous word, ignores punctuation. \n\nH\n    Move cursor to the top line of the screen, (as opposed to the top of the document which may not be the same place). \n\nM\n    Move cursor to the middle of the screen. \n\nL\n    Move cursor to the last line on the screen. \n\n%\n    Move cursor to the matching parenthesis, bracket or brace. Great for debugging programs. \n\n(\n    Move cursor to the beginning of the previous sentence (where a punctuation mark and two spaces define a sentence). \n\n)\n    Move cursor to the beginning of the next sentence. \n\n{\n    Move cursor to the beginning of the current paragraph. \n\n}\n    Move cursor to the beginning of the next paragraph. \n\n;\n    Repeat the last f or F command (see below). \n\n\nAlmost Single Key Movements:\n\n'\n    Move cursor to a previously marked location in the file. (ex. ma marks the location with the letter a, so a (apostrophe a) moves back to that location).\n\nf\n    Find the character corresponding to the next keystroke typed. Move the cursor to the next occurrence of that character (on the current line only).\n\nF\n    Same as f but movement is backwards.\n\n\nUseful:\n\nx\n    Delete character(s) to the right of the cursor, starting with the one beneath it. \n\nr\n    Replace the character under the cursor with the next character you type. This can be a very useful command. If you wanted to split up a line between two words, you might put the cursor on the blank space before the word you would like to go on the next line and type r . This would replace the space between the words with a carriage return and put the rest of the line onto a new line.\n\nj\n    Join lines; the opposite of the line splitting operation above. This will join the current line with the next line in your file. Also very useful.\n\nR\n    Replace lines; puts you in INSERT mode but types over the characters that are already on the current line.\n\np\n    Paste line(s) you deleted (or yanked) back into the file. This is an excellent command if you want to move a few lines somewhere else in your file. Just type 3dd to delete three lines, for example, and then move to where you want those lines to be and type p to paste the lines back into your file below the cursor.\n\n.\n    The period . command repeats the last text modification command, whatever it may have been (insert, deletion, etc).\n\n:r filename RETURN\n    Read a file into the current file being edited. The file be added gets placed below the current cursor position. Please note the colon : before the r in this command.\n\nCTRL L\n    Redraw the screen. If somebody writes to you while you are in the middle of vi and junk appears all over your screen, dont panic, it did not hurt your file, but you will have to hold down the CTRL key and type L to clean it up (CTRL L).\n\nd$\n    Delete (including the current character), to the end of the line.\n\nd^\n    Delete (excluding the current character), to the beginning of the line.\n\ndw\n    Delete a word(s), stops at punctuation.\n\ndW\n    Delete a word(s), ignoring punctuation.\n\nde\n    Delete a word(s), ignoring punctuation.\n\ndd\n    Delete a line(s).\n\ndG\n    Delete from the current line to the end of the document. CAREFUL: Slightly dangerous.\n\ndH\n    Delete from the current line to the line shown at the top of the screen.\n\n\nSearch and Replace:\n\n/the\n    Finds the next occurence of the. This will also find their, them, another, etc.\n\n?the\n    Finds the previous occurence of the.\n\nn\n    Repeats the last search command. Finds the Next occurence.\n\nd/the\n    Deletes until the next occurence of the. This is to demonstrate how the delete prefix can be used with any cursor movement command.\n\n:g/oldword/s//newword/gc\n    This will find all occurences of oldword and replace them with newword. The optional c at the end of the command tells vi that you would like to confirm each change. Vi will want you to type in y to make the change or n to skip that replacement. Great for spelling fixes.\n\n\nExit:\n\nESC :wq RETURN\n    Save and exit VI\n\nESC :q! RETURN\n    Exit WITHOUT saving changes\n",
    "ItemText": null,
    "CreateDate": "2008-06-10T15:54:17.0000000",
    "EndDate": null,
    "ModificationDate": "2008-06-10T15:54:17.0000000",
    "DocumentId": "2076071959",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5679",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VMWare Workstation: Keyboard Shortcuts; howtogeek.com",
    "SortOrdinal": null,
    "ItemChar": "Ctrl+B: Power on the Virtual Machine\n\nCtrl+D: Edit the Virtual Machine Settings\n\nCtrl+E: Power off the Virtual Machine\n\nCtrl+G: Grab keyboard input focus\n\nCtrl+N: Create a new Virtual Machine\n\nCtrl+O: Open a Virtual Machine\n\nCtrl+P: Edit User Preferences\n\nCtrl+R: Reset Virtual Machine\n\nCtrl+Z: Suspend the Virtual Machine\n\nCtrl+F4: Close the Virtual Machine\n\nCtrl+Alt: Ungrab Input focus\n\nCtrl+Alt+Enter: Switch to Full Screen Mode\n\nCtrl+Tab: Switch between ungrabbed virtual machines\n\nCtrl+Alt+Tab: Switch between virtual machines\n\nfrom http://www.howtogeek.com/howto/vmware/keyboard-shortcuts-for-vmware-workstation/",
    "ItemText": null,
    "CreateDate": "2008-06-10T15:59:50.0000000",
    "EndDate": null,
    "ModificationDate": "2008-06-10T15:59:50.0000000",
    "DocumentId": "2076071960",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5680",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "bash: “Keyboard Shortcuts for Bash (Command Shell for Ubuntu, Debian, Suse, Redhat, Linux, etc)”; howtogeek.com",
    "SortOrdinal": null,
    "ItemChar": "Ctrl + A: Go to the beginning of the line you are currently typing on\n\nCtrl + E: Go to the end of the line you are currently typing on\n\nCtrl + L: Clears the Screen, similar to the clear command\n\nCtrl + U: Clears the line before the cursor position. If you are at the end of the line, clears the entire line.\n\nCtrl + H: Same as backspace\n\nCtrl + R: Let's you search through previously used commands\n\nCtrl + C: Kill whatever you are running\n\nCtrl + D: Exit the current shell\n\nCtrl + Z: Puts whatever you are running into a suspended background process. fg restores it.\n\nCtrl + W: Delete the word before the cursor\n\nCtrl + K: Clear the line after the cursor\n\nCtrl + T: Swap the last two characters before the cursor\n\nEsc + T: Swap the last two words before the cursor\n\nAlt + F: Move cursor forward one word on the current line\n\nAlt + B: Move cursor backward one word on the current line\n\nTab: Auto-complete files and folder names\n\nfrom http://www.howtogeek.com/howto/ubuntu/keyboard-shortcuts-for-bash-command-shell-for-ubuntu-debian-suse-redhat-linux-etc/",
    "ItemText": null,
    "CreateDate": "2008-06-10T16:04:03.0000000",
    "EndDate": null,
    "ModificationDate": "2008-06-10T16:04:03.0000000",
    "DocumentId": "2076071961",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5681",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu 6.06: sshfs and fuse: an attempt to mount a cygwin drive; howtogeek.com",
    "SortOrdinal": null,
    "ItemChar": "An attempt was made to mount a cygwin drive with sshfs and fuse. It did NOT work. Following the article “How to Mount a Remote Folder using SSH on Ubuntu” here:\n\n    http://www.howtogeek.com/howto/ubuntu/\n        how-to-mount-a-remote-folder-using-ssh-on-ubuntu/\n\nthese steps were taken:\n\n    sudo apt-get install sshfs\n\n    sudo modprobe fuse\n\n    sudo adduser <username> fuse\n\n    sudo chown root:fuse /dev/fuse\n\n    sudo chmod +x /dev/fuse\n\n    mkdir ~/remoteserv\n\nAt this step many sshfs commands were tried. None worked:\n\n    sshfs <username>@<ipaddress>:/remotepath ~/remoteserv\nor\n    sudo sshfs <username>@<ipaddress>:/remotepath ~/remoteserv\nor\n     sshfs <username>@<ipaddress>:/cygdrive/c/remotepath ~/remoteserv -o allow_other -p 22\n\nAll of these attempts produced this error:\n\n    failed to access mountpoint /home/<username>/remoteserv: Permission denied\n\n",
    "ItemText": null,
    "CreateDate": "2008-06-11T19:24:13.0000000",
    "EndDate": null,
    "ModificationDate": "2008-06-11T19:24:13.0000000",
    "DocumentId": "2076071962",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5682",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu 6.06: “How to Tell What Version of Ubuntu You Are Running”; howtogeek.com",
    "SortOrdinal": null,
    "ItemChar": "“Telling what version of Ubuntu you are running is extremely easy. You would commonly use this command to figure out if you are running Edgy after you upgraded from Dapper.”\n\n    cat /etc/issue\n\nFrom:\n\n    http://www.howtogeek.com/howto/ubuntu/\n        how-to-tell-what-version-of-ubuntu-you-are-running/\n\nUbuntu 6.06 is Dapper Drake",
    "ItemText": null,
    "CreateDate": "2008-07-29T22:05:23.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-29T22:05:23.0000000",
    "DocumentId": "2076071963",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5683",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu 6.06: “Add a User on Ubuntu Server”; howtogeek.com",
    "SortOrdinal": null,
    "ItemChar": "“The useradd command will let you add a new user easily from the command line:”\n\n    useradd <username>\n\n“The adduser command is even easier than the useradd command, because it prompts you for each piece of information.”\n\n    adduser <username>\n\nFor more details, see:\n\n    http://www.howtogeek.com/howto/ubuntu/add-a-user-on-ubuntu-server/\n",
    "ItemText": null,
    "CreateDate": "2008-06-11T19:31:09.0000000",
    "EndDate": null,
    "ModificationDate": "2008-06-11T19:31:09.0000000",
    "DocumentId": "2076071964",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5684",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VMware Workstation 5.x: Installing VMware Tools build-91707 with Compilation on Ubuntu 6.06, Kernel 2.6.15-52-386",
    "SortOrdinal": null,
    "ItemChar": "For a first-time compilation, these package commands should be run:\n\n    sudo apt-get install build-essential\n\n    sudo apt-get install linux-headers-`uname -r`\n\nwhere uname -r returns 2.6.15-52-386 (as of this writing) so we can also use:\n\n    sudo apt-get install linux-headers-2.6.15-52-386\n\nThis should install C headers for compilation here:\n\n    /usr/src/linux-headers-2.6.15-52-386\n\nWhen prompted for C headers by vmware-install.pl, use this path:\n\n    /usr/src/linux-headers-2.6.15-52-386/include\n\nFrom VMware Workstation select VM > Install VMware Tools... This should mount a CD-ROM such that these commands work:\n\n    cp /cdrom/*.gz /tmp/\n\n    cd /tmp\n\n    tar xvzf VM*.gz\n\n    cd vmware*\n\n    sudo ./vmware-install.pl\n\nVerify that Ubuntu is unpacking the right kernel after boot by examining this file:\n\n    sudo vim /boot/grub/menu.lst\n\nSet the default entry. The default entry should be the first configuration option in the file.\n",
    "ItemText": null,
    "CreateDate": "2008-06-20T22:57:45.0000000",
    "EndDate": null,
    "ModificationDate": "2008-06-20T22:57:45.0000000",
    "DocumentId": "2076071965",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5685",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "UriBuilder Inserts Multiple Question Marks in Query Strings; C# Cookbook",
    "SortOrdinal": null,
    "ItemChar": "From Jay Hilyard and Stephen Teilhet (C# Cookbook): “Every time you set the Query property, the UriBuilder class appends a ? to the front of the query string information.” This move should solve the problem:\n\n    Uri u = new Uri(\"http://contoso.com/mypage.html?foo=0\");\n\n    string uriString = u.AbsoluteUri.Replace(u.Query, string.Empty);\n    string queryString = u.Query.Contains(\"?\") ?\n        string.Concat(u.Query.Replace(\"?\",string.Empty), \"&\", \"foo=1\") : \"foo=1\";\n\n    UriBuilder builder = new UriBuilder(uriString);\n    builder.Query = queryString;\n\nNow Jay Hilyard and Stephen Teilhet recommends using a .NET 3.5 extension method pattern to permanently fix the problem:\n\n    public class UriBuilderFix : UriBuilder\n    {\n        public UriBuilderFix() : base()\n        {\n        }\n\n        public new string Query\n        {\n            get\n            {\n                return base.Query;\n            }\n            set\n            {\n                if (!string.IsNullOrEmpty(value))\n                {\n                    if (value[0] == '?')\n                        // trim off the leading ? as the underlying \n                        // UriBuilder class will add one to the \n                        // querystring.  Also prepend ; for additional items\n                        base.Query = value.Substring(1);\n                    else\n                        base.Query = value;\n                }\n                else\n                    base.Query = string.Empty;\n            }\n        }\n    }\n",
    "ItemText": null,
    "CreateDate": "2008-06-25T15:55:08.0000000",
    "EndDate": null,
    "ModificationDate": "2008-06-25T15:55:08.0000000",
    "DocumentId": "2076071966",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5686",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "KLV: Jhn 12:8 on Poverty; A Verse in the Bible Used to Justify the Existence of Poverty",
    "SortOrdinal": null,
    "ItemChar": "KLV Jhn 12:8 “For the poor always ye have with you; but me ye have not always.”\n\nThe “you” in the sentence refers to Judas (Jhn 12:4). This is a character this is firmly invested in the material system, Roman rewards. Clearly the poor will be with Judas always.\n",
    "ItemText": null,
    "CreateDate": "2008-07-01T19:27:03.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-01T19:27:03.0000000",
    "DocumentId": "2076071967",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5687",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio 2005/2008: “* Assembly Version vs Assembly File Version”; Vikas Goyal",
    "SortOrdinal": null,
    "ItemChar": "Vikas Goyal distinguishes between Assembly Version and Assembly File Version here:\n\n    http://dotnetwithme.blogspot.com/2007/09/\n        assembly-version-vs-assembly-file.html\n\nThe Assembly File Version is prioritized because, “Providing a (*) in place of absolute number makes compiler increase the number by one every time you build… Use the assembly file version number to communicate the latest release of assembly. In this case, developers will not have to change the references and they can simply overwrite the assembly in reference path.”",
    "ItemText": null,
    "CreateDate": "2008-07-01T19:42:52.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-01T19:42:52.0000000",
    "DocumentId": "2076071968",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5688",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP: A Few “Magical” Constants",
    "SortOrdinal": null,
    "ItemChar": "__LINE__\n    The current line number of the file.\n\n__FILE__\n    The full path and filename of the file. If used inside an include, the name of the included file is returned. Since PHP 4.0.2, __FILE__ always contains an absolute path with symlinks resolved whereas in older versions it contained relative path under some circumstances.\n\n__DIR__\n    The directory of the file. If used inside an include, the directory of the included file is returned. This is equivalent to dirname(__FILE__). This directory name does not have a trailing slash unless it is the root directory. (Added in PHP 5.3.0.)\n\n__FUNCTION__\n    The function name. (Added in PHP 4.3.0) As of PHP 5 this constant returns the function name as it was declared (case-sensitive). In PHP 4 its value is always lowercased.\n\n__CLASS__\n    The class name. (Added in PHP 4.3.0) As of PHP 5 this constant returns the class name as it was declared (case-sensitive). In PHP 4 its value is always lowercased.\n\n__METHOD__\n    The class method name. (Added in PHP 5.0.0) The method name is returned as it was declared (case-sensitive).\n\n__NAMESPACE__\n    The name of the current namespace (case-sensitive). This constant is defined in compile-time (Added in PHP 5.3.0).\n\n[http://www.php.net/manual/en/language.constants.predefined.php]",
    "ItemText": null,
    "CreateDate": "2008-07-01T19:38:54.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-01T19:38:54.0000000",
    "DocumentId": "2076071969",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5689",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio Team System and CodePlex.com: The Destroy Command is Not Available on CodePlex.com",
    "SortOrdinal": null,
    "ItemChar": "The Destroy command is not available on CodePlex.com for all users except Team Foundation Administrators. This is explained here:\n\n    http://msdn.microsoft.com/en-us/library/bb386005.aspx\n\n“Use the tf destroy command to destroy, or permanently delete, version-controlled files from Team Foundation version control. …To use the destroy command, you must belong to the Team Foundation Administrators security group. For more information, see Team Foundation Server Permissions.”\n",
    "ItemText": null,
    "CreateDate": "2008-07-01T19:47:53.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-01T19:47:53.0000000",
    "DocumentId": "2076071970",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5690",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Krzysztof Cwalina: The Definition of “Framework”",
    "SortOrdinal": null,
    "ItemChar": "During his recorded talk, “MSR Technical Education Series: Designing .NET Class Libraries,” Krzysztof Cwalina defined a “framework” as an OOP reusable class library.\n\nThe talk is posted here:\n\n    http://www.researchchannel.org/prog/displayevent.aspx?rID=11087&fID=2740\n",
    "ItemText": null,
    "CreateDate": "2008-07-01T19:54:34.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-01T19:54:34.0000000",
    "DocumentId": "2076071971",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5691",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Netbeans 5.x/6/x: “The default font size used in menus, dialogs, views, etc. is too small. Can I make it bigger?”; NetBeans Start Up Parameter --fontsize",
    "SortOrdinal": null,
    "ItemChar": "From the NetBeans wiki: “You can run NetBeans with the --fontsize <size> option. The default <size> value is 11. You can set it to 12 or even a higher value and see if it works better for you. The --fontsize argument applies to fonts used in menus, dialogs and most components in the IDE.”\n\nFor more details see:\n\n    http://wiki.netbeans.org/FaqFontSize\n",
    "ItemText": null,
    "CreateDate": "2008-07-01T20:01:59.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-01T20:01:59.0000000",
    "DocumentId": "2076071972",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5692",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "NetBeans 5.x/6.x: “What are the NetBeans startup parameters?”",
    "SortOrdinal": null,
    "ItemChar": "-h, --help: Print descriptions of common startup parameters.\n\n--jdkhome jdk_home_dir: Use the specified version of the JDK instead of the default JDK.\n\n--cp:p classpath: Prepend the specified classpath to the IDE's classpath. This option is generally not recommended for any purpose.\n\n--cp:a classpath: Append the specified classpath to the IDE's classpath.\n\n-Jjvm_flag: Pass the specified flag directly to the JVM, for example -J-Xmx512m\n\n--laf ui_class_name: Use a given class as the IDE's look and feel.\n\n--fontsize size: Use a given size in points as the basic font size for the IDE user interface.\n\n--locale language[:country[:variant]] : Use the specified locale.\n\n--userdir userdir: Explicitly specify the userdir, which is the location in which user settings are stored.\n\n--open file, --open file:line: Opens the file in the IDE's source editor at the specified line.\n\n[http://wiki.netbeans.org/FaqStartupParameters]\n",
    "ItemText": null,
    "CreateDate": "2008-07-01T20:06:44.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-01T20:06:44.0000000",
    "DocumentId": "2076071973",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5693",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 98: “How to Start a Windows 98-Based Computer in Safe Mode”",
    "SortOrdinal": null,
    "ItemChar": "Method 1\n1. Restart your computer.\n2. While your computer restarts, press and hold the CTRL key until the Windows 98 Startup menu is displayed.\n\nNOTE: If you are using the EZDrive tool, press F8 instead of CTRL.\n\n3. Select the Safe Mode menu option from the Startup menu, and then press ENTER.\n\n\nMethod 2\n1. Click Start, point to Programs, point to Accessories, point to System Tools, and then click System Information.\n2. On the Tools menu, click System Configuration Utility.\n3. Click Advanced, and then click to select the Enable Startup Menu check box.\n4. Click OK, click OK, and then restart your computer when you are prompted to do so.\n5. Select the Safe Mode menu option from the Startup menu, and then press ENTER.\n\n[http://support.microsoft.com/kb/180902]\n",
    "ItemText": null,
    "CreateDate": "2008-07-01T20:11:31.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-01T20:11:31.0000000",
    "DocumentId": "2076071974",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5694",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Word 2003 and 2007: Removing All Smart Tags",
    "SortOrdinal": null,
    "ItemChar": "1. On the Tools menu, click AutoCorrect Options, and then click the Smart Tags tab.\n\nNote In Word 2007, click the Microsoft Office Button, click Word Options, click Proofing, and then click AutoCorrect Options under AutoCorrect options. In the AutoCorrect dialog box, click Smart Tags.\n\n2. On the Smart Tags tab, click Remove Smart Tags.\n\n[http://support.microsoft.com/kb/284927]\n",
    "ItemText": null,
    "CreateDate": "2008-07-01T20:22:41.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-01T20:22:41.0000000",
    "DocumentId": "2076071975",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5695",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Word 2003/2007: “In Microsoft Word, what is the Spike, and how do I use it?”",
    "SortOrdinal": null,
    "ItemChar": "Moving items to and from the Spike\n\n1. Select the text or graphic you want to move, and then press Ctrl-F3 (in Windows) or Cmd-F3 (on a Mac).\n\n2. Repeat this step for each additional item you want to move to the Spike.\n\n3. Click in the document where you want to insert the Spike's contents.\n\n4. To insert the Spike's contents and empty the Spike, press Ctrl-Shift-F3 (in Windows) or Cmd-Shift-F3 (on a Mac).\n\n[http://kb.iu.edu/data/aggk.html]\n\nIt is important to remember that the spike ‘cuts’ text and then dumps out all of the cuts at once.\n",
    "ItemText": null,
    "CreateDate": "2008-07-01T20:25:21.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-01T20:25:21.0000000",
    "DocumentId": "2076071976",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5696",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows NTFS/FAT32: “How do I change the format type (file system) of a hard drive in Windows?”; wdc.custhelp.com",
    "SortOrdinal": null,
    "ItemChar": "“There are two options to change a hard drive from FAT32 to NTFS. You can use the Convert.exe command from a DOS prompt in Windows or you can delete the existing FAT32 partition or volume and create a new NTFS partition in Disk Management.”\n\n“Western Digital recommends deleting the existing FAT32 partition and creating a new NTFS partition. Using the Convert.exe command may cause data corruption or loss.”\n\nFor detailed instructions, see:\n\n    http://wdc.custhelp.com/cgi-bin/wdc.cfg/php/\n        enduser/std_adp.php?p_faqid=1021\n",
    "ItemText": null,
    "CreateDate": "2008-07-03T12:50:51.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-03T12:50:51.0000000",
    "DocumentId": "2076071977",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5697",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu: “Add a User on Ubuntu Server”; howtogeek.com",
    "SortOrdinal": null,
    "ItemChar": "To add a user, use the useradd command or the adduser command:\n\n    sudo useradd -d /home/testuser -m testuser\n\n    sudo passwd testuser\n\n“The adduser command is even easier than the useradd command, because it prompts you for each piece of information. I find it slightly funny that there are two virtually identically named commands that do the same thing, but that's linux for you.”\n\n[http://www.howtogeek.com/howto/ubuntu/add-a-user-on-ubuntu-server/]\n",
    "ItemText": null,
    "CreateDate": "2008-07-03T12:54:18.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-03T12:54:18.0000000",
    "DocumentId": "2076071978",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5698",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP cURL: building headers for a HTTP Request",
    "SortOrdinal": null,
    "ItemChar": "This is an example for building headers for a cURL call in PHP:\n\n    $ch = curl_init();\n    $user_agent = 'Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)';\n\n    …\n\n    $headers = array();\n\n    $headers[] = \"POST \" . $postPath . \" HTTP/1.1\";\n    $headers[] = \"Host: \" . $postHost;\n    $headers[] = \"Content-type: text/xml\";\n    $headers[] = \"Content-length: \" . mb_strlen($content, \"UTF-8\");\n    $headers[] = \"Connection: close\";\n\n    …\n\n    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n    curl_setopt($ch, CURLOPT_HEADER, 1);\n    curl_setopt($ch, CURLOPT_USERAGENT, $user_agent);\n\nThe complete code sample is here:\n\n    http://www.tanguay.info/web/codeExample.php?id=993\n",
    "ItemText": null,
    "CreateDate": "2008-07-03T13:01:21.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-03T13:01:21.0000000",
    "DocumentId": "2076071979",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5699",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“See Which Groups Your Linux User Belongs To”; howtogeek.com",
    "SortOrdinal": null,
    "ItemChar": "Use the groups command:\n\n    groups <username>\n\n“If you don't enter a username, it defaults to your own username.” Note that some “special” groups are numeric like 1001.\n",
    "ItemText": null,
    "CreateDate": "2008-07-03T13:09:42.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-03T13:09:42.0000000",
    "DocumentId": "2076071980",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5700",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flex/ActionScript 3: “Common E4X pitfalls ”; mikemo",
    "SortOrdinal": null,
    "ItemChar": "1. Set resultFormat=\"e4x\" on your HTTPService\n2. E4X expressions don't reference the topmost tag of the XML\n3. Use for each, not for\n4. Use for each (child in parent.*), not for each (child in parent)\n5. E4X intentionally blurs the distinction between XML and XMLList\n\nFor more details see:\n\n    http://www.morearty.com/blog/2007/03/13/common-e4x-pitfalls/\n",
    "ItemText": null,
    "CreateDate": "2008-07-03T13:27:40.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-03T13:27:40.0000000",
    "DocumentId": "2076071981",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5701",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "cat and gzip: piping cat output through gzip and redirecting to a *.gz file",
    "SortOrdinal": null,
    "ItemChar": "Consider three files each containing one word:\n\n    1.txt\n    2.txt\n    3.txt\n\nThis cat command, cat *.txt, produces the following output:\n\n    One\n    Two\n    Three\n\nwhere each word is the one word in the three text files, respectively. Now we need to store this concatenated output in a compressed gzip file:\n\n     cat *.txt | gzip > out.txt.gz\n\nThis piping is redirected into a *.gz file that contains one file, out.txt. The assumption here today is that this procedure can be used for apache log files generated by, say, vlogger.\n",
    "ItemText": null,
    "CreateDate": "2008-07-04T19:03:54.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-04T19:03:54.0000000",
    "DocumentId": "2076071982",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5702",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant remarks about Unison and rsync",
    "SortOrdinal": null,
    "ItemChar": "Unison is ‘based’ on rsync. This is important for me to understand as I previously assumed that Unison provided another sub-file differencing algorithm that makes rsync so fast and powerful. This is not the case.\n\nOne best summary of the reason why Unison exists comes from Blane Warrene at sitepoint.com: “Unison synchronizes rather than mirroring as rsync does—making it valuable for workstations as well as development and production servers. To boot—it works on OS X! [http://www.sitepoint.com/blogs/2005/03/28/replacing-rsync-with-unison/]”\n",
    "ItemText": null,
    "CreateDate": "2008-07-14T09:37:05.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-14T09:37:05.0000000",
    "DocumentId": "2076071983",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5703",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Dexpot 1.4 PROBLEM: Switching from Desktop to Desktop Leaves ‘Junk’ on the Screen in Windows XP",
    "SortOrdinal": null,
    "ItemChar": "Switching from desktop to desktop in Dexpot 1.4 leaves abandoned border artifacts on the screen. This comes from its lack of support for “shadow effects” in Windows XP. To resolve this annoyance, check off “Show shadows under menus” Display Properties > Effects… in  to disable this effect.\n",
    "ItemText": null,
    "CreateDate": "2008-07-14T09:44:21.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-14T09:44:21.0000000",
    "DocumentId": "2076071984",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5704",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio 2008 PROBLEM: The LINQ to SQL Debug Visualizer Is Not in Visual Studio 2008!; Scott Guthrie",
    "SortOrdinal": null,
    "ItemChar": "The following message was written by Scott Guthrie at Microsoft, “The LINQ to SQL Debug Visualizer isn’t built—in to VS 2008—instead it is an add-in that you need to download to use. You can download a copy of it here.”\n\nAs of this writing, the archive to download is here:\n\n    http://www.scottgu.com/blogposts/\n        linqquery/SqlServerQueryVisualizer.zip\n\nFor more information, see:\n\n    http://weblogs.asp.net/scottgu/archive/2007/\n        07/31/linq-to-sql-debug-visualizer.aspx\n",
    "ItemText": null,
    "CreateDate": "2008-07-18T22:29:14.0000000",
    "EndDate": null,
    "ModificationDate": "2008-07-18T22:29:14.0000000",
    "DocumentId": "2076071985",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5705",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Dell Inspiron 6400 PROBLEM: Built-in Speakers Making No Sound but Sound Comes through Headphones",
    "SortOrdinal": null,
    "ItemChar": "From forum.notebookreview.com: “Check the advanced option in the volume controls (little speaker in the bottom right corner). There is an option in there that says something similar to \"PCSkpr Mute\", if it's checked, uncheck it.”\n\n[http://forum.notebookreview.com/showthread.php?t=95612]\n\nI’m slipping. I actually need to write stuff like this down!",
    "ItemText": null,
    "CreateDate": "2008-08-17T18:00:48.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-17T18:00:48.0000000",
    "DocumentId": "2076071986",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5706",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP: “How do I create arrays in a HTML <form>?”",
    "SortOrdinal": null,
    "ItemChar": "To get your <form> result sent as an array to your PHP script you name the <input>, <select> or <textarea>  elements like this:\n\n    <input name=\"MyArray[]\" />\n    <input name=\"MyArray[]\" />\n    <input name=\"MyArray[]\" />\n    <input name=\"MyArray[]\" />\n\nIt’s also possible to assign specific keys to your arrays: \n\n    <input name=\"AnotherArray[]\" />\n    <input name=\"AnotherArray[]\" />\n    <input name=\"AnotherArray[email]\" />\n    <input name=\"AnotherArray[phone]\" />\n\nhe AnotherArray array will now contain the keys 0, 1, email and phone.\n\n[http://us3.php.net/manual/en/faq.html.php#faq.html.arrays]",
    "ItemText": null,
    "CreateDate": "2008-08-19T15:44:23.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-19T15:44:23.0000000",
    "DocumentId": "2076071987",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5707",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server Express: “SQL Server Express and Hosting”",
    "SortOrdinal": null,
    "ItemChar": "MSDN: “Several questions have come up lately regarding whether SQL Server Express is an appropriate product to be used in a hosting environment.”\n\n“All versions of SQL Server including Express Edition are RECOMMENDED for dedicated (single-tenant) hosting environments.”\n\n“There is a tool called the Database Publishing Wizard (it comes bundled with Visual Studio 2008) to help the export/import process.”\n\n[http://blogs.msdn.com/sqlexpress/archive/\n    2008/02/22/sql-server-express-and-hosting.aspx]",
    "ItemText": null,
    "CreateDate": "2008-08-19T15:51:01.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-19T15:51:01.0000000",
    "DocumentId": "2076071988",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5708",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio 2005/2008: Flippant Remarks about Code Snippets",
    "SortOrdinal": null,
    "ItemChar": "Code snippets refers to *code* based on my investigations this does not include t-SQL (but does include XML).\n\nThere might be t-SQL code snippets in a Team Server edition of Visual Studio.\n\nFor better information, see “How to: Creating Code Snippets for Visual Studio 2005/2008” here:\n\n    http://blogs.msdn.com/publicsector/archive/2007/12/18/\n        how-to-creating-code-snippets-\n        for-visual-studio-2005-2008.aspx\n\nAlso see “How to: Use Code Snippets (C#)” here:\n\n    http://msdn.microsoft.com/en-us/library/z4c5cc9b(VS.80).aspx\n",
    "ItemText": null,
    "CreateDate": "2008-08-19T15:58:51.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-19T15:58:51.0000000",
    "DocumentId": "2076071989",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5709",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "OpenXML: Flippant Remarks about OpenXML",
    "SortOrdinal": null,
    "ItemChar": "No more shall the SDK for OpenXML be confused with the Word 2007 Content Control Toolkit.\n\nThe strong word “Part” used throughout the OpenXML API, starting with the abstraction OpenXmlPart, represents a location in the ZIP OpenXmlPackage. In the same manner that an XML document contains nodes (or a database store contains tables), an OpenXML Package contains parts. The OpenXmlPart, as of today, does not define anything (useful to me) inside of an XML file.\n\nThe SDK for OpenXML APIs do not define anything of significance inside of an XML file. This is most important piece of information I need about this SDK. It follows that the OpenXmlPart.GetStream() and OpenXmlPart.FeedData() methods are the most important members of the entire SDK for OpenXML. So, for example, silly me would be looking for a class called “DocumentPart” or (“GlossaryDocumentEntry”) in the OpenXML API which would correspond to the <w:docPart> element. As of today these types to do exist.\n\nFor more details on this rant, see:\n\n    http://kintespace.com/rasxlog/?p=923\n\nWith the announcement of an OpenXML roadmap comes a “Content object model including additional classes and methods for simplifying developer work within parts (example: methods for retrieving or modifying a specific paragraph, style, cell, or shape within a part)…”\n\n[http://openxmldeveloper.org/archive/2008/03/13/OpenXMLSDK.aspx]\n\n“You need to remember following keywords as these are used more often in the world: Package, Parts, Relations…”\n\n[http://www.codeproject.com/KB/office/OpenXML_Very_Basics.aspx]\n\n",
    "ItemText": null,
    "CreateDate": "2008-08-19T16:14:36.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-19T16:14:36.0000000",
    "DocumentId": "2076071990",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5710",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Word 2007: Flippant Remarks about Customizing the Ribbon",
    "SortOrdinal": null,
    "ItemChar": "1: Use the Custom UI Editor Tool to generate the proper OpenXML parts in the Normal.dotm template to get me started writing raw XML against the Word 2007 application. I could have done this by hand using the tool mentioned in step 2 but was too “lazy.”\n\n2: Use the Open XML Package Editor in the VSTO 2008 Power Tools to write raw XML. Doing this in Visual Studio was easier on my eyes (larger, bolder fonts than the Custom UI Editor Tool) and I could use the customUI.xsd schema (in 2007 Office System: XML Schema Reference) to make writing faster (Intellisense support). Also I found out the hard way that it is better to write this XML in a separate file in case Word panics and auto-magically deletes all of my hard work! Visual Studio is a great XML file editor.\n\n3: Use the 2007 Office System Document: Lists of Control IDs to wade through the sea of “Fluent” fluxions. Utterly ridiculous but it helped.\n\nFor more details, see:\n\n    http://kintespace.com/rasxlog/?p=928\n",
    "ItemText": null,
    "CreateDate": "2008-08-19T16:19:46.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-19T16:19:46.0000000",
    "DocumentId": "2076071991",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5711",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The Three Original Liberal Arts; the Trivium; the Quadrivium",
    "SortOrdinal": null,
    "ItemChar": "“In medieval universities, the trivium comprised the three subjects taught first: grammar, logic [dialectic], and rhetoric. The word is a Latin term meaning “the three ways” or “the three roads” forming the foundation of a medieval liberal arts education. This study was preparatory for the quadrivium.”\n\n“Logic is concerned with the thing as-it-is-known,\nGrammar is concerned with the thing-as-it-is-symbolized, and\nRhetoric is concerned with the thing-as-it-is-communicated.”\n\n[http://en.wikipedia.org/wiki/Trivium_(education)]\n\n“Rhetoric is the art of speaking or writing effectively: as the study of principles and rules of composition formulated by critics of ancient times, and the study of writing or speaking as a means of communication or persuasion. In Greece, rhetoric originated in a school of pre-Socratic philosophers known as Sophists c.600 BC. It was later taught, in the Roman Empire, and during the Middle Ages, as one of the three original liberal arts or trivium (along with logic and grammar).”\n\n[http://en.wikipedia.org/wiki/Rhetoric]\n\n“The quadrivium comprised the four subjects, or arts, taught in medieval universities after the trivium. The word is Latin, meaning \"the four ways\" or \"the four roads\": the completion of the liberal arts. It was developed by Martianus Capella. The quadrivium consisted of arithmetic, geometry, music, and astronomy. These followed the preparatory work of the trivium made up of grammar, logic (or dialectic, as it was called at the times), and rhetoric. In turn, the quadrivium was considered preparatory work for the serious study of philosophy and theology.”\n\n“Arithmetic is the Discrete At Rest\nAstronomy is the Discrete In Motion\nGeometry is the Continuous At Rest\nMusic is the Continuous In Motion”\n\n[http://en.wikipedia.org/wiki/Quadrivium]\n",
    "ItemText": null,
    "CreateDate": "2008-08-22T14:52:49.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-22T14:52:49.0000000",
    "DocumentId": "2076071992",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5712",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about Asp.Net MVC and IIS6",
    "SortOrdinal": null,
    "ItemChar": "Most of the information here comes from biasecurities.com:\n\n    http://biasecurities.com/blog/2008/\n        how-to-enable-pretty-urls-with-asp-net-mvc-and-iis6/\n\n“When it comes to deploying an Asp.Net MVC app to IIS6, you have two options. 1. You can either setup a wildcard mapping. 2. You can add an isapi mapping and have an extension (.mvc) use the asp.net runtime.”\n\n“My solution is to use Isapi_rewrite to transparently rewrite all nice urls to *.mvc file extension requests. So, the user sees http://localhost/Home/About, while the webserver (after the isapi_rewrite filter has been applied) sees http://localhost/Home.mvc/About.  Isapi_rewrite is fast (written in c/c++), so you don't have to worry about the performance, and your static files (scripts, images, etc) do not go through the pipeline.  Best of all, your users (and Google) see pretty urls.  It's a win win setup, for IIS6.”\n\nIsapi_rewrite is $99. “ISAPI_Rewrite is a powerful URL manipulation engine based on regular expressions. It acts mostly like Apache's mod_Rewrite, but is designed specifically for Microsoft's Internet Information Server (IIS). ISAPI_Rewrite is an ISAPI filter written in pure C/C++ so it is extremely fast. ISAPI_Rewrite gives you the freedom to go beyond the standard URL schemes and develop your own scheme.”\n\n[http://www.isapirewrite.com/]\n\nScott Guthrie on URL Rewriting: “The MVC framework will work on both IIS6 and IIS7. You’ll be able to get extension-less URLs out of the box with IIS7. For IIS6 you’d need to also register an ISAPI filter to have them be extension-less. We’ll also support the ability to use file extensions with the MVC framework—so if you want to avoid using an ISAPI filter with IIS6 you can easily use this approach.” The biasecurities.com information above merely details what Scott is talking about here.\n\n",
    "ItemText": null,
    "CreateDate": "2008-08-23T23:45:02.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-23T23:45:02.0000000",
    "DocumentId": "2076071993",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5713",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "YouTube.com: Building an RSS Feed with Tags and Users",
    "SortOrdinal": null,
    "ItemChar": "“To create an RSS feed for your favorite tags or users, simply enter the tag or username as specified in the below URLs. You can then add this URL to your newsreader. Please note, you will need to create a feed for each individual tag or user you wish to subscribe to.”\n\n“Tags: For example, if you wanted to create an RSS feed for the tag ‘monkey,’ you would enter: feed://www.youtube.com/rss/tag/monkey.rss”\n\n“Users: feed://www.youtube.com/rss/user/[insert username here]/videos.rss For example, if you wanted to create an RSS feed for the user \"YouTube,\" you would enter: feed://www.youtube.com/rss/user/youtube/videos.rss”\n\n[http://www.youtube.com/rssls]\n",
    "ItemText": null,
    "CreateDate": "2008-08-23T23:53:01.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-23T23:53:01.0000000",
    "DocumentId": "2076071994",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5714",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Zend Framework: Mapping the Same View to Multiple Controller Actions",
    "SortOrdinal": null,
    "ItemChar": "This is the form for mapping one or more Controller actions to a View:\n\n    class MyController extends Zend_Controller_Action\n    {\n        public function preDispatch()\n        {\n            //Disable conventional calls to views for whole class:\n            $this->_helper->viewRenderer->setNoRender();\n        }\n\n        public function myAction()\n        {\n            ...\n            $this->render('myview');\n        }\n    }\n\nAlternatively, you can map an entire Controller class to one View:\n\n    class MyController extends Zend_Controller_Action\n    {\n        public function preDispatch()\n        {\n            $this->_helper->viewRenderer('myview');\n        }\n    }\n",
    "ItemText": null,
    "CreateDate": "2008-08-24T00:00:47.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T00:00:47.0000000",
    "DocumentId": "2076071995",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5715",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Java Exceptions: The Catch or Specify Requirement",
    "SortOrdinal": null,
    "ItemChar": "Valid Java programming language code must honor the Catch or Specify Requirement. This means that code that might throw certain exceptions must be enclosed by either of the following:\n\n* A try statement that catches the exception. The try must provide a handler for the exception, as described in Catching and Handling Exceptions.\n\n* A method that specifies that it can throw the exception. The method must provide a throws clause that lists the exception, as described in Specifying the Exceptions Thrown by a Method. \n\nCode that fails to honor the Catch or Specify Requirement will not compile. …Not all exceptions are subject to the Catch or Specify Requirement.\n\n[http://java.sun.com/docs/books/tutorial/\n    essential/exceptions/catchOrDeclare.html]\n",
    "ItemText": null,
    "CreateDate": "2008-08-24T00:15:56.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T00:15:56.0000000",
    "DocumentId": "2076071996",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5716",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Java Exceptions: The Three Kinds of Exceptions",
    "SortOrdinal": null,
    "ItemChar": "The first kind of exception is the checked exception. These are exceptional conditions that a well-written application should anticipate and recover from. …Checked exceptions are subject to the Catch or Specify Requirement. All exceptions are checked exceptions, except for those indicated by Error, RuntimeException, and their subclasses. \n\nThe second kind of exception is the error. These are exceptional conditions that are external to the application, and that the application usually cannot anticipate or recover from. …Errors are not subject to the Catch or Specify Requirement. Errors are those exceptions indicated by Error and its subclasses.\n\nThe third kind of exception is the runtime exception. These are exceptional conditions that are internal to the application, and that the application usually cannot anticipate or recover from. …Runtime exceptions are not subject to the Catch or Specify Requirement. Runtime exceptions are those indicated by RuntimeException and its subclasses.\n\n[http://java.sun.com/docs/books/tutorial/\n    essential/exceptions/catchOrDeclare.html]\n",
    "ItemText": null,
    "CreateDate": "2008-08-24T00:24:15.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T00:24:15.0000000",
    "DocumentId": "2076071997",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5717",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Anders Hejlsberg on Java Generics",
    "SortOrdinal": null,
    "ItemChar": "Java’s generics implementation was based on a project originally called Pizza, which was done by Martin Odersky and others. Pizza was renamed GJ, then it turned into a JSR and ended up being adopted into the Java language. And this particular generics proposal had as a key design goal that it could run on an unmodified VM [Virtual Machine]. It is, of course, great that you don’t have to modify your VM, but it also brings about a whole bunch of odd limitations. The limitations are not necessarily directly apparent, but you very quickly go, “Hmm, that’s strange.”\n\nFor example, with Java generics, you don’t actually get any of the execution efficiency that I talked about, because when you compile a generic class in Java, the compiler takes away the type parameter and substitutes Object everywhere. So the compiled image for List<T> is like a List where you use the type Object everywhere. Of course, if you now try to make a List<int>, you get boxing of all the ints. So there’s a bunch of overhead there. Furthermore, to keep the VM happy, the compiler actually has to insert all of the type casts you didn’t write. If it’s a List of Object and you’re trying to treat those Objects as Customers, at some point the Objects must be cast to Customers to keep the verifier happy. And really all they’re doing in their implementation is automatically inserting those type casts for you. So you get the syntactic sugar, or some of it at least, but you don’t get any of the execution efficiency. So that’s issue number one I have with Java’s solution.\n\nIssue number two, and I think this is probably an even bigger issue, is that because Java’s generics implementation relies on erasure of the type parameter, when you get to runtime, you don’t actually have a faithful representation of what you had at compile time. When you apply reflection to a generic List in Java, you can’t tell what the List is a List of. It’s just a List. Because you’ve lost the type information, any type of dynamic code-generation scenario, or reflection-based scenario, simply doesn’t work. If there’s one trend that’s pretty clear to me, it’s that there’s more and more of that. And it just doesn’t work, because you’ve lost the type information. Whereas in our implementation, all of that information is available. You can use reflection to get the System.Type for object List<T>. You cannot actually create an instance of it yet, because you don’t know what T is. But then you can use reflection to get the System.Type for int. You can then ask reflection to please put these two together and create a List<int>, and you get another System.Type for List<int>. So representationally, anything you can do at compile time you can also do at runtime. \n\n[http://www.artima.com/intv/generics2.html]\n",
    "ItemText": null,
    "CreateDate": "2008-08-24T17:08:16.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T17:08:16.0000000",
    "DocumentId": "2076071998",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5718",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP and Simple XML: “Allowed memory size of 8388608 bytes exhausted”; simplexml",
    "SortOrdinal": null,
    "ItemChar": "The PHP fatal error “Allowed memory size of 8388608 bytes exhausted” is thrown when Simple XML opens a “large” XML document. This issue is resolved by setting memory_limit  in php.ini or as a statement:\n\n    ini_set('memory_limit', '64M');\n\nThis error can be a reminder that Simple XML opens entire documents into memory.",
    "ItemText": null,
    "CreateDate": "2008-08-24T17:36:39.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T17:36:39.0000000",
    "DocumentId": "2076071999",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5719",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP Safe Mode",
    "SortOrdinal": null,
    "ItemChar": "The PHP safe mode is an attempt to solve the shared-server security problem. It is architecturally incorrect to try to solve this problem at the PHP level, but since the alternatives at the web server and OS levels aren't very realistic, many people, especially ISP’s, use safe mode for now.\n\n[http://php.net/features.safe-mode]\n",
    "ItemText": null,
    "CreateDate": "2008-08-24T17:38:54.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T17:38:54.0000000",
    "DocumentId": "2076072000",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5720",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "XML Data Modification Language (XML DML)",
    "SortOrdinal": null,
    "ItemChar": "The XML Data Modification Language (XML DML) is an extension of the XQuery language. As defined by W3C, the XQuery language lacks the Data Manipulation (DML) part. The XML DML introduced in this topic, and also the XQuery language, provides a fully functional query and data-modification language that you can use against the xml data type.\n\nThe XML DML adds the following case-sensitive keywords to XQuery:\n\n    insert\n    delete\n    replace value of \n\n[http://msdn.microsoft.com/en-us/library/ms177454.aspx]",
    "ItemText": null,
    "CreateDate": "2008-08-24T17:41:35.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T17:41:35.0000000",
    "DocumentId": "2076072001",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5721",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Developing Windows Services; James Foster",
    "SortOrdinal": null,
    "ItemChar": "With the .NET Framework, it is much easier to develop applications that run as Windows Services using classes defined in the System.ServiceProcess namespace. This article starts with an overview of the ServiceProcess namespace and the classes you are most likely to use in developing your own services. Next, we’ll look at an developing an example using Visual Studio.NET. Finally, we’ll cover the installation of your service.\n\n[http://www.dotnetcoders.com/web/\n    Articles/ShowArticle.aspx?article=32]\n\nAlso see “How to create a setup project for a Windows Service application in Visual C#” here:\n\n    http://support.microsoft.com/kb/816169\n\n\n",
    "ItemText": null,
    "CreateDate": "2008-08-24T18:00:52.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T18:00:52.0000000",
    "DocumentId": "2076072002",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5722",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Natural Sorting in C#”; Ian Griffiths",
    "SortOrdinal": null,
    "ItemChar": "Jeff Atwood recently posted about natural sorting. This is all about making sure that strings that contain numbers sort numerically. I’m slightly surprised to see that he wants to call it alphabetical sorting. Surely by definition, alphabetical sorting is defined by, well, the alphabet. This is an issue about numbers, not letters.\n\nAnyway, he says he tried and gave up on a succinct C# version. He suggests that it will take 40+ lines of code. I believe that’s misleading, because as far as I can tell, the Python versions are only able to be so succinct because Python already appears to know how to sort an array. Both examples he shows rely on this. In .NET, collections aren’t intrinsically sortable.\n\n[http://www.interact-sw.co.uk/iangblog/2007/12/13/natural-sorting]",
    "ItemText": null,
    "CreateDate": "2008-08-24T17:47:38.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T17:47:38.0000000",
    "DocumentId": "2076072003",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5723",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "List of LINQ Providers; Robert Shelton",
    "SortOrdinal": null,
    "ItemChar": "As of month 7, 2008:\n\n# LINQ to Amazon\n# LINQ to Active Directory\n# LINQ to Bindable Sources (SyncLINQ)\n# LINQ over C# project\n# LINQ to CRM\n# LINQ To Geo—Language Integrated Query for Geospatial Data\n# LINQ to Excel\n# LINQ to Expressions (MetaLinq)\n# LINQ Extender (Toolkit for building LINQ Providers)\n# LINQ to Flickr\n# LINQ to Google\n# LINQ to Indexes (LINQ and i40)\n# LINQ to IQueryable (Matt Warren on Providers)\n# LINQ to JSON\n# LINQ to NHibernate\n# LINQ to JavaScript\n# LINQ to LDAP\n# LINQ to LLBLGen Pro\n# LINQ to Lucene\n# LINQ to Metaweb(freebase)\n# LINQ to MySQL, Oracle and PostgreSql (DbLinq)\n# LINQ to NCover\n# LINQ to Opf3\n# LINQ to Parallel (PLINQ)\n# LINQ to RDF Files\n# LINQ to Sharepoint\n# LINQ to SimpleDB\n# LINQ to Streams\n# LINQ to WebQueries\n# LINQ to WMI\n# LINQ to XtraGrid\n\n[http://rshelton.com/archive/\n    2008/07/11/list-of-linq-providers.aspx]\n",
    "ItemText": null,
    "CreateDate": "2008-08-24T18:05:34.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T18:05:34.0000000",
    "DocumentId": "2076072004",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5724",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Formal Ontology",
    "SortOrdinal": null,
    "ItemChar": "A Formal ontology is an ontology with a structure that is guided and defined through axioms. The goal of a formal ontology is to provide an unbiased (domain- and application-independent) view on reality. Formal ontologies are founded upon a specific Formal Upper Level Ontology, which provides consistency checks for the entire ontology and, if applied properly, allows the modeler to avoid possibly erroneous ontological assumptions encountered in modeling large-scale ontologies.\n\n[http://en.wikipedia.org/wiki/Formal_ontology]\n",
    "ItemText": null,
    "CreateDate": "2008-08-24T18:07:40.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T18:07:40.0000000",
    "DocumentId": "2076072005",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5725",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Abductive reasoning",
    "SortOrdinal": null,
    "ItemChar": "Abduction, or inference to the best explanation, is a method of reasoning in which one chooses the hypothesis that would, if true, best explain the relevant evidence. Abductive reasoning starts from a set of accepted facts and infers their most likely, or best, explanations. The term abduction is also sometimes used to just mean the generation of hypotheses to explain observations or conclusions, but the former definition is more common both in philosophy and computing.\n\n[http://en.wikipedia.org/wiki/Abductive_reasoning]\n",
    "ItemText": null,
    "CreateDate": "2008-08-24T19:13:37.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T19:13:37.0000000",
    "DocumentId": "2076072006",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5726",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Nullable<T> Usage Guidelines; Krzysztof Cwalina",
    "SortOrdinal": null,
    "ItemChar": "CONSIDER using Nullable<T> to represent values that might not be present (i.e. optional values).\n\nDo NOT use Nullable<T> unless you would use a reference type in a similar manner, taking advantage of the fact that reference type values can be null.\n\nAVOID using Nullable<bool> to represent a general three-state value.\n\nAVOID using System.DBNull. Prefer Nullable<T> instead.\n\nNullable<T> is in general a better representation of optional database values. One thing to consider though it that while Nullable<T> gives you the ability to represent null values, you don’t get database null operational semantics. Specifically, you don’t get null propagation through operators and functions. If you deeply care about the propagation semantics, consider sticking with DBNull.\n\n[http://blogs.msdn.com/kcwalina/archive/2008/07/16/Nullable.aspx]\n\n\n",
    "ItemText": null,
    "CreateDate": "2008-08-24T19:16:46.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T19:16:46.0000000",
    "DocumentId": "2076072007",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5727",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VMware Workstation: Supported Guest Operating Systems",
    "SortOrdinal": null,
    "ItemChar": "Windows Server 2008: 6.0.1–6.0.4\nWindows Vista: 6.0–6.0.4\nSUSE Linux Enterprise Server 10: 5.5.2–6.0.4\nOpen SUSE Linux 10.3: 6.0.1–6.0.4\nUbuntu 8.04 LTS: No Support\nUbuntu Linux 7.10: 6.0.2–6.0.4\nUbuntu Linux 7.04: 6.0–6.0.4\nUbuntu Linux 6.10: 6.0–6.0.4\nUbuntu Linux 6.06: 5.5.2–6.0.4\nSolaris 10 Operating System for x86 Platforms: 4.5.2–6.0.4\nFreeBSD 6.1: 5.5.2–6.0.4\n\n[http://pubs.vmware.com/guestnotes/GuestOS_install.3.3.html]\n",
    "ItemText": null,
    "CreateDate": "2008-08-24T19:24:51.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T19:24:51.0000000",
    "DocumentId": "2076072008",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5728",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript: parseInt() Function",
    "SortOrdinal": null,
    "ItemChar": "The parseInt() function parses a string and returns an integer.\n\nThe radix parameter is used to specify which numeral system to be used, for example, a radix of 16 (hexadecimal) indicates that the number in the string should be parsed from a hexadecimal number to a decimal number.\n\nIf the radix parameter is omitted, JavaScript assumes the following:\n\n* If the string begins with \"0x\", the radix is 16 (hexadecimal)\n\n* If the string begins with \"0\", the radix is 8 (octal). This feature is deprecated\n\n* If the string begins with any other value, the radix is 10 (decimal)\n\n[http://www.w3schools.com/jsref/jsref_parseInt.asp]\n",
    "ItemText": null,
    "CreateDate": "2008-08-24T19:26:57.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T19:26:57.0000000",
    "DocumentId": "2076072009",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5729",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript: window.status is Disabled for Security Reasons in Firefox",
    "SortOrdinal": null,
    "ItemChar": "This property does not work in default configuration of Firefox and some other browsers: setting window.status has no effect on the text displayed in the status bar. To allow scripts change the the status bar text, the user must set the dom.disable_window_status_change preference to false in the about:config screen.\n\n[http://developer.mozilla.org/En/DOM:window.status]\n",
    "ItemText": null,
    "CreateDate": "2008-08-24T19:28:37.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T19:28:37.0000000",
    "DocumentId": "2076072010",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5730",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript and Firebug: “Permission denied to set property XULElement.selectedIndex”",
    "SortOrdinal": null,
    "ItemChar": "Finally I found a simple solution for the FireFox error:\n\n\"[Exception... \"'Permission denied to set property XULElement.selectedIndex' when calling method: [nsIAutoCompletePopup::selectedIndex]\" nsresult: \"0x8057001e (NS_ERROR_XPC_JS_THREW_STRING)\"\n\nThis error occurs when focus() is called. I was reported in https://bugzilla.mozilla.org/show_bug.cgi?id=236791 but still no fix/patch from mozilla.\n\nTo avoid this error, you have to turn off autocomplete.\n\nfrom javascript, you can do that in following way: obj.setAttribute('autocomplete','off');\n\nOr, you can simply set autocomplete=\"off\" in HTML. \n\n[http://geekswithblogs.net/shahedul/archive/2006/08/14/87910.aspx]\n",
    "ItemText": null,
    "CreateDate": "2008-08-24T19:32:55.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T19:32:55.0000000",
    "DocumentId": "2076072011",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5731",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript and Douglas Crockford: “if JavaScript were infinitely fast”",
    "SortOrdinal": null,
    "ItemChar": "I teach that if JavaScript were infinitely fast that most web applications would run at about the same speed. Christian Stockwell of Microsoft gave us the numbers to back that up. The top 100 Alexa websites spend on average about 3% of their time running JScript. The bulk of the time goes to the DOM in current style computation, layout, rendering, and marshaling. Even script-bound applications like GMail spend less that 20% of their time in JScript. It is good to see the browser makers looking seriously and effectively at performance. Mike Connor of Mozilla said that their goal is to make the current performance rules irrelevant. That is commendable.\n\n[http://blog.360.yahoo.com/\n    blog-TBPekxc1dLNy5DOloPfzVvFIVOWMB0li?p=872]\n",
    "ItemText": null,
    "CreateDate": "2008-08-24T19:38:15.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T19:38:15.0000000",
    "DocumentId": "2076072012",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5732",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Zend Framework: Rewriting with .htaccess",
    "SortOrdinal": null,
    "ItemChar": "Routing requests\n\nAgain, these rules direct all requests to index.php, except specified file types:\n\nRewriteEngine on\nRewriteBase /\nRewriteRule !\\.(js|ico|txt|gif|jpg|png|css)$ index.php\n\nHandling file and directory exceptions\n\nThese rules (used immediately prior to the RewriteRule above) exclude real files and directories from the rewriting and lets them pass through unaffected:\n\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\n\nYou can also simply allow a specified group of files to pass through unaffected by using this line:\n\nRewriteRule  ^(foo|bar).*  - [L]\n\nIn this case, files foo.* and bar.* will be accessed normally.\n\n[http://framework.zend.com/wiki/\n    display/ZFDEV/Configuring+Your+URL+Rewriter]\n\nAlso, see “Blueprint for PHP Applications: Bootstrapping” here:\n\n[http://devzone.zend.com/node/view/id/70]\n",
    "ItemText": null,
    "CreateDate": "2008-08-24T19:40:23.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-24T19:40:23.0000000",
    "DocumentId": "2076072013",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5733",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "FUSE: Filesystem in Userspace; Wikipedia.org",
    "SortOrdinal": null,
    "ItemChar": "Filesystem in Userspace (FUSE) is a loadable kernel module for Unix-like computer operating systems, that allows non-privileged users to create their own file systems without editing the kernel code. This is achieved by running the file system code in user space, while the FUSE module only provides a \"bridge\" to the actual kernel interfaces. FUSE was officially merged into the mainstream Linux kernel tree in kernel version 2.6.14.\n\n[http://en.wikipedia.org/wiki/Filesystem_in_Userspace]\n",
    "ItemText": null,
    "CreateDate": "2008-08-27T16:17:47.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-27T16:17:47.0000000",
    "DocumentId": "2076072014",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5734",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "George Orwell; Politics And The English Language; Orwell on the Decline of Language; Published in Horizon, April 1946; Modern British Writing ed. Denys Val Baker, 1947",
    "SortOrdinal": null,
    "ItemChar": "Now, it is clear that the decline of a language must ultimately have political and economic causes: it is not due simply to the bad influences of this or that individual writer. But an effect can become a cause, reinforcing the original cause and producing the same effect in an intensified form, and so on indefinitely. A man may take to drink because he feels himself to be a failure, and then fail all the more completely because he drinks. It is rather the same thing that is happening to the English language. It becomes ugly and inaccurate because our thoughts are foolish, but the slovenliness of our language makes it easier for us to have foolish thoughts. The point is that the process is reversible. Modern English, especially written English, is full of bad habits which spread by imitation and which can be avoided if one is willing to take the necessary trouble. If one gets rid of these habits one can think more clearly, and to think clearly is a necessary first step towards political regeneration: so that the fight against bad English is not frivolous and is not the exclusive concern of professional writers.\n\n[http://www.ourcivilisation.com/decline/orwell1.htm]",
    "ItemText": null,
    "CreateDate": "2008-08-27T19:51:54.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-27T19:51:54.0000000",
    "DocumentId": "2076072015",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5735",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Gerald Horne, Race War!; Chapter 5: War/Race; Du Bois on Pre-Communist China; pp. 110–111",
    "SortOrdinal": null,
    "ItemChar": "While Du Bois in his later years became a devoted admirer of Communist-Ruled China, in the 1930s his irascibility in discussing the Chinese knew no bounds. They were “extremely separatist,” he thought. “They do not know Europe. They have no idea of human cruelty…current in Europe. China does not even realize the insult of the American Chinese Exclusion Act,” he said in amazement. But Japan was different, he felt. Du Bois, a socialist of sorts and a friend of Soviet Russia, sought to reconcile this nation with Japan as this unlikely prospect steadily slipped away in reality.\n\nDu Bois tended to see the Japanese as robust in their encounter with white supremacy and Chinese as pusillanimous—a notion that was confirmed in his mind when he visited Shanghai in 1936. When he raised the question of racial indignities with the Chinese leaders—who had just denounced Japanese aggression in their country—they “made no reply… They talked long, but they did not really answer my question” concerning Anglo-American outrages. Du Bois, like other Negroes, found China’s abrasive approach toward Japan and mildness toward the Empire rather curious; it reminded many blacks of a distasteful phenomenon in the United States where certain Negroes were fire-breathing combatants toward their own kind but timorous when dealing with Euro-Americans.\n\nThis suspicion of China and the Chinese as being much too quick to seek accommodation and collaboration with the “white” powers, as opposed to Japan, which was seen by contrast as utterly confrontational, soured many Negroes on the Middle Kingdom. During this 1936 visit to Shanghai, Du Bois recalled “sitting with a group of Chinese leaders at lunch.” Rather “tentatively,” he told them that he “could well understand the Chinese attitude toward Japan, its bitterness and determined opposition to the substitution of Asiatic for an European imperialism.” Yet what he “could not understand was the seemingly placid attitude of the Chinese toward Britain.” Indeed, he thought “the fundamental source of Sino-Japanese enmity was in China’s ‘submission to white aggression and Japanese resistance to it.’” The Chinese, he thought, were “Asian Uncle Toms of the ‘same spirit that animates the ‘white folks’ nigger’ in the United States.” With a wave of the hand, Du Bois dismissed concerns about violation of Chinese sovereignty by Japan. “In 1841,” he argued, “the English seized Hong Kong, China with far less right than the Japanese had in seizing [Manchuria].”\n",
    "ItemText": null,
    "CreateDate": "2008-08-28T19:38:16.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-28T19:38:16.0000000",
    "DocumentId": "2076072016",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5736",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Gerald Horne, Race War!; Chapter 9: Race at War; On the Segregation of U.S. Blacks from those of the Empire; pp. 238–239",
    "SortOrdinal": null,
    "ItemChar": "London seemed to feel that U.S. blacks stirred up anti-racist sentiments among blacks from the Empire, and therefore should be kept separate. This was not a new thought. As early as 1920 a “confidential” missive from colonial offices from the African nation that was to become Malawi reported that “two American Negroes…came” there. One of them, a preacher, had married the niece of the notorious John Chilembwe, whose uprising shook the foundations of the Empire in Africa. His familial connection to an “American Negro” was considered duly important.\n\nThe exigencies of war had heightened apprehensions about the strategically placed U.S. minority. In a “most secret” communication in the fall of 1943, an official granted that “in an ideal world we should certainly wish to avoid having British African personnel serving alongside American coloured troops.” Why? Because “if British African troop were to placed in the position of receiving direct orders from American white personnel, there would be unending trouble.” Parenthetically, the British authorities noted that the “main points of difference” between African and African American troops were the latter’s “higher standards of education,” the presence of “Negro officers,” and “American political ideals.” The Empire was also concerned that blacks from the United States might impart seditious notions to their African brethren. All this made the United States—a headquarters of white supremacy—more appealing to many Africans and Asians, thus contributing to its growing ability to challenge the United Kingdom, not least within the Empire itself.\n\nLondon was very worried about the deployment of U.S. Negro troops in British colonies in West Africa, where their presence was thought to be disruptive. London firmly “recommended to Washington that no coloured troops” be sent to “the Gambia” or “Freetown,” Sierra Leone. Such an idea, it said,“clearly contains the seeds of trouble.” The proposal was “strongly objected to by the American commander in Accra, as by [London] and local governments.” Soothingly—and evasively—the “War Department” in Washington in words deemed “most secret” assured London that “there is no intention of using United States coloured troops in West Africa.” It did not say how this decision would affect the worldwide deployment of troops in a global struggle for survival against wily and well-armed foes.\n",
    "ItemText": null,
    "CreateDate": "2008-08-28T21:39:07.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-28T21:39:07.0000000",
    "DocumentId": "2076072017",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5737",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Gerald Horne, Race War!; Chapter 10: Race World; Imperial Japan and anti-Semitism; p. 271",
    "SortOrdinal": null,
    "ItemChar": "When the writer John Toland interviewed Ohshima Hiroshi, Japan’s Ambassador to Germany, he sensed Hiroshi’s anxiety about Japan’s relationship with Germany. According to Toland, Hiroshi recalled that “Hitler didn’t know about Japan at first. In 1922 he wrote *Mein Kampf* in which he didn’t speak particularly well of Japan.” (This was a gross understatement.) Thus, during the war there was “not much done in cooperation” between the powers; they “exchanged information,” but not much more. Later Hiroshi asserted that “Goering complained to me saying that ‘your general is helping Jews in north Manchuria.’ I had it investigated and found it was true. The Jews never did any harm to Japan, therefore, there was no reason for us to reject them. Not only that Rothschild and Schiff but also in Germany such Jews as Greenburg had furnished military funds for Japan. …I further told Goering that Japan was using Jews who had escaped (from the Nazis) in such activities as collecting information on Russia (therefore they were useful).”\n\nHiroshi was not being misleading: Tokyo did diverge sharply from its alleged ally on the bedrock question of anti-Semitism. Dr. Karl Kinderman was Jewish and lived in Japan throughout the war. While there he “had been specially protected by Japanese friends who were high in the ranks of the…[ultra-patriotic] Black Dragon Society.” This was part of a larger Japanese plan not to participate in the incineration of Jews but to rescue them and deploy their resources and skills on behalf of Tokyo. A striking number of besieged German Jews—even antifascists—looked not to Europe or North America for refuge but to Japanese-occupied Asia. Japanese diplomats like the legendary Sugihara Chiune saved thousands of Jews on the eve of Shoah by issuing visas from European posts such as Lithuania. Solomon Bard, interned in Hong Kong, detected no anti-Semitism among his captors. They “made absolutely no effort to distinguish those in the camp who were Jews,” he recalled later, “Nazi doctrine in this respect did not reach as far as us.”\n",
    "ItemText": null,
    "CreateDate": "2008-08-28T22:01:42.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-28T22:01:42.0000000",
    "DocumentId": "2076072018",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5738",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Gerald Horne, Race War!; Chapter 2: The Asiatic Black Man?; the Nation of Islam and the Empire of Japan; p.48 ",
    "SortOrdinal": null,
    "ItemChar": "Certainly the Nation of Islam, which began in Black America over seven decades ago and still remains potent, has been the heartiest of the Black Nationalist groups that originally had a pro-Tokyo orientation. From the beginning, stubborn rumors persisted that the notorious Japanese agent, Satohara Takahashi, was “bankrolling the NOI.” The Federal Bureau of Investigation charged  that these “Muslims and other black nationalists were receiving carbine rifles and sophisticated military weapons from Japanese espionage agents.” One Takahashi-sponsored group was “directed toward the extermination of the White Race” while “during meetings and services a large sign [was] always displayed bearing the inscription, ‘The Paleface Has to Go.’” Elijah Muhammad, a patron saint of the NOI, was actively engaged in these circles. He emphasized that “the Japanese will slaughter the white man… The Japanese are the brothers of the black man and the time will soon come when from the clouds hundreds of Japanese planes with the most poisonous gas will let their bombs fall on the United States and nothing will be left of it.” Like his “colored” counterparts in New Zealand—the Ratana, noted below—Elijah Muhammad also believed that he and his people were somehow related to the Japanese. “The Asiatic race is made up of all dark-skinned people,” he stated, “including the Japanese and the Asiatic black man.” The implication was clear, he thought: “Members of the Asiatic race must stick together.”\n",
    "ItemText": null,
    "CreateDate": "2008-08-29T19:55:08.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-29T19:55:08.0000000",
    "DocumentId": "2076072019",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5739",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Gerald Horne, Race War!; Chapter 2: The Asiatic Black Man?; Conservative George Schuyler, His Pro-Japanese Leanings; p. 49",
    "SortOrdinal": null,
    "ItemChar": "Yet this pro-Tokyo bent was not unique to Black Nationalism. The iconoclastic and militantly anti-communist black journalist, George Schuyler, who proudly called himself “conservative,” also bowed in the direction of the Rising Sun. He wrote a roman clef that posited “race war” as a major theme. He was “fascinated by Japan and by the meaning to blacks worldwide of its great military expansion. At the invitation of the *[Pittsburgh] Courier* he wrote a series of articles on the subject that the publisher found too pro-Japan to be printed.”",
    "ItemText": null,
    "CreateDate": "2008-08-29T20:10:20.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-29T20:10:20.0000000",
    "DocumentId": "2076072020",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5740",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Gerald Horne, Race War!; Chapter 2: The Asiatic Black Man?; American and Japanese Fiction about a Japanese Invasion of the U.S.; pp.49–50",
    "SortOrdinal": null,
    "ItemChar": "Japan-related themes were a frequent staple of black writers in the wake of the 1905 victory, with revenge against white supremacy as a repetitive theme. In 1913 James Corrothers wrote a story in the *Crisis*, journal of the National Association for the Advancement of Colored People (NAACP), that “situated the problems of black leadership within global affairs by imagining a military alliance of Japan and Mexico against the United States, further supported by black deserters from the U.S. Army and the secession of Hawaii, led by angry Japanese-Americans.” The U.S. president had to appeal to “Jed Blackburn,” a Jack Johnson type character who “led a force of ten thousand black soldiers on a suicidal counterattack of Japan’s invasion of Southern California.” J.E. Bruce was another black writer who wrote wishful fiction about Japan defeating the United States militarily. In his plot, the U.S. president had to call for volunteers to prevent this defeat, which led to a reduction in racism against African Americans who were now pivotal to national security—a scenario not far distant from what occurred during the Pacific War and the Cold War.\n\nThis work of propaganda was matched, if not exceeded, by the 1921 potboiler by Japanese General Sato Kojiro, *Japanese-American War*. This book imagined the surprise destruction of the U.S. Pacific fleet, the occupation of Hawaii, and an invasion by Japanese forces of the U.S. mainland supported by 10 million Negroes led by Marcus Garvey.\n",
    "ItemText": null,
    "CreateDate": "2008-08-29T20:29:36.0000000",
    "EndDate": null,
    "ModificationDate": "2008-08-29T20:29:36.0000000",
    "DocumentId": "2076072021",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5741",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ousmane Sembène Interviews; Noureddine Ghali/1976; Sembène on the Female Archetypes in Xala; p. 77; Edited by Annett Busch and Max Annas",
    "SortOrdinal": null,
    "ItemChar": "Ghali: El Hadj, the main character, has two wives who seem to belong to two poles: the first is traditional and the other is Europeanized.\n\nSembène: He got his first wife before becoming a somebody. Along with his economic and social development, he takes on a second who corresponds, so to speak, to a second historical phase. The third, his daughter’s age but without her mind, is only there for self esteem. She is submissive (unlike his daughter), and only appears once or twice: she is of the “Be beautiful and shut up” variety.\n\nPolygamy, especially in the bourgeois or urban setting, means the wife is only some flesh for whom a commodity value is paid. It is these bourgeois and their wives, by the way, who had this supposedly brilliant idea to open the doors for International Women’s Year. Not working women, but a stratum of privileged women to whom the Christian religion has given no satisfaction and who talk on the subject of men’s and women’s equality. But there is, undoubtedly, an undeniable problem: polygamy, against which we struggle. There is a problem, but the problem is clear because the woman’s inferior status is visible. We do not, however, find any solution in the Western concept of family, for that model only produces a deterioration of human beings. In reality, the problem should not be posed in terms of sexes but in terms of classes.\n\n[From *Film and Politics in the Third World*, edited by John D.H. Downing (New York: Praeger, 1987). Translated by John D.H. Downing. First Published in Cinéma 76, #208 (April 1976).]\n\n[\n“International Women’s Year (IWY) was the name given to 1975 by the United Nations.”\n    http://en.wikipedia.org/wiki/International_Women%27s_Year\n]\n",
    "ItemText": null,
    "CreateDate": "2009-02-28T01:32:23.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-28T01:32:23.0000000",
    "DocumentId": "2076072022",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5742",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005 PROBLEM: “Unable to determine if the owner (DOMAIN\\xxx) of job <JOB_Name> has server access (reason: error code 0x534. [SQLSTATE 42000] (Error 15404))”; Andrew Calvett",
    "SortOrdinal": null,
    "ItemChar": "SQL Server Agent jobs can revert back to their previous owner. This can produce the error: “Unable to determine if the owner (DOMAIN\\xxx) of job <JOB_Name> has server access (reason: error code 0x534. [SQLSTATE 42000] (Error 15404))”\n\nUltimately the sysdtspackages90 table might need updating. The following SQL statements help:\n\n--See who owns which packages\nSELECT\n    name\n,   description\n,   suser_sname(ownersid)\nFROM\n    msdb.dbo.sysdtspackages90\n\n/*\nNow we update the owner to an appropriate domain account. Either the service account or a generic admin account is good.\n*/\n\nUPDATE msdb.dbo.sysdtspackages90\n\nSET\n    OWNERSID = SUSER_SID('YOUR_DOMAIN\\APPROPRIATE_ACCOUNT')\nWHERE\n    OWNERSID = SUSER_SID('YOUR_DOMAIN\\OLD_ACCOUNT') \n\nAndrew Calvett writes, “It turns out that when you save a change to a maintenance plan the job owners are reset to the owner of the maintenance plan. The owner of the maintenance plan will be the account used to connect to the server in SSMS when creating the plan.”\n\nFor more information see Andrew Calvett, his post, “The Job whose owner kept coming back”:\n\n    http://sqlblogcasts.com/blogs/acalvett/\n        archive/2007/12/30/the-job-whose-owner-kept-coming-back.aspx",
    "ItemText": null,
    "CreateDate": "2008-09-01T20:28:56.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-01T20:28:56.0000000",
    "DocumentId": "2076072023",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5743",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu: By default, the root account password is locked in Ubuntu; help.ubuntu.com",
    "SortOrdinal": null,
    "ItemChar": "By default, the root account password is locked in Ubuntu. This means that you cannot login as root directly or use the su command to become the root user. However, since the root account physically exists it is still possible to run programs with root-level privileges. This is where sudo comes in—it allows authorized users (normally \"Administrative\" users; for further information please refer to AddUsersHowto) to run certain programs as root without having to know the root password.\n\n…\n\nRedirecting the output of commands run with sudo requires a different approach. For instance consider sudo ls > /root/somefile will not work since it is the shell that tries to write to that file. You can use ls | sudo tee -a /root/somefile to append, or ls | sudo tee /root/somefile to overwrite contents. You could also pass the whole command to a shell process run under sudo to have the file written to with root permissions, such as sudo bash -c \"ls > /root/somefile\".\n\n[https://help.ubuntu.com/community/RootSudo]",
    "ItemText": null,
    "CreateDate": "2008-09-01T20:34:19.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-01T20:34:19.0000000",
    "DocumentId": "2076072024",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5744",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsft Word 2007: Migration considerations for Word 2007; technet.microsoft.com",
    "SortOrdinal": null,
    "ItemChar": "Office Word 2007 handles AutoText entries differently than in previous versions of Word. In previous versions of Word, AutoText entries are stored in the Normal.dot template or in user templates. Office Word 2007 replaces the Normal.dot template with the new Normal.dotm template, which supports new file formats and other features in the 2007 Office system and also contains different styles and formatting. Instead of storing AutoText entries in the new Normal.dotm template by default, Office Word 2007 stores the entries as a separate template in the Document Building Blocks directory.\n\n…\n\nCustomizations to previous versions of Word do not automatically migrate to Office Word 2007 during installation. These customizations include:\n \n* Settings\n* Styles\n* Add-ins\n* Macros\n* Toolbars\n* AutoText entries\n* AutoCorrect entries\n\n[http://technet.microsoft.com/en-us/library/cc179177.aspx]",
    "ItemText": null,
    "CreateDate": "2008-09-01T20:38:34.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-01T20:38:34.0000000",
    "DocumentId": "2076072025",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5745",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Word 2007: How to change the default view to Draft view in Word 2007; support.microsoft.com",
    "SortOrdinal": null,
    "ItemChar": "To change the default view to Draft view when a Word 2007 document is opened, follow these steps:\n\n1. Click the Microsoft Office Button, and then click Word Options.\n\n2. Click Advanced.\n\n3. Under General, click to select the Allow opening a document in Draft view check box.\n\n4. Click OK.\n\n5. On the View tab, click Draft in the Document Views group. \n\n[http://support.microsoft.com/kb/919599]\n",
    "ItemText": null,
    "CreateDate": "2008-09-01T21:01:32.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-01T21:01:32.0000000",
    "DocumentId": "2076072026",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5746",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Word 2007: Flippant Remarks about Building Blocks",
    "SortOrdinal": null,
    "ItemChar": "From the Word team: “As mentioned in my first post, building blocks are essentially parts of a document that can be reused. All building blocks are contained in galleries in the UI for easy use. Where are these building blocks stored? The simple answer is that the contents of all building block galleries are stored in templates. Specifically, there are several locations you can save your building block content in: 1. Word's building blocks template 2. Word's Normal template 3. Any custom template…” More of this is here:\n\n    http://blogs.msdn.com/microsoft_office_word/\n        archive/2007/02/20/deploying-building-blocks.aspx\n\nAs of this writing, the preferred choice is to use Building Blocks in the Normal template of the type wdTypeCustomQuickParts. This implies that there are several types of Building Blocks. The enumeration of types is here:\n\n    http://msdn.microsoft.com/en-us/library/bb243303.aspx\n",
    "ItemText": null,
    "CreateDate": "2008-09-01T21:08:51.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-01T21:08:51.0000000",
    "DocumentId": "2076072027",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5747",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Word 2007 VBA: RefreshCustomQuickParts()",
    "SortOrdinal": null,
    "ItemChar": "Public Sub RefreshCustomQuickParts()\n    Dim objRow As Word.Row\n    Dim objCell As Word.Cell\n    Dim strEntryName As String, strCategoryName As String, objEntryRange As Word.Range\n    Dim strMsg As String\n    Dim objNode As Word.XMLNode\n    Dim objContentType As WdBuildingBlockTypes\n    Dim objWordRange As Word.Range\n    Dim i As Integer\n\n    With Application\n        'Check for an active Document:\n        If .Documents.count = 0 Then\n            strMsg = \"Please open a Word Document.\"\n            Call VBA.MsgBox(strMsg, vbInformation + vbOKOnly, .Name)\n            Exit Sub\n        End If\n        \n        'Verify the document with the data:\n        If .ActiveDocument.Name <> \"Custom Quick Parts.docx\" Then\n            strMsg = \"Please open or activate Word Document \"\"Custom Quick Parts.docx.\"\"\"\n            Call VBA.MsgBox(strMsg, vbInformation + vbOKOnly, .Name)\n            Exit Sub\n        End If\n\n        .System.Cursor = wdCursorWait\n\n        strCategoryName = \"Songhay Custom Quick Parts\"\n        \n        For Each objRow In .ActiveDocument.Tables(1).Rows\n            For Each objCell In objRow.Cells\n                With objCell\n                    \n                    Set objNode = .Range.XMLNodes(1)\n                    \n                    If .ColumnIndex = 1 Then\n                        strEntryName = objNode.Text\n                    ElseIf .ColumnIndex = 2 Then\n                        Set objEntryRange = objNode.Range\n                    End If\n                \n                End With\n            Next\n            \n            Call .NormalTemplate.BuildingBlockEntries.Add(strEntryName, wdTypeCustomQuickParts, strCategoryName, objEntryRange)\n\n        Next\n\n        .System.Cursor = wdCursorNormal\n\n        Call VBA.MsgBox(\"Custom Quick Parts refreshed.\", vbInformation + vbOKOnly, .Name)\n    End With\n\nEnd Sub\n\nPublic Sub RefreshCustomQuickPartsClick(ByVal control As IRibbonControl)\n    Call RefreshCustomQuickParts\nEnd Sub\n",
    "ItemText": null,
    "CreateDate": "2008-09-01T21:10:11.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-01T21:10:11.0000000",
    "DocumentId": "2076072028",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5748",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ousmane Sembène Interviews; Guy Hennebelle/1969; Sembène on the French Monopolies of Film Distribution; p. 11",
    "SortOrdinal": null,
    "ItemChar": "It is a permanent scandal. All the movie theaters of our countries  are the property of two French monopolies: the COMACICO and the SECMA. The first holds eighty-four of them and the second fifty-six. The few African cinema owners are forced to bypass the COMACICO or the SECMA to supply themselves. Those two companies establish the programming to their liking, notwithstanding local censures. What I criticize, among other things, about these two companies (as do the majority of my colleagues) is that they do not contribute to the development of the African cinema. They have never financed even one African film. To distribute *Mandabi*, the COMACICO initially proposed a ridiculously tiny sum to me. Recently I managed a little more serious agreement, but for multiple reasons this is far from giving me complete satisfaction. I am a convinced advocate of pure and simple nationalization of the distribution and circulation as it is the case in Algeria for example. This is the only way to change things. If we don’t assume ownership of our own distribution, we can hardly work safely…\n\n[From *Les Lettres Françaises* no. 1404 (1971). Translated from the French by Julien Enoka Ayemba.]\n",
    "ItemText": null,
    "CreateDate": "2008-09-07T12:46:26.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-07T12:46:26.0000000",
    "DocumentId": "2076072029",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5749",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Outlook 2007: Flippant Remarks about RSS Feed Support",
    "SortOrdinal": null,
    "ItemChar": "RSS feed support in Outlook 2007 is not satisfactory. It sucks. There is an article from tech-recipes.com, “Outlook 2007: Remove or Disable RSS Feed Support,” here:\n\n    http://www.tech-recipes.com/rx/\n        2031/outlook_2007_remove_or_disable_rss_feed_support\n\nI recall following the instructions for “Mass Remove Feed Subscriptions from Outlook” and they did not work. I am not blaming the instructions. I am blaming Outlook. Here are the instructions:\n\n1. Click Tools menu and then Options again.\n2. Select the poorly named Mail Setup tab\n3. Click the Data Files button\n4. Click the RSS Feeds tab\n5. Click the first feed and scroll down to the bottom of the feed list\n6. Hold the SHIFT key and click the last feed. All feeds should now be selected.\n7. Click the Remove button\n8. Confirm you want them all deleted.\n\nFormer MVP and Microsoft Employee (as of this writing) Daniel Moth has a more effective way of dealing with this crap:\n\n1. Close Outlook 2007 Beta 2\n2. Launch Outlook 2003 and connect it to the same exchange server\n3. Notice how the RSS Feeds appears as a *regular* folder in Outlook 2003 (it treats it as any other user-created folder)\n4. Delete the “RSS Folder” (obviously you can't do that in O12 as it is special, as the icon indicates)\n\nFor more details, see:\n\n    http://www.danielmoth.com/Blog/2006/08/\n        deleting-all-rss-feeds-in-outlook-2007.html\n",
    "ItemText": null,
    "CreateDate": "2008-09-03T13:00:04.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-03T13:00:04.0000000",
    "DocumentId": "2076072030",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5750",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ousmane Sembène Interviews; Harold D. Weaver/1972; Sembène on Africans Wanting Cowboy Films; p. 33",
    "SortOrdinal": null,
    "ItemChar": "That’s the same answer we get from the French or from our African leaders because they have a complete ignorance of the role of films. We think that, little by little, we are changing this mentality which says that a cowboy film is the only kind of film that the African public likes. I think it’s up to African filmmakers to fight to change this defective distribution. The African public is now beginning to appreciate our films, so saying that it is a cowboy film that the African public prefers is not really telling the truth. For instance, there is a public now prepared to receive Afro-American films in Ghana, Nigeria, Tanzania, Kenya, etc. For the African public the most well-known actors are Sidney Poitier and Harry Belafonte, and I’m sure a film like *Super Fly* would have the largest box-office of any film in Africa. So you can see that it’s not really a question of a preference for cowboy films, it’s just that those distributors and certain government leaders who deal with distribution prefer cowboy films.\n\n[From *The Cineaste Interviews*, edited by Dan Georgakas (Chicago: Lake View Press, 1983)]\n",
    "ItemText": null,
    "CreateDate": "2008-09-07T12:49:29.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-07T12:49:29.0000000",
    "DocumentId": "2076072031",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5751",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ousmane Sembène Interviews; Harold D. Weaver/1972; Sembène on African Men of Culture; p. 32",
    "SortOrdinal": null,
    "ItemChar": "The Europeans say that our old men are good, but we never say that a man is good, we say that he is a man of culture. We mean that he is from an agreeable society and has an elevated sense of humanity. It has nothing to do with weakness. You can be present at meetings of old men where for hours they don’t say anything to each other, they just sort of joke around. But in the process of joking they say what they want to say. A man of culture for us is one who has the key word for every situation. And you can go anywhere you want to and you’ll always find the same attitude—you can’t be a witness or a judge where we are as long as the community doesn’t recognize you as one. You can have all kinds of diplomas and not be invited to participate; and the greatest humiliation for a man in Africa is never to be called upon in difficult times.\n\n[From *The Cineaste Interviews*, edited by Dan Georgakas (Chicago: Lake View Press, 1983)]\n",
    "ItemText": null,
    "CreateDate": "2008-09-07T12:49:02.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-07T12:49:02.0000000",
    "DocumentId": "2076072032",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5752",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ousmane Sembène Interviews; Gerald Peary and Patrick McGilligan/1972; Sembène on African Film Distribution and Neocolonialism; pp. 43–44",
    "SortOrdinal": null,
    "ItemChar": "In West Africa, distribution remains in the hands of two French companies that have been there since colonial times. Because of the active push of our native film-makers, such as our group in Senegal, they are forced to distribute our films, though they do so very slowly. Of the twenty we have made in Senegal, five have been distributed. It is a continuous fight, for we don’t think we can resolve the problems of cinema independent of the other problems of African society.\n\nNeocolonialism is passed on culturally, through the cinema. And that’s why African cinema is being controlled from Paris, London, Lisbon, Rome, and even America. And that’s why we see almost exclusively the worst French, American, and Italian films. Cinema from the beginning has worked to destroy the native African culture and the myths of our heroes. A lot of films have been made about Africa, but they are stories of European and American invaders with Africa serving as a decor. Instead of being taught our ancestry, the only thing we know is Tarzan. And when we do look on our past, there are many among us who are not flattered, who perceive Africa with a certain alienation learned from the cinema. Movies have infused a European style of walking, a European style of doing. Even African gangsters are inspired by the cinema.\n\nAfrican society is in a state of degeneracy, reflected also in our imitative art. But fortunately, unknown even to many Africans themselves, African art has continued, even as the black bourgeoisie had aped European and American models. In African cities is produced what we call “airport art,” whittled wood that has been blackened; true art remains in the villages and rural communities, preserved in the ceremony and religion. It is from believing in this communal art that we can be saved from the internal destruction.\n\n[From *Film Quarterly* (Spring 1973)]\n",
    "ItemText": null,
    "CreateDate": "2008-09-07T12:42:07.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-07T12:42:07.0000000",
    "DocumentId": "2076072033",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5753",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ousmane Sembène Interviews; Pierre Haffner/1977; Sembène on African Culture Problems for Young Filmmakers; p. 91",
    "SortOrdinal": null,
    "ItemChar": "I saw many young people who want to make films and really believe in cinema—it is not a reproach—but my concern is that sometimes they are very weak in literature. There is a problem with culture in general, and first with their own culture, which they have ignored to an extent that they have not been brought up in a purely African culture, but neither a European one. These young people are in a state of redemption (I dare not say “unrootedness”). If they want to close the loop and return to something, a synthesis, they need knowledge broader than others… A deeper knowledge of these two cultures allows them to end the tearing apart.\n\n[From *Recherche, Padagogie et Culture*, no. 37 (1978). Translated from the French by Anna Rimpl and Annett Busch.]\n",
    "ItemText": null,
    "CreateDate": "2008-09-07T12:52:50.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-07T12:52:50.0000000",
    "DocumentId": "2076072034",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5754",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ousmane Sembène Interviews; Ulrich Gregor/1978; Sembène on the Nationalization of Film Distribution in Senegal; p. 109",
    "SortOrdinal": null,
    "ItemChar": "My films aren’t shown since the cinemas are controlled by the national distribution company. No progress has been made here at all. We’ve got the structures, it was nationalized, but things are the same as ever, and the conditions imposed on the African cinema are actually more difficult since nationalisation than they were before. The control exercised by the bourgeoisie over film is even stronger than in colonial times.\n\n[From *Framework*, no. 7/8 (1978)]",
    "ItemText": null,
    "CreateDate": "2008-09-07T12:55:04.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-07T12:55:04.0000000",
    "DocumentId": "2076072035",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5755",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ousmane Sembène Interviews; Fìrinne Nì Chréacháin/1992; Sembène on American ‘Gifts’ and Never Marrying an African Man; p.138",
    "SortOrdinal": null,
    "ItemChar": "America is a liberal capitalist country, an imperialist country which simply wants to call the shots. But if America is calling the shots in Senegal at present, it’s because those who govern Senegal allow this to happen. So we find ourselves with a society on its knees, waiting for America to provide. Never, ever, ever, in the space of ten years, have I felt so humiliated by my society as now. They give us ‘gifts’: a few thousand dollars worth of rice—mere chicken-feed. A society can’t live on handouts. A society that has its own culture can confront all sorts of calamities and adversities with its head held high. I always say, if I were a woman, I’d never marry an African. Women should marry real men, not mentally deficient ones.\n\n[Fìrinne Nì Chréacháin interviewed Sembène in African Affairs, vol. 91, no. 363 (1992)]",
    "ItemText": null,
    "CreateDate": "2008-09-06T11:09:59.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-06T11:09:59.0000000",
    "DocumentId": "2076072036",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5756",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ousmane Sembène Interviews; Fìrinne Nì Chréacháin/1992; Sembène on the TV in the Hut; p. 138",
    "SortOrdinal": null,
    "ItemChar": "Senegalese, or African society (I’m talking about the francophone countries) is no longer secreting values for the next generation. Take myself, father of a family, and others like me: we are no longer typical, living examples for our children. It’s the cinema, the TV, the video which are the channels for the new cultures, the new values: we, the older generation, are absent in our own families. I was born in the colonial era. I witnessed all the humiliation and self-abasement my father had to put up with in order to survive. But in the evenings, when we came home to our huts, we rediscovered our own culture. It was a refuge: we were ourselves again, we were free. Nowadays, the TV is right there inside the hut where, in the old days, the father, the mother, the aunt held sway and the grandmother told her stories and legends. Even that time is now taken away from us. So we are left with a society which is growing more and more impoverished, emptying itself of its creative substance, turning more and more to values it does not create.\n\n[Fìrinne Nì Chréacháin interviewed Sembène in African Affairs, vol. 91, no. 363 (1992)]\n",
    "ItemText": null,
    "CreateDate": "2008-09-07T12:39:34.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-07T12:39:34.0000000",
    "DocumentId": "2076072037",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5757",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ousmane Sembène Interviews; Françoise Pfaff/1992; Sembène on Young Filmmakers as Victims of Colonialism; p. 152",
    "SortOrdinal": null,
    "ItemChar": "No, I wouldn’t say that. What is essential for me is that we are moving forward. Someone has to be take over from the first generation of African filmmakers. We have young filmmakers that are very able on a technical level, but their ignorance concerning the African cultures is frightening. It is not their fault; it is the “ecole française,” the french education they have been given. They are victims of colonialism. If you don’t know a culture to its roots, it is very difficult to express specific purposes or attitudes from inside of a cultural system. Sometimes I hear myself saying that some of our fellows, the new generation of Africans, are not different compared to the people of the diaspora. They live on African territory but nonetheless they ignore African cultures. We, those who had the chance to go to school, we know that what they teach us there involves Greek or Indo-European civilizations, but not a word about African civilizations.\n\n[Previously unpublished. Translated from the French by Anna Schrade.]\n",
    "ItemText": null,
    "CreateDate": "2008-09-07T14:27:51.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-07T14:27:51.0000000",
    "DocumentId": "2076072038",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5758",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ousmane Sembène Interviews; Bernd Wolpert/1995; Sembène on African Aid and Privatized Recolonization; p.165",
    "SortOrdinal": null,
    "ItemChar": "People rely on being helped here. You have governments in Africa that are paid far too high salaries in comparison to the productivity of their country. In Senegal a member of parliament earns between 80,000 and 100,000 Franc-CFA per month. A farmer’s family of five earns about 150,000 Francs a year. Who profits from aid, the bourgeoisie or the farmers? And when the bourgois African complains about poverty, he speaks about himself and not about the farmers! The aid given to the Africans is therefore extremely bad for Africa’s development. You have to realize that those who rule cannot rule without outside help. And the debts, which exist because of this situation, do no good at all. At the moment you can witness the recolonization of francophone West Africa—a recolonization by the most legal means you can imagine. Private French companies, for instance, begin to control the big cities’ water and energy supplies communication and TV stations. And what is left? Nothing.\n\n[From *EZEF*, http://www.gep.de/ezef/Guelwaar-2006.pdf. Translated from the German by Gabi Schneider.]\n",
    "ItemText": null,
    "CreateDate": "2008-09-07T14:46:44.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-07T14:46:44.0000000",
    "DocumentId": "2076072039",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5759",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ousmane Sembène Interviews; Samba Gadjigo/2004; Sembène on Maternal Africa; pp. 191–192",
    "SortOrdinal": null,
    "ItemChar": "I think that Africa is maternal. The African male is very maternal; he loves his mother; he swears on his mother. When someone insults his father, the man can take it; but once his mother’s honor has been hurt, the man feels he’s not worthy of life if he doesn’t defend his mother. According to our traditions, a man has no intrinsic value; he receives his value from his mother. This concept goes back to before Islam: the good wife, the good mother, the submissive mother who knows how to look after he husband and family. The mother embodies our society… I continue to think that African society is very maternal. Maybe we have inherited from our pre-Islamic matriarchy. That said, to me, every man loves a woman. We love them. Besides, more than 50 percent of the African population are women. More than half of the 800,000,000 that we are. This is a force that we must be able to mobilize for our own development. There’s no one that works as hard as the rural woman.\n\n[From *Rabat* (April 11, 2004)]\n",
    "ItemText": null,
    "CreateDate": "2008-09-07T23:18:14.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-07T23:18:14.0000000",
    "DocumentId": "2076072040",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5760",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ousmane Sembène Interviews; Samba Gadjigo/2004; Sembène on Cheikh Anta Diop, Lucy, Herodotus and Female Circumcision (Excision); p.193",
    "SortOrdinal": null,
    "ItemChar": "It’s said that the first men are born in Africa; they talk about Lucy. They also tell us about Egypt: the conflict we have with the Maghreb and the European world. Cheikh Anta Diop, in his book with which I agree, shows that all civilizations originate from the Egypt of the Pharaohs, which was a black civilization. The same with excision, it comes from a black goddess. When Herodotus saw her, it was the first time the subject of excision came up. It was the fourth or fifth century BC. On this continent we have Egyptian values, those from Zimbabwe, those born in Nigeria. But what is the origin of the breakdown that we’re experiencing now? We must ask ourselves this question. Not to cry about the past, but I think that we can recreate these values from our current African perspective. We have a lot of history. It’s our patrimony; we must reseize it and tell ourselves we can do it. But it’s a psychological problem.\n",
    "ItemText": null,
    "CreateDate": "2008-09-09T20:55:12.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-09T20:55:12.0000000",
    "DocumentId": "2076072041",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5761",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ousmane Sembène Interviews; Jared Rapfogel and Richard Porton/2004; Sembène on Polygamy; pp. 203–204",
    "SortOrdinal": null,
    "ItemChar": "You have to understand how these women are raised. There’s a real hierarchy—the senior wife, the second wife, and the junior wife. Then the man is the supreme master, so to speak. But, when I say that the man is the supreme master, it is because he *believes* this. In actuality, the first wife, not the husband, wields the power. People don’t say this, but it’s something that’s unspoken.\n\nThat’s why in the context of polygamy in my society, I just see the man as a progenitor—the only role he has is to make babies *[laughs]*. He has to satisfy his own sexual appetites, but he also has to satisfy the three women’s sexual needs. He’s just a sex machine, so to speak *[laughs]*. Of course, in this situation there’s inevitably some sort of rivalry between the three wives because they’re often denied sexual satisfaction. And when the man is around, no matter what he’s done during the previous night, he has to perform sexually. To help him perform, the woman feeds him food that functions as an aphrodisiac. Since women know more about these aphrodisiacs than men do, they share their secrets.\n\n[From *Cineaste* (Winter 2004)]",
    "ItemText": null,
    "CreateDate": "2008-09-10T19:04:10.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-10T19:04:10.0000000",
    "DocumentId": "2076072042",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5762",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP Zend Framework Exception: “Cannot send headers; headers already sent”",
    "SortOrdinal": null,
    "ItemChar": "It is important to remember that this exception is thrown when there is a blank line at the top of the PHP script.\n\nMartin Burger: “I am so sorry for bothering you all. Needless to say, there was an empty line in one of my included scripts (pretty much at the and of a long chain of includes...)”\n\n[\n    http://www.nabble.com/Zend_Controller_Response_Exception\n        ---Cannot-send-headers--headers-already-sent-td17608333.html\n]",
    "ItemText": null,
    "CreateDate": "2008-09-17T16:10:48.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-17T16:10:48.0000000",
    "DocumentId": "2076072043",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5763",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about Windows Search 4.0 and Google Desktop 5.5; Microsoft Search Server",
    "SortOrdinal": null,
    "ItemChar": "From Brad Linder: “Windows Search gives you far more control over which files and folders you want to index. …Windows Search does an excellent job of sorting search results into distinct categories. …Google Desktop, on the other hand just sort of spits everything out at once, without dividing your results up into categories.”\n\n[\n    http://www.downloadsquad.com/\n        2008/03/30/windows-search-4-0-vs-google-desktop-5-5/\n]\n\n“Windows Search (formerly known as Windows Desktop Search or WDS on Windows XP and Windows Server 2003) is an indexed desktop search platform released by Microsoft for the Windows operating system.[1] Windows Search for Windows Vista and Windows Server 2008…”\n\n[http://en.wikipedia.org/wiki/Windows_Search]\n\n“Microsoft Search Server (MSS) is an enterprise search platform from Microsoft, based on the search capabilities of Microsoft Office SharePoint Server. MSS shares its architectural underpinnings with the Windows Search platform for both the querying engine as well as the indexer. Microsoft Search Server was once known as SharePoint Server for Search.”\n\n[http://en.wikipedia.org/wiki/Microsoft_Search_Server]\n\n“A Microsoft Search Server 2008 or Microsoft Search Server 2008 Express configuration can range from a Basic installation (a stand-alone deployment on a single server) to an Advanced installation that uses multiple servers.”\n\n[http://technet.microsoft.com/en-us/library/bb905370.aspx]\n\n",
    "ItemText": null,
    "CreateDate": "2008-09-17T16:19:52.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-17T16:19:52.0000000",
    "DocumentId": "2076072044",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5764",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about NTFS 8.3 Name Creation",
    "SortOrdinal": null,
    "ItemChar": "“The creation of 8.3 filenames and directories for all long filenames and directories on NTFS partitions may decrease directory enumeration performance.”\n\n[http://support.microsoft.com/kb/121007]\n\nFind the NtfsDisable8dot3NameCreation entry here:\n\n    HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem \n\nSet it from 0 (default) to 1 to disable 8.3 Name Creation.\n\n“Although this setting increases file performance, applications that cannot process long file names, and computers that use different code pages, might not be able to find the files.”\n\n[http://blogs.msdn.com/adioltean/archive/2005/01/27/362105.aspx]\n",
    "ItemText": null,
    "CreateDate": "2008-09-17T16:24:17.0000000",
    "EndDate": null,
    "ModificationDate": "2008-09-17T16:24:17.0000000",
    "DocumentId": "2076072045",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5765",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: Sorting Strings without LINQ; System.Collections.Generic; String.Compare",
    "SortOrdinal": null,
    "ItemChar": "using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        List<string> l = new List<string>();\n\n        l.Add(\"c12three\");\n        l.Add(String.Empty);\n        l.Add(\"5six7\");\n        l.Add(\"_score\");\n        l.Add(\"zounds\");\n        l.Add(null);\n        l.Add(\"#pound1\");\n        l.Add(\"#pound2\");\n        l.Add(\"apple\");\n\n        l.Sort(new Comparison<string>(SortByString));\n\n        foreach(string s in l)\n        {\n            Console.WriteLine(s);\n        }\n\n        Program.ConsoleKey();\n    }\n\n    static void ConsoleKey()\n    {\n        Console.WriteLine(\n            string.Format(\"{0}Press any key to continue...\",\n            Environment.NewLine));\n\n        Console.ReadKey(false);\n\n    }\n\n    private static int SortByString(string s1, string s2)\n    {\n        return String.Compare(s1,s2);\n    }  \n}\n",
    "ItemText": null,
    "CreateDate": "2008-10-01T16:55:26.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-01T16:55:26.0000000",
    "DocumentId": "2076072046",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5766",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: Sorting Strings without LINQ Using a Delegate; System.Collections.Generic; String.Compare",
    "SortOrdinal": null,
    "ItemChar": "using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        List<string> l = new List<string>();\n\n        l.Add(\"c12three\");\n        l.Add(String.Empty);\n        l.Add(\"5six7\");\n        l.Add(\"_score\");\n        l.Add(\"zounds\");\n        l.Add(null);\n        l.Add(\"#pound1\");\n        l.Add(\"#pound2\");\n        l.Add(\"apple\");\n\n        l.Sort(new Comparison<string>(\n            delegate (string s1, string s2)\n            { return String.Compare(s1, s2); }));\n\n        foreach(string s in l)\n        {\n            Console.WriteLine(s);\n        }\n\n        Program.ConsoleKey();\n    }\n\n    static void ConsoleKey()\n    {\n        Console.WriteLine(\n            string.Format(\"{0}Press any key to continue...\",\n            Environment.NewLine));\n\n        Console.ReadKey(false);\n\n    }\n}\n",
    "ItemText": null,
    "CreateDate": "2008-10-01T17:07:06.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-01T17:07:06.0000000",
    "DocumentId": "2076072047",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5767",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: Sorting DateTime Values without LINQ Using a Delegate; System.Collections.Generic; DateTime.Compare",
    "SortOrdinal": null,
    "ItemChar": "using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        List<DateTime> l = new List<DateTime>();\n\n        l.Add(new DateTime(2008, 2, 24, 11, 32, 15));\n        l.Add(new DateTime(1808, 6, 12, 4, 0, 10));\n        l.Add(new DateTime(1908, 2, 24, 11, 32, 15));\n        l.Add(new DateTime(1945, 7, 6, 13, 0, 0));\n        l.Add(new DateTime(1619, 2, 24, 23, 32, 15));\n\n        l.Sort(new Comparison<DateTime>(\n            delegate (DateTime d1, DateTime d2)\n            { return DateTime.Compare(d1, d2); }));\n\n        foreach(DateTime d in l)\n        {\n            Console.WriteLine(d);\n        }\n\n        Program.ConsoleKey();\n    }\n\n    static void ConsoleKey()\n    {\n        Console.WriteLine(\n            string.Format(\"{0}Press any key to continue...\",\n            Environment.NewLine));\n\n        Console.ReadKey(false);\n\n    }\n}\n",
    "ItemText": null,
    "CreateDate": "2008-10-01T17:09:02.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-01T17:09:02.0000000",
    "DocumentId": "2076072048",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5768",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about Windows SharePoint Services (WSS) 3.0",
    "SortOrdinal": null,
    "ItemChar": "Windows SharePoint Services 3.0 Tools Visual Studio 2008 Extensions, Version 1.2 requires WSS. This may seem obvious or a future version for Visual Studio will have ‘disconnected’ Setup option.\n\nThese were installed:\n\n* Windows SharePoint Services 3.0 with Service Pack 1-x86\n\n* Infrastructure Update for Windows SharePoint Services 3.0 (KB951695)-x86\n\n* Microsoft SharePoint Administration Toolkit v2.0 x86\n\nThe non-Farm (default) install will make a “SharePoint - 80” Web Application that will take over any preexisting IIS site on port 80. The old site will be stopped and its files untouched.\n\nThe default install will generate a SQL Embedded database with this Named Pipe connection:\n\n    np:\\\\.\\pipe\\MSSQL$Microsoft##SSEE\\sql\\query\n\nThis is stored at this location:\n\n    %SystemRoot%\\SYSMSI\\SSEE\\MSSQL.2005\\MSSQL\\DATA\n\nThis (again) might be obvious but SharePoint stores documents as binary BLOBs in a content database. Sheetal Jain explores this in “SharePoint and Large files ( > 1GB) in a Document Library?” here:\n\n    http://office12.blogspot.com/2007/06/\n        sharepoint-and-large-files-1gb-in.html\n",
    "ItemText": null,
    "CreateDate": "2008-10-11T00:29:24.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-11T00:29:24.0000000",
    "DocumentId": "2076072049",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5769",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: Converting GMT (Greenwich Mean Time) to Local Time; System.TimeZone.CurrentTimeZone; DateTime.ToLocalTime()",
    "SortOrdinal": null,
    "ItemChar": "Converting GMT (Greenwich Mean Time) to local time is useful for reading the publication dates in an RSS feed. When you are unconcerned about the time zone adjustment rules in effect for the current date/time, then use the DateTime.ToLocalTime() method:\n\n    DateTime d = DateTime.Parse(gmtString);\n    DateTime dLocal = d.ToLocalTime();\n\nWhen time zone adjustment rules are an issue then use the TimeZone.ToLocalTime() method:\n\n    DateTime d = DateTime.Parse(gmtString);\n    DateTime dLocal = TimeZone.CurrentTimeZone.ToLocalTime(d);\n\nThe TimeZone.GetDaylightChanges() and the TimeZone.GetUtcOffset() methods can be used to determine a numeric value for time zone adjustment rules.",
    "ItemText": null,
    "CreateDate": "2008-10-17T00:35:06.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-17T00:35:06.0000000",
    "DocumentId": "2076072050",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5770",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Schizophrenia as “Brain Diabetes”",
    "SortOrdinal": null,
    "ItemChar": "Some scientists studying schizophrenia have already come up with terms such as ‘cerebral diabetes’, ‘brain diabetes’, pointing to abnormal glucose transport systems across the membranes of brain cells. This comes very close to what we understand hypoglycemia to be, but we would prefer Dr George Samra’s definition of ‘Cerebral Hypoglycia’…\n\n[http://www.hypoglycemia.asn.au/articles/research_hypoglycemia.html]\n\nChances are good that in the midst of all this talk about diabetes, you simply haven't heard much about this condition of hypoglycemia. But that doesn't mean it doesn't exist. Indeed, over the years, a number of respected physicians and researchers have found that people with hypoglycemia have reported up to 125 symptoms! …You may be intrigued, as I was, to discover that hypoglycemia has been called the \"Great Imitator\" because its strange, startling symptoms can mimic a frightening array of diseases and conditions.\n\n[http://www.scienceblog.com/cms/is-it-schizophrenia-bipolar-disorder-neurosis-or-maybe-just-hypoglycemia-12514.html]",
    "ItemText": null,
    "CreateDate": "2008-10-17T00:41:11.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-17T00:41:11.0000000",
    "DocumentId": "2076072051",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5771",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Casein and Mucous",
    "SortOrdinal": null,
    "ItemChar": "Casein, the naturally occurring protein in dairy products, can promote the formation of mucus. It can also make existing mucus thicker in your nose and sinuses, leaving you completely congested. It may also cause a runny nose or the ever annoying post nasal drip.\n\n[http://www.fitsugar.com/280961]\n",
    "ItemText": null,
    "CreateDate": "2008-10-17T00:42:19.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-17T00:42:19.0000000",
    "DocumentId": "2076072052",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5772",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Allergies and Mucus",
    "SortOrdinal": null,
    "ItemChar": "If your kids suffer from chronic runny noses and sore throats, it might be time to dump the dairy. According to the American Academy of Allergy, Asthma and Immunology, cow’s milk is the number one-cause of food allergies in children. According to the former director of pediatrics at Johns Hopkins University, Dr. Frank Oski, there is evidence to indicate that up to half of U.S. children have some allergic reaction to milk. For these kids (and for adults who are allergic to dairy foods), milk is a mucus maker and can lead to persistent problems such as chronic coughs and sinus infections, asthma, and ear infections.\n\n[http://www.milksucks.com/mucus.asp]\n",
    "ItemText": null,
    "CreateDate": "2008-10-17T00:42:53.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-17T00:42:53.0000000",
    "DocumentId": "2076072053",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5773",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The Genetic Diversity of Africans",
    "SortOrdinal": null,
    "ItemChar": "Humans started in Africa, spread to Asia around 60,000 years ago, thence to Australia 50,000 years ago, Europe 35,000 years ago and America 15,000 years ago. What have not been so well examined, though, are the tree's African roots. The genetic diversity of Africans probably exceeds that of the rest of the world put together. But the way that diversity evolved is unclear.\n\n[http://www.economist.com/science/PrinterFriendly.cfm?story_id=11088535]\n",
    "ItemText": null,
    "CreateDate": "2008-10-17T00:46:44.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-17T00:46:44.0000000",
    "DocumentId": "2076072054",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5774",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about SharePoint vs. File Shares",
    "SortOrdinal": null,
    "ItemChar": "SharePoint uses the BLOB data type in SQL Server to store files. SharePoint is the primordial ancestor of WinFS. It is tempting to see it as a full replacement for a traditional file system like NTFS. But there are limitations explored in “SharePoint vs. File Shares” here:\n\n    http://spsdreamjob.spaces.live.com\n        /blog/cns!D0B14C6B969D7501!131.entry\n\n* “Long Paths—WebDav has a limit of 260 chars, and so does MOSS/WSS [or less].”\n\n* “Weird files with inter-file references—the most common problem here includes Excel spreadsheets that are typically peppered with references to data stored in other excel files…”\n\n* “Weird file names—Infrequently users will have filenames that are like test...txt or test#%.txt as a requirement of some application, or as part of a file naming standard.”\n\nAccording to “Is the File Server Dead?” by Joel Oleson, these are valid uses of the File System over SharePoint:\n\n* Product Distribution (Product packages like Office)\n* SMS distribution point (desktop patches and hot fixes)\n* NT Backups, Backup Servers and Desktop Backups\n* Database Storage\n* Large Audio/Video and Streaming Media and other large archive read only media such as DVDs, CDs storage (.iso, .wmv, .ram, .vhd)\n* Developer Source Control\n* Batch, Command Scripts, Executables (.exe, .vbs, .cmd, .bat)\n* Application Server... Client Application Storage Linked Files and File Dependencies -  (.lnk, .lck)\n* Archives and Dumps (.arj, .rar, .zip, .dmp, .bak)\n\n[http://blogs.msdn.com/sharepoint/archive/2007/01/02/is-the-file-server-dead.aspx]\n\n",
    "ItemText": null,
    "CreateDate": "2008-10-23T14:00:34.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-23T14:00:34.0000000",
    "DocumentId": "2076072055",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5775",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript: “The Miller Device”; Identifying an Array; Douglas Crockford",
    "SortOrdinal": null,
    "ItemChar": "The JavaScript language currently does not provide a good way to distinguish between objects and arrays. The typeof operator is broken: It identifies arrays as objects. Comparing a value's constructor property doesn't work because arrays created in a different frame will have a different constructor. There are do-it-yourself tests for arrayness, but they are complicated and unreliable.\n\nMark Miller of The Google, by closely reading the ECMAScript standard, has discovered a simpler, more reliable test.\n\n    Object.prototype.toString.apply(value) === '[object Array]'\n\n[http://blog.360.yahoo.com/blog-TBPekxc1dLNy5DOloPfzVvFIVOWMB0li?p=916]",
    "ItemText": null,
    "CreateDate": "2008-10-17T18:18:03.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-17T18:18:03.0000000",
    "DocumentId": "2076072056",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5776",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SharePoint Information Design: “Folders in the file system and SharePoint should be banned”; Michael Reinhart",
    "SortOrdinal": null,
    "ItemChar": "“Custom Document Properties are metadata. Being able to manipulate file listings based on their metadata is one of the core pieces of functionality in SharePoint. My opinion? —don’t use folders in the file system OR SharePoint.  In a SharePoint document library, custom document properties can be promoted or demoted to/from the document library’s columns (effectively linking the two). I believe we should use SharePoint, properly describe our documents with Columns (and/or custom properties), and then use custom views to filter and/or group based on these. It gives you the ability to simulate a folder like experience, but it’s important to note that in SharePoint, if you nest documents in folders, this doesn’t work.”\n\n[http://www.specialinvestigations.org/blog/\nFoldersInTheFileSystemAndSharePointShouldBeBanned.aspx]",
    "ItemText": null,
    "CreateDate": "2009-04-22T12:35:21.0000000",
    "EndDate": null,
    "ModificationDate": "2009-04-22T12:35:21.0000000",
    "DocumentId": "2076072057",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5777",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "NetBeans: Flippant Remarks about the --userdir Startup Parameter",
    "SortOrdinal": null,
    "ItemChar": "Petr Pisl’s article about the --userdir has a paragraph you should read first: “I don't use installers, I always download NetBeans as a zip file. These are available on nightly build download page, where OS Independent Zip item in has to be selected in the Platform combobox. …”\n\n[http://blogs.sun.com/netbeansphp/entry/userdir]\n\nThe assumption here is that not using the excellent installer for NetBeans makes using the --userdir parameter easier. I could be wrong about this…",
    "ItemText": null,
    "CreateDate": "2008-10-17T18:47:16.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-17T18:47:16.0000000",
    "DocumentId": "2076072058",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5778",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "IIS 6.0: iisreset.exe command line parameters; Internet Information Services",
    "SortOrdinal": null,
    "ItemChar": "IISRESET.EXE (c) Microsoft Corp. 1998-1999\n\nUsage: iisreset [computername]\n\n    /RESTART\n        Stop and then restart all Internet services.\n\n    /START\n        Start all Internet services.\n\n    /STOP\n        Stop all Internet services.\n\n    /REBOOT\n        Reboot the computer.\n\n    /REBOOTONERROR\n        Reboot the computer if an error occurs when starting,\n        stopping, or restarting Internet services.\n\n    /NOFORCE\n        Do not forcefully terminate Internet services\n        if attempting to stop them gracefully fails.\n\n    /TIMEOUT:val\n        Specify the timeout value ( in seconds ) to wait\n        for a successful stop of Internet services.\n        On expiration of this timeout the computer can be rebooted\n        if the /REBOOTONERROR parameter is specified.\n        The default value is 20s for restart, 60s for stop,\n        and 0s for reboot.\n\n    /STATUS\n        Display the status of all Internet services.\n\n    /ENABLE\n        Enable restarting of Internet Services on the local system.\n\n    /DISABLE\n        Disable restarting of Internet Services on the local system.\n\nFor more information, see: “Restarting IIS (IIS 6.0)” here:\n\n    http://www.microsoft.com/technet/prodtechnol/\n        WindowsServer2003/Library/IIS/\n            003ed2fe-6339-4919-b577-6aa965994a9b.mspx?mfr=true\n",
    "ItemText": null,
    "CreateDate": "2008-10-17T19:41:59.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-17T19:41:59.0000000",
    "DocumentId": "2076072059",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5779",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PROBLEM: “You cannot open HTML Help files [*.CHM] from Internet Explorer after you install security update 896358 or Windows Server 2003 Service Pack 1”; 902225",
    "SortOrdinal": null,
    "ItemChar": "After you install security update 896358 or Microsoft Windows Server 2003 Service Pack 1 (SP1), you may experience one or both of the following symptoms after you click a link to an HTML Help .chm file in Internet Explorer:\n\n* Topics in the .chm file cannot be viewed when you click Open instead of Save in the File Download dialog box.\n\n* Topics in the .chm file cannot be viewed when you click Save in the File Download dialog box, and you then try to open the file.\n\nCAUSE\nSecurity update 896358 and Windows Server 2003 SP1 include changes to the InfoTech protocol that block the ability to view remote content. These changes were introduced to reduce security vulnerabilities in HTML Help. After you install 896358 or Windows Server 2003 SP1, files in the Temporary Internet Files folder are treated as content from the Internet zone. Therefore, files may be blocked when you click Open in the File Download dialog box. Additionally, after you install 896358 or Windows Server 2003 SP1, Attachment Manager may treat a downloaded .chm file as an untrusted file. Therefore, you may not be able to open the file. These effects are expected and intended effects of installing the security update and of installing Windows Server 2003 SP1.\n\nRESOLUTION\n\n…\n\nMethod 2\n1. Right-click the CHM file, and then click Properties.\n2. Click Unblock.\n3. Double-click the .chm file to open the file.\n\n[http://support.microsoft.com/kb/902225]\n",
    "ItemText": null,
    "CreateDate": "2008-10-23T14:06:57.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-23T14:06:57.0000000",
    "DocumentId": "2076072060",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5780",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Firefox/Mozilla PROBLEM: “OK button grayed out / inactive / not working when trying to download a file”",
    "SortOrdinal": null,
    "ItemChar": "“I always click on a link to download a file and wait for a firefox window to appear. This window contains two options: \"Open with \" and \"Save to Disk\", and three buttons: \"Browse...\", \"OK\" and \"Cancel\".”\n\n“The problem is that \"OK\" button is playing up. Very often it's inactive. Sometimes clicking on the \"Browse...\" button or shuffling between \"Open with\" and \"Save to Disk\" or closing the window and trying to click on the link again magically makes it active. Sometimes it remains dead forever, though. See the picture attached.”\n\nFor me this problem went away when the window containing the buttons is not a pop-up window.\n\n[http://support.mozilla.com/tiki-view_forum_thread.php?locale=en-US&comments_parentId=4507&forumId=1]",
    "ItemText": null,
    "CreateDate": "2008-10-23T14:15:21.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-23T14:15:21.0000000",
    "DocumentId": "2076072061",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5781",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Travel and Money: Best Way To Get Cash, Best Credit Cards, and Safety Concerns”; mymoneyblog.com",
    "SortOrdinal": null,
    "ItemChar": "“Visa and Mastercard charge a standard 1% “conversion” fee on top of the wholesale “interbank” exchange rate.”\n\n[http://www.mymoneyblog.com/archives/2008/09/travel-and-money-best-way-to-get-cash-best-credit-cards-and-safety-concerns.html]",
    "ItemText": null,
    "CreateDate": "2008-10-23T14:18:29.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-23T14:18:29.0000000",
    "DocumentId": "2076072062",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5782",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Apache HTTP Server 2.x: Force HTTPS by Port; .htaccess",
    "SortOrdinal": null,
    "ItemChar": "RewriteEngine on\n\n#Force HTTPS by port:\nRewriteCond %{SERVER_PORT} !^443$\nRewriteRule (.*) https://%{SERVER_NAME}%{REQUEST_URI} [R=301,L]\n",
    "ItemText": null,
    "CreateDate": "2008-10-23T16:04:54.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-23T16:04:54.0000000",
    "DocumentId": "2076072063",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5783",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Pentatonic scale",
    "SortOrdinal": null,
    "ItemChar": "“A pentatonic scale is a musical scale with five pitches per octave in contrast to an heptatonic (seven note) scale such as the major scale. Pentatonic scales are very common and are found all over the world, including but not limited to Celtic folk music, Hungarian folk music, West African music, African-American spirituals, Jazz, American blues music and rock music, Sami joik singing, children's songs, the Greek traditional music and songs from Epirus, Northwest Greece and the music of Southern Albania, the tuning of the Ethiopian krar and the Indonesian gamelan, melodies of Korea, Japan, China and Vietnam (including the folk music of these countries), the Afro-Caribbean tradition, Polish highlanders from the Tatra Mountains, and Western Classical composers such as French composer Claude Debussy.”\n\n[http://en.wikipedia.org/wiki/Pentatonic_scale]\n",
    "ItemText": null,
    "CreateDate": "2008-10-28T12:54:46.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-28T12:54:46.0000000",
    "DocumentId": "2076072064",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5784",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "XSD Markup: SqlResultStream; Raw XML; http://schemas.microsoft.com/sqlserver/2004/SOAP/types/SqlResultStream/SqlResultStream.xsd",
    "SortOrdinal": null,
    "ItemChar": "<xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:sqlsoaptypes=\"http://schemas.microsoft.com/sqlserver/2004/SOAP/types\" xmlns:sqlmessage=\"http://schemas.microsoft.com/sqlserver/2004/SOAP/types/SqlMessage\" xmlns:sqlrowcount=\"http://schemas.microsoft.com/sqlserver/2004/SOAP/types/SqlRowCount\" xmlns:sqltransaction=\"http://schemas.microsoft.com/sqlserver/2004/SOAP/types/SqlTransaction\" attributeFormDefault=\"qualified\" elementFormDefault=\"qualified\" targetNamespace=\"http://schemas.microsoft.com/sqlserver/2004/SOAP/types/SqlResultStream\">\n  <xsd:annotation>\n    <xsd:documentation xml:lang=\"en\">&#xd;&#xa;(c) Copyright 2004, Microsoft Corporation&#xd;&#xa;&#xd;&#xa;The following schema for Microsoft SQL Server is presented in XML format and is for informational purposes only. Microsoft Corporation (\"Microsoft\") may have trademarks, copyrights, or other intellectual property rights covering subject matter in the schema.&#xd;&#xa;&#xd;&#xa;Microsoft does not make any representation or warranty regarding the schema or any product or item developed based on the schema. The schema is provided to you on an AS IS basis.  Microsoft disclaims all express, implied and statutory warranties, including but not limited to the implied warranties of merchantability, fitness for a particular purpose, and freedom from infringement. Without limiting the generality of the foregoing, Microsoft does not make any warranty of any kind that any item developed based on the schema, or any portion of the schema, will not infringe any copyright, patent, trade secret, or other intellectual property right of any person or entity in any country. It is your responsibility to seek licenses for such intellectual property rights where appropriate.&#xd;&#xa;&#xd;&#xa;MICROSOFT SHALL NOT BE LIABLE FOR ANY DAMAGES OF ANY KIND ARISING OUT OF OR IN CONNECTION WITH THE USE OF THE SCHEMA, INCLUDING WITHOUT LIMITATION, ANY DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL (INCLUDING ANY LOST PROFITS), PUNITIVE OR SPECIAL DAMAGES, WHETHER OR NOT MICROSOFT HAS BEEN ADVISED OF SUCH DAMAGES.&#xd;&#xa;</xsd:documentation>\n  </xsd:annotation>\n  <xsd:import namespace=\"http://schemas.microsoft.com/sqlserver/2004/SOAP/types\" />\n  <xsd:import namespace=\"http://schemas.microsoft.com/sqlserver/2004/SOAP/types/SqlMessage\" />\n  <xsd:import namespace=\"http://schemas.microsoft.com/sqlserver/2004/SOAP/types/SqlRowCount\" />\n\n  <xsd:import namespace=\"http://schemas.microsoft.com/sqlserver/2004/SOAP/types/SqlTransaction\" />\n  <xsd:complexType name=\"SqlResultStream\">\n    <xsd:choice minOccurs=\"1\" maxOccurs=\"unbounded\">\n      <xsd:element name=\"SqlRowSet\" type=\"sqlsoaptypes:SqlRowSet\" />\n      <xsd:element name=\"SqlXml\" type=\"sqlsoaptypes:SqlXml\" />\n      <xsd:element name=\"SqlMessage\" type=\"sqlmessage:SqlMessage\" />\n      <xsd:element name=\"SqlRowCount\" type=\"sqlrowcount:SqlRowCount\" />\n      <xsd:element name=\"SqlResultCode\" type=\"sqlsoaptypes:SqlResultCode\" />\n      <xsd:element name=\"SqlTransaction\" type=\"sqltransaction:SqlTransaction\" />\n\n    </xsd:choice>\n  </xsd:complexType>\n</xsd:schema>\n",
    "ItemText": null,
    "CreateDate": "2008-10-28T12:56:33.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-28T12:56:33.0000000",
    "DocumentId": "2076072065",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5785",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Linux to Windows Clipboard: This note is used to pass strings from Linux to Windows",
    "SortOrdinal": null,
    "ItemChar": "PODS/PODS40/scripts/schema-automation\n\ncbcvs1.medctr.ucla.edu\n\nedu.ucla.mccs.pods.schemas.util.ExcelToXml\n",
    "ItemText": null,
    "CreateDate": "2008-10-29T17:44:25.0000000",
    "EndDate": null,
    "ModificationDate": "2008-10-29T17:44:25.0000000",
    "DocumentId": "2076072066",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5786",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "XSLT 1.0: Flippant Remarks about xsl:template match=\"node()|@*\"; Copying All Nodes to Edit One Node; Understanding xsl:template priority; Doug Tidwell",
    "SortOrdinal": null,
    "ItemChar": "This declaration\n\n    xsl:template match=\"node()|@*\"\n\ncomes to me in this move:\n\n    <xsl:template match=\"node()|@*\">\n    <xsl:copy>\n        <xsl:apply-templates select=\"node()|@*\"/>\n    </xsl:copy>\n    </xsl:template>\n\nIt is an error to assume that xsl:template and xsl:apply-templates are matching/selecting the same thing in the same context. You can cause a java.lang.StackOverflowError when you run this transformation (in Java):\n\n    <xsl:template match=\"/\">\n    <xsl:copy>\n        <xsl:apply-templates select=\"/\"/>\n    </xsl:copy>\n    </xsl:template>\n\nThis error is thrown in the above because xsl:template and xsl:apply-templates in this second declaration is actually selecting the same thing. This should be a very violent clue that recursion is taking place as xsl:apply-templates calls its parent template. To speak in imperative programming terms, this is the violence of the infinite loop.\n\nTo avoid fears of recursion it may be best to rewrite the first template like this:\n\n    <xsl:template match=\"node()|@*\">\n    <xsl:copy>\n        <xsl:apply-templates select=\"./node()|./@*\"/>\n    </xsl:copy>\n    </xsl:template>\n\nThe ./ syntax reminds us that xsl:apply-templates is selecting in context—‘underneath’ any node or any attribute selected by the template. xsl:template is selecting any node or any attribute. The xsl:template is simply ‘shallow’ copying any node or any attribute with xsl:copy. (Please recall the difference between xsl:copy and xsl:copy-of.)\n\nDoug Tidwell reminds us that node() “returns all nodes, regardless of type…all element nodes, attribute nodes, processing-instruction nodes, etc.” So it may seem redundant to express node()|@* (any node or any attribute). However, Tidwell also reminds us that, “Be aware that using node() on the child axis does not return any attribute nodes, because attributes are not considered child nodes.” [XSLT 2nd Edition p. 547]\n\nIt is important to understand that  xsl:template match=\"node()|@*\" is so broad in scope that it will conflict with another template. Explicitly setting the template priority should clearly express programmer intent:\n\n    <xsl:template match=\"node()|@*\" priority=\"-10\">\n    <xsl:copy>\n        <xsl:apply-templates select=\"./node()|./@*\"/>\n    </xsl:copy>\n    </xsl:template>\n\nThis move permits any other template next to the one above to be invoked upon a successful match especially when its priority is greater than -10. The awesome power in the xsl:apply-templates element lies in the fact that it is the only XSLT element (apart from xsl:apply-imports) that can call multiple templates—‘any other template next to the one above.’\n",
    "ItemText": null,
    "CreateDate": "2008-11-10T11:48:46.0000000",
    "EndDate": null,
    "ModificationDate": "2008-11-10T11:48:46.0000000",
    "DocumentId": "2076072067",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5787",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "OpenXML: “What is the Difference Between the System.IO.Packaging and Microsoft.Office.DocumentFormat.OpenXml.Packaging Namespaces?”; Eric White",
    "SortOrdinal": null,
    "ItemChar": "There are two separate namespaces, each containing a number of classes, which you can use to open and get at the contents of Open XML documents.\n\n* System.IO.Packaging is part of the .NET Framework 3.0 and 3.5. The classes are in the WindowsBase assembly.\n\n* DocumentFormat.OpenXml.Packaging is in an external assembly that you can download and install. The classes are in the DocumentFormat.OpenXml assembly.\n\nNote that neither of the above namespaces help in any way with consuming the XML in the parts. You must still use an XML programming API, such as XmlReader, XmlDocument (or best, LINQ to XML), to consume and if necessary, produce the XML.\n\n[http://blogs.msdn.com/ericwhite/archive/2007/12/20/what-is-the-difference-between-the-system-io-packaging-and-microsoft-office-documentformat-openxml-packaging-namespaces.aspx]",
    "ItemText": null,
    "CreateDate": "2008-11-28T20:45:53.0000000",
    "EndDate": null,
    "ModificationDate": "2008-11-28T20:45:53.0000000",
    "DocumentId": "2076072068",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5788",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio 2008 PROBLEM: “Server Explorer not showing up on Visual Studio”; devenv.exe",
    "SortOrdinal": null,
    "ItemChar": "Some person with the handle speenr says (on http://forums.asp.net/t/1227004.aspx), “I had the same problem in VS2008. I tried to repair VS2008 installation, but it did not solve my problem. Only 'devenv /setup' brought success.” The problem is when VS2008 will not show the Server Explorer. Also, you may be prompted to refresh every database connection in the Solution you are loading. This is the fully qualified command to use to attempt to fix the problem:\n\n    \"%ProgramFiles%\\Microsoft Visual Studio 9.0\\Common7\\IDE\\devenv\" /setup\n\nYou may be interested in the files devenv.com and devenv.exe. Take a look at “DevEnv.com?—Sairama’s Tip of the Day” here:\n\n    http://www.hanselman.com/blog/DevEnvcomSairamasTipOfTheDay.aspx\n",
    "ItemText": null,
    "CreateDate": "2008-12-02T09:52:23.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T09:52:23.0000000",
    "DocumentId": "2076072069",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5789",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Java Practices: “Use System.exit with care”; javapractices.com",
    "SortOrdinal": null,
    "ItemChar": "System.exit should be used with care. The normal method of terminating a program is to terminate all user threads.\n\nCases in which System.exit is appropriate :\n\n    * utility scripts\n    * GUI applications, in which the event dispatch user thread is created in the background. \n\nHere, the program may be terminated by calling System.exit, or, for example, by setting JFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE).\n\nFrom Sun’s Portability Cookbook :\n\n“The System.exit method forces termination of all threads in the Java virtual machine. This is drastic....System.exit should be reserved for a catastrophic error exit, or for cases when a program is intended for use as a utility in a command script that may depend on the program's exit code.” \n\n[http://www.javapractices.com/topic/TopicAction.do?Id=86]",
    "ItemText": null,
    "CreateDate": "2008-12-02T12:34:39.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T12:34:39.0000000",
    "DocumentId": "2076072070",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5790",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Rhema and Logos; wikipedia.org",
    "SortOrdinal": null,
    "ItemChar": "From the primary verb Rheo (???) to flow or run , as water; and the suffix ma(µa) , a finite dispensation or portion (eg. \"charis\", grace ; but \"charisma\", a portion of grace, (spiritual) gift, etc. From Strong's Exhaustive Concordance, Greek word #4487. It can be found in the following New Testament passages (not exhaustive):\n\n    * Matthew 4:4 \"Man does not live by bread alone, but by every word that proceeds from the mouth of God.\" (also Luke 4:4)\n    * Matthew 12:36 *Matthew 12:36 \"... every idle word that men shall speak, they shall render account for it on the day of judgment...\"\n    * Matthew 18:16 \"...by the mouth of two or three witnesses every word ( NIV- matter ) may be established.\"\n    * Matthew 26:75 \" Then Peter remembered the word Jesus had spoken...\" (also Mark 14:72)\n    * Matthew 27:14 \" And He answered him not a word...\"\n    * Luke 1:38 \"Be it unto me according to your word\". (NIV - \"as you have said.\")\n    * Luke 2:29 \"according to your word\" (NIV - \" as You have promised.\")\n    * Luke 3:2 \" ...the word of God came to John son of Zechariah...\"\n    * Luke 5:5 \"...nevertheless at thy word I will let down the net.\" ( NIV - \"because you say so\" )\n    * John 3.34 \"For the one whom God has sent speaks the words of God, for God gives the Spirit without limit.\"\n    * John 8:20\n    * John 15:7 \"If you abide in Me, and My words abide in you, ask whatever you wish, and it shall be done for you.\"\n    * Acts 2:14\n    * Acts 6:11,13\n    * Acts 10:36-37 \"The word (NIV - message ) which God sent unto the children of Israel...\"37 \"that word, [I say,] ye know, which was published throughout all Judaea...\" (NIV - omitted, \"you know what has happened throughout Judea...\").\n    * Acts 11:14-16\n    * Acts 13:42\n    * Acts 26:25\n    * Romans 10:8\n    * Romans 10:17-18\n    * 2 Corinthians 12:4\n    * 2 Corinthians 13:1\n    * Ephesians 6.17 Take the helmet of salvation and the Sword of the Spirit, which is the word of God.\n    * Hebrews 6:5\n    * Hebrews 11:3\n    * Hebrews 12:19\n    * 1 Peter 1:25\n    * 2 Peter 3:2\n    * Jude 1:17\n\n…\n\nPentecostal and Evangelical Christians have different understandings of how Rhema should be used and understood [often compared with Logos].\n\n[http://en.wikipedia.org/wiki/Rhema]",
    "ItemText": null,
    "CreateDate": "2008-12-02T12:38:09.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T12:38:09.0000000",
    "DocumentId": "2076072071",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5791",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flex/ActionScript3: Run-Time Errors; Adobe® Flex™ 2 Language Reference",
    "SortOrdinal": null,
    "ItemChar": "Code    Message    Description:\n\n     1000    The system is out of memory.     Flash Player needs more memory to compile your code than your system has available. Close some of the applications or processes running on your system.\n\n     1001    The method _ is not implemented.\n\n     1002    The precision argument must be between 0 and 20; _ is invalid.     You specified a value less than 0 or greater than 20 for the precision argument of a method or property. Pass a value between 0 and 20 as a precision argument.\n\n     1003    The radix argument must be between 2 and 36; got _.     You passed a value less than 2 or greater than 36 for the radix argument of a method or property. Pass a value between 2 and 36 as a radix argument.\n\n     1004    Method _ was invoked on an incompatible object.     You tried to call a method that is not available to the specified object. This error occurs when you have copied a prototype function from one object to another, and then invoked it, but the target object is not the same type as the original object. Ensure that the target object and original object are the same type. See the ECMAScript Language Specification, 3rd Edition, Chapter 15 for more details.\n\n     1005    Array index is not a positive integer (_).     You tried to access a member of an array using an index value that is not a positive integer. Pass only positive integers as index values for arrays.\n\n     1006    _ is not a function.     This error occurs when you attempt to call a function that does not exist. Make sure you are calling the correct function, and that the API has not changed from ActionScript 2.0. Also, make sure you are using the correct object. For example, you will see this error when you use the following code (because the last line mistakenly calls the variable big instead of blg):\n\nvar blg:String = \"foo\";\nvar big:Sprite = new Sprite();\nvar error:int = big.length(); \n\n     1007    Instantiation attempted on a non-constructor. \n\n     1008    _ is ambiguous; Found more than one matching binding.\n\n     1009    Cannot access a property or method of a null object reference.     An object that evaluates to null can have no properties. This error can occur in some unexpected (though valid) situations. For example, consider the following code, which creates a Sprite object. Because this Sprite object is never added to the display list (through the addChild() method of a DisplayObjectContainer object), its stage property is set to null. Thus, the example generates this error because Sprite object's stage property cannot have any properties:\n\nimport flash.display.Sprite;\nvar sprite1:Sprite = new Sprite();\nvar q:String = sprite1.stage.quality;\n\n     1010    A term is undefined and has no properties.     This error can occur if you try to access a property of an object that does not exist. For example:\n\nvar obj:Object = new Object();\nobj.a = \"foo\";\ntrace(obj.b.prop);\n\nYou can also see this error because of a misspelling, for example in the following, where mc represents a MovieClip object in the display list, and the stage property is misspelled with a capital S (it should be stage):\n\ntrace(mc.Stage.quality);\n\n     1011    Method _ contained illegal opcode _ at offset _.     See the note at the bottom of this table.*\n\n     1012    The last instruction exceeded code size.     See the note at the bottom of this table.*\n\n     1013    Cannot call OP_findproperty when scopeDepth is 0.     See the note at the bottom of this table.*\n\n     1014    Class _ could not be found.\n\n     1015    Method _ cannot set default xml namespace     See the note at the bottom of this table.*\n\n     1016    Descendants operator (..) not supported on type _. \n \n     1017    Scope stack overflow occurred.     See the note at the bottom of this table.*\n\n     1018    Scope stack underflow occurred.     See the note at the bottom of this table.*\n\n     1019    Getscopeobject _ is out of bounds.     See the note at the bottom of this table.*\n\n     1020    Code cannot fall off the end of a method.     See the note at the bottom of this table.*\n\n     1021    At least one branch target was not on a valid instruction in the method.     See the note at the bottom of this table.*\n\n     1022    Type void may only be used as a function return type.     See the note at the bottom of this table.*\n\n     1023    Stack overflow occurred.     See the note at the bottom of this table.*\n\n     1024    Stack underflow occurred.     See the note at the bottom of this table.*\n\n     1025    An invalid register _ was accessed.     See the note at the bottom of this table.*\n\n     1026    Slot _ exceeds slotCount=_ of _.     See the note at the bottom of this table.*\n\n     1027    Method_info _ exceeds method_count=_.     See the note at the bottom of this table.*\n\n     1028    Disp_id _ exceeds max_disp_id=_ of _.     See the note at the bottom of this table.*\n\n     1029    Disp_id _ is undefined on _.     See the note at the bottom of this table.*\n\n     1030    Stack depth is unbalanced. _ != _.     See the note at the bottom of this table.*\n\n     1031    Scope depth is unbalanced. _ != _.     See the note at the bottom of this table.*\n\n     1032    Cpool index _ is out of range _.     See the note at the bottom of this table.*\n\n     1033    Cpool entry _ is wrong type.     See the note at the bottom of this table.*\n\n     1034    Type Coercion failed: cannot convert _ to _.\n\n     1035    Illegal super expression found in method _.     See the note at the bottom of this table.*\n\n     1037    Cannot assign to a method _ on _.     See the note at the bottom of this table.*\n\n     1038    _ is already defined.     You cannot declare a variable or function with the same identifier name more than once within the same scope. In ActionScript 3.0, different code blocks (such as those used in two for loops in the same function definition) are considered to be in the same scope. See the note at the bottom of this table.*\n\n     1039    Cannot verify method until it is referenced.     See the note at the bottom of this table.*\n\n     1040    The right-hand side of instanceof must be a class or function.     The expression on the right side of the instanceof operator must be a class or function.\n\n     1041    The right-hand side of operator must be a class.     The expression on the right side of the is operator must be a class.\n\n     1042    Not an ABC file. major_version=_ minor_version=_.     You are attempting to use an invalid file with the player: the tool that generates the SWF may be out of date or the SWF itself may be corrupt.\n\n     1043    Invalid code_length=_.     See the note at the bottom of this table.*\n\n     1044    MethodInfo-_ unsupported flags=_.     See the note at the bottom of this table.*\n\n     1045    Unsupported traits kind=_.     See the note at the bottom of this table.*\n\n     1046    MethodInfo-_ referenced before definition.     See the note at the bottom of this table.*\n\n     1047    No entry point was found.     See the note at the bottom of this table.*\n\n     1049    Prototype objects must be vanilla Objects.     See the note at the bottom of this table.*\n\n     1050    Cannot convert _ to primitive.     See the note at the bottom of this table.*\n\n     1051    Illegal early binding access to _.     See the note at the bottom of this table.*\n\n     1052    Invalid URI passed to _ function.     See the note at the bottom of this table.*\n\n     1053    Illegal override of _ in _.     See the note at the bottom of this table.*\n\n     1054    Illegal range or target offsets in exception handler.     See the note at the bottom of this table.*\n\n     1056    Cannot create property _ on _.     You are trying to assign a value to a nonexistent property on an instance of a non-dynamic class. This is only possible for instances of dynamic classes\n\n     1057    _ can only contain methods.     See the note at the bottom of this table.*\n\n     1058    Illegal operand type: _ must be _.     See the note at the bottom of this table.*\n\n     1059    ClassInfo-_ is referenced before definition.     See the note at the bottom of this table.*\n\n     1060    ClassInfo _ exceeds class_count=_.     See the note at the bottom of this table.*\n\n     1061    The value _ cannot be converted to _ without losing precision.     This error appears if you attempt to assign a decimal number to a property that has data type int.\n\nThis error also appears for out-of-range assignments, such as the following:\n\nvar m0:int = 2147483648; // int.MAX_VALUE == 2147483647\n\nYou can also see this error when using the bitwise left shift operator (<<). For example, consider the following code:\n\nvar m0:uint = 0xFF;\nvar m1:uint = m0<&lt24;\n\nThe result of left shift operator (<<) is interpreted as a 32-bit two's complement number with sign. In the example, the result is a negative value, which causes the error when assigned to the uint typed property. A workaround is the following:\n\nvar m0:uint = 0xFF;\nvar m1:uint = uint(m0<&lt24);\n\n     1063    Argument count mismatch on _. Expected _, got _. \n\n     1064    Cannot call method _ as constructor.     Extracted methods are permanently bound to the object they are extracted from. Therefore, they can not later be called as a constructor. For example, the following creates function f() in Class A:\n\nclass A {\n       function f() {}\n    }\n\nIn the following code, extracting the function causes no error. However, creating a new instance of the function causes an error.\n\nvar a = new A()\n    var m = a.f // extract f, don't call it\n    m() // same as a.f()\n    new m() // causes this error\n\n     1065    Variable _ is not defined.     You are using an undefined lexical reference. For example, in the following statements, the statement trace(x) generates an error because x is undefined. However, the statement trace(y) doesn't generate an error because y is defined:\n\ntrace(\"hello world\")\n    trace(x) // x is undefined\n    var y\n    trace(y) // No error, y is defined.\n\n     1066    The form function('function body') is not supported.     Unlike JavaScript, Flash does not compile code on-the-fly using eval() and function(). Thus, calling these as a constructor in ActionScript 3.0 generates this error.\n\n     1067    Native method _ has illegal method body.     See the note at the bottom of this table.*\n\n     1068    _ and _ cannot be reconciled.     See the note at the bottom of this table.*\n\n     1069    Property _ not found on _ and there is no default value.     You are referencing an undefined property on a non-dynamic class instance. For example, the following generates this error when it references property x, which is not defined and cannot be created dynamically:\n\nclass A {} // sealed class, not dynamic\n    trace(new A().x) // no property x defined on A, and A is not dynamic\n\n     1070    Method _ not found on _     You are using a super statement to call a function, but the function doesn't exist in the super class. For example, the following code generates the error:\n\nclass A() {}\nclass B extends A {\n  function f() { trace(super.f()); } // error 1070, there is no f on A\n}\n\n     1071    Function _ has already been bound to _.     \n\n     1072    Disp_id 0 is illegal.     See the note at the bottom of this table.*\n\n     1073    Non-override method _ replaced because of duplicate disp_id _.     See the note at the bottom of this table.*\n\n     1074    Illegal write to read-only property _ on _.     \n\n     1075    Math is not a function.     You are trying to call math() as a function, but the Math class is a class with static methods.\n\n     1076    Math is not a constructor.     You can not instantiate the Math class.\n\n     1077    Illegal read of write-only property _ on _.     \n\n     1078    Illegal opcode/multiname combination: _<_>.     See the note at the bottom of this table.*\n\n     1079    Native methods are not allowed in loaded code.     See the note at the bottom of this table.*\n\n     1080    Illegal value for namespace.     See the note at the bottom of this table.*\n\n     1081    Property _ not found on _ and there is no default value.     \n\n     1082    No default namespace has been set.     See the note at the bottom of this table.*\n\n     1083    The prefix \"_\" for element \"_\" is not bound.     An attribute name or element name has a prefix but no matching namespace was found. This statement generates an error because there is no foo namespace to match foo:x:\n\n<foo:x x­mlns:clowns='http://circuscenter.org'>\n\n     1084    Element or attribute (\"_\") does not match QName production: QName::=(NCName':')?NCName.     You have foo: or :foo as an element or attribute name, but there is nothing on the other side of the colon.\n\n     1085    The element type \"_\" must be terminated by the matching end-tag \"</_>\".     \n\n     1086    The _ method only works on lists containing one item.     The XMLList class propagates the XML-specific functions to one child if it has only one item in its list. If more than one item is in the list, the routines fail with this error. This happens for the following XMLList functions that mimic XML functions:\n\naddNamespace, appendChild, childIndex, inScopeNamespaces, insertChildAfter, insertChildBefore, name, namespace, localName, namespaceDeclarations, nodeKind, prependChild, removeNamespace, replace, setChildren, setLocalName, setName, and setNamespace.\n\n     1087    Assignment to indexed XML is not allowed.     \n\n     1088    The markup in the document following the root element must be well-formed.     These are possible causes of this error:\n\n    * Parsing an XMLList style object as XML\n    * Misbalanced strings\n\n     1089    Assignment to lists with more than one item is not supported.     \n\n     1090    XML parser failure: element is malformed.     An element name is malformed. This example of an element name is malformed because a trailing right angle bracket > is missing:\n\n<a/><b></b\n\n     1091    XML parser failure: Unterminated CDATA section.     \n\n     1092    XML parser failure: Unterminated XML declaration.     \n\n     1093    XML parser failure: Unterminated DOCTYPE declaration.     \n\n     1094    XML parser failure: Unterminated comment.     \n\n     1095    XML parser failure: Unterminated attribute.     \n\n     1096    XML parser failure: Unterminated element.     \n\n     1097    XML parser failure: Unterminated processing instruction.     \n\n     1098    Illegal prefix _ for no namespace.     The namespace constructor throws this error if you try to pass in an empty URI with a non-empty prefix as in this example:\n\nns = new Namespace (\"prefix\", \"\");\n    \n     1100    Cannot supply flags when constructing one RegExp from another.     Creating a new regular expression from an existing one also copies its flags. To create a regular expression with different flags, use the new operator and set the flags as desired. For example, this statement creates a regular expression and specifies flag settings:\n\nvar re:RegExp = new RegExp(\"ali\", /s)\n\nAlternatively, this statement creates a regular expression that has the same flags as re:\n\nvar re2:RegExp = new RegExp(re, ...)\n\n     1101    Cannot verify method _ with unknown scope.     See the note at the bottom of this table.*\n\n     1102    Illegal default value for type _.     See the note at the bottom of this table.*\n\n     1103    Class _ cannot extend final base class.     See the note at the bottom of this table.*\n\n     1104    Attribute \"_\" was already specified for element \"_\".     \n\n     1107    The ABC data is corrupt, attempt to read out of bounds.     See the note at the bottom of this table.*\n\n     1108    The OP_newclass opcode was used with the incorrect base class.     See the note at the bottom of this table.*\n\n     1109    Attempt to directly call unbound function _ from method _.     See the note at the bottom of this table.*\n\n     1110    _ cannot extend _.     See the note at the bottom of this table.*\n\n     1111    _ cannot implement _.     See the note at the bottom of this table.*\n\n     1112    Argument count mismatch on class coercion. Expected 1, got _.     \n\n     1113    OP_newactivation used in method without NEED_ACTIVATION flag.     See the note at the bottom of this table.*\n\n     1114    OP_getglobalslot or OP_setglobalslot used with no global scope.     See the note at the bottom of this table.*\n\n     1115    _ is not a constructor.     \n\n     1116    second argument to Function.prototype.apply must be an array.  \n   \n     1117    Invalid XML name: _.     \n\n     1118    Illegal cyclical loop between nodes.     \n\n     1119    Delete operator is not supported with operand of type _.     \n\n     1120    Cannot delete property _ on _.     \n\n     1121    Method _ has a duplicate method body.     \n\n     1122    Interface method _ has illegal method body.     \n\n     1123    Filter operator not supported on type _.     \n\n     1124    OP_hasnext2 requires object and index to be distinct registers.    \n \n     1502    A script has executed for longer than the default timeout period of 15 seconds.     A script executed after the timeout period. (The default timeout period is 15 seconds.) After this error occurs, the script can continue to execute for 15 seconds more, after which the script terminates and throws run-time error number 1503 (A script failed to exit after 30 seconds and was terminated.)\n\n     1503    A script failed to exit after 30 seconds and was terminated.     The script was still executing after 30 seconds. Flash Player first throws run-time error number 1502 (A script has executed for longer than the default timeout period of 15 seconds.) if the script executed more than 15 seconds, which is the default timeout period. This error occurs 15 seconds after Error 1502 occurs.\n\n     1507    Argument _ cannot be null.     \n\n     1508    The value specified for argument _ is invalid.     You are possibly trying to pass the wrong data type. For example, the code\n\npublic function doSomething(const:int):void {\n    }\n    this [\"doSomething\"] (\"str\")\n\ngenerates an error at runtime because doSomething is cast as an int data type.\n\n     1510    When the callback argument is a method of a class, the optional this argument must be null.     \n\n     2000    No active security context.     \n\n     2001    Too few arguments were specified; got _, _ expected.     \n\n     2002    Operation attempted on invalid socket.     \n\n     2003    Invalid socket port number specified.     The valid range is 0 to 65535. For more information, see Socket Connections in this language reference.\n\n     2004    One of the parameters is invalid.     \n\n     2005    Parameter _ is of the incorrect type. Should be type _.     \n\n     2006    The supplied index is out of bounds.     \n\n     2007    Parameter _ must be non-null.     \n\n     2008    Parameter _ must be one of the accepted values.     \n\n     2009    This method cannot be used on a text field with a style sheet.     \n\n     2010    Local-with-filesystem SWF files are not permitted to use sockets.     \n\n     2011    Socket connection failed to _:_.     There is a network problem. Possibly a DNS name is not resolving or a TCP socket is not connecting.\n\n     2012    _ class cannot be instantiated.     \n\n     2013    Feature can only be used in Flash Authoring.     \n\n     2014    Feature is not available at this time.     The feature is not supported on this system.\n     2015    Invalid BitmapData.     \n\n     2017    Only trusted local files may cause the Flash Player to exit.     \n\n     2018    System.exit is only available in the standalone Flash Player.     \n\n     2019    Depth specified is invalid.     \n\n     2020    MovieClips objects with different parents cannot be swapped.     \n\n     2021    Object creation failed.     \n\n     2022    Class _ must inherit from DisplayObject to link to a symbol.     \n\n     2023    Class _ must inherit from Sprite to link to the root.     \n\n     2024    An object cannot be added as a child of itself.     \n\n     2025    The supplied DisplayObject must be a child of the caller.     \n\n     2026    An error occurred navigating to the URL _.     Possibly the URL does not exist, the network connection has a problem, or the URL is outside the security sandbox.\n\n     2027    Parameter _ must be a non-negative number; got _.     \n\n     2028    Local-with-filesystem SWF file _ cannot access Internet URL _.     \n\n     2029    This URLStream object does not have a stream opened.     \n\n     2030    End of file was encountered.     \n\n     2031    Socket Error.     A socket error occurred. For more information, see Socket Connections in this language reference.\n\n     2032    Stream Error.     \n\n     2033    Key Generation Failed.     \n\n     2035    URL Not Found.     \n\n     2036    Load Never Completed.     \n\n     2037    Functions called in incorrect sequence, or earlier call was unsuccessful.    \n \n     2038    File I/O Error.     \n\n     2039    Invalid remote URL protocol. The remote URL protocol must be HTTP or HTTPS.     \n     2041    Only one file browsing session may be performed at a time.     \n\n     2044    Unhandled _:.     \n\n     2047    Security sandbox violation: _: _ cannot access _.     \n\n     2048    Security sandbox violation: _ cannot load data from _.     \n\n     2049    Security sandbox violation: _ cannot upload data to _.     \n\n     2051    Security sandbox violation: _ cannot evaluate scripting URLs within _ (allowScriptAccess is _). Attempted URL was _.     \n\n     2052    Only String arguments are permitted for allowDomain and allowInsecureDomain.  \n   \n     2053    Security sandbox violation: _ cannot clear an interval timer set by _.     \n\n     2054    The value of Security.exactSettings cannot be changed after it has been used.   \n  \n     2055    The print job could not be started.     \n\n     2056    The print job could not be sent to the printer.     \n\n     2057    The page could not be added to the print job.     The addPage() method is not used correctly. See the addPage() entry in this language reference.\n\n     2058    There was an error decompressing the data.     \n\n     2059    Security sandbox violation: _ cannot overwrite an ExternalInterface callback added by _.     \n\n     2060    Security sandbox violation: ExternalInterface caller _ cannot access _.     \n\n     2061    No ExternalInterface callback _ registered.     \n\n     2062    Children of Event must override clone() {return new MyEventClass (...);}.    \n \n     2063    Error attempting to execute IME command.     One of the IME services has failed.\n\n    * If you are using the setConversionMode() or setEnabled() method, ActionScript 3.0 replaces these methods with the access property.\n    * If you are using the doConversion() or setComposition() method, these methods are not supported for Macintosh OSX and Macintosh Classic.\n\n     2065    The focus cannot be set for this target.     \n\n     2066    The Timer delay specified is out of range.     \n\n     2067    The ExternalInterface is not available in this container. ExternalInterface requires Internet Explorer ActiveX, Firefox, Mozilla 1.7.5 and greater, or other browsers that support NPRuntime.     \n\n     2068    Invalid sound.     \n\n     2069    The Loader class does not implement this method.     \n\n     2070    Security sandbox violation: caller _ cannot access Stage owned by _.     \n\n     2071    The Stage class does not implement this property or method.    \n \n     2074    The stage is too small to fit the download ui.     \n\n     2075    The downloaded file is invalid.     Possibly the file decompression failed, the file format is invalid, or the signature validation failed.\n\n     2077    This filter operation cannot be performed with the specified input parameters.  \n   \n     2078    The name property of a Timeline-placed object cannot be modified.  \n   \n     2079    Classes derived from Bitmap can only be associated with defineBits characters (bitmaps).     \n\n     2082    Connect failed because the object is already connected.     \n\n     2083    Close failed because the object is not connected.     \n\n     2084    The AMF encoding of the arguments cannot exceed 40K.     \n\n     2085    Parameter _ must be non-empty string.     \n\n     2086    A setting in the mms.cfg file prohibits this FileReference request.     \n\n     2087    The FileReference.download() file name contains prohibited characters.     The filename cannot contain spaces or any of the following characters: /, \\, :, *, ?, \", <, >, |, %, or the ASCII control characters 0 through 31 (0x00 through 0X1F). Also, filenames longer than 256 characters may fail on some browsers or servers.\n\n     2088    The Proxy class does not implement getProperty. It must be overridden by a subclass.     \n\n     2089    The Proxy class does not implement setProperty. It must be overridden by a subclass.     \n\n     2090    The Proxy class does not implement callProperty. It must be overridden by a subclass.     \n\n     2091    The Proxy class does not implement hasProperty. It must be overridden by a subclass.     \n\n     2092    The Proxy class does not implement deleteProperty. It must be overridden by a subclass.     \n     2093    The Proxy class does not implement getDescendants. It must be overridden by a subclass.     \n\n     2094    Event dispatch recursion overflow.     The recursion exceeds the maximum recursion depth. (The default maximum is 256.)\n\n     2095    _ was unable to invoke callback _.     \n\n     2096    The HTTP request header _ cannot be set via ActionScript.     You are adding a disallowed HTTP header to an HTTP request. The following headers are disallowed:\n\n    * NULL header string\n    * Accept-Ranges\n    * Age\n    * Allow\n    * Allowed\n    * Connection\n    * Content-Length\n    * Content-Location\n    * Content-Range\n    * ETag\n    * Host\n    * Last-Modified\n    * Location\n    * Max-Forwards\n    * Proxy-Authenticate\n    * Proxy-Authorization\n    * Public\n    * Range\n    * Retry-After\n    * Server\n    * TE\n    * Trailer\n    * Transfer-Encoding\n    * Upgrade\n    * URI\n    * Vary\n    * Via\n    * Warning\n    * WWW-Authenticate\n\n     2097    The FileFilter Array is not in the correct format.     There are two valid formats:\n\n    * A description with Windows file extensions only\n    * A description with Windows file extensions and Macintosh file formats.\n\nThe two file formats and not interchangeable; you must use one or the other. For more information, see the FileFilter class in this language reference.\n\n     2098    The loading object is not a .swf file, you cannot request SWF properties from it.     \n\n     2099    The loading object is not sufficiently loaded to provide this information.     \n\n     2100    The ByteArray parameter in Loader.loadBytes() must have length greater than 0.     \n\n     2101    The String passed to URLVariables.decode() must be a URL-encoded query string containing name/value pairs.     \n\n     2102    The before XMLNode parameter must be a child of the caller.     \n\n     2103    XML recursion failure: new child would create infinite loop.     Possibly you are trying to make objects child objects of each other. For example, the following code generates this error because a and b both try to add the other as a child object.\n\na.addChild(b);\nb.addChild(a);\n\n     2105    The Proxy class does not implement nextNameIndex. It must be overridden by a subclass.     \n\n     2106    The Proxy class does not implement nextName. It must be overridden by a subclass.     \n\n     2107    The Proxy class does not implement nextValue. It must be overridden by a subclass.     \n\n     2108    Scene _ was not found.     \n\n     2109    Frame label _ not found in scene _.     \n\n     2110    The value of Security.disableAVM1Loading cannot be set unless the caller can access the stage and is in an ActionScript 3.0 SWF file.     \n\n     2111    Security.disableAVM1Loading is true so the current load of the ActionScript 1.0/2.0 SWF file has been blocked.     \n\n     2112    Provided parameter LoaderContext.ApplicationDomain is from a disallowed domain.     \n\n     2113    Provided parameter LoaderContext.SecurityDomain is from a disallowed domain.     \n\n     2114    Parameter _ must be null.     \n\n     2115    Parameter _ must be false.     \n\n     2116    Parameter _ must be true.     \n\n     2118    The LoaderInfo class does not implement this method.     \n\n     2119    Security sandbox violation: caller _ cannot access LoaderInfo.applicationDomain owned by _.     \n\n     2121    Security sandbox violation: _: _ cannot access _. This may be worked around by calling Security.allowDomain.     \n\n     2122    Security sandbox violation: _: _ cannot access _. A policy file is required, but the checkPolicyFile flag was not set when this media was loaded.     \n\n     2123    Security sandbox violation: _: _ cannot access _. No policy files granted access.     \n\n     2124    Loaded file is an unknown type.     \n\n     2125    Security sandbox violation: _ cannot use Runtime Shared Library _ because crossing the boundary between ActionScript 3.0 and ActionScript 1.0/2.0 objects is not allowed.     \n\n     2126    NetConnection object must be connected.     \n\n     2127    FileReference POST data cannot be type ByteArray.     \n\n     2129    Connection to _ failed.     \n\n     2130    Unable to flush SharedObject.     \n\n     2131    Definition _ cannot be found.     \n\n     2132    NetConnection.connect cannot be called from a netStatus event handler.     \n\n     2133    Callback _ is not registered.     \n\n     2134    Cannot create SharedObject.     \n\n     2135    Security sandbox violation: _: _ cannot access _. RTMP content cannot be accessed using this API.     \n\n     2136    The SWF file _ contains invalid data.     \n\n     2137    Security sandbox violation: _ cannot navigate window _ within _ (allowScriptAccess is _). Attempted URL was _.     \n\n     2138    Rich text XML could not be parsed.     \n\n     2139    SharedObject could not connect.     \n\n     2140    Security sandbox violation: _ cannot load _. Local-with-filesystem and local-with-networking SWF files cannot load each other.     \n\n     2141    Only one PrintJob may be in use at a time.     \n\n     2142    Security sandbox violation: local SWF files cannot use the LoaderContext.securityDomain property. _ was attempting to load _.     \n\n     2143    AccessibilityImplementation.get_accRole() must be overridden from its default.     \n\n     2144    AccessibilityImplementation.get_accState() must be overridden from its default.     \n\n     2145    Cumulative length of requestHeaders must be less than 8192 characters.     \n\n     2146    Security sandbox violation: _ cannot call _ because the HTML/container parameter allowNetworking has the value _.     \n\n     2147    Forbidden protocol in URL _.     \n\n     2148    SWF file _ cannot access local resource _. Only local-with-filesystem and trusted local SWF files may access local resources.     \n\n     2149    Security sandbox violation: _ cannot make fscommand calls to _ (allowScriptAccess is _).     \n\n* Note: This error indicates that the ActionScript in the SWF is invalid. If you believe that the file has not been corrupted, please report the problem to Adobe.\n\n[http://livedocs.adobe.com/flex/2/langref/runtimeErrors.html]",
    "ItemText": "Code    Message    Description:\n\n     1000    The system is out of memory.     Flash Player needs more memory to compile your code than your system has available. Close some of the applications or processes running on your system.\n\n     1001    The method _ is not implemented.\n\n     1002    The precision argument must be between 0 and 20; _ is invalid.     You specified a value less than 0 or greater than 20 for the precision argument of a method or property. Pass a value between 0 and 20 as a precision argument.\n\n     1003    The radix argument must be between 2 and 36; got _.     You passed a value less than 2 or greater than 36 for the radix argument of a method or property. Pass a value between 2 and 36 as a radix argument.\n\n     1004    Method _ was invoked on an incompatible object.     You tried to call a method that is not available to the specified object. This error occurs when you have copied a prototype function from one object to another, and then invoked it, but the target object is not the same type as the original object. Ensure that the target object and original object are the same type. See the ECMAScript Language Specification, 3rd Edition, Chapter 15 for more details.\n\n     1005    Array index is not a positive integer (_).     You tried to access a member of an array using an index value that is not a positive integer. Pass only positive integers as index values for arrays.\n\n     1006    _ is not a function.     This error occurs when you attempt to call a function that does not exist. Make sure you are calling the correct function, and that the API has not changed from ActionScript 2.0. Also, make sure you are using the correct object. For example, you will see this error when you use the following code (because the last line mistakenly calls the variable big instead of blg):\n\nvar blg:String = \"foo\";\nvar big:Sprite = new Sprite();\nvar error:int = big.length(); \n\n     1007    Instantiation attempted on a non-constructor. \n\n     1008    _ is ambiguous; Found more than one matching binding.\n\n     1009    Cannot access a property or method of a null object reference.     An object that evaluates to null can have no properties. This error can occur in some unexpected (though valid) situations. For example, consider the following code, which creates a Sprite object. Because this Sprite object is never added to the display list (through the addChild() method of a DisplayObjectContainer object), its stage property is set to null. Thus, the example generates this error because Sprite object's stage property cannot have any properties:\n\nimport flash.display.Sprite;\nvar sprite1:Sprite = new Sprite();\nvar q:String = sprite1.stage.quality;\n\n     1010    A term is undefined and has no properties.     This error can occur if you try to access a property of an object that does not exist. For example:\n\nvar obj:Object = new Object();\nobj.a = \"foo\";\ntrace(obj.b.prop);\n\nYou can also see this error because of a misspelling, for example in the following, where mc represents a MovieClip object in the display list, and the stage property is misspelled with a capital S (it should be stage):\n\ntrace(mc.Stage.quality);\n\n     1011    Method _ contained illegal opcode _ at offset _.     See the note at the bottom of this table.*\n\n     1012    The last instruction exceeded code size.     See the note at the bottom of this table.*\n\n     1013    Cannot call OP_findproperty when scopeDepth is 0.     See the note at the bottom of this table.*\n\n     1014    Class _ could not be found.\n\n     1015    Method _ cannot set default xml namespace     See the note at the bottom of this table.*\n\n     1016    Descendants operator (..) not supported on type _. \n \n     1017    Scope stack overflow occurred.     See the note at the bottom of this table.*\n\n     1018    Scope stack underflow occurred.     See the note at the bottom of this table.*\n\n     1019    Getscopeobject _ is out of bounds.     See the note at the bottom of this table.*\n\n     1020    Code cannot fall off the end of a method.     See the note at the bottom of this table.*\n\n     1021    At least one branch target was not on a valid instruction in the method.     See the note at the bottom of this table.*\n\n     1022    Type void may only be used as a function return type.     See the note at the bottom of this table.*\n\n     1023    Stack overflow occurred.     See the note at the bottom of this table.*\n\n     1024    Stack underflow occurred.     See the note at the bottom of this table.*\n\n     1025    An invalid register _ was accessed.     See the note at the bottom of this table.*\n\n     1026    Slot _ exceeds slotCount=_ of _.     See the note at the bottom of this table.*\n\n     1027    Method_info _ exceeds method_count=_.     See the note at the bottom of this table.*\n\n     1028    Disp_id _ exceeds max_disp_id=_ of _.     See the note at the bottom of this table.*\n\n     1029    Disp_id _ is undefined on _.     See the note at the bottom of this table.*\n\n     1030    Stack depth is unbalanced. _ != _.     See the note at the bottom of this table.*\n\n     1031    Scope depth is unbalanced. _ != _.     See the note at the bottom of this table.*\n\n     1032    Cpool index _ is out of range _.     See the note at the bottom of this table.*\n\n     1033    Cpool entry _ is wrong type.     See the note at the bottom of this table.*\n\n     1034    Type Coercion failed: cannot convert _ to _.\n\n     1035    Illegal super expression found in method _.     See the note at the bottom of this table.*\n\n     1037    Cannot assign to a method _ on _.     See the note at the bottom of this table.*\n\n     1038    _ is already defined.     You cannot declare a variable or function with the same identifier name more than once within the same scope. In ActionScript 3.0, different code blocks (such as those used in two for loops in the same function definition) are considered to be in the same scope. See the note at the bottom of this table.*\n\n     1039    Cannot verify method until it is referenced.     See the note at the bottom of this table.*\n\n     1040    The right-hand side of instanceof must be a class or function.     The expression on the right side of the instanceof operator must be a class or function.\n\n     1041    The right-hand side of operator must be a class.     The expression on the right side of the is operator must be a class.\n\n     1042    Not an ABC file. major_version=_ minor_version=_.     You are attempting to use an invalid file with the player: the tool that generates the SWF may be out of date or the SWF itself may be corrupt.\n\n     1043    Invalid code_length=_.     See the note at the bottom of this table.*\n\n     1044    MethodInfo-_ unsupported flags=_.     See the note at the bottom of this table.*\n\n     1045    Unsupported traits kind=_.     See the note at the bottom of this table.*\n\n     1046    MethodInfo-_ referenced before definition.     See the note at the bottom of this table.*\n\n     1047    No entry point was found.     See the note at the bottom of this table.*\n\n     1049    Prototype objects must be vanilla Objects.     See the note at the bottom of this table.*\n\n     1050    Cannot convert _ to primitive.     See the note at the bottom of this table.*\n\n     1051    Illegal early binding access to _.     See the note at the bottom of this table.*\n\n     1052    Invalid URI passed to _ function.     See the note at the bottom of this table.*\n\n     1053    Illegal override of _ in _.     See the note at the bottom of this table.*\n\n     1054    Illegal range or target offsets in exception handler.     See the note at the bottom of this table.*\n\n     1056    Cannot create property _ on _.     You are trying to assign a value to a nonexistent property on an instance of a non-dynamic class. This is only possible for instances of dynamic classes\n\n     1057    _ can only contain methods.     See the note at the bottom of this table.*\n\n     1058    Illegal operand type: _ must be _.     See the note at the bottom of this table.*\n\n     1059    ClassInfo-_ is referenced before definition.     See the note at the bottom of this table.*\n\n     1060    ClassInfo _ exceeds class_count=_.     See the note at the bottom of this table.*\n\n     1061    The value _ cannot be converted to _ without losing precision.     This error appears if you attempt to assign a decimal number to a property that has data type int.\n\nThis error also appears for out-of-range assignments, such as the following:\n\nvar m0:int = 2147483648; // int.MAX_VALUE == 2147483647\n\nYou can also see this error when using the bitwise left shift operator (<<). For example, consider the following code:\n\nvar m0:uint = 0xFF;\nvar m1:uint = m0<&lt24;\n\nThe result of left shift operator (<<) is interpreted as a 32-bit two's complement number with sign. In the example, the result is a negative value, which causes the error when assigned to the uint typed property. A workaround is the following:\n\nvar m0:uint = 0xFF;\nvar m1:uint = uint(m0<&lt24);\n\n     1063    Argument count mismatch on _. Expected _, got _. \n\n     1064    Cannot call method _ as constructor.     Extracted methods are permanently bound to the object they are extracted from. Therefore, they can not later be called as a constructor. For example, the following creates function f() in Class A:\n\nclass A {\n       function f() {}\n    }\n\nIn the following code, extracting the function causes no error. However, creating a new instance of the function causes an error.\n\nvar a = new A()\n    var m = a.f // extract f, don't call it\n    m() // same as a.f()\n    new m() // causes this error\n\n     1065    Variable _ is not defined.     You are using an undefined lexical reference. For example, in the following statements, the statement trace(x) generates an error because x is undefined. However, the statement trace(y) doesn't generate an error because y is defined:\n\ntrace(\"hello world\")\n    trace(x) // x is undefined\n    var y\n    trace(y) // No error, y is defined.\n\n     1066    The form function('function body') is not supported.     Unlike JavaScript, Flash does not compile code on-the-fly using eval() and function(). Thus, calling these as a constructor in ActionScript 3.0 generates this error.\n\n     1067    Native method _ has illegal method body.     See the note at the bottom of this table.*\n\n     1068    _ and _ cannot be reconciled.     See the note at the bottom of this table.*\n\n     1069    Property _ not found on _ and there is no default value.     You are referencing an undefined property on a non-dynamic class instance. For example, the following generates this error when it references property x, which is not defined and cannot be created dynamically:\n\nclass A {} // sealed class, not dynamic\n    trace(new A().x) // no property x defined on A, and A is not dynamic\n\n     1070    Method _ not found on _     You are using a super statement to call a function, but the function doesn't exist in the super class. For example, the following code generates the error:\n\nclass A() {}\nclass B extends A {\n  function f() { trace(super.f()); } // error 1070, there is no f on A\n}\n\n     1071    Function _ has already been bound to _.     \n\n     1072    Disp_id 0 is illegal.     See the note at the bottom of this table.*\n\n     1073    Non-override method _ replaced because of duplicate disp_id _.     See the note at the bottom of this table.*\n\n     1074    Illegal write to read-only property _ on _.     \n\n     1075    Math is not a function.     You are trying to call math() as a function, but the Math class is a class with static methods.\n\n     1076    Math is not a constructor.     You can not instantiate the Math class.\n\n     1077    Illegal read of write-only property _ on _.     \n\n     1078    Illegal opcode/multiname combination: _<_>.     See the note at the bottom of this table.*\n\n     1079    Native methods are not allowed in loaded code.     See the note at the bottom of this table.*\n\n     1080    Illegal value for namespace.     See the note at the bottom of this table.*\n\n     1081    Property _ not found on _ and there is no default value.     \n\n     1082    No default namespace has been set.     See the note at the bottom of this table.*\n\n     1083    The prefix \"_\" for element \"_\" is not bound.     An attribute name or element name has a prefix but no matching namespace was found. This statement generates an error because there is no foo namespace to match foo:x:\n\n<foo:x x­mlns:clowns='http://circuscenter.org'>\n\n     1084    Element or attribute (\"_\") does not match QName production: QName::=(NCName':')?NCName.     You have foo: or :foo as an element or attribute name, but there is nothing on the other side of the colon.\n\n     1085    The element type \"_\" must be terminated by the matching end-tag \"</_>\".     \n\n     1086    The _ method only works on lists containing one item.     The XMLList class propagates the XML-specific functions to one child if it has only one item in its list. If more than one item is in the list, the routines fail with this error. This happens for the following XMLList functions that mimic XML functions:\n\naddNamespace, appendChild, childIndex, inScopeNamespaces, insertChildAfter, insertChildBefore, name, namespace, localName, namespaceDeclarations, nodeKind, prependChild, removeNamespace, replace, setChildren, setLocalName, setName, and setNamespace.\n\n     1087    Assignment to indexed XML is not allowed.     \n\n     1088    The markup in the document following the root element must be well-formed.     These are possible causes of this error:\n\n    * Parsing an XMLList style object as XML\n    * Misbalanced strings\n\n     1089    Assignment to lists with more than one item is not supported.     \n\n     1090    XML parser failure: element is malformed.     An element name is malformed. This example of an element name is malformed because a trailing right angle bracket > is missing:\n\n<a/><b></b\n\n     1091    XML parser failure: Unterminated CDATA section.     \n\n     1092    XML parser failure: Unterminated XML declaration.     \n\n     1093    XML parser failure: Unterminated DOCTYPE declaration.     \n\n     1094    XML parser failure: Unterminated comment.     \n\n     1095    XML parser failure: Unterminated attribute.     \n\n     1096    XML parser failure: Unterminated element.     \n\n     1097    XML parser failure: Unterminated processing instruction.     \n\n     1098    Illegal prefix _ for no namespace.     The namespace constructor throws this error if you try to pass in an empty URI with a non-empty prefix as in this example:\n\nns = new Namespace (\"prefix\", \"\");\n    \n     1100    Cannot supply flags when constructing one RegExp from another.     Creating a new regular expression from an existing one also copies its flags. To create a regular expression with different flags, use the new operator and set the flags as desired. For example, this statement creates a regular expression and specifies flag settings:\n\nvar re:RegExp = new RegExp(\"ali\", /s)\n\nAlternatively, this statement creates a regular expression that has the same flags as re:\n\nvar re2:RegExp = new RegExp(re, ...)\n\n     1101    Cannot verify method _ with unknown scope.     See the note at the bottom of this table.*\n\n     1102    Illegal default value for type _.     See the note at the bottom of this table.*\n\n     1103    Class _ cannot extend final base class.     See the note at the bottom of this table.*\n\n     1104    Attribute \"_\" was already specified for element \"_\".     \n\n     1107    The ABC data is corrupt, attempt to read out of bounds.     See the note at the bottom of this table.*\n\n     1108    The OP_newclass opcode was used with the incorrect base class.     See the note at the bottom of this table.*\n\n     1109    Attempt to directly call unbound function _ from method _.     See the note at the bottom of this table.*\n\n     1110    _ cannot extend _.     See the note at the bottom of this table.*\n\n     1111    _ cannot implement _.     See the note at the bottom of this table.*\n\n     1112    Argument count mismatch on class coercion. Expected 1, got _.     \n\n     1113    OP_newactivation used in method without NEED_ACTIVATION flag.     See the note at the bottom of this table.*\n\n     1114    OP_getglobalslot or OP_setglobalslot used with no global scope.     See the note at the bottom of this table.*\n\n     1115    _ is not a constructor.     \n\n     1116    second argument to Function.prototype.apply must be an array.  \n   \n     1117    Invalid XML name: _.     \n\n     1118    Illegal cyclical loop between nodes.     \n\n     1119    Delete operator is not supported with operand of type _.     \n\n     1120    Cannot delete property _ on _.     \n\n     1121    Method _ has a duplicate method body.     \n\n     1122    Interface method _ has illegal method body.     \n\n     1123    Filter operator not supported on type _.     \n\n     1124    OP_hasnext2 requires object and index to be distinct registers.    \n \n     1502    A script has executed for longer than the default timeout period of 15 seconds.     A script executed after the timeout period. (The default timeout period is 15 seconds.) After this error occurs, the script can continue to execute for 15 seconds more, after which the script terminates and throws run-time error number 1503 (A script failed to exit after 30 seconds and was terminated.)\n\n     1503    A script failed to exit after 30 seconds and was terminated.     The script was still executing after 30 seconds. Flash Player first throws run-time error number 1502 (A script has executed for longer than the default timeout period of 15 seconds.) if the script executed more than 15 seconds, which is the default timeout period. This error occurs 15 seconds after Error 1502 occurs.\n\n     1507    Argument _ cannot be null.     \n\n     1508    The value specified for argument _ is invalid.     You are possibly trying to pass the wrong data type. For example, the code\n\npublic function doSomething(const:int):void {\n    }\n    this [\"doSomething\"] (\"str\")\n\ngenerates an error at runtime because doSomething is cast as an int data type.\n\n     1510    When the callback argument is a method of a class, the optional this argument must be null.     \n\n     2000    No active security context.     \n\n     2001    Too few arguments were specified; got _, _ expected.     \n\n     2002    Operation attempted on invalid socket.     \n\n     2003    Invalid socket port number specified.     The valid range is 0 to 65535. For more information, see Socket Connections in this language reference.\n\n     2004    One of the parameters is invalid.     \n\n     2005    Parameter _ is of the incorrect type. Should be type _.     \n\n     2006    The supplied index is out of bounds.     \n\n     2007    Parameter _ must be non-null.     \n\n     2008    Parameter _ must be one of the accepted values.     \n\n     2009    This method cannot be used on a text field with a style sheet.     \n\n     2010    Local-with-filesystem SWF files are not permitted to use sockets.     \n\n     2011    Socket connection failed to _:_.     There is a network problem. Possibly a DNS name is not resolving or a TCP socket is not connecting.\n\n     2012    _ class cannot be instantiated.     \n\n     2013    Feature can only be used in Flash Authoring.     \n\n     2014    Feature is not available at this time.     The feature is not supported on this system.\n     2015    Invalid BitmapData.     \n\n     2017    Only trusted local files may cause the Flash Player to exit.     \n\n     2018    System.exit is only available in the standalone Flash Player.     \n\n     2019    Depth specified is invalid.     \n\n     2020    MovieClips objects with different parents cannot be swapped.     \n\n     2021    Object creation failed.     \n\n     2022    Class _ must inherit from DisplayObject to link to a symbol.     \n\n     2023    Class _ must inherit from Sprite to link to the root.     \n\n     2024    An object cannot be added as a child of itself.     \n\n     2025    The supplied DisplayObject must be a child of the caller.     \n\n     2026    An error occurred navigating to the URL _.     Possibly the URL does not exist, the network connection has a problem, or the URL is outside the security sandbox.\n\n     2027    Parameter _ must be a non-negative number; got _.     \n\n     2028    Local-with-filesystem SWF file _ cannot access Internet URL _.     \n\n     2029    This URLStream object does not have a stream opened.     \n\n     2030    End of file was encountered.     \n\n     2031    Socket Error.     A socket error occurred. For more information, see Socket Connections in this language reference.\n\n     2032    Stream Error.     \n\n     2033    Key Generation Failed.     \n\n     2035    URL Not Found.     \n\n     2036    Load Never Completed.     \n\n     2037    Functions called in incorrect sequence, or earlier call was unsuccessful.    \n \n     2038    File I/O Error.     \n\n     2039    Invalid remote URL protocol. The remote URL protocol must be HTTP or HTTPS.     \n     2041    Only one file browsing session may be performed at a time.     \n\n     2044    Unhandled _:.     \n\n     2047    Security sandbox violation: _: _ cannot access _.     \n\n     2048    Security sandbox violation: _ cannot load data from _.     \n\n     2049    Security sandbox violation: _ cannot upload data to _.     \n\n     2051    Security sandbox violation: _ cannot evaluate scripting URLs within _ (allowScriptAccess is _). Attempted URL was _.     \n\n     2052    Only String arguments are permitted for allowDomain and allowInsecureDomain.  \n   \n     2053    Security sandbox violation: _ cannot clear an interval timer set by _.     \n\n     2054    The value of Security.exactSettings cannot be changed after it has been used.   \n  \n     2055    The print job could not be started.     \n\n     2056    The print job could not be sent to the printer.     \n\n     2057    The page could not be added to the print job.     The addPage() method is not used correctly. See the addPage() entry in this language reference.\n\n     2058    There was an error decompressing the data.     \n\n     2059    Security sandbox violation: _ cannot overwrite an ExternalInterface callback added by _.     \n\n     2060    Security sandbox violation: ExternalInterface caller _ cannot access _.     \n\n     2061    No ExternalInterface callback _ registered.     \n\n     2062    Children of Event must override clone() {return new MyEventClass (...);}.    \n \n     2063    Error attempting to execute IME command.     One of the IME services has failed.\n\n    * If you are using the setConversionMode() or setEnabled() method, ActionScript 3.0 replaces these methods with the access property.\n    * If you are using the doConversion() or setComposition() method, these methods are not supported for Macintosh OSX and Macintosh Classic.\n\n     2065    The focus cannot be set for this target.     \n\n     2066    The Timer delay specified is out of range.     \n\n     2067    The ExternalInterface is not available in this container. ExternalInterface requires Internet Explorer ActiveX, Firefox, Mozilla 1.7.5 and greater, or other browsers that support NPRuntime.     \n\n     2068    Invalid sound.     \n\n     2069    The Loader class does not implement this method.     \n\n     2070    Security sandbox violation: caller _ cannot access Stage owned by _.     \n\n     2071    The Stage class does not implement this property or method.    \n \n     2074    The stage is too small to fit the download ui.     \n\n     2075    The downloaded file is invalid.     Possibly the file decompression failed, the file format is invalid, or the signature validation failed.\n\n     2077    This filter operation cannot be performed with the specified input parameters.  \n   \n     2078    The name property of a Timeline-placed object cannot be modified.  \n   \n     2079    Classes derived from Bitmap can only be associated with defineBits characters (bitmaps).     \n\n     2082    Connect failed because the object is already connected.     \n\n     2083    Close failed because the object is not connected.     \n\n     2084    The AMF encoding of the arguments cannot exceed 40K.     \n\n     2085    Parameter _ must be non-empty string.     \n\n     2086    A setting in the mms.cfg file prohibits this FileReference request.     \n\n     2087    The FileReference.download() file name contains prohibited characters.     The filename cannot contain spaces or any of the following characters: /, \\, :, *, ?, \", <, >, |, %, or the ASCII control characters 0 through 31 (0x00 through 0X1F). Also, filenames longer than 256 characters may fail on some browsers or servers.\n\n     2088    The Proxy class does not implement getProperty. It must be overridden by a subclass.     \n\n     2089    The Proxy class does not implement setProperty. It must be overridden by a subclass.     \n\n     2090    The Proxy class does not implement callProperty. It must be overridden by a subclass.     \n\n     2091    The Proxy class does not implement hasProperty. It must be overridden by a subclass.     \n\n     2092    The Proxy class does not implement deleteProperty. It must be overridden by a subclass.     \n     2093    The Proxy class does not implement getDescendants. It must be overridden by a subclass.     \n\n     2094    Event dispatch recursion overflow.     The recursion exceeds the maximum recursion depth. (The default maximum is 256.)\n\n     2095    _ was unable to invoke callback _.     \n\n     2096    The HTTP request header _ cannot be set via ActionScript.     You are adding a disallowed HTTP header to an HTTP request. The following headers are disallowed:\n\n    * NULL header string\n    * Accept-Ranges\n    * Age\n    * Allow\n    * Allowed\n    * Connection\n    * Content-Length\n    * Content-Location\n    * Content-Range\n    * ETag\n    * Host\n    * Last-Modified\n    * Location\n    * Max-Forwards\n    * Proxy-Authenticate\n    * Proxy-Authorization\n    * Public\n    * Range\n    * Retry-After\n    * Server\n    * TE\n    * Trailer\n    * Transfer-Encoding\n    * Upgrade\n    * URI\n    * Vary\n    * Via\n    * Warning\n    * WWW-Authenticate\n\n     2097    The FileFilter Array is not in the correct format.     There are two valid formats:\n\n    * A description with Windows file extensions only\n    * A description with Windows file extensions and Macintosh file formats.\n\nThe two file formats and not interchangeable; you must use one or the other. For more information, see the FileFilter class in this language reference.\n\n     2098    The loading object is not a .swf file, you cannot request SWF properties from it.     \n\n     2099    The loading object is not sufficiently loaded to provide this information.     \n\n     2100    The ByteArray parameter in Loader.loadBytes() must have length greater than 0.     \n\n     2101    The String passed to URLVariables.decode() must be a URL-encoded query string containing name/value pairs.     \n\n     2102    The before XMLNode parameter must be a child of the caller.     \n\n     2103    XML recursion failure: new child would create infinite loop.     Possibly you are trying to make objects child objects of each other. For example, the following code generates this error because a and b both try to add the other as a child object.\n\na.addChild(b);\nb.addChild(a);\n\n     2105    The Proxy class does not implement nextNameIndex. It must be overridden by a subclass.     \n\n     2106    The Proxy class does not implement nextName. It must be overridden by a subclass.     \n\n     2107    The Proxy class does not implement nextValue. It must be overridden by a subclass.     \n\n     2108    Scene _ was not found.     \n\n     2109    Frame label _ not found in scene _.     \n\n     2110    The value of Security.disableAVM1Loading cannot be set unless the caller can access the stage and is in an ActionScript 3.0 SWF file.     \n\n     2111    Security.disableAVM1Loading is true so the current load of the ActionScript 1.0/2.0 SWF file has been blocked.     \n\n     2112    Provided parameter LoaderContext.ApplicationDomain is from a disallowed domain.     \n\n     2113    Provided parameter LoaderContext.SecurityDomain is from a disallowed domain.     \n\n     2114    Parameter _ must be null.     \n\n     2115    Parameter _ must be false.     \n\n     2116    Parameter _ must be true.     \n\n     2118    The LoaderInfo class does not implement this method.     \n\n     2119    Security sandbox violation: caller _ cannot access LoaderInfo.applicationDomain owned by _.     \n\n     2121    Security sandbox violation: _: _ cannot access _. This may be worked around by calling Security.allowDomain.     \n\n     2122    Security sandbox violation: _: _ cannot access _. A policy file is required, but the checkPolicyFile flag was not set when this media was loaded.     \n\n     2123    Security sandbox violation: _: _ cannot access _. No policy files granted access.     \n\n     2124    Loaded file is an unknown type.     \n\n     2125    Security sandbox violation: _ cannot use Runtime Shared Library _ because crossing the boundary between ActionScript 3.0 and ActionScript 1.0/2.0 objects is not allowed.     \n\n     2126    NetConnection object must be connected.     \n\n     2127    FileReference POST data cannot be type ByteArray.     \n\n     2129    Connection to _ failed.     \n\n     2130    Unable to flush SharedObject.     \n\n     2131    Definition _ cannot be found.     \n\n     2132    NetConnection.connect cannot be called from a netStatus event handler.     \n\n     2133    Callback _ is not registered.     \n\n     2134    Cannot create SharedObject.     \n\n     2135    Security sandbox violation: _: _ cannot access _. RTMP content cannot be accessed using this API.     \n\n     2136    The SWF file _ contains invalid data.     \n\n     2137    Security sandbox violation: _ cannot navigate window _ within _ (allowScriptAccess is _). Attempted URL was _.     \n\n     2138    Rich text XML could not be parsed.     \n\n     2139    SharedObject could not connect.     \n\n     2140    Security sandbox violation: _ cannot load _. Local-with-filesystem and local-with-networking SWF files cannot load each other.     \n\n     2141    Only one PrintJob may be in use at a time.     \n\n     2142    Security sandbox violation: local SWF files cannot use the LoaderContext.securityDomain property. _ was attempting to load _.     \n\n     2143    AccessibilityImplementation.get_accRole() must be overridden from its default.     \n\n     2144    AccessibilityImplementation.get_accState() must be overridden from its default.     \n\n     2145    Cumulative length of requestHeaders must be less than 8192 characters.     \n\n     2146    Security sandbox violation: _ cannot call _ because the HTML/container parameter allowNetworking has the value _.     \n\n     2147    Forbidden protocol in URL _.     \n\n     2148    SWF file _ cannot access local resource _. Only local-with-filesystem and trusted local SWF files may access local resources.     \n\n     2149    Security sandbox violation: _ cannot make fscommand calls to _ (allowScriptAccess is _).     \n\n* Note: This error indicates that the ActionScript in the SWF is invalid. If you believe that the file has not been corrupted, please report the problem to Adobe.\n\n[http://livedocs.adobe.com/flex/2/langref/runtimeErrors.html]",
    "CreateDate": "2008-12-02T12:53:46.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T12:53:46.0000000",
    "DocumentId": "2076072072",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5792",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Diatomaceous earth; wikipedia.org",
    "SortOrdinal": null,
    "ItemChar": "Diatomaceous earth (pronounced /?da??t?'me???s '??/), also known as DE, TSS, diatomite, diahydro, kieselguhr, kieselgur or celite) is a naturally occurring, soft, chalk-like sedimentary rock that is easily crumbled into a fine white to off-white powder. This powder has an abrasive feel, similar to pumice powder, and is very light, due to its high porosity. The typical chemical composition of diatomaceous earth is 86% silica, 5% sodium, 3% magnesium and 2% iron.\n\nDiatomaceous earth consists of fossilized remains of diatoms, a type of hard-shelled algae. It is used as a filtration aid, as a mild abrasive, as a mechanical insecticide, as an absorbent for liquids, as cat litter, as an activator in blood clotting studies, and as a component of dynamite. As it is also heat-resistant, it can be used as a thermal insulator.\n\n[http://en.wikipedia.org/wiki/Diatomaceous_earth]",
    "ItemText": null,
    "CreateDate": "2008-12-02T12:55:17.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T12:55:17.0000000",
    "DocumentId": "2076072073",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5793",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "sudo and su; combining sudo and su for Ubuntu/Debian systems; FOSSwire.com",
    "SortOrdinal": null,
    "ItemChar": "You’ve probably seen one of these commands. Ubuntu users have seen more of sudo, while SUSE, Fedora, and Debian have used su more often. What exactly is the difference? Both of the commands enable you to gain root access. The major difference is in how privileges are obtained.\n\nsu\n\nSu is a command that enables you to open a shell or login as another user. Run without any parameters, su assumes that you want to become root. When run, you will be prompted for a password. This password is the password of whoever you want to switch to. For example, if I want to become root, running su at a terminal will ask me for root’s password. If I run su bill, I will need to type in bill’s password.\n\nOnce a password has been entered, a shell will open as if you had logged in as the su’d user. Anything you run from it will appear to come from that user.\n\nsudo\n\nOn an Ubuntu system, running su by itself to become root won’t yield any results. Root by default does not have a usable password, so there is no way you can type one in to gain privileges. This is where sudo comes in. Sudo enables you to run a single command as another user (normally root).\n\nThe major difference here is that you enter your own password instead of someone else’s. This enables a system with multiple administrators to not have to share a single password. When run as sudo -s, a root shell will be opened, as with su.\nCombining the Two\n\nIn most cases, su is available on any system, even if it cannot be used directly. Sudo, on the other hand, usually is only available for a Debian or derivative system. Because of these, there are several tricks we can accomplish on an Ubuntu system:\n\n    sudo su # same effect as sudo -s\n\nIn the example above, sudo is used to gain root privileges. Because of this, su is essentially run as root. When this happens, su does not require a password to be entered, so this can be used as an alternative to sudo -s.\n\nTaking that example further:\n\n    sudo su bill # same effect as sudo -s -u bill\n\nThis would grant a shell as the user bill. Again, you only have to type in your own password.\n\nThere are a few more tricks out there that can be accomplished with sudo and su, but that’s up for you to discover.\n\n[http://fosswire.com/2008/02/03/sudo-vs-su/]",
    "ItemText": null,
    "CreateDate": "2008-12-02T12:59:40.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T12:59:40.0000000",
    "DocumentId": "2076072074",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5794",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "eclipse: “Does eclipse allow vertical selections?”; tkilla.ch",
    "SortOrdinal": null,
    "ItemChar": "Eclipse Bugs 8521 and 19771 have over one hundred combined votes, resulting in one of the ten most voted for features of Eclipse. However, implementing Column Mode (aka. rectangular selection) is not easy and involves numerous API additions, namely to the StyledText class in SWT, which is already complicated to maintain.\n\nThere have been various attempts to fix this by simply adding a plug-in on top of eclipse, most notably columns4eclipse. However, these solutions do not offer the full functionality one expects when coming from editors such as UltraEdit. \n\n[http://tkilla.ch/column_mode/]",
    "ItemText": null,
    "CreateDate": "2008-12-02T13:03:00.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T13:03:00.0000000",
    "DocumentId": "2076072075",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5795",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows SharePoint Services: “Throttling SharePoint 2007 Logs”; http://blogs.msdn.com/fooshen/",
    "SortOrdinal": null,
    "ItemChar": "If you have ever developed on SharePoint, there's gotta be at least once when you came across the superbly detailed error message:\n\n“Unknown error” …and its likes.\n\nThat's when we have to start ploughing through the humungous amount of log entries in \"%programfiles%\\Common Files\\Microsoft Shared\\Web Server Extensions\\12\\Logs\". Well, but there’s an easier way—the log files doesn’t have to be humungous!\n\nWe can throttle the log file outputs, depending on which area of SharePoint that we are working on. From the SharePoint Central Administration, navigate to Operations and Diagnostic Logging. \n\n[http://blogs.msdn.com/fooshen/archive/2007/01/31/throttling-moss-2007-logs.aspx]",
    "ItemText": null,
    "CreateDate": "2008-12-02T13:14:02.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T13:14:02.0000000",
    "DocumentId": "2076072076",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5796",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Java Fundamentals: “There is no such thing as a byte or short literal.”; char and String escape sequences; mindprod.com",
    "SortOrdinal": null,
    "ItemChar": "There is no such thing as a byte or short literal. You would have to write it with a cast e.g. (byte)0xff or (short)-99.\n\n…\n\nEscape sequences\n\ninside char and String literals include:\n' ' space\n'\\u003f' Unicode hex, (must be exactly 4 digits to give a 16-bit Unicode number ). \\u2007 is Figure Space, a space as wide as a digit, to help in aligning numbers.\n'\\n' newline, ctrl-J (10, x0A)\n'\\b' backspace, ctrl-H (8, 0x08)\n'\\f' formfeed, ctrl-L (12, 0x0C)\n'\\r' carriage return, ctrl-M (13, 0x0D)\n'\\t' tab, ctrl-I (9, 0x09)\n'\\\\' backslash,\n'\\'' single quote (optional inside \" \"),\n'\\\"' double quote (optional inside ' '),\n'\\377' octal (must be exactly 3 digits. You can get away with fewer, but then you create an ambiguity if the character following the literal just happens to be in the range 0..7.). This lets you get at only the 8-bit characters in the range 0..377 octal or 0..255 decimal or 0..255 decimal, which still gives you 16-bit Unicode.\n\\007 bel, ctrl-G (7, 0x07)\n\\010 backspace, ctrl-H (8, 0x08)\n\\013 vt vertical tab, ctrl-K (11, 0x0B)\n\\032 sub (used in DOS/CPM as eof), ctrl-Z (26, 0x1A)\n\\033 esc ctrl-^ (27, 0x1B)\n\n[http://mindprod.com/jgloss/literal.html]",
    "ItemText": null,
    "CreateDate": "2008-12-02T13:18:52.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T13:18:52.0000000",
    "DocumentId": "2076072077",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5797",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flippant Remarks about the Java application launcher",
    "SortOrdinal": null,
    "ItemChar": "An overview of the Java application launcher is here:\n\n    http://java.sun.com/j2se/1.4.2/docs/tooldocs/windows/java.html\n\nThe most important thing someone from the Microsoft Windows world needs to understand about the Java application launcher is that we can execute a class with its fully qualified name—and this class does not correspond to a dedicated file on disk. Rather, this class can exist in any of the locations on the class path. It follows that you are not required to use a physical *.class or *.jar file in the class argument.\n\nThe second most important thing to understand is that when the -jar option is used, “the JAR file is the source of all user classes, and other user class path settings are ignored.” This is why one would rarely use the -jar option. One would place *.jar references in the -classpath option and call out class names instead.\n",
    "ItemText": null,
    "CreateDate": "2008-12-02T13:30:26.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T13:30:26.0000000",
    "DocumentId": "2076072078",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5798",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Java Fundamentals: “Is Java pass by reference?”; stackoverflow.com",
    "SortOrdinal": null,
    "ItemChar": "Java is always pass-by-value. The difficult thing can be to understand that Java passes objects as references passed by value.\n\nIt goes like this:\n\npublic void foo(Dog d) {\n  d.name == \"Max\"; // true\n  d = new Dog(\"Fifi\");\n  d.name == \"Fifi\"; // true\n}\n\nDog aDog = new Dog(\"Max\");\nfoo(aDog);\naDog.name == \"Max\"; // true\n\nIn this example aDog.name will still be \"Max\". \"d\" is not overwritten in the function as the object reference is passed by value.\n\nLikewise:\n\npublic void foo(Dog d) {\n  d.name == \"Max\"; // true\n  d.setname(\"Fifi\");\n}\n\nDog aDog = new Dog(\"Max\");\nfoo(aDog);\naDog.name == \"Fifi\"; // true\n\n[http://stackoverflow.com/questions/40480/is-java-pass-by-reference][erlando]",
    "ItemText": null,
    "CreateDate": "2008-12-02T13:34:20.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T13:34:20.0000000",
    "DocumentId": "2076072079",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5799",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“What’s this Trojan c:\\windows\\browser.exe and where does it come from?”",
    "SortOrdinal": null,
    "ItemChar": "browser.exe is a \"Backdoor.Pahador\"\n\nseen here:\n...yesterday, my anti virus detected a pahador.f trojan in C:\\Windows\\Browser.exe I quarantined it immediately...\n\nIt records key strokes and sends information back to a remote server\n\nInfo here:\n\nType: Trojan Horse\n\nSystems Affected: Windows 2000, Windows 95, Windows 98, Windows Me, Windows NT, Windows Server 2003, Windows XP\n\nBackdoor.Pahador is a Trojan horse that opens a back door on the compromised computer. It also sends system information to a remote server.\n\n\nOnce executed, Backdoor.Pahador performs the following actions:\n\n1. Creates the following files:\n\n* %CurrentFolder%\\tempst.exe\n* C:\\Windows\\Browser.exe\n\nNote: %CurrentFolder% is a variable that refers to the folder where the risk was originally executed.\n\n2. Adds the value:\n\n\"Shell\" = \"explorer.exe [NUMEROUS SPACES] C:\\Recycler\\services.exe\"\n\nto the registry subkey:\n\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Wi... NT\\CurrentVersion\\Winlogon\n\nso that it is executed every time Windows starts.\n\n3. Modifies the value:\n\n\"DisableTaskMgr\" = \"1\"\n\nin the registry subkey:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Win...\n\nto disable the Task Manager.\n\n4. Modifies the value:\n\n\"C:\\Recycler\\services.exe\" = \"C:\\Recycler\\services.exe:*:Enabled:serv...\n\nin the registry subkey:\n\nHKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\...\n\\FirewallPolicy\\StandardProfile\\Authoriz...\n\nto change the firewall settings.\n\n5. Attempts to delete entries under the following registry subkey:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Wi...\n\n6. Connects to the following URL and sends system information to it:\n\n[http://]appmsg.gadu-gadu.pl/appsvc/appms...\n\n7. Terminates any process that has the following window title:\nPX22Xsgt6\n\n8. Opens a back door on the compromised computer and allows a remote attacker to perform the following actions:\n\n* Capture screen shots\n* Log keystrokes\n* Kill processes\n* Uninstall itself\n* View logs\n\n[http://answers.yahoo.com/question/index?qid=20080402145815AAnOfUc][Jeff]",
    "ItemText": null,
    "CreateDate": "2008-12-02T13:36:30.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T13:36:30.0000000",
    "DocumentId": "2076072080",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5800",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Demystifying the WinSxS directory in Windows XP, Vista and Server 2003/2008”",
    "SortOrdinal": null,
    "ItemChar": "Content is added to this directory in response to installing applications, enabling packages in the add-remove-programs UI, and installing Windows Out-of-Band releases. Content is removed from this directory as a result of uninstall + scavenging - a topic for another time. One important note - uninstalling your application or Windows app will not necessarily remove the physical bits from the system. The servicing stack marks the bits as unusable and prevents their use through \"normal\" means. Files and directories will be removed over time as the servicing system cleans up after itself. Administrators should not, for any reason, take it upon themselves to clean out the directory - doing so may prevent Windows Update and MSI from functioning properly afterwards. Preventing accidental deletion from the directory is accomplished by putting a strong security descriptor on the directory that inherits to its children.\n\nIn Windows Vista, the directory %windir%\\WinSxS has much stronger protection on it than it did in Windows XP and Server 2003. The owner/group is now a SID named \"Trusted Installer\", a service SID used to start the TrustedInstaller service. Users other than the trusted installer are granted only generic-read/generic-execute by default. This increased protection ensures that only the trusted installer service is allowed to modify the servicing-related metadata and files. If a limited user could modify a file in the directory, for example, they could convince the servicing stack to overwrite one binary with another when the next administrator comes along to enable the Games for Windows package.\n\nYou may or may not have ever peeked into the %windir%\\winsxs directory on your system. If you haven't, now would be a good time. First thing you'll notice is that there are a lot of those funkily-named directories. You might further notice that there seem to be several that differ only by what looks like a version number and some random-looking eight characters on the end of the name. Next you might see that some of them differ only by the second-to-last stringish thing. Lastly, note that mostly, the strings can be deciphered with a little help.\n\nEach shared component (in the winsxs directory) gets its own directory into which its payload bits are placed. Somehow, we have to generate (mostly) unique & repeatable directory names for this purpose. The requirements of directory names are reasonably simple - can't overall be more than MAX_PATH (260) characters, can't contain certain characters, etc. Given the naming requirement, it was impossible to use the entire identity as the name of the directory, as someone could name their component \"foo\\bar\" and mess things up. With the extensibility requirement for identities themselves, we couldn't possibly use the entire identity, as the set of tuples would end up being far longer than MAX_PATH. Most importantly, we wanted the directory names to be readable to your average administrator or PSS representative. Finally, generation of the keyform from an identity had to be fast.\n\n[http://blog.tiensivu.com/aaron/archives/\n1306-Demystifying-the-WinSxS-directory-in-Windows-XP,-Vista-and-Server-20032008.html]",
    "ItemText": null,
    "CreateDate": "2008-12-02T13:38:09.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T13:38:09.0000000",
    "DocumentId": "2076072081",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5801",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Java Fundamentals: “Why getter and setter methods are evil”; javaworld.com",
    "SortOrdinal": null,
    "ItemChar": "You shouldn't use accessor methods (getters and setters) unless absolutely necessary because these methods expose information about how a class is implemented and as a consequence make your code harder to maintain.\n\n[http://www.javaworld.com/javaworld/jw-09-2003/jw-0905-toolbox.html?page=6]\n\n[In Java, you can only access private-member data with methods.]\n",
    "ItemText": null,
    "CreateDate": "2008-12-02T13:42:32.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T13:42:32.0000000",
    "DocumentId": "2076072082",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5802",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Java Fundamentals: “Comparison of Java and C Sharp”; C#; Anders Hejlsberg; Borland; wikipedia.org",
    "SortOrdinal": null,
    "ItemChar": "C# allows restricted use of pointers. …Java does not allow pointers or pointer-arithmetic to be used.\n\n…\n\nC# allows the programmer to create user-defined value types, using the struct keyword.\n\n…\n\nEnumerations in C# are derived from a primitive 8, 16, 32, or 64 bit integer type. Any value of the underlying primitive type is a valid value of the enumeration type, though an explicit cast may be needed to assign it. C# also supports bitmapped enumerations where an actual value may be a combination of enumerated values bitwise or'ed together. Enumerations in Java, on the other hand, are objects.\n\n…\n\nC# allows a class definition to be split across several source files using a feature called partial classes. …Java has no corresponding concept.\n\n…\n\nGenerics in Java are a language-only construction; they are implemented only in the compiler. …This technique of implementing generics is known as type erasure. This means that runtime information about the actual types is not available at runtime, and imposes some restrictions such as the inability to create new instances or arrays of generic type arguments.\n\n…\n\nget, set    C# implements properties as part of the language syntax with their optional corresponding get and set accessors, as an alternative for the accessor methods used in Java, which is not a language feature but a coding pattern based on method name conventions.\n\n…\n\nBy contrast, C# is a relatively new language. Microsoft has studied existing languages such as Java and Object Pascal, and has changed some aspects of the language and runtime environment in response to perceived failures and difficulties with its predecessors. C# accommodates constructs more commonly found in languages such as C++, Delphi (designing which was Anders Hejlsberg's principal job when he was at Borland), and, in recent C# versions, borrows from dynamic scripting languages such as Ruby.\n\n[http://en.wikipedia.org/wiki/Comparison_of_C_Sharp_and_Java]",
    "ItemText": null,
    "CreateDate": "2008-12-02T13:59:02.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T13:59:02.0000000",
    "DocumentId": "2076072083",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5803",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Sharepoint Orphans Explained”; blogs.technet.com/corybu/",
    "SortOrdinal": null,
    "ItemChar": "Orphans have been coined the name for objects in a SharePoint schema that live without a parent or child relationship in the database. In effect these database inconsistencies can be created due to many different reasons.\n\n…\n\nYou can only detect orphans through SQL, there is no real out of the box way to detect them from the web UI.\n\n…\n\nConfiguration Orphans: These are the orphans that reside in your configuration database but have no child counterpart (contentDB entry).  Cleaning these are the easiest of all the orphans.  Simply detach the content database from your farm that was included in the result set and reattach it.  This will refresh the sitelist that is tied to that content database and will remove the stale entry.\n\nContent Database Orphans:  This is where it gets tricky.\n\nThere are 2 essential types of content database orphans.\n\n Type 1 Scenario(reactive maintenance):  Your site that has the content you need is not mapped to the configuration database but resides in a content database that is connected to the farm, additionally  a blank new site is mapped to the configuration database.  This would hold true to the second scenario explained above.  To resolve this simply backup the site that is accessible, then delete it.  Once done detach and reattach the database that contains the real site.  This will remap the site to the configuration database.  You now have access to a once orphaned site and all of your content is restored.\n\nType 2 Scenario(Planned Maintenance): The correct site is mapped to the configuration database, however you have stale orphans in other databases.  Simply backup your production site and delete it.  Once that completes detach and attach the database that contains the stale orphan, this will in effect map the orphan to the configuration database and render it accessible.  You can then delete it using STSADM.  Perform these steps until you have cleaned all orphans.  Once all orphans are clean you can then restore your production site back into the farm.   Viola, orphan free :)\n\n…\n\nRemind users that creating and deleting a site can be a sometimes several minute process.  Regardless of how long it takes let the application finish what it is doing.  If it times out then try again but never click back, stop, or close the window when performing these types of administration tasks.  Network Latency, Web front end performance and SQL backend performance can all attribute to a slow create or delete statement.  Be patient :).\n\n[http://blogs.technet.com/corybu/archive/2007/05/31/sharepoint-orphans-explained.aspx]",
    "ItemText": null,
    "CreateDate": "2008-12-02T14:23:22.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T14:23:22.0000000",
    "DocumentId": "2076072084",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5804",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“SharePoint: Delete / Purge / Remove Orphaned Sites or Site Collections”; sharenotes.wordpress.com",
    "SortOrdinal": null,
    "ItemChar": "Microsoft makes it tough with simple things like finding and deleting the orhpaned sites/site collections. There seems to be no well documented way to do this task. After googling for many search strings, below are few resources and steps you can take to clean up your content and config databases.\n\n1. Run the following command:\n\nstsadm -o databaserepair -url http://<URL_of_WindowsSharePointServices_Site> -databasename <name of database that contains the orphan item>\n\n2. If the above command reveals any orhpaned sites, then run the above command with -deletecorruption parameter:\n\nstsadm -o databaserepair -url http://<URL_of_WindowsSharePointServices_Site> -databasename <name of database that contains the orphan item that is to be deleted> -deletecorruption\n\n[http://sharenotes.wordpress.com/2007/11/19/\n    deleting-purging-removing-orphaned-sites-or-site-collections/]",
    "ItemText": null,
    "CreateDate": "2008-12-02T14:26:42.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T14:26:42.0000000",
    "DocumentId": "2076072085",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5805",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Fixing those pesky DCOM event log error 10016 in a SharePoint farm environment”; soerennielsen.wordpress.com",
    "SortOrdinal": null,
    "ItemChar": "Event Type: Error\nEvent Source: DCOM\nEvent Category: None\nEvent ID: 10016\nDate: 1/17/2007\nTime: 4:31:48 AM\nUser: <DOMAIN>\\sa_adm\nComputer: <SERVER>\nDescription:\n\nThe application-specific permission settings do not grant Local Activation permission for the COM Server application with CLSID\n\n{61738644-F196-11D0-9953-00C04FD919C1}\n\nto the user <DOMAIN>\\sa_adm SID (S-1-5-21-162740987-2502514208-3469184634-1119). This security permission can be modified using the Component Services administrative tool.\n\nFor more information, see Help and Support Center at http://go.microsoft.com/fwlink/events.asp.\n\n…\n\nThe error listed above is that the user running the Central Administration web application doesn’t have access to activate (instantiate) the IIS WAMREG admin Service object (search the registry for the CLSID).\n\n…\n\nOn each SharePoint server do the following:\n\n    1. Click Start, Click Run, type “dcomcnfg” and click ok\n    2. Expand Component Services / Computers / My Computer / DCOM Config\n    3. Right click IIS WAMREG admin Service and choose Properties\n    4. Click the Security tag\n    5. Click Edit under Launch and Activation Permissions\n    6. Click Add\n    7. In the Select Users, Computers or Groups type computername\\WSS_WPG and\ncomputername\\WSS_ADMIN_WPG\n    8. Click ok\n    9. In the Permissions for UserName list, click to select the Allow check box\n    10. Click Ok twice.\n    11. Go back to the main Component Services window, right click the “netman” node and select Properties\n    12. Click the security tab\n    13. Click Edit under Activation Permissions\n    14. Click Add on the Launch Permissons Dialog\n    15. Enter “NETWORK SERVICE” in the edit box\n    16. Click Ok\n    17. Enable all the checkboxes for the NETWORK SERVICE\n    18. Click Ok twice\n    19. Finally, run “IISReset”\n\n[http://soerennielsen.wordpress.com/2007/04/16/\n    fixing-those-pesky-dcom-event-log-error-10016-in-a-sharepoint-farm-environment/]",
    "ItemText": null,
    "CreateDate": "2008-12-02T14:32:07.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-02T14:32:07.0000000",
    "DocumentId": "2076072086",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5806",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ActionScript 3.0 and E4X Code: Remove a Namespace; XSPF",
    "SortOrdinal": null,
    "ItemChar": "    public static function getTrackData(data:*, index:int=0):XML\n    {\n        var xspf:Namespace = new Namespace(xspfUri);\n        default xml namespace = xspf;\n        var playlist:XML = new XML(data);\n\n        var length:int = playlist.trackList.length();\n        var title:String = String(playlist.trackList.track[index].title);\n        var location:String = String(playlist.trackList.track[index].location);\n\n        var returnXml:XML =\n            <trackData x­mlns=\"\">\n                <total>{length}</total>\n                <title>{title}</title>\n                <location>{location}</location>\n            </trackData>\n\n        return returnXml;\n    }\n/*\n\nBy setting x­mlns to a zero-length string, E4X will omit the x­mlns attribute.\n\n*/",
    "ItemText": null,
    "CreateDate": "2008-12-04T20:44:46.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-04T20:44:46.0000000",
    "DocumentId": "2076072087",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5807",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SonghaySystem.com mail <form/>; cold storage",
    "SortOrdinal": null,
    "ItemChar": "<form method=\"post\" action=\"#\" name=\"frmEmail\" style=\"visibility: hidden\">\n\n<input type=\"hidden\" name=\"recipient\" value=\"rasx@songhaysystem.com\" />\n<input type=\"hidden\" name=\"subject\" value=\"Songhay Mail\" />\n<input type=\"hidden\" name=\"redirect\" value=\"{$rootUri}mail/sent\" />\n<input type=\"hidden\" name=\"required\" value=\"email,body\" />\n\n<div class=\"MailerPageFormText\">\n    <div>Please Enter Your Name:</div>\n    <input name=\"realname\" type=\"text\" />\n</div>\n<div class=\"MailerPageFormText\">\n    <div>Please Enter Your E-Mail Address:</div>\n    <input name=\"email\" type=\"text\" />\n</div>\n<div id=\"MailerPageComments\">\n    <div>Comments:</div>\n    <textarea name=\"body\" onfocus=\"this.wrap='soft'\"></textarea>\n</div>\n\n<ul id=\"MailerPageFormButtons\">\n    <li>\n<input class=\"InputButton\" type=\"button\" onclick=\"{$onClickStatement}\" value=\"Cancel\" />\n    </li>\n    <li>\n<input class=\"InputButton\" type=\"reset\" value=\"Clear\" />\n    </li>\n    <li>\n<input class=\"InputButton\" id=\"SendMail\" type=\"button\" value=\"Send Message!\" />\n    </li>\n</ul>\n<div style=\"clear:both;\"></div>\n\n</form>\n",
    "ItemText": null,
    "CreateDate": "2008-12-12T11:56:20.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-12T11:56:20.0000000",
    "DocumentId": "2076072088",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5808",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "kintespace.com mail form; cold storage",
    "SortOrdinal": null,
    "ItemChar": "<form method=\"post\" action=\"#\" name=\"frmEmail\" style=\"visibility: hidden\">\n\n<input type=\"hidden\" name=\"recipient\" value=\"rasx@kintespace.com\" />\n<input type=\"hidden\" name=\"subject\" value=\"Visitor Space Mail\" />\n<input type=\"hidden\" name=\"redirect\" value=\"http://kintespace.com/kmail_appreciation.html\" />\n<input type=\"hidden\" name=\"required\" value=\"email,body\" />\n\n<div class=\"MailerPageFormText\">\n    <div>Your Name:</div>\n    <input name=\"realname\" type=\"text\" />\n</div>\n<div class=\"MailerPageFormText\">\n    <div>Your E-Mail Address:</div>\n    <input name=\"email\" type=\"text\" />\n</div>\n<div id=\"MailerPageComments\">\n    <div>Comments:</div>\n    <textarea name=\"body\" onfocus=\"this.wrap='soft'\"></textarea>\n</div>\n\n<div id=\"MailerPageFormButtonsBlock\">\n<ul id=\"MailerPageFormButtons\">\n    <li>\n<input id=\"MailerPageCancelButton\" type=\"button\" value=\"Cancel\" />\n    </li>\n    <li>\n<input type=\"reset\" value=\"Clear\" />\n    </li>\n    <li>\n<input id=\"MailerPageSubmitButton\" type=\"submit\" value=\"Send Message!\" />\n    </li>\n</ul>\n<div style=\"clear:both;\"></div>\n</div>\n</form>\n\n",
    "ItemText": null,
    "CreateDate": "2008-12-12T11:56:45.0000000",
    "EndDate": null,
    "ModificationDate": "2008-12-12T11:56:45.0000000",
    "DocumentId": "2076072089",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5809",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Jamaica Kincaid; A Small Place; Orphans with No Tongue; pp. 31–32",
    "SortOrdinal": null,
    "ItemChar": "But what I see is the millions of people, of whom I am just one, made orphans: no motherland, no fatherland, no gods, no mounds of earth for holy ground, no excess of love which might lead to the things that an excess of love sometimes brings, and worst and most painful of all, no tongue. (For isn’t it odd that the only language I have in which to speak of this crime is the language of the criminal who committed this crime? And what can that really mean? For the language of the criminal can contain only the goodness of the criminal’s deed. The language of the criminal can explain and express the deed only from the criminal’s point of view. It cannot contain the horror of the deed, the injustice of the deed, the agony, the humiliation inflicted on me. When I say to the criminal, “This is wrong, this is wrong, this is wrong,” or, “This deed is bad, and this other deed is bad, and this one is also very, very, bad,” the criminal understands the word “wrong” in this way: It is wrong when “he” doesn’t get his fair share of the profits from the crime just committed; he understands the word “bad” in this way: a fellow criminal betrayed a trust. That must be why, when I say, “I am filled with rage,” the criminal says, “But why?”…And so look at this prolonged visit to the bile duct that I am making, look at how bitter, how dyspeptic just to sit and think about these things makes me. …)",
    "ItemText": null,
    "CreateDate": "2009-01-31T09:33:12.0000000",
    "EndDate": null,
    "ModificationDate": "2009-01-31T09:33:12.0000000",
    "DocumentId": "2076072090",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5810",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Allen Holub, JavaWorld.com, 09/05/03; “Why getter and setter methods are evil”",
    "SortOrdinal": null,
    "ItemChar": "In 1989, Kent Beck and Ward Cunningham taught classes on OO design, and they had problems getting people to abandon the get/set mentality. They characterized the problem as follows:\n\n“The most difficult problem in teaching object-oriented programming is getting the learner to give up the global knowledge of control that is possible with procedural programs, and rely on the local knowledge of objects to accomplish their tasks. Novice designs are littered with regressions to global thinking: gratuitous global variables, unnecessary pointers, and inappropriate reliance on the implementation of other objects.”\n\n[http://www.javaworld.com/javaworld/jw-09-2003/jw-0905-toolbox.html]",
    "ItemText": null,
    "CreateDate": "2009-02-01T18:30:14.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-01T18:30:14.0000000",
    "DocumentId": "2076072091",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5811",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VMware Workstation 5.x: Sample config.ini File; CPU Speed Issue;http://vmware.com/info?id=97",
    "SortOrdinal": null,
    "ItemChar": ";Evidently an upgrade can cause this file to go blank.\n\n;This file is located at %AllUsersProfile%\\Application Data\\VMware\\\n\n;This one is for an Intel SpeedStep CPU at 1.66Ghz:\nhost.cpukHz = \"1665000\"\nhost.noTSC = \"TRUE\"\nptsc.noTSC = \"TRUE\"",
    "ItemText": null,
    "CreateDate": "2009-02-02T11:48:58.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-02T11:48:58.0000000",
    "DocumentId": "2076072092",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5812",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Cringely’s Mortgage Blog: “It was the best of times, it was the worst of times…”",
    "SortOrdinal": null,
    "ItemChar": "The time to buy an asset is when it is just starting to appreciate. I’m not demanding here that every potential home buyer try to time the market but it is simple logic that it makes little sense to buy something today if you can buy it cheaper tomorrow. Home prices are dropping and it looks like they will continue to drop at least through 2010 and maybe even to 2012 according to the S&P/Case-Shiller Housing Futures Index traded on the Chicago Mercantile Exchange. The Case-Shiller is the best indication we have of where housing prices are headed. And though the index has shortened a bit in recent months from predicting a 2013 housing market bottom, renting still looks smarter than buying until at least 2011.\n\n[http://blog.cringelysmortgage.com/2009/01/04/it-was-the-best-of-times-it-was-the-worst-of-times/]",
    "ItemText": null,
    "CreateDate": "2009-02-04T12:07:27.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-04T12:07:27.0000000",
    "DocumentId": "2076072093",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5813",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Cringely’s Mortgage Blog: “The Foreclosure Game”",
    "SortOrdinal": null,
    "ItemChar": "Here’s how foreclosures used to work. It takes a year and several thousand dollars worth of legal work to actually foreclose on a home, during which time the bank or lender is also deprived of revenue from the mortgage because we aren’t making payments, remember. But as long as home values were going up AND THE BANK COULD ACTUALLY SELL FOR THAT HIGHER AMOUNT it didn’t really matter. That’s because the increase in home value during the foreclosure time frame usually more than made up for the legal costs and lost revenue, even for houses originally bought with no money down.\n\n[http://blog.cringelysmortgage.com/2009/01/04/the-foreclosure-game/]",
    "ItemText": null,
    "CreateDate": "2009-02-04T12:08:17.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-04T12:08:17.0000000",
    "DocumentId": "2076072094",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5814",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Cringely’s Mortgage Blog: “Making Par — It’s even harder than you think”",
    "SortOrdinal": null,
    "ItemChar": "Almost by definition you’ll NEVER get a par mortgage from a mortgage broker — that is unless that broker is your husband or wife, son or daughter. This is because par is the rate the broker pays – the best wholesale rate – and if he gave it to you he’d be giving-up much of his profit.\n\n[http://blog.cringelysmortgage.com/2008/12/29/making-par-its-even-harder-than-you-think/]",
    "ItemText": null,
    "CreateDate": "2009-02-04T12:09:11.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-04T12:09:11.0000000",
    "DocumentId": "2076072095",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5815",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“DVI vs. HDMI vs. Component Video—Which is Better?”",
    "SortOrdinal": null,
    "ItemChar": "DVI and HDMI are exactly the same as one another, image-quality-wise. The principal differences are that HDMI carries audio as well as video, and uses a different type of connector, but both use the same encoding scheme, and that's why a DVI source can be connected to an HDMI monitor, or vice versa, with a DVI/HDMI cable, with no intervening converter box.\n\n[http://forum.ecoustics.com/bbs/messages/34579/122868.html]",
    "ItemText": null,
    "CreateDate": "2009-02-04T12:10:44.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-04T12:10:44.0000000",
    "DocumentId": "2076072096",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5816",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Adobe ActionScript 3: Notes for “Working with display objects”; DisplayObject, Sprite, MovieClip, UIComponent and Stage",
    "SortOrdinal": null,
    "ItemChar": "* “All display objects are subclasses of the DisplayObject class… There is no constructor function for the DisplayObject class. You must create another type of object (an object that is a subclass of the DisplayObject type), such as a Sprite, to instantiate an object with the new constructor. Also, if you want to create a custom display object class, you must create a subclass of one of the display object subclasses that has a usable constructor function (such as the Shape class or the Sprite class).”\n\nThese “display objects” include Sprite, MovieClip, UIComponent and the Flex Application object.\n\n* “When you instantiate a display object, it will not appear onscreen (on the Stage) until you add the display object instance to a display object container that is on the display list. …When you add any visual element to the Stage, that element becomes a child of the Stage object.”\n\nIt is important to remember that the Stage objects inherits from the DisplayObject. This implies that a “child” of the Stage is defined by the DisplayObject. This also implies that any reference to a “display list” most likely refers to the children of the DisplayObject.\n\nThe DisplayObject.stage property is read-only. The Flex Application object also also has a stage property (of course).\n\nFor more information refer to the “Display Programming” section in “Programming ActionScript 3.0” (Flex 2.01):\n\n    http://livedocs.adobe.com/flex/201\n        /html/05_Display_Programming_162_01.html\n",
    "ItemText": null,
    "CreateDate": "2009-02-05T17:00:45.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-05T17:00:45.0000000",
    "DocumentId": "2076072097",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5817",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "AVCHD",
    "SortOrdinal": null,
    "ItemChar": "AVCHD is a high-definition and standard-definition recording format for use in digital tapeless camcorders. The format is comparable to other handheld video camera recording formats, particularly HDV and TOD.\n\n[http://en.wikipedia.org/wiki/AVCHD]\n",
    "ItemText": null,
    "CreateDate": "2009-02-06T20:38:05.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-06T20:38:05.0000000",
    "DocumentId": "2076072098",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5818",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript: Flippant Remarks about “Comparison of JavaScript frameworks”",
    "SortOrdinal": null,
    "ItemChar": "15 frameworks are compared. All frameworks start with Microsoft Internet Explorer 6 (released in 2001) and Mozilla Firefox 1.5 (released in 2005—which implies that JavaScript frameworks were not remotely useful until after 2005).\n\n[http://en.wikipedia.org/wiki/Comparison_of_JavaScript_frameworks]",
    "ItemText": null,
    "CreateDate": "2009-02-06T20:50:26.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-06T20:50:26.0000000",
    "DocumentId": "2076072099",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5819",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ActionScript 3.0: The “Special” Type (*)",
    "SortOrdinal": null,
    "ItemChar": "Specifies that a property is untyped. Use of the asterisk symbol for a type annotation is equivalent to using no type annotation. Expressions that read from untyped properties are considered untyped expressions. Use of untyped expressions or properties is recommended in the following circumstances:\n\n* When you want to defer type checking to runtime. You can use an untyped property or expression to circumvent compile-time type checking in strict mode. Note, however, that runtime type checking of assignment statements occurs whether you use strict mode or not.\n\n* When you want to store the value undefined in a property. Unlike previous versions of ActionScript, the value undefined is not a member of the Object data type. You must use an untyped property to store the value undefined.\n\n[http://livedocs.adobe.com/flex/201/langref/specialTypes.html#*]\n",
    "ItemText": null,
    "CreateDate": "2009-02-06T20:53:33.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-06T20:53:33.0000000",
    "DocumentId": "2076072100",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5820",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "tar notes",
    "SortOrdinal": null,
    "ItemChar": "To unpack a standard .tar file, use the command\n\n    tar -xvf filename\n\nThe Command options of tar:\n\n    * x: decompress something\n    * t: view contents\n    * v: verbose mode\n    * f: input from a file\n\n…some versions of tar support inbuilt decompression of gzipped tar files. This requires the z option, transforming the command to:\n\n    tar -xvzf filename\n\nTo create a tarball, you can use\n\n    tar cf tarballname.tar files\n\nIf you just want to view the contents of a tar file instead of extracting it: \n\n    tar -tf filename\n\nYou can filter it through gzip or bunzip2 respectively:\n\n    tar -tzf filename\n    tar -tjf filename\n\n[http://wiki.linuxquestions.org/wiki/Tar]\n[http://unixhelp.ed.ac.uk/CGI/man-cgi?tar]\n",
    "ItemText": null,
    "CreateDate": "2009-02-06T21:00:41.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-06T21:00:41.0000000",
    "DocumentId": "2076072101",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5821",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "AWK/GAWK and UTF-8; billposer.org",
    "SortOrdinal": null,
    "ItemChar": "GAWK is 8-bit clean, so any single-byte encoding can be used. If locale support is enabled, the locale correctly set, and the encoding one known to gawk, gawk will handle it correctly. However, GAWK presently (2004/06/21) supports Unicode only in part. Since gawk is 8-bit clean, UTF-8 text is processed correctly provided that gawk does not need to know how byte sequences are parsed into characters or to recognize particular codepoints. This means that UTF-8 text can be read and printed out correctly and that the basic parsing mechanisms will work so long as the field and record separators are ASCII characters. Searches for fixed strings will also work. The length() function, on the other hand, does not work correctly on UTF-8 text; it returns the number of bytes in the string rather than the number of characters. An important exception is that regular expression matching does work on UTF-8 text.\n\n[http://billposer.org/Linguistics/Computation/LectureNotes/AWK.html]\n",
    "ItemText": null,
    "CreateDate": "2009-02-19T19:53:52.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-19T19:53:52.0000000",
    "DocumentId": "2076072102",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5822",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "AWK/GAWK Code: Deleting the First Line from a File; unix.com",
    "SortOrdinal": null,
    "ItemChar": "awk 'FNR>1' myfile\n\n[http://www.unix.com/shell-programming-scripting/27482-delete-first-line-any-text-file.html]",
    "ItemText": null,
    "CreateDate": "2009-02-19T19:56:08.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-19T19:56:08.0000000",
    "DocumentId": "2076072103",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5823",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CSS: border-radius and -moz-border-radius; CSS3; Firefox; Mozilla; the-art-of-web.com; text-shadow, -moz-box-shadow, -moz-column-rule; ajaxian.com",
    "SortOrdinal": null,
    "ItemChar": "“As with many CSS properties relating to margins, padding and borders, there are four individual properties - one for each corner of a box element - and one shorthand property. Each attribute is mean to accept either one or two values, but the Mozilla implementation is slightly different from the standard…At this time the CSS3 properties above do not work in Internet Explorer. The 'Mozilla' versions however work very well in Firefox 1.5 and presumably in other Mozilla-based browsers.”\n\n[http://www.the-art-of-web.com/css/border-radius/]\n\nThere are other ‘crazy’ Firefox CSS properties like text-shadow, -moz-box-shadow and -moz-column-rule.\n\n[http://ajaxian.com/archives/\n    firefox-implements-3-css-properties-text-shadow-moz-box-shadow-and-moz-column-rule]",
    "ItemText": null,
    "CreateDate": "2009-02-19T20:29:47.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-19T20:29:47.0000000",
    "DocumentId": "2076072104",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5824",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows and rsync; “Using rsync on Windows”; hype-free.blogspot.com",
    "SortOrdinal": null,
    "ItemChar": "“There are two Windows ports that I know of: DeltaCopy and cwRsync. They both are packages which bundle the Cygwin version of rsync with the needed DLLs (cygwin1.dll, and so on). Cygwin is an emulation layer for Windows which allows to create a Linux-e environment and run / compile many of the tools available for Linux without modification.”\n\nAn attempt was made to use rsync with a remote server (using the UNC format, \\\\MyServer) and was not very performant.\n\n[http://hype-free.blogspot.com/2007/02/using-rsync-on-windows.html]",
    "ItemText": null,
    "CreateDate": "2009-02-19T20:13:23.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-19T20:13:23.0000000",
    "DocumentId": "2076072105",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5825",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Remote deployment with Ant and ssh”; <sshexec />; wiki.objectstyle.org",
    "SortOrdinal": null,
    "ItemChar": "“You can do many things with Ant, one of them is the ability to use tools like tar, gzip, FTP and scp for remote deployment. At work, we use a shell script on our servers to deploy our apps, and we are using rsync to send the applications to the server before calling the shell script. Would be great to actually do this in one step ? It's quite easy!. …First, you need to install JSch. We use the jsch-0.1.29 release, we didn't try a later release. Copy the JAR into /Developer/Java/Ant/lib/ (Mac OS X 10.4) or /usr/share/ant/lib/ (Mac OS X 10.5).”\n\nIt is possible to use Ant to call, say, bash scripts (with <exec /> and <arg />) in case installing JSch is not interesting or possible.\n\n[http://wiki.objectstyle.org/confluence/display/WOL/\n    Remote+deployment+with+Ant+and+ssh]",
    "ItemText": null,
    "CreateDate": "2009-02-19T20:24:37.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-19T20:24:37.0000000",
    "DocumentId": "2076072106",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5826",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Open File dialog has the OK button grayed out”; kb.mozillazine.org",
    "SortOrdinal": null,
    "ItemChar": "“The OK button being grayed out is documented in bug 264492. In some cases, selecting another option (e.g. \"Save to Disk\") will reactivate the OK button so you can then reselect the \"Open with\" action to open the file with an application.”\n\nThis was a problem when a PHP page streamed a file from a link with a target attribute of \"_blank\", causing a new window to open.\n\n[http://kb.mozillazine.org/Open_File_dialog_has_the_OK_button_grayed_out]",
    "ItemText": null,
    "CreateDate": "2009-02-19T20:35:18.0000000",
    "EndDate": null,
    "ModificationDate": "2009-02-19T20:35:18.0000000",
    "DocumentId": "2076072107",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5827",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows XP/2003 PROBLEM: Accessing Share on a Remote Machine Shows only Guest Prompt; Group Policy; gpedit.msc",
    "SortOrdinal": null,
    "ItemChar": "Run the Group Policy snap-in (gpedit.msc). Under Local Computer Policy > Computer Configuration > Windows Settings > Security Settings > Security Options set “Network access: Sharing and security model for local accounts” to “Classic on the Windows Server 2003 family and Windows XP.”\n\nRun gpupdate. This program is described here:\n\n    http://www.microsoft.com/resources/documentation/windows/xp/\n        all/proddocs/en-us/refrgp.mspx?mfr=true\n",
    "ItemText": null,
    "CreateDate": "2009-03-09T21:54:27.0000000",
    "EndDate": null,
    "ModificationDate": "2009-03-09T21:54:27.0000000",
    "DocumentId": "2076072108",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5828",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PowerShell 1 Script: Add Local Users; ADSI; Active Directory; Add-LocalUser",
    "SortOrdinal": null,
    "ItemChar": "Clear-Host;\n\nFunction Add-LocalUser([String]$userName, [String]$userDescription, [String]$password)\n{\n\t$path = [String]::Concat(\"WinNT://./\",$userName,\",user\");\n\t$user = [ADSI]$path;\n\tif([String]::IsNullOrEmpty($user.Name))\n\t{\n\t\t$computer = [ADSI]\"WinNT://.\";\n\t\t$user = $computer.Create(\"user\", $userName);\n\t\t$user.SetPassword($password);\n\t\t$user.SetInfo();\n\t\t$user.Description = $userDescription;\n\t\t$user.SetInfo();\n\t\t$user.UserFlags += 65536\n                #flag ADS_UF_DONT_EXPIRE_PASSWD = &h10000\n\n\t\t$user.SetInfo();\n\n\t\tWrite-Host \"User\"$user.Name\"added.\";\n\t}\n\telse\n\t{\n\t\tWrite-Host \"User\"$user.Name\"already a Local User.\";\n\t}\n}\n\nAdd-LocalUser \"MyUser\" \"Local Account\" \"my1passw0rd\";\n",
    "ItemText": null,
    "CreateDate": "2009-03-18T20:39:25.0000000",
    "EndDate": null,
    "ModificationDate": "2009-03-18T20:39:25.0000000",
    "DocumentId": "2076072109",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5829",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Zend Framework PROBLEM: Configured Routes with Camel-Casing Throw ‘Action Not Found’ Exceptions",
    "SortOrdinal": null,
    "ItemChar": "In versions of the Zend Framework greater than 1.0.3, case sensitivity matters for Controller actions specified in configuration files (including XML configuration files). This means that the following declared route will throw an exception because the document Controller does not have a public method written as documentcode:\n\n    <routes>\n        <documentByCode>\n            <type>Zend_Controller_Router_Route_Regex</type>\n            <route>document/code/(\\w+)</route>\n            <defaults>\n                <controller>document</controller>\n                <action>documentCode</action>\n            </defaults>\n            <map>\n                <documentCode>1</documentCode>\n            </map>\n        </documentByCode>\n    </routes>\n\nThis is a correct form:\n\n    <routes>\n        <documentByCode>\n            <type>Zend_Controller_Router_Route_Regex</type>\n            <route>document/code/(\\w+)</route>\n            <defaults>\n                <controller>document</controller>\n                <action>document-code</action>\n            </defaults>\n            <map>\n                <documentCode>1</documentCode>\n            </map>\n        </documentByCode>\n    </routes>\n\nNow the Framework will look for documentCode with the case sensitivity and find it without exceptions. For more information, see 10.13.3. “Migrating from 1.0.x to 1.5.0 or Newer”:\n\nhttp://framework.zend.com/manual/en/zend.controller.migration.html",
    "ItemText": null,
    "CreateDate": "2009-03-21T10:07:15.0000000",
    "EndDate": null,
    "ModificationDate": "2009-03-21T10:07:15.0000000",
    "DocumentId": "2076072110",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5830",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Notepad++ PROBLEM: The Styler Configurator… Command Does Not Override Background Colors for All Languages",
    "SortOrdinal": null,
    "ItemChar": "For those of us who are used to setting syntax coloring in Visual Studio, Notepad++ does not automatically override the background color settings for all languages. You can run the Settings > Styler Configurator… command to change colors for each language.\n\nTo very quickly change background colors for all languages, edit these files:\n\n    \"%UserProfile%\\Application Data\\Notepad++\\stylers.xml\"\n\n    \"%UserProfile%\\Application Data\\Notepad++\\userDefineLang.xml\"\n\nRun find-change operations to replace, say, bgColor=\"FFFFFF\" with bgColor=\"C0C0C0\".",
    "ItemText": null,
    "CreateDate": "2009-03-25T15:36:05.0000000",
    "EndDate": null,
    "ModificationDate": "2009-03-25T15:36:05.0000000",
    "DocumentId": "2076072111",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5831",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PowerShell: “calling a function with parameters”; Serge van den Oever",
    "SortOrdinal": null,
    "ItemChar": "I just started with PowerShell to do some complex scripting. As a beginner in this new language I will probably run into all the quirks that the language has, but hey thats the fun with learning something new. The first quirk: calling a function with parameters.\n\n    function f([string]$a, [string]$b)\n    {\n        Write-Host \"a:\", $a, \" b:\", $b\n    }\n\n    f(\"hello\", \"world\") # Results in: a: hello world b:\n    f \"hello\" \"world\" # Results in a: hello b: world\n\nIf you put something between parentheses, it is executed as an expression first.\n\nFor more information on what you can do with functions, execute the following command in your PowerShell: Get-Help about_function\n\n[http://weblogs.asp.net/soever/archive/2006/11/29/\npowershell-calling-a-function-with-parameters.aspx]",
    "ItemText": null,
    "CreateDate": "2009-03-26T18:18:31.0000000",
    "EndDate": null,
    "ModificationDate": "2009-03-26T18:18:31.0000000",
    "DocumentId": "2076072112",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5832",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WiFi: “General Wireless-N Question—Why am I only getting 65mbps?”; dslreports.com",
    "SortOrdinal": null,
    "ItemChar": "[stevech0:]\n\nWireless Air Link bit rate: with 11g: 54Mbps max. With 11n: same. These rates are achieved only with short distances, few walls, and ideal interference conditions.\n\nWith 11n AND channel-pair-bonding: 108Mbps. But channel pair bonding is (a) rude as it uses 2/3 of the entire shared band and (b) is often automatically disabled if there are any non-11n networks on any of the 12 affected channel numbers. So 11n is great for hermits.\n\nWindows normally reports the Wireless Air Link in the WiFi status. As it will with an ethernet, say, 1Gbps connection but few PCs can push more than 75% of that speed.\n\nA throughput test at the IP layer, which includes all wireless and TCP/IP overhead, will typically show the yield is a bit less than 1/2 of the Air Link rate. This is because of things like 802.11 is half-duplex, waits for an ACK from the receiving side before sending more (unless you use a particular proprietary/non-standard frame bursting), bits lost to error detection and correction overhead, retransmissions due to interference on same/adjacent channels, and so on.\n\nThe WiFi marketing guys prey on the gullible public. As do the lotteries.\n\n[http://www.dslreports.com/forum/\nr21412426-General-WirelessN-Question-Why-am-I-only-getting-65mbps]",
    "ItemText": null,
    "CreateDate": "2009-03-26T18:22:20.0000000",
    "EndDate": null,
    "ModificationDate": "2009-03-26T18:22:20.0000000",
    "DocumentId": "2076072113",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5833",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PowerShell 1.0: Uninstalling PowerShell; “Howto: Uninstall Powershell 1.0”; geekzguru.wordpress.com",
    "SortOrdinal": null,
    "ItemChar": "When you try to install Powershell 2.0, you are prompted to uninstall other versions of Powershells before going ahead with the installation. But neither does powershell appear in Add/Remove programs nor is there an uninstall shortcut in the programs menu.\n\nTo uninstall powershell 1.0 run add/remove programs (appwiz.cpl from Win+R) and click the “show updates” checkbox. Powershell will now be shown.\n\n[http://geekzguru.wordpress.com/2008/02/16/howto-uninstall-powershell-10/]",
    "ItemText": null,
    "CreateDate": "2009-03-26T18:24:46.0000000",
    "EndDate": null,
    "ModificationDate": "2009-03-26T18:24:46.0000000",
    "DocumentId": "2076072114",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5834",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WSS: Uninstalling Windows Internal Database; technet.microsoft.com; SharePoint",
    "SortOrdinal": null,
    "ItemChar": "To uninstall Windows Internal Database\n\n1. Open a command shell.\n2. Call msiexec with the correct key for the operating system platform.\n\n    On 32-bit platforms:\n\n    msiexec /x {CEB5780F-1A70-44A9-850F-DE6C4F6AA8FB} callerid=ocsetup.exe\n\n    On 64-bit platforms:\n\n    msiexec /x {BDD79957-5801-4A2D-B09E-852E7FA64D01} callerid=ocsetup.exe\n\n[http://technet.microsoft.com/en-us/library/cc708610.aspx]\n\nSharePoint, Microsoft Windows Server or another Microsoft-based server solution may install by default the Windows Internal Database in the %windir%\\SYSMSI\\SSEE directory.",
    "ItemText": null,
    "CreateDate": "2009-03-26T18:29:21.0000000",
    "EndDate": null,
    "ModificationDate": "2009-03-26T18:29:21.0000000",
    "DocumentId": "2076072115",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5835",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PowerShell 1.0 Script: Toggle-Service; Start-Service, Stop-Service, Write-Host",
    "SortOrdinal": null,
    "ItemChar": "Function Toggle-Service([String] $name, [String[]] $dependents = @())\n{\n    $s = Get-Service $name;\n\n    if ($s)\n    {\n        Write-Host -BackgroundColor Green -ForegroundColor White \"Service\"$s.Name\"found.\";\n        if ( $s.Status -eq \"Stopped\" )\n        {\n            Write-Host -BackgroundColor Gray -ForegroundColor White -NoNewline \"Service is stopped.\";\n            Write-Host -BackgroundColor Green -ForegroundColor White \" Starting service…\";\n            Start-Service -Name $s.Name;\n            foreach($dname in $dependents)\n            {\n                Write-Host -BackgroundColor Green -ForegroundColor White \"Starting dependent Service\"$dname\"…\";\n                Start-Service -Name $dname;\n            }\n        }\n        else\n        {\n            Write-Host -BackgroundColor Green -ForegroundColor White -NoNewline \"Service\"$s.Name\"is running.\";\n            Write-Host -BackgroundColor Gray -ForegroundColor White \" Stopping service…\";\n            Stop-Service -Name $s.Name -Force;\n        }\n    }\n    else\n    {\n        Write-Host -BackgroundColor Red -ForegroundColor White \"Service not found.\";\n    }\n}\n",
    "ItemText": null,
    "CreateDate": "2009-03-29T15:18:40.0000000",
    "EndDate": null,
    "ModificationDate": "2009-03-29T15:18:40.0000000",
    "DocumentId": "2076072116",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5836",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Akregator PROBLEM: Font Size Not Changing in Gnome Akregator 1.2.2 on KDE 3.5.2 on Ubuntu 6.x",
    "SortOrdinal": null,
    "ItemChar": "Since Akregator uses a KDE runtime environment, it is independent of many Gnome preferences, including UI font sizes. (Note that you can set browser fonts in Akregator by choosing Settings > Configure Akregator… > Appearance > Font Size.) You have to edit a configuration file, ~.kde/share/config/kdeglobals, to change the font size. For example, the following sets all UI fonts to 14:\n\n[General]\nfixed=Monospace,14,-1,5,50,0,0,0,0,0\nfont=Sans Serif,14,-1,5,50,0,0,0,0,0\nmenuFont=Sans Serif,14,-1,5,50,0,0,0,0,0\ntaskbarFont=Sans Serif,14,-1,5,50,0,0,0,0,0\ntoolBarFont=Sans Serif,14,-1,5,50,0,0,0,0,0\n\n",
    "ItemText": null,
    "CreateDate": "2009-04-07T21:19:18.0000000",
    "EndDate": null,
    "ModificationDate": "2009-04-07T21:19:18.0000000",
    "DocumentId": "2076072117",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5837",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu 6.x Firefox PROBLEM: Firefox “Looks up” DNS Information Too Frequently; “Speed Up Firefox web browser,” ubuntugeek.com",
    "SortOrdinal": null,
    "ItemChar": "There are approximately two ways to handle this problem: (i) mess about with about:config settings in Firefox itself and (ii) install dnsmasq in Ubuntu.\n\nThese are some of the about:config settings of concern:\n\nnetwork.http.pipelining\n[http://kb.mozillazine.org/Network.http.pipelining]\n\nnetwork.http.pipelining.maxrequests\n\nnetwork.dns.disableIPv6\n[http://kb.mozillazine.org/Network.dns.disableIPv6]\n\nplugin.expose_full_path\n\nnglayout.initialpaint.delay\n\ncontent.notify.backoffcount\n\n\n\nFor an overview of dnsmasq, see “Local DNS Cache for Faster Browsing on Ubuntu Machine”:\n\n    http://www.ubuntugeek.com/\n        local-dns-cache-for-faster-browsing-on-ubuntu-machine.html\n\nFor a more extensive view, see  “Speed Up Firefox web browser”:\n\n    http://www.ubuntugeek.com/speed-up-firefox-web-browser.html\n",
    "ItemText": null,
    "CreateDate": "2009-04-19T10:57:59.0000000",
    "EndDate": null,
    "ModificationDate": "2009-04-19T10:57:59.0000000",
    "DocumentId": "2076072118",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5838",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“DVI vs. HDMI vs. Component Video—Which is Better?”; forum.ecoustics.com",
    "SortOrdinal": null,
    "ItemChar": "DVI and HDMI are exactly the same as one another, image-quality-wise. The principal differences are that HDMI carries audio as well as video, and uses a different type of connector, but both use the same encoding scheme, and that's why a DVI source can be connected to an HDMI monitor, or vice versa, with a DVI/HDMI cable, with no intervening converter box.\n\n[http://forum.ecoustics.com/bbs/messages/34579/122868.html]",
    "ItemText": null,
    "CreateDate": "2009-04-21T20:33:48.0000000",
    "EndDate": null,
    "ModificationDate": "2009-04-21T20:33:48.0000000",
    "DocumentId": "2076072119",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5839",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Enable Copy and Paste from Ubuntu VMware Guest”; howtogeek.com",
    "SortOrdinal": null,
    "ItemChar": "VMware includes the ability to copy and paste to and from your virtual machine window. To enable this, you will need to install the VMware tools inside your virtual machine.\n\nOnce your VMware tools are installed, you will want to launch the vmware toolbox utility, which must be running if you want copy and paste to work.\n\n[http://www.howtogeek.com/howto/ubuntu/\n    enable-copy-and-paste-from-ubuntu-vmware-guest/]",
    "ItemText": null,
    "CreateDate": "2009-04-21T20:37:53.0000000",
    "EndDate": null,
    "ModificationDate": "2009-04-21T20:37:53.0000000",
    "DocumentId": "2076072120",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5840",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Zend Framework: “Migrating from 1.0.x to 1.5.0 or Newer”; framework.zend.com",
    "SortOrdinal": null,
    "ItemChar": " Though most basic functionality remains the same, and all documented functionality remains the same, there is one particular undocumented \"feature\" that has changed.\n\nWhen writing URLs, the documented way to write camelCased action names is to use a word separator; these are '.' or '-' by default, but may be configured in the dispatcher. The dispatcher internally lowercases the action name, and uses these word separators to re-assemble the action method using camelCasing. However, because PHP functions are not case sensitive, you could still write URLs using camelCasing, and the dispatcher would resolve these to the same location. For example, 'camel-cased' would become 'camelCasedAction' by the dispatcher, whereas 'camelCased' would become 'camelcasedAction'; however, due to the case insensitivity of PHP, both will execute the same method.\n\nThis causes issues with the ViewRenderer when resolving view scripts. The canonical, documented way is that all word separators are converted to dashes, and the words lowercased. This creates a semantic tie between the actions and view scripts, and the normalization ensures that the scripts can be found. However, if the action 'camelCased' is called and actually resolves, the word separator is no longer present, and the ViewRenderer attempts to resolve to a different location -- 'camelcased.phtml' instead of 'camel-cased.phtml'.\n\nSome developers relied on this \"feature\", which was never intended. Several changes in the 1.5.0 tree, however, made it so that the ViewRenderer no longer resolves these paths; the semantic tie is now enforced. First among these, the dispatcher now enforces case sensitivity in action names. What this means is that referring to your actions on the url using camelCasing will no longer resolve to the same method as using word separators (i.e., 'camel-casing'). This leads to the ViewRenderer now only honoring the word-separated actions when resolving view scripts. \n\n[http://framework.zend.com/manual/en/zend.controller.migration.html]",
    "ItemText": null,
    "CreateDate": "2009-04-21T20:42:26.0000000",
    "EndDate": null,
    "ModificationDate": "2009-04-21T20:42:26.0000000",
    "DocumentId": "2076072121",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5841",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET MVC: “MVC and App_Code folder - ASP.NET Forums”; forums.asp.net",
    "SortOrdinal": null,
    "ItemChar": "All MVC project by default are Web Application Projects (WAP) instead of Web Site projects. This means that there's no need for an App_Code folder since WAPs always get compiled anyway. That means that all *.cs files in your project will get compiled, as opposed to Web Site projects where only *.cs files in your App_Code folder would get compiled.\n\n[http://forums.asp.net/t/1315143.aspx]\n",
    "ItemText": null,
    "CreateDate": "2009-04-21T20:44:00.0000000",
    "EndDate": null,
    "ModificationDate": "2009-04-21T20:44:00.0000000",
    "DocumentId": "2076072122",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5842",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Connecting to MySQL Remotely; A2Wiki”; A2Hosting.com",
    "SortOrdinal": null,
    "ItemChar": "To ssh tunnel from a Mac OS X or Linux box, open a terminal and use the following: ssh -p7822 username@example.com -L 3306:localhost:3306 (if the connection does not work with localhost, please try using 127.0.0.1) The number before \"localhost\" is the port number for your end of the tunnel; the number after \"localhost\" is the port on our server's end of the tunnel. If you are running a local MySQL server, you might need to switch the first 3306 to something else (3307, for example). Use that port number when you want to connect to the remote MySQL on our server, and connect to 3306 to connect to your local MySQL server.\n\n[http://wiki.a2hosting.com/index.php/Connecting_to_MySQL_Remotely]",
    "ItemText": null,
    "CreateDate": "2009-04-21T20:50:09.0000000",
    "EndDate": null,
    "ModificationDate": "2009-04-21T20:50:09.0000000",
    "DocumentId": "2076072123",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5843",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Silverlight: Anatomy of an .XAP file”; Chris Pietschmann",
    "SortOrdinal": null,
    "ItemChar": "A .xap file is basically a compiled Silverlight application. The file is actually a .zip file that contains all the files necessary for the application. Just rename the .xap file to have a .zip extension and then you can open it up to see its contents. Just try it yourself.\n\nThe .xap file contains an application manifest (AppManifest.xaml) file and all the necessary DLL's that are required by the application. The first DLL contained is the compiled version of you application and has the same name of your application. In my test I created an application names \"SilverlightApplication1\", so the DLL is named \"SilverlightApplication1.dll\". The rest of the DLL's are the dependancies the application requires.\n\n[http://pietschsoft.com/post/2008/03/Silverlight-Anatomy-of-an-XAP-file.aspx]",
    "ItemText": null,
    "CreateDate": "2009-04-21T20:57:14.0000000",
    "EndDate": null,
    "ModificationDate": "2009-04-21T20:57:14.0000000",
    "DocumentId": "2076072124",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5844",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“TimeZone vs. TimeZoneInfo in .Net”; Dan Rigsby, danrigsby.com",
    "SortOrdinal": null,
    "ItemChar": "The TimeZone data type was introduced in .Net 1.0 as a mechanism for retrieving information about the current time zone, and to convert times from local time to Coordinated Universal Time (UTC) or vice versa.  The down side is that you cannot use this to represent any other time zone other than the local zone.  It also can’t be used to convert one date time to another zone.  This is a pretty sever limitation and something that .Net has been lacking for some time.\n\nIn .Net 3.5, Microsoft finally introduced a replacement for TimeZone.  The TimeZoneInfo class fills in all of the gaps where TimeZone left off.  You can represent any time zone and perform various calculations.  Many people have yet to hear of this class, but it is crucial if you are working with applications that need to perform calculations on dates and times which may originate from differet time zones.\n\n[http://www.danrigsby.com/blog/index.php/2008/08/24/timezone-vs-timezoneinfo-in-net/]",
    "ItemText": null,
    "CreateDate": "2009-04-22T15:39:47.0000000",
    "EndDate": null,
    "ModificationDate": "2009-04-22T15:39:47.0000000",
    "DocumentId": "2076072125",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5845",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Brain reads word-by-word”; Tina Hesman Saey; sciencenews.org",
    "SortOrdinal": null,
    "ItemChar": "Reading may be fundamental, but how the brain gives meaning to letters on a page has been fundamentally a mystery. Two new studies fill in some details on how the brains of proficient readers handle words.\n\nOne of the studies, published in the April 30 Neuron, suggests that a visual-processing area of the brain recognizes common words as whole units. Another study, published online April 27 in PLoS ONE, reveals that the brain operates two fast parallel systems for reading, linking visual recognition of words to speech.\n\nMaximilian Riesenhuber, a neuroscientist at Georgetown University in Washington, D.C., wanted to know whether the brain reads words letter by letter or recognizes words as whole objects. He and his colleagues showed sets of real words or nonsense words to volunteers undergoing fMRI scans. The words differed in only one letter, such as “farm” and “form” and “soat” and “poat,” or were completely different, such as “farm” and “coat” or “poat” and “hime.”\n\nThe researchers were particularly interested in what happens in the visual word form area, or VWFA, an area on the left side of the brain just behind the ear that is involved in recognizing words.\n\nRiesenhuber and his colleagues found that neurons in the VWFA respond strongly to changes in real words. Changing “farm” to “form,” for example, produced as profound a change in activity as changing “farm” to “coat,” the team reports in Neuron. The area responded incrementally to single-letter changes in made-up words.\n\nThe data suggests that readers grasp real words as whole objects, rather than focusing on letters or letter combinations. And as a reader’s exposure to a word increases, the brain comes to recognize the shape of the word. Meaning is assigned after recognition in the brain, Riesenhuber says.\n\nThe researchers don’t yet know how longer and less familiar words are recognized, or if the brain can be trained to recognize nonsense words as a unit.\n\nThat the brain recognizes words as a whole is “a feasible interpretation of their data,” says Kalanit Grill-Spector, a neuroscientist at Stanford University, “but there should be some caution.” The team doesn’t explain how the VWFA manages the feat, she says, and other theories in which the brain recognizes smaller units of two, three or more letters might account for the findings.\n\nPiers Cornelissen, a cognitive neuroscientist at the University of York in England, and his colleagues wanted to understand the whole sequence of events that occur in the brain during reading. Using a technique called magnetoencephalography, which measures magnetic fields created by electrical activity in neurons, the researchers pinpointed which parts of the brain are active when volunteers read words quietly to themselves. The technique allowed the researchers to time the activity down to the millisecond.\n\nSome scientists have thought that the brain processes written words slowly, in “an increasingly complex hierarchy of processing, moving from squiggles on a page to meaning in your head,” Cornelissen says. But his study, in PLoS ONE, shows that words are processed quickly and involve direct connections between visual and speech-processing systems.\n\nAn area in the back of the brain that recognizes text was the first to respond, but then two other regions quickly activated. The VWFA and the region known as Broca’s area, involved in speech processing, became active within 15 milliseconds of the text recognition area when participants viewed words. But these areas did not activate when participants viewed pictures of faces and did not activate as quickly when they viewed strings of consonants.\n\nCornelissen thinks the results provide further evidence that the brain has two rapid reading pathways. The lexical route translates visual recognition of familiar words by the VWFA directly into meaning, he suggests. The sublexical route passes information through Broca’s area to the motor areas that control sound production. The second system would allow a person to work out unfamiliar or nonsense words by sounding them out in his or her head, he says.\n\nThe speed at which the VWFA becomes active supports the idea that the area recognizes whole words, Riesenhuber says. “It really argues for this being one shot to the system,” he says.\n\n[http://www.sciencenews.org/view/generic/id/43348/title/Brain_reads_word-by-word]",
    "ItemText": null,
    "CreateDate": "2009-05-01T13:55:13.0000000",
    "EndDate": null,
    "ModificationDate": "2009-05-01T13:55:13.0000000",
    "DocumentId": "2076072126",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5846",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MOSS 2007: “Using a Minimal Publishing Site Definition in the field”; Andrew Connell, andrewconnell.com",
    "SortOrdinal": null,
    "ItemChar": "Earlier this year I blogged about how you don't need to create site definitions. The gist of that post was this:\n\n* Custom site definitions are not very flexible and hard to create/debug.\n* Create lightweight site definitions; in essence copies of Blank Site with a new name & ID, but nothing else.\n* Create Features and staple them to the new site definition you just created.\n* This process allows for effectively changing the site definition down the road via adding/removing stapling Features.\n\nI don't take the same approach as some others who've blogged. Funny... one guy got a ton of feedback for his black/white post on this subject a month or so ago and then rewrite the post. Quite amusing it looks almost identical to mine earlier this year... even the title is very similar!\n\nAt any rate, I still get questions about how I like to create new Publishing sites. Seems people have taken that blog post I did earlier this year along with Ch5 in my book that demonstrates how to create what I call a \"Minimal Publishing Portal\" site definition, and taken these positions a bit too literally. So... let me try to clear it up...\n\nWhen you're creating a new Publishing site, I'd argue that what you want is the Publishing Portal site definition included in the MOSS 2007 installation... EXCEPT you don't want the extra master pages, CSS, images, page layouts, content types and subsites. You want the two site templates Publishing Site & Publishing Site with Workflow and one content type, page layout and page for the homepage of the site... but nothing else.\n\nThat's what I create in my book (note: if you use that site def, make sure you check the book errata for fixes on that chapter and the code). But, I don't use it as is. Instead, I use it as a starting point. For real projects I do the following:\n\n* Create a copy of that Minimal Publishing Portal site definition\n* Give it a new name & ID\n* Optionally (but usually) create a Feature that includes the core branding of the site (master page(s), CSS, images, etc) named something like \"ProjectBranding\" & then create another stapling Feature \"ProjectBrandingStapling\" that attaches the brand to the core site template used as the root template in the Minimal Publishing Portal site definition\n\nThe difference here is that when you look at my environment, you don't see \"Minimal Publishing Portal\" as an option... you only see the site definition(s) I've created that used the Minimal Publishing Portal as a starting point.\n\n[http://www.andrewconnell.com/blog/archive/2008/12/06/Using-a-Minimal-Publishing-Site-Definition-in-the-field.aspx]\n\n[http://andrewconnell.com/blog/archive/2008/02/15/You-dont-need-to-create-site-definitions.aspx]",
    "ItemText": null,
    "CreateDate": "2009-05-11T12:00:30.0000000",
    "EndDate": null,
    "ModificationDate": "2009-05-11T12:00:30.0000000",
    "DocumentId": "2076072127",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5847",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "LINQ to Objects: Query FileSystemInfo Array as Generic List",
    "SortOrdinal": null,
    "ItemChar": "using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\n\n...\n\nDirectoryInfo di = new DirectoryInfo(@\"E:\\~shares\\util\\SysinternalsSuite\");\nList<FileSystemInfo> files = Enumerable.ToList(di.GetFileSystemInfos());\n\nvar output = from f in files\n             select f;\n\nConsole.WriteLine(output.Count(f => f.FullName.Contains(\"autoruns\")));\n",
    "ItemText": null,
    "CreateDate": "2009-05-14T17:17:19.0000000",
    "EndDate": null,
    "ModificationDate": "2009-05-14T17:17:19.0000000",
    "DocumentId": "2076072128",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5848",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Mount a Windows share on Linux with Samba”; Sven Knispel; cri.ch",
    "SortOrdinal": null,
    "ItemChar": "This article describes how to set up a share from a Linux box to a Windows box. Samba has to be installed.\n\nTo test if your Linux machine sees the shares on the Windows box:\n\n    smbclient -L <windows-box> -U <username>\n\n1. Make a directoy for the mountpoint:\n\n    mkdir /mnt/<name-of-mount-point>\n\n2. Mount the share:\n\n    mount -t smbfs -o username=<username>, password=<password> //<win-box>/<share> /mnt/<name-of-mountpoint>\n\nNote: The syntax -username=<username>,password=<password> saves the password.\n\n3. Create a symbolic link to the mounted drive:\n\n    ln -s /mnt/<name-of-mount-point> /<path-of-symlink>\n\n[http://cri.ch/linux/docs/sk0001.html]",
    "ItemText": null,
    "CreateDate": "2009-05-22T14:10:46.0000000",
    "EndDate": null,
    "ModificationDate": "2009-05-22T14:10:46.0000000",
    "DocumentId": "2076072129",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5849",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "William Ivy Hair, Carnival of Fury; Chapter 5: New Orleans—the Land of Dreams; pp. 70–71; The “Creoles of color”",
    "SortOrdinal": null,
    "ItemChar": "Twenty-seven percent of the New Orleans’ population by 1900 was reported as “colored races.” This figure represented 77,714 persons of African ancestry and a few hundred Chinese. The _Picayune_ claimed (boasted would not be the right word) that New Orleans had “the largest negro population of any city in the world… outside Africa.” In fact, however, the federal census reported both Baltimore and Washington, D.C., as having slightly more black residents than the Crescent City, although several thousand blacks were probably missed by the census enumerators in each of these cities, especially New Orleans. The notion was common among the poorer black New Orleanians that if their family size were fully reported it would mean “increased taxation of some kind.” The Board of Health believed the city contained no less than 90,000 black people. The actual figure was probably close to 85,000.\n\nThere were wide differences in life styles and attitudes among the “colored” population of New Orleans. The “Creoles of color,” mostly descendants of the ten thousand free Negroes of the city’s antebellum era, ranked high on the economic ladder; most held skilled jobs or were in business or the professions. A few were quite wealthy. Nearly all the “Creoles of color” were of visibly mixed ancestry; many spoke French as a first language, and some could pass for white. Socially, they had little or nothing to do with the generally darker descendants of slaves. Their marked separation from the majority of the New Orleans black community was no transitory thing. It is still evident today.\n\n[http://books.google.com/books?id=ijJpC3EbuoIC&printsec=frontcover&client=firefox-a&source=gbs_summary_s&cad=0]",
    "ItemText": null,
    "CreateDate": "2009-06-08T12:17:17.0000000",
    "EndDate": null,
    "ModificationDate": "2009-06-08T12:17:17.0000000",
    "DocumentId": "2076072130",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5850",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Nokia 6300, Brushed Silver Phone (Unlocked) US VERSION: “Not able to install Gmail Mobile v2”; Google Mobile Help",
    "SortOrdinal": null,
    "ItemChar": "I did what you suggested below on my Nokia E61i and it worked: Try this directly from Nokia internet browser\n\n    http://m.google.com/app/gmail.jad?dc=gorganic&ver=v2.0.6\n\n[http://www.google.com/support/forum/p\n    /Google+Mobile/thread?tid=0cdc45fbc2c80548&hl=en]",
    "ItemText": null,
    "CreateDate": "2009-06-11T10:22:23.0000000",
    "EndDate": null,
    "ModificationDate": "2009-06-11T10:22:23.0000000",
    "DocumentId": "2076072131",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5851",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ActionScript 3.x: “Measuring Drawing API 2.0 performance”; Actionscript 3 Experiments (bytearray.org); Thibault Imbert",
    "SortOrdinal": null,
    "ItemChar": "So the final conclusion is that drawPath or drawTriangles gives better performance than traditional moveTo, lineTo in terms of ActionScript code execution. So you will get nice improvements with the new Graphics methods if most of the time you were wasting was sending the commands to the renderer. Otherwise in terms of rendering performance, the new Graphics methods does not really bring any performance improvements.\n\n[http://www.bytearray.org/?p=423]\n",
    "ItemText": null,
    "CreateDate": "2009-06-11T12:18:42.0000000",
    "EndDate": null,
    "ModificationDate": "2009-06-11T12:18:42.0000000",
    "DocumentId": "2076072132",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5852",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Forms: Why the NotifyIcon.ShowBalloonTip() Timeout Is Ignored; System.Windows.Forms.NotifyIcon; Cleo HUANG - MSFT",
    "SortOrdinal": null,
    "ItemChar": "The BallonTip timeout is only respected if the shell detects the “user presence” (i.e. mouse moves or keyboard input). If none of these happen (because you are watching the bubble) it will sit there [indefinitely]. The logic behind this design being that users should not miss notifications when they are away from their machines. This is the “By Design” shell behavior.\n\n[http://social.msdn.microsoft.com/Forums/en-US/winforms/thread/\n    52e33b59-e27f-4eec-a8c7-34278279239a]\n",
    "ItemText": null,
    "CreateDate": "2009-06-11T12:24:05.0000000",
    "EndDate": null,
    "ModificationDate": "2009-06-11T12:24:05.0000000",
    "DocumentId": "2076072133",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5853",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Cheikh Anta Diop, African Origin of Civilization; Chapter VII: Arguments for a Negro Origin; The Egyptian Respect for Nubia; p. 150",
    "SortOrdinal": null,
    "ItemChar": "Diodorus of Sicily reports that each year the statue of Amon, King of Thebes, was transported in the direction of Nubia for several days and then brought back as if to indicate that the god was returning from Nubia. Diordorus also claims that Egyptian civilization came from Nubia, the center of which was Meroë. In fact, by following the data  provided by Diordorus and Herodotus on the site of that Sudanese capital, Cailliaud (circa 1820) discovered the ruins of Meroë: 80 pyramids, several temples consecrated to Amon, Ra, and so on. In addition, quoting Egyptian priests, Herodotus stated that of the 300 Egyptian Pharaohs, from Menes to the Seventeenth Dynasty, 18 rather than merely the three who correspond to the Ethiopian “dynasty” were of Sudanese origin.\n\nEgyptians themselves—who should surely be better qualified than anyone to speak of their origin—recognize without ambiguity that their ancestors came from Nubia and the heart of Africa. The land of Amam, or land of the ancestors (_man_=ancestor in Wolof), the whole territory of Kush south of Egypt, was called land of the gods by the Egyptians. Other facts, such as the tornadoes and torrential rains mentioned on the pyramid of Unas, make one think of the tropics, i.e., the heart of Africa as Amélineau observes. …\n\nSignificantly, excavations in the area of ancient Ethiopia reveal documents worthy of the name only in Nubia proper, not in modern Ethiopia. In reality, it is in Nubia that we find pyramids similar to those in Egypt, underground temples, and Meroitic writing, not yet deciphered, but closely related to Egyptian writing. Strangely enough, though this point is not emphasized, Nubian writing is more evolved than Egyptian. While Egyptian writing, even in its hieratic and demotic phases, has never completely eliminated its hieroglyphic essence, Nubian writing is alphabetical.\n",
    "ItemText": null,
    "CreateDate": "2009-06-19T12:29:03.0000000",
    "EndDate": null,
    "ModificationDate": "2009-06-19T12:29:03.0000000",
    "DocumentId": "2076072134",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5854",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Cheikh Anta Diop, Civilization or Barbarism; Chapter 12: Characteristics of Political and Social African Structures and Their Effect on Historical Movement; European Translation of “the ascent of King Unas” to Compare with the Lord’s Supper; pp. 183–184",
    "SortOrdinal": null,
    "ItemChar": "Diop accepts a European translation, Otto Muck, Cheops et la Grande Pyramide (opus citatum, pp. 85–86), of a funerary text, written because of “King Unas.” The French citation itself comes from another European source.\n\nDiop needed a phrase like “it is King Unas who eats men and lives off the Gods” in order to show that, “This text is the most ancient written document that makes the study of vitalistic practices possible that would lead to the myth of the man-eating sorcerer, in today’s Black Africa. They are to be compared with the Osirian rites (see p. 312) and with the Christian Eucharist.”",
    "ItemText": null,
    "CreateDate": "2010-06-11T23:46:16.0000000",
    "EndDate": null,
    "ModificationDate": "2010-06-11T23:46:16.0000000",
    "DocumentId": "2076072135",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5855",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Cheikh Anta Diop, Civilization or Barbarism; Chapter 17: Does an African Philosophy Exist?; “Inexhaustive List of Egyptian Philosophical Concepts That Have Survived in Wolof”; pp. 358–361",
    "SortOrdinal": null,
    "ItemChar": "This word list is the first example I have seen of such a comparison.",
    "ItemText": null,
    "CreateDate": "2009-07-03T08:37:30.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-03T08:37:30.0000000",
    "DocumentId": "2076072136",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5856",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Chögyam Trungpa, The Myth of Freedom and the Way of Meditation; Chapter II: Styles of Imprisonment, “Stupidity”; pp. 34–35; Trungpa on the Symbol of the Pig; Why white people of all skin colors are not funny… and why the snow makes you serious…",
    "SortOrdinal": null,
    "ItemChar": "The ignorance or stupidity of the animal realm comes from a deadly honest and serious mentality which is quite different from the bewilderment of the basic ignorance of the first skandha. In animal ignorance you have a certain style of relating to yourself and refuse to see that style from other points of view. You completely ignore such possibilities. If somebody attacks you or challenges your clumsiness, your unskilled way of handling a situation, you find a way of justifying yourself, find a rationale to keep your self-respect. You are not concerned with being truthful as long as your deception can be maintained in front of others. You are proud that you clever enough to lie successfully. If you are attacked, challenged, criticized, you automatically find an answer. Such stupidity can be very clever. It is ignorance or stupidity in the sense that you do not see the environment around you, but you only see your goal and only the means to achieve that goal, and you invent all kinds of excuses to prove that you are doing the right thing.\n\nThe animal mentality is extremely stubborn, but this stubbornness can be sophisticated as well and quite skillful and ingenious, but without a sense of humor. The ultimate sense of humor is a free way of relating with life situations in their full absurdity. It is seeing things clearly, including self-deception, without blinders, without barriers, without excuses. It is being open and seeing with panoramic vision rather than trying to relieve tension. As long as humor is used as a way relieve tension or self-consciousness or pressure, then it is the humor of the animal realm, which is actually extremely serious. It is a way of looking for a crutch. So the essence of the animal style is to try to fulfill your desires with extreme honesty, sincerity and seriousness. Traditionally, this direct and mean way of relating with the world is symbolized by the pig. The pig does not look to the right or left but just sniffs along, consuming whatever comes in front of its nose; it goes on and on and on, without any sense of discrimination—a very sincere pig.",
    "ItemText": null,
    "CreateDate": "2009-07-07T11:41:50.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-07T11:41:50.0000000",
    "DocumentId": "2076072137",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5857",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Chögyam Trungpa, The Myth of Freedom and the Way of Meditation; Chapter II: Styles of Imprisonment, “Passion”; pp. 29–31; the human realm",
    "SortOrdinal": null,
    "ItemChar": "Passion is the major occupation in the human realm. Passion in this sense is an intelligent kind of grasping in which the logical reasoning mind is always geared toward the creation of happiness. There is an acute sense of the separateness of pleasurable objects from the experiencer resulting in a sense of loss, poverty, often accompanied by nostalgia. You feel that only pleasurable objects can bring you comfort and happiness, but you feel inadequate, not strong or magnetic enough for the objects of pleasure to be drawn naturally into your territory. Nevertheless, you try actively to draw them in. This often leads to a critical attitude toward other people. You want to magnetize the best qualities, the most pleasurable, most sophisticated, most civilized situations.\n\nThis kind of magnetizing is different from that of the asura realm which is not as selective and intelligent. The human realm by comparison involves a high degree of selectivity and fussiness. There is an acute sense of having your own ideology and your own style, of rejecting things not your style. You must have the right balance in everything. You criticize and condemn people who do not meet your standards. Or else you might be impressed by someone who embodies your style or is superior to you at achieving it, someone who is very intelligent and has very refined taste, who leads a pleasurable life and has the things you would like to have. It might be an historical figure or a mythological figure or one of your contemporaries who has greatly impressed you. He is very accomplished and you would like to possess his qualities. It is not simply a matter of being jealous of another person; you want to draw that person into your territory. It is an ambitious kind of jealousy in that you want to equal the other person.\n\n…\n\nThe human mentality places a strong emphasis on knowledge, learning and education, on collecting all kinds of information and wisdom. The intellect is most active in the human realm. There is so much going on in your mind as a result of having collected so many things and having planned so many projects. The epitome of the human realm is to be stuck in a huge traffic jam of discursive thought. You are so busy thinking that you cannot learn anything at all.\n",
    "ItemText": null,
    "CreateDate": "2009-07-07T12:42:16.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-07T12:42:16.0000000",
    "DocumentId": "2076072138",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5858",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Zend Framework: Apache .htacess Rule Alternatives; “Configuring Your URL Rewriter”",
    "SortOrdinal": null,
    "ItemChar": "Although there is a performance hit, the preference here is to use .htaccess files for bootstrapping the Zend Framework. The 2006-era expression for using .htaccess comes from “Configuring Your URL Rewriter” here:\n\n    http://framework.zend.com/wiki/display/ZFDEV/Configuring+Your+URL+Rewriter\n\nThe Apache RewriteRule is:\n\n    RewriteEngine on\n    RewriteBase /\n    RewriteCond %{REQUEST_FILENAME} !-f\n    RewriteCond %{REQUEST_FILENAME} !-d\n    RewriteRule !\\.(js|ico|txt|gif|jpg|png|css)$ index.php\n\nHere is a more recent expression:\n\n    RewriteEngine on\n    RewriteCond %{REQUEST_FILENAME} -s [OR]\n    RewriteCond %{REQUEST_FILENAME} -l [OR]\n    RewriteCond %{REQUEST_FILENAME} -d \n    RewriteRule ^.*$ - [NC,L]\n    RewriteRule ^.*$ index.php [NC,L]\n\nThere may be one advantage here with the omission of RewriteBase. For more information, see “What happens to the Zend Framework routing tables when you change the site to a subfolder?” here:\n\n    http://stackoverflow.com/questions/1071003/\n        what-happens-to-the-zend-framework-routing-tables\n        -when-you-change-the-site-to-a-s\n\n",
    "ItemText": null,
    "CreateDate": "2009-07-14T12:39:29.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-14T12:39:29.0000000",
    "DocumentId": "2076072139",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5859",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Eclipse PDT: Viewing Hidden Files in the IDE; .htaccess files; europa/ganymede/galileo",
    "SortOrdinal": null,
    "ItemChar": "This is issue is addressed on stackoverflow.com in this article “Where / What is the Package Explorer in Eclipse PDT” here:\n\n    http://stackoverflow.com/questions/619455/\n        where-what-is-the-package-explorer-in-eclipse-pdt\n\nVonC [http://stackoverflow.com/users/6309/vonc] writes: “At the top of the PHP Explorer, there are a few toolbar buttons. Clicking the down arrow brings up a context menu. I choose the filters… menu item. By default, ‘name filter patterns’ was not checked. .* files and server projects were selected in the second box. This makes sense why I was not seeing my .htaccess file.”",
    "ItemText": null,
    "CreateDate": "2009-07-14T12:45:23.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-14T12:45:23.0000000",
    "DocumentId": "2076072140",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5860",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“An Introduction to C# Generics”; Juval Lowy on Casting Generic Types and the Use of as and is Operators",
    "SortOrdinal": null,
    "ItemChar": "The C# compiler only lets you implicitly cast generic type parameters to Object, or to constraint-specified types, as shown [below]. Such implicit casting is type safe because any incompatibility is discovered at compile-time.\n\n…Implicit casting of generic type parameters\n\ninterface ISomeInterface\n{...}\nclass BaseClass\n{...}\nclass MyClass<T> where T : BaseClass,ISomeInterface\n{\n    void SomeMethod(T t)\n    {\n        ISomeInterface obj1 = t;\n        BaseClass      obj2 = t;\n        object         obj3 = t;\n    }\n}\n\nThe compiler lets you explicitly cast generic type parameters to any other interface, but not to a class:\n\ninterface ISomeInterface\n{...}\nclass SomeClass\n{...}\nclass MyClass<T> \n{\n    void SomeMethod(T t)\n    {\n        ISomeInterface obj1 = (ISomeInterface)t;//Compiles\n        SomeClass      obj2 = (SomeClass)t;     //Does not compile\n    }\n}\n\nHowever, you can force a cast from a generic type parameter to any other type using a temporary Object variable:\n\nclass SomeClass\n{...}\n\nclass MyClass<T> \n{\n    void SomeMethod(T t)\n    {\n        object temp = t;\n        SomeClass obj = (SomeClass)temp;\n    }\n}\n\nNeedless to say, such explicit casting is dangerous because it may throw an exception at run time if the type argument used instead of the generic type parameter does not derive from the type to which you explicitly cast. Instead of risking a casting exception, a better approach is to use the is and as operators, as shown [below]. The is operator returns true if the generic type parameter is of the queried type, and as will perform a cast if the types are compatible, and will return null otherwise. You can use is and as on both generic type parameters and on generic classes with specific type arguments.\n\n…Using 'is' and 'as' operators on generic type parameters\n\npublic class MyClass<T> \n{\n    public void SomeMethod(T t)\n    {\n       if(t is int)\n       {...} \n\n       if(t is LinkedList<int,string>)\n       {...}\n\n       string str = t as string;\n       if(str != null)\n       {...}\n\n       LinkedList<int,string> list = t as LinkedList<int,string>;\n       if(list != null)\n       {...}\n    }\n}\n\n[http://msdn.microsoft.com/en-us/library/ms379564(VS.80).aspx]",
    "ItemText": null,
    "CreateDate": "2009-07-19T10:29:12.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-19T10:29:12.0000000",
    "DocumentId": "2076072141",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5861",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“XML Serializing a Hashtable or generic Dictionary” by Pete Sheill",
    "SortOrdinal": null,
    "ItemChar": "The XmlSerializer in .NET has many good qualities.  It creates output that is understandable and not overly verbose.  It works with many data types.  It has a simple, sensible policy -- it only serializes public properties and members.  It doesn't require special attributes.  The only thing that bothers me is that it doesn't serialize Hashtables or Dictionaries.  Here is some code that enables serializing and deserializing those types by using an intermediary List.  I haven't tried it using a non-generic ArrayList or array, but I believe that would work too.\n\n    using System.Collections.Generic;\n    using System.Collections;\n    using System.IO;\n    using System.Xml.Serialization;\n    using System.Xml;\n    using System;\n\n    public static void Serialize(TextWriter writer, IDictionary dictionary)\n    {\n        List<Entry> entries = new List<Entry>(dictionary.Count);\n        foreach (object key in dictionary.Keys)\n        {\n            entries.Add(new Entry(key, dictionary[key]));\n        }\n\n        XmlSerializer serializer = new XmlSerializer(typeof(List<Entry>));\n        serializer.Serialize(writer, entries);\n    }\n\n    public static void Deserialize(TextReader reader, IDictionary dictionary)\n    {\n        dictionary.Clear();\n        XmlSerializer serializer = new XmlSerializer(typeof(List<Entry>));\n        List<Entry> list = (List<Entry>)serializer.Deserialize(reader);\n\n        foreach (Entry entry in list)\n        {\n            dictionary[entry.Key] = entry.Value;\n        }\n    }\n\n    public class Entry\n    {\n        public object Key;\n        public object Value;\n\n        public Entry() {}\n\n        public Entry(object key, object value)\n        {\n            Key = key;\n            Value = value;\n        }\n    }\n\nIt generates output like the following, when the keys and values are strings.\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<ArrayOfEntry x­mlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" x­mlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n<Entry>\n    <Key xsi:type=\"xsd:string\">MyKey</Key>\n    <Value xsi:type=\"xsd:string\">MyValue</Value>  \n</Entry>\n<Entry>    \n    <Key xsi:type=\"xsd:string\">MyOtherKey</Key>    \n    <Value xsi:type=\"xsd:string\">MyOtherValue</Value>  \n</Entry>\n</ArrayOfEntry>\n\n[http://blogs.msdn.com/psheill/archive/2005/04/09/406823.aspx]",
    "ItemText": null,
    "CreateDate": "2009-07-19T10:52:20.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-19T10:52:20.0000000",
    "DocumentId": "2076072142",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5862",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“XPath & Namespaces” by Wayne Allen; “there is no such thing as a default namespace in XPath”",
    "SortOrdinal": null,
    "ItemChar": "I'm sure many out there know this or figured it out eons ago, but it was new to me and took awhile to figure out.\n\nSay you have a RDF style XML document that looks something like:\n\n<?xml version=\"1.0\" encoding=\"iso-8859-1\" ?>\n<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:sy=\"http://purl.org/rss/1.0/modules/syndication/\" xmlns:admin=\"http://webns.net/mvcb/\" xmlns=\"http://purl.org/rss/1.0/\">\n<channel rdf:about=\"http://someplace.com/weblog/\">\n<title>News from Bob</title>\n<link>http:// someplace.com/weblog/</link>\n<description></description>\n<dc:language>en-us</dc:language>\n<dc:creator>Bob</dc:creator>\n<dc:rights>Copyright 2003 Bob</dc:rights>\n<dc:date>2003-03-19T22:30:34-07:00</dc:date>\n<admin:generatorAgent rdf:resource=\"http://www.movabletype.org/?v=2.51\" />\n<admin:errorReportsTo rdf:resource=\"mailto:tbob@somewhere.com\" />\n<sy:updatePeriod>hourly</sy:updatePeriod>\n<sy:updateFrequency>1</sy:updateFrequency>\n</channel>\n<item rdf:about=\"http://somewhere/weblog/archives/2003/03/19.shtml#how_i_really_feel_about_cheese\">\n<title>How I really feel about Cheese</title>\n<description>&lt;p&gt;\nI was asked in a comment why I really don't like cheese...</description>\n</item>\n</rdf:RDF>\n\nSimplistically I thought the following code would work:\n\n    XmlNode dateNode = rdfXml.SelectSingleNode(\"/RDF/channel/date\");\n\nBut of course it returns Null. So I tried the following:\n\n    XmlNode dateNode = rdfXml.SelectSingleNode(\"/rdf:RDF/channel/dc:date\");\n\nOf course this returned Null as well. So it was time to turn to the help file, which didn’t help much. My next best friend is Google, and Google Groups didn’t let me down. Turns out SelectSingleNode is overloaded and takes a XmlNamespaceManager as the second parameter. I now had this:\n\n    nsMgr = new XmlNamespaceManager(feedXml.NameTable);\n\n    nsMgr.AddNamespace(\"rdf\", \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\n\n    nsMgr.AddNamespace(\"dc\", \"http://purl.org/dc/elements/1.1/\");\n\n    XmlNode dateNode = rdfXml.SelectSingleNode(\"/rdf:RDF/channel/dc:date\", nsMgr);\n\nHowever, I didn’t know what to do with the default namespace. A little more research lead me to the nugget that there is no such thing as a default namespace in XPath, so all I has to do was add the default namespace with the prefix of my choosing.\n\n    nsMgr = new XmlNamespaceManager(feedXml.NameTable);\n\n    nsMgr.AddNamespace(\"rdf\", \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\n\n    nsMgr.AddNamespace(\"dc\", \"http://purl.org/dc/elements/1.1/\");\n\n    nsMgr.AddNamespace(\"rss\", \"http://purl.org/rss/1.0/\");\n\n    XmlNode dateNode = rdfXml.SelectSingleNode(\"/rdf:RDF/rss:channel/dc:date\", nsMgr);\n\nNow everything works like it should.\n\n[http://weblogs.asp.net/wallen/archive/2003/04/02/4725.aspx]",
    "ItemText": null,
    "CreateDate": "2009-07-19T10:58:53.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-19T10:58:53.0000000",
    "DocumentId": "2076072143",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5863",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio 2008: Specifying the Default Browser for Web Projects",
    "SortOrdinal": null,
    "ItemChar": "With the Web Project node selected in the Project Explorer, you can select File > Browse With… or you can right-click on the node for a context menu Browse With… command.\n\nFor more, see “Browse With Dialog Box” here:\n\n    http://msdn.microsoft.com/en-us/library/c1wa9c6k(VS.71).aspx\n",
    "ItemText": null,
    "CreateDate": "2009-07-19T11:14:52.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-19T11:14:52.0000000",
    "DocumentId": "2076072144",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5864",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "NetBeans 6.7: Troubleshooting NetBeans Problems",
    "SortOrdinal": null,
    "ItemChar": "In general, troubleshoot NetBeans issues by using the View > IDE Log command. You should see Java exceptions there related to the IDE. You can also view them in a file at $HOME/.netbeans/6.7/var/log/messages.log.*\n\nIt is possible that a NetBeans plugin you have installed has corrupted NetBeans configuration and is causing the problem. One way to test this is to remove the $HOME/.netbeans folder (while the IDE is closed) and let NetBeans rebuild it by starting the IDE.\n\nFinally, you can uninstall NetBeans (by using the uninstall.sh script/JAR in the NetBeans installation folder.",
    "ItemText": null,
    "CreateDate": "2009-07-19T15:25:33.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-19T15:25:33.0000000",
    "DocumentId": "2076072145",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5865",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Classic ASP” and .NET: “The Microsoft Source Code Analyzer for SQL Injection tool is available to find SQL injection vulnerabilities in ASP code”",
    "SortOrdinal": null,
    "ItemChar": "The Microsoft Source Code Analyzer for SQL Injection tool is a static code analysis tool that helps you find SQL injection vulnerabilities in Active Server Pages (ASP) code. This article describes how to use the tool, the warnings that are generated by the tool, and the limitations of the tool. See the tool Readme document for more information.\n\n[http://support.microsoft.com/kb/954476]",
    "ItemText": null,
    "CreateDate": "2009-07-20T12:16:12.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-20T12:16:12.0000000",
    "DocumentId": "2076072146",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5866",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ServerDocument Class (Microsoft.VisualStudio.Tools.Applications.Runtime)",
    "SortOrdinal": null,
    "ItemChar": "To access the cached data or the application manifest in a document, you must first create a ServerDocument object by passing the document to one of the ServerDocument constructors. You can then access the cached data by using the CachedData property, and you can access the application manifest by using the AppManifest property. The application manifest provides information about the customization assemblies that are attached to the document. For more information, see Application and Deployment Manifests in Office Solutions.\n\n[http://msdn.microsoft.com/en-us/library/\n    microsoft.visualstudio.tools.applications.runtime.serverdocument(VS.80).aspx]",
    "ItemText": null,
    "CreateDate": "2009-07-20T12:24:03.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-20T12:24:03.0000000",
    "DocumentId": "2076072147",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5867",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“ASP.NET and the Event Log” by Bruce Johnson",
    "SortOrdinal": null,
    "ItemChar": "Today's tidbit revolves around enabling the ASP.NET user to generate entries into the event log.  In an ideal world (hint, hint Microsoft designers), this would be a relatively straightforward process.  Or at least one that didn't require a direct hack into the registry.  But that is not the case at the moment.  So without further ado, here are the steps involved in enabling the ASP.NET user to create event log entries.\n\n1. Launch RegEdit\n2. Navigate to HKEY_LOCAL_MACHINE\\SYSTEM\\\n    CurrentControlSet\\Services\\EventLog\\\n3. From the menu, select Edit->Permissions\n4. Click the Add button and write ASPNET.  (if ASP.NET is running under a different user id, use that id instead)\n5. Click OK.\n6. Select the newly added user from the list (ASP.NET Machine User by default).\n7. Click on Full Control in the Allow column.\n8. Click OK.\n\nIt is usually a good idea at this point to restart IIS with the IISReset command (Start | Run | IISReset).\n\nFor those concerned with the security hole that has been opened up.  Once these changes are implemented, the ASP.NET user has full control over the Application event log.  Worst case scenario, a bad process could fill up the event log or delete existing log entries.  However, as far as security breaches go, these are fairly minor, especially when compared to the benefits of being able to view log entries.\n\n[http://blogs.objectsharp.com/cs/blogs/bruce/archive/2003/11/03/180.aspx]",
    "ItemText": null,
    "CreateDate": "2009-07-20T12:27:38.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-20T12:27:38.0000000",
    "DocumentId": "2076072148",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5868",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio: “Resources Page, Project Designer”; MSDN",
    "SortOrdinal": null,
    "ItemChar": " The Resource Designer is a user interface tool that enables you to manage resources (such as strings, images, icons, audio, and other files) for your project.\n\nThe Resources page of the Project Designer hosts an instance of the Resource Designer that stores and maintains resources in a single location (Resources.resx).\n\nThe Resource Designer is language-neutral and supports projects in all Visual Studio languages. Items that you add to the project by using the Resource Designer are placed in the Resources directory for your project. The designer information is stored in a file named Resources.resx, and code for the resource is stored in Resources.Designer.cs, Resources.Designer.vb, or Resources.Designer.jsl.\n\nYou can also use the Resource Designer to edit stand-alone .resx files. For example, if you add a resource file by using Solution Explorer, its settings are kept in a separate .resx file and do not appear in the Project Designer. Double-clicking a resource's .resx file opens a separate Resource Designer for that resource.\n\nYou can edit file-based resources by double-clicking the resource in the Resource Designer. The Resource Designer opens the item in the default editor for that file type. If no editor is registered for that file type, the file is opened in the Windows default application for that type. To change the file type association, see How to: Associate an Editor with a Resource Type.\n\nFor Visual C#, the Resource Designer generates strongly-typed resources in the project's default namespace (specifically, ProjectName.Properties in Resources.Designer.cs). For information about accessing resources in Visual C#, see Adding and Editing Resources (Visual C#).\n\nFor Visual Basic, the Resource Designer generates strongly-typed resources in the My.Resources namespace (in Resources.Designer.vb). For information about accessing resources in Visual Basic by using the My.Resources object, see Accessing Application Resources.\n\nStrongly-typed resources encapsulate access to resources by creating classes that contain a set of static, read-only (Get) properties at compile time. You can consume resources by using the Get properties rather than using the GetString and GetObject methods of the ResourceManager class. Strongly-typed resources also make it easier to develop localizable applications. For information about strongly-typed resources, see StronglyTypedResourceBuilder.\n\nResources also have a Persistence property that specifies whether they are linked or embedded. Linked resources are stored as files within the project; the .resx file stores a relative path to the file, and during compilation, the resource data is placed into the manifest for the application. With embedded resources, the resource data is stored directly in the .resx file.\n\nBy default, all new resources are linked resources, as opposed to embedded. If you try to edit an embedded resource, you will receive a message prompting you to convert the item to a linked resource in order to edit it; conversion is recommended but optional.\n\n[http://msdn.microsoft.com/en-us/library/t69a74ty.aspx]",
    "ItemText": null,
    "CreateDate": "2009-07-20T12:41:23.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-20T12:41:23.0000000",
    "DocumentId": "2076072149",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5869",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio: “Linked and Embedded Resources”; MSDN",
    "SortOrdinal": null,
    "ItemChar": " Visual Studio projects provide two options for handling resources: they can be linked (the default) or embedded. You can have both linked and embedded resources in a single project. However, most of the time you will want to choose one option for all resources in your project.\n\nLinked resources are stored as files in the project; during compilation the resource data is taken from the files and added to the manifest for the application. The application's resource file (.resx) stores only a relative path or link to the file on disk.\n\nWith embedded resources, the resource data is stored directly in the .resx file in a text representation of the binary data. In either case, the resource data is compiled into the executable file.\n\nYou can change resources from linked to embedded by changing the Persistence property for the resource file.\n\n[http://msdn.microsoft.com/en-us/library/ht9h2dk8.aspx]",
    "ItemText": null,
    "CreateDate": "2009-07-20T12:44:03.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-20T12:44:03.0000000",
    "DocumentId": "2076072150",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5870",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Zend Framework:  “Zend Framework models auto-loading” by Chris Cornutt",
    "SortOrdinal": null,
    "ItemChar": "From the PHPMag.ru site comes a recent post looking at a technique for creating auto-loading models in your Zend Framework application.\n\n“When it comes to MVC, ZF handles almost everything—your action controllers are triggered, your views are loaded, w/o you having to worry about them. Not the same with models. If you comply to directory layout advised by ZF, you have “models” folder, but framework doesn't interact with it in any way.”\n\nThere’s a three step process he includes to make your models autoload—extend the Zend_Controller_action for the controller you’re working with, put loadModel() method into the controller (what will actually load the models) and an optional third step of adding in class autoloading. A few alternatives are also mentioned: Zend_Load_PluginLoader, Zend_Load subclassing and a controller plugin.\n\n[http://www.phpdeveloper.org/news/12273]\n",
    "ItemText": null,
    "CreateDate": "2009-07-20T16:58:46.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-20T16:58:46.0000000",
    "DocumentId": "2076072151",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5871",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Flex/ActionScript 3: “About SWC files” and “Using Runtime Shared Libraries”; Adobe Help Resource Center",
    "SortOrdinal": null,
    "ItemChar": "A SWC file is an archive file, sometimes also referred to as a class library, for Flex components and other assets. SWC files contain a SWF file and a catalog.xml file, in addition to properties files and other uncompiled assets such as CSS files. The SWF file implements the compiled component or group of components and includes embedded resources as symbols. Flex applications extract the SWF file from a SWC file and use the SWF file's contents when the application refers to resources in that SWC file. The catalog.xml file lists of the contents of the component package and its individual components.\n\nIn most cases, the symbols defined in the SWF file that are referenced by the application are embedded in the Flex application at compile-time. This is known as static linking. The application compiler only includes those classes that are used by your application, and dependent classes, in the final SWF file.\n\nYou can also dynamically link the contents of SWC files. Dynamic linking is when the entire SWF file is loaded at run time. To achieve dynamic linking of the SWF file, you must use the SWC file as a Runtime Shared Library, or RSL.\n\n[http://livedocs.adobe.com/flex/3/html/help.html?content=compilers_30.html]\n\n\nWhen you want to use a dynamically-linked library, you instruct the compiler to exclude that library's contents from the application SWF file when you compile the application. You must provide link-checking at compile time even though the classes are not going to be included in the final SWF file. At run time, the application loads the entire library into the application SWF file, which can result in slower startup times and greater memory usage.\n\nYou can use the runtime-shared-library-path and runtime-shared-libraries options to specify the location of dynamically-linked libraries.\n\nYou can also use the external-library-path, externs, or load-externs compiler options to specify the files to dynamically link into an application. These options instruct the compiler to exclude classes and libraries from the application, but to check links against them and prepare to load them at run time. The external-library-path option specifies SWC files or directories for dynamic linking. The externs option specifies individual classes or symbols for dynamic linking. The load-externs option specifies an XML file that describes what classes to use for dynamic linking. These options are most often used when externalizing assets from modules so that the module and the application do not contain overlapping class definitions. The runtime-shared-library-path option provides all the arguments to use external libraries as RSLs.\n\n[http://livedocs.adobe.com/flex/3/html/help.html?content=compilers_30.html]",
    "ItemText": null,
    "CreateDate": "2009-07-26T17:47:05.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-26T17:47:05.0000000",
    "DocumentId": "2076072152",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5872",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "E4X and ActionScript: “Using XML Namespaces with E4X and ActionScript 3” by Darron Schall",
    "SortOrdinal": null,
    "ItemChar": "\n    import mx.rpc.events.ResultEvent;\n\n    [Bindable]\n    public var rockArtists:XMLList;\n\n    // Define the namespace used in the rss feed for \"itms\".  Note that the\n    // namespace we define is \"items\" instead.  These values do not need\n    // to be the same, but generally should be for readability purposes.\n    namespace items = \"http://phobos.apple.com/rss/1.0/modules/itms/\";\n\n    private function onResult( event:ResultEvent ):void {  \n        var rss:XML = event.result as XML;  \n \n        // Filter the feed by the Rock category  \n        var rock:XMLList = rss.channel.item.(category == \"Rock\");  \n\n        // Use \"items\" namespace prefix (corresponding to the namespace we  \n        // defined above) to access the artist elements  \n        //rockArtists = rock.items::artist;  \n        // Or, alternatively:  \n        use namespace items;  \n        rockArtists = rock.artist;  \n    }\n\n…\n\nThe key here is that the artist element nodes are created with <itms:artist> in the RSS feed. In the XML, the \"itms\" namespace is defined as x­mlns:itms=\"http://phobos.apple.com/rss/1.0/modules/itms/\". This namespace is re-created in ActionScript using the namespace keyword in ActionScript, but instead of calling it \"itms\" it is defined as \"items\". In general, you'd want to keep the prefix the same for both, but for illustration purposes you can see that they're allowed to be different.\n\nAccessing the artist element nodes then is simply a matter of using the namespace via use namespace items and asking for just the artist (without the namespace prefix). Another approach is to omit the use namespace ... code and use the namespace prefix directly: rock.items::artist. In both cases, the namespace to use is the one defined in ActionScript, and not the one defined in the XML file (so \"items\" instead of \"itms\").\n\n[http://www.darronschall.com/weblog/2006/04/\n    using-xml-namespaces-with-e4x-and-actionscript-3.cfm]",
    "ItemText": null,
    "CreateDate": "2009-07-27T22:08:55.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-27T22:08:55.0000000",
    "DocumentId": "2076072153",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5873",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "E4X and ActionScript: “Descendant accessors and namespaces in AS3.0” by Jodie O’Rourke",
    "SortOrdinal": null,
    "ItemChar": "I recently encountered a problem, and with it, the lack of documentation around the use of the descendant accessor (double dot ..) in ActionScript 3.0. I was writing a web service adapter that would obviously need to traverse various XML namespaces (such as soap: and wsdl:), but found the shorthand notation wasn’t working as expected.\n\nProblem:\n\nYou’re trying to use the double dot (..) descendant accessor with an XML document that declares one for more namespaces. When you try to use var myTags:XMLList = myXML..ElementName nothing appears to happen.\n\n…\n\nAnswer:\n\nvar myTags:XMLList = myXML..*::Tag\n\nIn addition to using the (..) descendant accessor, because you’re now working with XML namespaces, you need to indicate that the tag you’re trying to access (at any depth) can belong to any (*) namespace. Normally to declare a namespace when traversing XML, you’d use myXML..ns::Tag, but by using the wildcard * it will pick-up the specified tags belonging to any namespace in the document.\n\nThe clear limitation here is that if you only want to pick-up tags from a particular namespace inside your XML, such as wsdl or soap, you would need to specify these as a qualified Namespace object in the place of the wildcard.\n\n[http://www.jodieorourke.com/view.php?blog=news&id=76]",
    "ItemText": null,
    "CreateDate": "2009-07-27T22:14:46.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-27T22:14:46.0000000",
    "DocumentId": "2076072154",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5874",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "XAMPP: Disabling Perl and CGI",
    "SortOrdinal": null,
    "ItemChar": "CGI:\n\nComment out these modules in /opt/lampp/etc/httpd.conf:\n\n#LoadModule suexec_module modules/mod_suexec.so\n#LoadModule cgi_module modules/mod_cgi.so\n#LoadModule cgid_module modules/mod_cgid.so\n\nPerl\n\nComment out these modules in /opt/lampp/etc/extra/httpd-xampp.conf:\n\n#LoadModule perl_module        modules/mod_perl.so\n\nAlso, keep this warning from /opt/lampp/htdocs/xampp/status.php:\n\n“Some changes to the configuration sometime may cause false negative status reports.”",
    "ItemText": null,
    "CreateDate": "2009-07-30T22:32:42.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-30T22:32:42.0000000",
    "DocumentId": "2076072155",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5875",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The Differences between a Clustered and Non-clustered Index",
    "SortOrdinal": null,
    "ItemChar": "Unclustered\n\nAn Unclustered index is structured in a way that doesn't correspond to the order of the actual data records. It resembles the words index at the back of a book. For this reason, it will perform worse than clustered indexes on ranged searches where the result set is large, since each result could cost an additional I/O-operation to get the actual data record. One can have any number of these kinds of indexes, that is required is the space to store the index itself -- one does not copy the actual data to create a new index.\n\nClustered\n\nClustering alters the data block into a certain distinct order to match the index, hence it is also an operation on the data storage blocks as well as on the index. An address book ordered by first name resembles a clustered index in its structure and purpose. The exact operation of database systems vary, but because storing data is very redundant the row data can only be stored in one order. Therefore, only one clustered index can be created on a given database table. Clustered indexes can greatly increase overall speed of retrieval, but usually only where the data is accessed sequentially in the same or reverse order of the clustered index, or when a range of items are selected.\n\nSince the physical records are in this sort order on disk, the next row item in the sequence is immediately before or after the last one, and so fewer data block reads are required. The primary feature of a clustered index is therefore the ordering of the physical data rows in accordance with the index blocks that point to them. Some databases separate the data and index blocks into separate files, others put two completely different data blocks within the same physical file(s).Clustering is a great example of Indexing and is far more sophisticated than an unclustered index.\n\n[http://en.wikipedia.org/wiki/Index_(database)]",
    "ItemText": null,
    "CreateDate": "2009-07-31T13:38:19.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-31T13:38:19.0000000",
    "DocumentId": "2076072156",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5876",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server: “An Introduction to Clustered and Non-Clustered Index Data Structures” by G. Vijayakumar",
    "SortOrdinal": null,
    "ItemChar": "When you first create a new table, there is no index created by default. In technical terms, a table without an index is called a “heap”. We can confirm the fact that this new table doesn’t have an index by taking a look at the sysindexes system table, which contains one for this table with an of indid = 0. The sysindexes table, which exists in every database, tracks table and index information. “Indid” refers to Index ID, and is used to identify indexes. An indid of 0 means that a table does not have an index, and is stored by SQL Server as a heap.\n\n…\n\nIt is really useful to have a clustered index when [we] retrieve many rows of data, ranges of data, and when BETWEEN is used in the WHERE clause. Because, the leaf level of the clustered index is the data. It should be used to save many I/Os. So, it is better to use clustered indexes to solve queries asking for ranges of data, not one row. \n\n[http://www.sql-server-performance.com/articles/\n    per/index_data_structures_p1.aspx]",
    "ItemText": null,
    "CreateDate": "2009-07-31T13:59:44.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-31T13:59:44.0000000",
    "DocumentId": "2076072157",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5877",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ActionScript: “TextField.text Gotcha: \\n becomes \\r” by Colin Moock",
    "SortOrdinal": null,
    "ItemChar": "TextField.text Gotcha: \\n becomes \\r\n\nHere's a little TextField quirk: when you assign the string \"\\n\" (newline) to a TextField's text variable, ActionScript automatically converts it to a \"\\r\" character. For example,\n\nvar t:TextField = new TextField()\nt.text = \"Hello\\nworld\";\n\ntrace(t.text.indexOf(\"\\r\")); // 5\ntrace(t.text.indexOf(\"\\n\")); // -1\n\nSo if you're hunting for a \"\\n\" you've added to a text field, you'll need to search for \"\\r\", not \"\\n\". The docs for TextField's text variable actually point out that \"\\r\" is used:\n\n\"Lines are separated by the carriage return character ('\\r', ASCII 13).\"\n\nBut the docs fail to mention that \"\\n\" is converted to \"\\r\".\n\n[http://www.moock.org/blog/archives/000281.html]",
    "ItemText": null,
    "CreateDate": "2009-07-31T14:05:35.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-31T14:05:35.0000000",
    "DocumentId": "2076072158",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5878",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Java SE 6: “Getting to Know System Tray” by John Zukowski",
    "SortOrdinal": null,
    "ItemChar": "The Java SE 6 release introduced several new capabilities to the Abstract Window Toolkit (AWT). Users are no longer limited to Swing and enhancing the graphical user interface (GUI) components. With Java SE 6, you have new access to things such as desktop applications through what used to be called the JDesktop Integration Components (JDIC), described in a previous tip: Communicating With Native Applications Using JDIC. Although its package changed to just java.awt, the API remains much as described in that tip. You also now have the ability to add applications to the Microsoft Windows taskbar, the Gnome notification area, or KDE's system tray. That is what this tip is all about.\n\nAccess to the system tray requires only two new classes: SystemTray to represent the desktop's system tray and TrayIcon for its icon. Why not use Image or Icon for that? TrayIcon has an attached PopupMenu and tool tip text. Here's how all the pieces fit together.\n\nThe SystemTray class builds on the concept of the platform having a single instance of the tray. Calling the getSystemTray() method of SystemTray will return that instance. But some platforms might not support a system tray, so it is best to check first through the isSupported() method. Otherwise, an UnsupportedOperationException will be thrown if the platform does not support a system tray.\n\n[http://blogs.sun.com/CoreJavaTechTips/entry/getting_to_know_system_tray]",
    "ItemText": null,
    "CreateDate": "2009-07-31T14:07:04.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-31T14:07:04.0000000",
    "DocumentId": "2076072159",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5879",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PowerShell 1.0: Two Ways to Run Multiple External Processes with System.Diagnostics.Process",
    "SortOrdinal": null,
    "ItemChar": "#1: with an instance of System.Diagnostics.Process:\n$process = New-Object System.Diagnostics.Process;\n$process.StartInfo.Arguments = \"/K cd %ProgramFiles% && dir/w | more\";\n$process.StartInfo.FileName = \"cmd\";\n$process.Start(); #Returns $true\n\n#2: with static System.Diagnostics.Process:\n$arguments = \"/K cd %ProgramFiles% && dir/w | more\";\n[System.Diagnostics.Process]::Start(\"cmd\", $arguments).WaitForExit();\n\n#Other alternatives may be possible with Invoke-Expression\n#or the Call Operator, &",
    "ItemText": null,
    "CreateDate": "2009-07-31T19:15:34.0000000",
    "EndDate": null,
    "ModificationDate": "2009-07-31T19:15:34.0000000",
    "DocumentId": "2076072160",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5880",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Batch File: Shell Script Installing a .NET Service; InstallUtil.exe",
    "SortOrdinal": null,
    "ItemChar": "@echo off\n%SYSTEMROOT%\\Microsoft.NET\\Framework\\v2.0.50727\\InstallUtil.exe %1\npause",
    "ItemText": null,
    "CreateDate": "2009-08-01T18:30:51.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-01T18:30:51.0000000",
    "DocumentId": "2076072161",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5881",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PowerShell 1.0: Add a Local User; Add-LocalUser Function; ADSI",
    "SortOrdinal": null,
    "ItemChar": "Function Add-LocalUser([String]$userName, [String]$userDescription, [String]$password)\n{\n    $path = [String]::Concat(\"WinNT://./\",$userName,\",user\");\n    $user = [ADSI]$path;\n    if([String]::IsNullOrEmpty($user.Name))\n    {\n        $computer = [ADSI]\"WinNT://.\";\n        $user = $computer.Create(\"user\", $userName);\n        $user.SetPassword($password);\n        $user.SetInfo();\n        $user.Description = $userDescription;\n        $user.SetInfo();\n        $user.UserFlags += 65536\n        #flag ADS_UF_DONT_EXPIRE_PASSWD = &h10000\n\n        $user.SetInfo();\n\n        Write-Host \"User\"$user.Name\"added.\";\n    }\n    else\n    {\n        Write-Host \"User\"$user.Name\"already a Local User.\";\n    }\n}\n",
    "ItemText": null,
    "CreateDate": "2009-08-01T18:36:35.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-01T18:36:35.0000000",
    "DocumentId": "2076072162",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5882",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "LAMP and WordPress.org: “Redirecting WordPress Feeds to FeedBurner Feeds”; smashingmagazine.com",
    "SortOrdinal": null,
    "ItemChar": "# temp redirect wordpress content feeds to feedburner\n<IfModule mod_rewrite.c>\n RewriteEngine on\n RewriteCond %{HTTP_USER_AGENT} !FeedBurner    [NC]\n RewriteCond %{HTTP_USER_AGENT} !FeedValidator [NC]\n RewriteRule ^feed/?([_0-9a-z-]+)?/?$ http://feeds.feedburner.com/wprecipes [R=302,NC,L]\n</IfModule>\n\n# [http://www.smashingmagazine.com/2008/\n#    12/02/10-useful-rss-hacks-for-wordpress/]",
    "ItemText": null,
    "CreateDate": "2009-08-09T09:51:33.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-09T09:51:33.0000000",
    "DocumentId": "2076072163",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5883",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP and WordPress.org: “Display Any RSS Feed on Your WordPress Blog”; smashingmagazine.com",
    "SortOrdinal": null,
    "ItemChar": "Many plug-ins can do the job, but they’re not necessary at all. WordPress has a built-in RSS reader that is used, for example, to display news on your dashboard. All you have to do is use it in your theme.\n\n    <?php include_once(ABSPATH.WPINC.'/rss.php');\n    wp_rss('http://feeds.feedburner.com/wprecipes', 3); ?>\n\n[http://www.smashingmagazine.com/2008/\n    12/02/10-useful-rss-hacks-for-wordpress/]",
    "ItemText": null,
    "CreateDate": "2009-08-09T09:55:03.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-09T09:55:03.0000000",
    "DocumentId": "2076072164",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5884",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP and WordPress.org: “Exclude Categories from Your RSS Feed”; smashingmagazine.com",
    "SortOrdinal": null,
    "ItemChar": "First, get the numeric ID of the category you want to exclude. If you don’t know how to get the ID of a particular category, you can learn how here. Once you have the ID of the category you want to exclude from your RSS feed, edit the functions.php file in your theme. Create the file if it doesn’t exist.\n\n    function myFilter($query) {\n        if ($query->is_feed) {\n            $query->set('cat','-5'); //Category ID\n        }\n        return $query;\n    }\n\n    add_filter('pre_get_posts','myFilter');\n\n[http://www.smashingmagazine.com/2008/\n    12/02/10-useful-rss-hacks-for-wordpress/]",
    "ItemText": null,
    "CreateDate": "2009-08-09T09:57:57.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-09T09:57:57.0000000",
    "DocumentId": "2076072165",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5885",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "HTML/XHTML and WordPress.org: “Format Your Images for Feed Readers”; smashingmagazine.com",
    "SortOrdinal": null,
    "ItemChar": "…add a CSS class to display the image as a block. WordPress provides the built-in class “center”:\n\n    <img src=\"myimage.jpg\" alt=\"This is my image\" class=\"center\"/>\n\n[http://www.smashingmagazine.com/2008/\n    12/02/10-useful-rss-hacks-for-wordpress/]",
    "ItemText": null,
    "CreateDate": "2009-08-09T10:03:23.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-09T10:03:23.0000000",
    "DocumentId": "2076072166",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5886",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP and WordPress.org: “Insert Ads (or Anything Else) in Your RSS Feed”; smashingmagazine.com",
    "SortOrdinal": null,
    "ItemChar": "I have seen many similar hacks on the Web, but all of them require you to edit WordPress core files to achieve the same result. Of course, editing WordPress core files is a very bad idea because then you would have to re-edit the files each time you upgrade your blog. Instead, this hack uses the add_filter() WordPress function to insert content into your RSS feed without editing any core files.\n\n    <?php\n    function insertAds($content) {\n        $content = $content.\n        '<hr />'.\n        '<a href=\"http://www.wprecipes.com\">Link!</a><hr />';\n        return $content;\n    }\n    add_filter('the_excerpt_rss', 'insertAds');\n    add_filter('the_content_rss', 'insertAds');\n    ?>\n\n[http://www.smashingmagazine.com/2008/\n    12/02/10-useful-rss-hacks-for-wordpress/]",
    "ItemText": null,
    "CreateDate": "2009-08-09T10:06:07.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-09T10:06:07.0000000",
    "DocumentId": "2076072167",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5887",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQLite: Recommended Management Tools for Ubuntu Linux; GUIs",
    "SortOrdinal": null,
    "ItemChar": ">>>Sqliteman\nhttp://sqliteman.com/\nOpenSUSE binaries available from the site. A Debian package (that depends on Qt Toolkit) is available here:\n\n    http://froebe.net/blog/2008/04/16/sqliteman-ubuntu-i386-package/\n\nDirect download:\n\n    http://www.froebe.net/packages/sqliteman_1.0.1-1_i386.deb\n\n>>>SQLiteStudio\nhttp://sqlitestudio.one.pl\nThis one just works as a binary packed with its own GTK libraries.\n\n>>>sqlite-manager (FireFox Plugin)\nhttp://code.google.com/p/sqlite-manager/wiki/SupportedApplications\nWorks well in FireFox 3.5 and above. Also, a XULRunner option is available. # Mozilla Addons site: https://addons.mozilla.org/en-US/firefox/addon/5817 \n\nFull list of GUIs: http://www.sqlite.org/cvstrac/wiki?p=ManagementTools\n\n",
    "ItemText": null,
    "CreateDate": "2009-08-09T19:04:28.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-09T19:04:28.0000000",
    "DocumentId": "2076072168",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5888",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Silverlight: “Silverlight Tip of the Day #60—How to load a XAML Control From a File or String”; Mike Snow",
    "SortOrdinal": null,
    "ItemChar": "If you have a control written in XAML that is included in your project you can load and create it directly from file by using the method:\n\nSystem.Windows.Markup.XamlReader.Load().This method can also be used to directly create a Silverlight control from a string.\n\nTo demonstrate this I have created two functions called LoadFromXAML(). The first function takes takes as a parameter a URI that points to the XAML file in your project you want to load. The second takes as a parameter a string representation of the control.\n\npublic static object LoadFromXaml(Uri uri)\n{\n    System.Windows.Resources.StreamResourceInfo streamInfo = System.Windows.Application.GetResourceStream(uri);\n\n    if ((streamInfo != null) && (streamInfo.Stream != null))\n    {\n        using (System.IO.StreamReader reader = new System.IO.StreamReader(streamInfo.Stream))\n        {\n            return System.Windows.Markup.XamlReader.Load(reader.ReadToEnd());\n        }\n\n    }\n    return null;\n}\n\npublic static object LoadFromXamlString(string xamlControl)\n{\n    return System.Windows.Markup.XamlReader.Load(xamlControl);\n}\n\nThe above methods return a generic object that can be typecast to the object you are loading. For example:\n\n    Button myButton = (Button)LoadFromXaml(new Uri(\"/LoadXaml;component/MyButton.xaml\", UriKind.Relative));\n\n    or\n\n    string buttonXAML = \"<Button x­mlns='http://schemas.microsoft.com/client/2007' Width=\\\"100\\\" Height=\\\"100\\\" Content=\\\"Click Me\\\"></Button>\";\n\n    Button myButton = (Button) LoadFromXaml(buttonXAML);\n\nNote that in the XAML you must declare a default XML namespace as highlighted below:\n\n<Button x­mlns='http://schemas.microsoft.com/client/2007' Width=\"100\" Height=\"100\" Content=\"Click Me\"></Button>\n\nIf you do not declare this namespace, you will see the following error:\n\n    AG_E_PARSER_MISSING_DEFAULT_NAMESPACE [Line: 0 Position: 0]\n\n[http://silverlight.net/blogs/msnow/archive/2008/10/09/\n    silverlight-tip-of-the-day-60-how-to-load-a-control-straight-from-xaml.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-09T21:19:00.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-09T21:19:00.0000000",
    "DocumentId": "2076072169",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5889",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“How do you find out which version of the GTK Ubuntu is using?”; stackoverflow.com",
    "SortOrdinal": null,
    "ItemChar": "dpkg -l libgtk[0-9]* | grep ^i\n\n[http://stackoverflow.com/questions/126141/\n    how-do-you-find-out-which-version-of-the-gtk-ubuntu-is-using]",
    "ItemText": null,
    "CreateDate": "2009-08-09T21:33:02.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-09T21:33:02.0000000",
    "DocumentId": "2076072170",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5890",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Microsoft Office Word: “The Document Inspector”; The Microsoft Office Word Team",
    "SortOrdinal": null,
    "ItemChar": "The document inspector is located in the prepare menu which can be can found by clicking on the Office Button (Alt+F, E, I). When launching the inspector, if you haven't saved your file before making the most recent changes, you will be prompted to do so. It's not required that you save; however, the reason we provide this dialogue is because once you run the inspector, and choose to remove certain components of a document, they are GONE.\n\n…\n\nSo as the product manager for Word, I spend a ton of time producing content. This often has to go through numerous review cycles with legal, our PM's, and others. After numerous rounds of markups and review, what started as a regular old document is often littered with comments, revisions, and markups galore. In addition, because I created the document, my personal information is available to any curious reader. Once I am ready to publish my content I would run the inspector. Because I don't want readers seeing all the comments or reading my personal information, I would search for, and remove it. I probably also don't want people seeing hidden text so I would get rid of that too. I would want to hold onto things like headers and watermarks because I use them in my documents.\n\n[http://blogs.msdn.com/microsoft_office_word/\n    archive/2007/03/15/the-document-inspector.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-09T21:35:33.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-09T21:35:33.0000000",
    "DocumentId": "2076072171",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5891",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET: “Web Site or Web Application?”; stackoverflow.com",
    "SortOrdinal": null,
    "ItemChar": "The Web Site project is compiled on the fly. You end up with a lot more DLL files, which can be a pain. It also gives problems when you have pages or controls in one directory that need to reference pages and controls in another directory since the other directory may not be compiled into code yet. Another problem can be in publishing.\n\n[http://stackoverflow.com/questions/398037/asp-net-web-site-or-web-application]",
    "ItemText": null,
    "CreateDate": "2009-08-09T21:41:07.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-09T21:41:07.0000000",
    "DocumentId": "2076072172",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5892",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET: “Comparing Web Site Projects and Web Application Projects”; MSDN",
    "SortOrdinal": null,
    "ItemChar": "The new Web application project model provides the same Web project semantics as Visual Studio .NET 2003 Web projects. This includes a structure based on project files and a build model where all code in the project is compiled into a single assembly. However, the new project type makes available all the new features of Visual Studio 2005 (refactoring, class diagrams, test development, generics, and so on) and of ASP.NET 2.0 (master pages, data controls, membership and login, role management, Web Parts, personalization, site navigation, themes, and so on).\n\nThe Web application project model in Visual Studio 2005 also removes two requirements from Visual Studio .NET 2003:\n\n    * Using FrontPage Server Extensions (FPSE). These are no longer required, but they are supported if your site already uses them.\n\n    * Using a local copy of IIS. The new project type supports both IIS and the built-in ASP.NET Development Server.\n\nThe following two tables describe the differences between Web application projects and Web site projects. The first table highlights various scenarios and tasks and suggests which model is best suited to that task. The second table describes in more detail the behavioral differences between each model. Use the tables to guide you in selecting which model to select.\n\nThe following table lists Web project options or tasks and indicates which project model best implements those options.\n\n[http://msdn.microsoft.com/en-us/library/aa730880(VS.80).aspx#wapp_topic5]",
    "ItemText": null,
    "CreateDate": "2009-08-09T21:47:04.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-09T21:47:04.0000000",
    "DocumentId": "2076072173",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5893",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET:  “Visual Studio 2005 Web Application Project Option”; Scott Guthrie in 2005",
    "SortOrdinal": null,
    "ItemChar": "The Visual Studio 2005 Web Application Project Model is a new web project option for Visual Studio 2005 that provides the same conceptual web project approach as VS 2003 (a project file based structure where all code in the project is compiled into a single assembly) but with all the new features of VS 2005 (refactoring, class diagrams, test development, generics, etc) and ASP.NET 2.0 (master pages, data controls, membership/login, role management, Web Parts, personalization, site navigation, themes, etc).\n\n[http://webproject.scottgu.com/Default.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-09T21:48:51.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-09T21:48:51.0000000",
    "DocumentId": "2076072174",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5894",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET: “Web Site vs. Web Application”; Stephen M. Redd",
    "SortOrdinal": null,
    "ItemChar": "A few years ago, when I first got a look at asp.net 2.0, it was clear to me that there must have been some serious changes inside the development team at Microsoft. ASP.NET 1.x was a huge leap forward in server side web application frameworks, but it was also geared to an object oriented audience. While it did support direct data access from web pages and everything-in-one-file styles, Visual Studio's use of asp.net encouraged a more tiered design with clean separation of presentation, business, and data access. It also encouraged OO  design by making inheritance, namespaces, and assemblies all obvious, simple, and the default way of things.\n\nBy the time asp.net 2.0 was coming out,  more agile languages were getting all the buzz. PHP was still relevant and Ruby on Rails was shaping up to be the next big contender. By that time Java's JSP, the only other heavy OO platform that still mattered, had fallen flat on its face. So it wasn't exactly a surprise that there was a focus within asp.net 2.0 towards the \"less is more\" philosophy of quick, dirty, do-what-I-mean design. Codeless databinding, master pages, skins, themes, and configuration driven providers for common stuff like membership, profiles, personalization, etc. were all expected.\n\nBut what make several of us step back was the new compilation model and the \"project-less\" web site... er... project. Aside from being one of the most impossible to name mechanisms, it was also a breaking change in how asp.net was done. The new compilation model threw out the visual studio project file itself, took asp.net back to the \"compile-on-the-fly\" concept, all but eliminated the use of namespaces within a web site, and radically altered the way UI template and the associated code-behind were arranged.\n\nBut for those of us doing serious web frameworks in large or complex environments, the web site model had some serious drawbacks. The biggest for me was having to manually deal with namespaces, which the UI and code designers would fight every step of the way (until you finally gave up and just let it pile up in one big default namespace). The loss of the visual studio project files was also painful, and it lead to an awkward \"exclude from project\" mechanism where the only way to get Visual Studio to ignore a file was to physically rename it. Large web sites with lots of code suffered horribly in performance because so many helpful visual studio features, like refactoring and the verification compiler had to sift through every file in the project with no guidance from project configuration.\n\nMicrosoft seemed to notice the problem, and resurrected the old project model in what they called the \"Web Application\" Project. This was essentially a retro-fitted clone of the old project model complete with designer generated code files (updated to take advantage of partial classes though). The new project type brought back namespaces, and once again encouraged clean OO design patterns. It also became apparent over a very short time that Microsoft itself would consider the web application model the new \"enterprise\" project type while the web site project type was more for the beginner and casual developers. For example, Team system's testing, build, and deployment work great with the web application project, but work poorly if at all with web site projects. But the new project type also brought with it the need to compile everything in advance, and used a different mechanism to associate UI and code-behind files that was incompatible with dynamic compilation.\n\nWith Visual Studio 2008 Microsoft is keeping both project types. But I think they are missing an opportunity. While the web application project and web site projects both have advantages and disadvantages, there doesn't seem to be a compelling reason for some of the features to be mutually exclusive.\n\nI for one would love to see a hybrid project type. Keep the project file to organize the site and give us a place to put visual studio specific settings. But switch it use the dynamic compilation model from web site projects. Dynamic compilation and xcopy deployment were powerful ideas, and I can't see any reason they can't be used still. The verification compiler can be optimized quite a lot by having access to a project file... exclusions can be dealt with elegantly, and the whole thing can be sped up. For other code though, you could choose to continue to compile to an assembly in advance, or leverage the app_code folder for dynamic compilation, or a combination of both. And of course, keep the namespaces and configurable compiler options.\n\nI'd love to see a web project type that keeps the best of web site and web application projects both. Give me control over the project's structure, namespaces, and compilation but also give me xcopy deployment, dynamic compilation (using my settings), and keep a consistent way of associating an asp.net UI file to its code-behind without requiring the designer generated code file and full compilation.\n\n[http://reddnet.net/code/aspnet-web-site-vs-web-application/]\n\n…\n\nI'll omit a detailed technical description of the differences between web sites and web applications. This territory has been better covered elsewhere on the web, and the MSDN documentation that ships with VS 2008 covers it in detail too.\n\nWhat most people want to know is, which is better?\n\nThe answer does depend a little on personal preference and what kind of application you are building.\n\nI write and maintain several web applications. Some are very small personal sites with mostly static content, while others are huge data entry applications. My largest solution includes about 22 different class library and database projects that support a single web site project.\n\nThe web site project has always disappointed me, even with my smaller applications. The Web Application project type has become my preferred approach for all new projects, and I've since converted most of my older web sites to web applications as well.\n\nWeb site projects:\n\nWeb sites are a little simpler if you are doing inline code instead of code behind. Web sites also reflect changes in code files without needing to be manually compiled. That means you can edit a file and just refresh the browser.\n\nIf you need to explicitly \"build\", so you can ensure your code doesn't have errors for example, you can still do so. However, the \"build\" command doesn't really compile the project... it just verifies it using the dynamic compiler. While 99% of the time this is fine, I have come across a couple of minor cases where the verification compiler didn't find an error, but attempting to run the site for real did.\n\nMajor advantages of web sites:\n\n    * Everything in the project's folder is part of the project. This makes it easy to use other editors or tools with web sites. If you add files outside Visual Studio, they will still be part of the project. If you edit a file outside VS it will still be compiled and the changes visible when the site is viewed in a browser.\n       \n    * You can deploy without having to compile... just XCOPY and go. Web sites do support pre-compilation if you choose to use it.\n       \n    * Files don't have to be written in the same language. VS will support having a mix of VB and C# code on a file-by-file basis. Sounds good, but I've never found this useful personally. Maintaining a site is much easier if you stick with one language.\n       \n    * The add \"item\" dialogs in Visual Studio are more intuitive for web sites. I'm not sure why both projects don't use the same dialogs, but they certainly don't.\n       \n    * Profile's design time compilation is automatic. The ProfileCommon class is created dynamically making it easy to work with the profile provider in a strongly typed way.\n\nThe biggest annoyance for me with web sites are:\n\n    * No way to really \"exclude\" a file without renaming it. Refactoring tools and the \"compiler\" have to crawl through every file in your application. This can get slow if you have a lot of files. For example, I often use FCKEditor, which has a dump-truck load of files. Most of them are not asp.net files. But just having to scan through them when I build or refactor can really slow things down. This has gotten a little better in VS 2008, but not fast enough for my tastes.\n       \n    * No control over your namespaces. Sure, you can manually add namespaces to pretty much anything, but visual studio will fight you every step of the way. With generated code such as ADO.NET DataSets and such, this gets very hard to control. Eventually you will give up and just let VS put everything in the default namespace. In large applications this gets very annoying, especially if you like a well structured application.\n       \n    * It is hard (read, nearly impossible) to reference pages, user controls, etc from custom classes in the app_code folder. This produces some interesting problems if you are doing anything fancy like dynamically loading pages or controls and such.\n       \n    * The application compiles to the asp.net temporary internet files folder. This is a drop location for all that dynamically compiled code that the asp.net compiler will produce. This is a fine mechanism until it breaks. When it breaks you can get really weird errors from the compiler that don't make obvious sense. These are pretty easy to cause by accident. For example, if you tell VS to \"build\" then refresh a browser pointed at the site at the same time.... the two compiles often conflict in some bizarre manner corrupting the temp asp.net files. When this happens, assuming you figure out that this is the cause of the problem, you have to shut down VS and the web server, manually remove the files from the temp folder, then restart everything.\n       \n    * No ability to product XML comment output files. I use the crap out of XML comments, so this is the big deal breaker for me.\n       \n    * Not much control over build outputs. In most projects you can set whether a file is compiled, copied to the output directory, and such. But not with web sites. If a file is in the project's folder structure, it is part of the project.\n       \n    * Team Build hates web sites. Lacking a project file, you can use the web deployment project add-on to help out, but even still I've found that trying to automate a build for any significantly complex web site is a disaster and time-sink.\n    * Disconnected Source Control. VS supports working disconnected from source control these days, but I find that it often has problems keeping web sites in sync when you reconnect. This is a sporadic problem, and hard to reproduce, but seems to be more common with delete, rename, and add operations.\n\nThe web application project:\n\nThe web application project is a little more formal than web sites. You get an actual project file by which Visual Studio tracks the files that are in your project. Web applications do generate \"designer\" files for your pages that link the code-behind to the controls you've put in the markup, but unlike old VS 2003 projects these are much simpler and leverage partial classes and such.\n\nThe drawbacks are:\n\n    * The site has to be compiled/built before it will run.\n       \n    * Your project is specific to only one language.\n       \n    * No automatic support for a Profile class. You have to use a separate tool to generate ProfileCommon or write one manually.\n\nThe major advantages are:\n\n    * Compile and refactoring is much faster since VS has a way to track what is in the project and doesn't have to scan everything in every folder. Also, you can have stuff in the folders that aren't part of the project (I find this useful sometimes). \n       \n    * You can control namespaces, assembly names, and build behavior for various files in the project. Namespaces are also automatically managed by VS based on the application's folder structure. This includes a real \"project properties\" editor too with all those familiar things like build options, references, settings, etc.\n       \n    * You can generate XML comment output files.\n       \n    * You can exclude files from the project without having to rename them.\n       \n    * MSBuild and Team Build work much smoother with web application projects.\n       \n    * Custom code files don't have to be in a specific folder, you can put them anywhere and organize them however you see fit.\n       \n    * Classes can refernce pages and controls.\n       \n    * You can split the site into multiple projects.\n       \n    * Include pre and post build steps to compilation.\n       \n    * Disconnected source control seems to work more consistently with web application projects.\n\nThe bottom line:\n\nWeb applications scale better and are just plain smoother than web sites assuming you plan to do most of your development directly in Visual Studio. The only major difference is that you have to build manually... so get used to CTRL + SHIFT + B. At least it's pretty fast in VS 2008 and it won't blow up the temporary internet files folder like web site projects can.\n\nI can't say that web sites are inferior to web applications overall. There are cases where web sites do work very well, especially with smaller and simpler projects. I just personally don't find that having on-the-fly compilation is really much extra value, while more control over the application's compilation is always a good thing.\n\n[http://reddnet.net/code/asp-net-web-site-vs-web-application-project-part-2/]",
    "ItemText": "A few years ago, when I first got a look at asp.net 2.0, it was clear to me that there must have been some serious changes inside the development team at Microsoft. ASP.NET 1.x was a huge leap forward in server side web application frameworks, but it was also geared to an object oriented audience. While it did support direct data access from web pages and everything-in-one-file styles, Visual Studio's use of asp.net encouraged a more tiered design with clean separation of presentation, business, and data access. It also encouraged OO  design by making inheritance, namespaces, and assemblies all obvious, simple, and the default way of things.\n\nBy the time asp.net 2.0 was coming out,  more agile languages were getting all the buzz. PHP was still relevant and Ruby on Rails was shaping up to be the next big contender. By that time Java's JSP, the only other heavy OO platform that still mattered, had fallen flat on its face. So it wasn't exactly a surprise that there was a focus within asp.net 2.0 towards the \"less is more\" philosophy of quick, dirty, do-what-I-mean design. Codeless databinding, master pages, skins, themes, and configuration driven providers for common stuff like membership, profiles, personalization, etc. were all expected.\n\nBut what make several of us step back was the new compilation model and the \"project-less\" web site... er... project. Aside from being one of the most impossible to name mechanisms, it was also a breaking change in how asp.net was done. The new compilation model threw out the visual studio project file itself, took asp.net back to the \"compile-on-the-fly\" concept, all but eliminated the use of namespaces within a web site, and radically altered the way UI template and the associated code-behind were arranged.\n\nBut for those of us doing serious web frameworks in large or complex environments, the web site model had some serious drawbacks. The biggest for me was having to manually deal with namespaces, which the UI and code designers would fight every step of the way (until you finally gave up and just let it pile up in one big default namespace). The loss of the visual studio project files was also painful, and it lead to an awkward \"exclude from project\" mechanism where the only way to get Visual Studio to ignore a file was to physically rename it. Large web sites with lots of code suffered horribly in performance because so many helpful visual studio features, like refactoring and the verification compiler had to sift through every file in the project with no guidance from project configuration.\n\nMicrosoft seemed to notice the problem, and resurrected the old project model in what they called the \"Web Application\" Project. This was essentially a retro-fitted clone of the old project model complete with designer generated code files (updated to take advantage of partial classes though). The new project type brought back namespaces, and once again encouraged clean OO design patterns. It also became apparent over a very short time that Microsoft itself would consider the web application model the new \"enterprise\" project type while the web site project type was more for the beginner and casual developers. For example, Team system's testing, build, and deployment work great with the web application project, but work poorly if at all with web site projects. But the new project type also brought with it the need to compile everything in advance, and used a different mechanism to associate UI and code-behind files that was incompatible with dynamic compilation.\n\nWith Visual Studio 2008 Microsoft is keeping both project types. But I think they are missing an opportunity. While the web application project and web site projects both have advantages and disadvantages, there doesn't seem to be a compelling reason for some of the features to be mutually exclusive.\n\nI for one would love to see a hybrid project type. Keep the project file to organize the site and give us a place to put visual studio specific settings. But switch it use the dynamic compilation model from web site projects. Dynamic compilation and xcopy deployment were powerful ideas, and I can't see any reason they can't be used still. The verification compiler can be optimized quite a lot by having access to a project file... exclusions can be dealt with elegantly, and the whole thing can be sped up. For other code though, you could choose to continue to compile to an assembly in advance, or leverage the app_code folder for dynamic compilation, or a combination of both. And of course, keep the namespaces and configurable compiler options.\n\nI'd love to see a web project type that keeps the best of web site and web application projects both. Give me control over the project's structure, namespaces, and compilation but also give me xcopy deployment, dynamic compilation (using my settings), and keep a consistent way of associating an asp.net UI file to its code-behind without requiring the designer generated code file and full compilation.\n\n[http://reddnet.net/code/aspnet-web-site-vs-web-application/]\n\n…\n\nI'll omit a detailed technical description of the differences between web sites and web applications. This territory has been better covered elsewhere on the web, and the MSDN documentation that ships with VS 2008 covers it in detail too.\n\nWhat most people want to know is, which is better?\n\nThe answer does depend a little on personal preference and what kind of application you are building.\n\nI write and maintain several web applications. Some are very small personal sites with mostly static content, while others are huge data entry applications. My largest solution includes about 22 different class library and database projects that support a single web site project.\n\nThe web site project has always disappointed me, even with my smaller applications. The Web Application project type has become my preferred approach for all new projects, and I've since converted most of my older web sites to web applications as well.\n\nWeb site projects:\n\nWeb sites are a little simpler if you are doing inline code instead of code behind. Web sites also reflect changes in code files without needing to be manually compiled. That means you can edit a file and just refresh the browser.\n\nIf you need to explicitly \"build\", so you can ensure your code doesn't have errors for example, you can still do so. However, the \"build\" command doesn't really compile the project... it just verifies it using the dynamic compiler. While 99% of the time this is fine, I have come across a couple of minor cases where the verification compiler didn't find an error, but attempting to run the site for real did.\n\nMajor advantages of web sites:\n\n    * Everything in the project's folder is part of the project. This makes it easy to use other editors or tools with web sites. If you add files outside Visual Studio, they will still be part of the project. If you edit a file outside VS it will still be compiled and the changes visible when the site is viewed in a browser.\n       \n    * You can deploy without having to compile... just XCOPY and go. Web sites do support pre-compilation if you choose to use it.\n       \n    * Files don't have to be written in the same language. VS will support having a mix of VB and C# code on a file-by-file basis. Sounds good, but I've never found this useful personally. Maintaining a site is much easier if you stick with one language.\n       \n    * The add \"item\" dialogs in Visual Studio are more intuitive for web sites. I'm not sure why both projects don't use the same dialogs, but they certainly don't.\n       \n    * Profile's design time compilation is automatic. The ProfileCommon class is created dynamically making it easy to work with the profile provider in a strongly typed way.\n\nThe biggest annoyance for me with web sites are:\n\n    * No way to really \"exclude\" a file without renaming it. Refactoring tools and the \"compiler\" have to crawl through every file in your application. This can get slow if you have a lot of files. For example, I often use FCKEditor, which has a dump-truck load of files. Most of them are not asp.net files. But just having to scan through them when I build or refactor can really slow things down. This has gotten a little better in VS 2008, but not fast enough for my tastes.\n       \n    * No control over your namespaces. Sure, you can manually add namespaces to pretty much anything, but visual studio will fight you every step of the way. With generated code such as ADO.NET DataSets and such, this gets very hard to control. Eventually you will give up and just let VS put everything in the default namespace. In large applications this gets very annoying, especially if you like a well structured application.\n       \n    * It is hard (read, nearly impossible) to reference pages, user controls, etc from custom classes in the app_code folder. This produces some interesting problems if you are doing anything fancy like dynamically loading pages or controls and such.\n       \n    * The application compiles to the asp.net temporary internet files folder. This is a drop location for all that dynamically compiled code that the asp.net compiler will produce. This is a fine mechanism until it breaks. When it breaks you can get really weird errors from the compiler that don't make obvious sense. These are pretty easy to cause by accident. For example, if you tell VS to \"build\" then refresh a browser pointed at the site at the same time.... the two compiles often conflict in some bizarre manner corrupting the temp asp.net files. When this happens, assuming you figure out that this is the cause of the problem, you have to shut down VS and the web server, manually remove the files from the temp folder, then restart everything.\n       \n    * No ability to product XML comment output files. I use the crap out of XML comments, so this is the big deal breaker for me.\n       \n    * Not much control over build outputs. In most projects you can set whether a file is compiled, copied to the output directory, and such. But not with web sites. If a file is in the project's folder structure, it is part of the project.\n       \n    * Team Build hates web sites. Lacking a project file, you can use the web deployment project add-on to help out, but even still I've found that trying to automate a build for any significantly complex web site is a disaster and time-sink.\n    * Disconnected Source Control. VS supports working disconnected from source control these days, but I find that it often has problems keeping web sites in sync when you reconnect. This is a sporadic problem, and hard to reproduce, but seems to be more common with delete, rename, and add operations.\n\nThe web application project:\n\nThe web application project is a little more formal than web sites. You get an actual project file by which Visual Studio tracks the files that are in your project. Web applications do generate \"designer\" files for your pages that link the code-behind to the controls you've put in the markup, but unlike old VS 2003 projects these are much simpler and leverage partial classes and such.\n\nThe drawbacks are:\n\n    * The site has to be compiled/built before it will run.\n       \n    * Your project is specific to only one language.\n       \n    * No automatic support for a Profile class. You have to use a separate tool to generate ProfileCommon or write one manually.\n\nThe major advantages are:\n\n    * Compile and refactoring is much faster since VS has a way to track what is in the project and doesn't have to scan everything in every folder. Also, you can have stuff in the folders that aren't part of the project (I find this useful sometimes). \n       \n    * You can control namespaces, assembly names, and build behavior for various files in the project. Namespaces are also automatically managed by VS based on the application's folder structure. This includes a real \"project properties\" editor too with all those familiar things like build options, references, settings, etc.\n       \n    * You can generate XML comment output files.\n       \n    * You can exclude files from the project without having to rename them.\n       \n    * MSBuild and Team Build work much smoother with web application projects.\n       \n    * Custom code files don't have to be in a specific folder, you can put them anywhere and organize them however you see fit.\n       \n    * Classes can refernce pages and controls.\n       \n    * You can split the site into multiple projects.\n       \n    * Include pre and post build steps to compilation.\n       \n    * Disconnected source control seems to work more consistently with web application projects.\n\nThe bottom line:\n\nWeb applications scale better and are just plain smoother than web sites assuming you plan to do most of your development directly in Visual Studio. The only major difference is that you have to build manually... so get used to CTRL + SHIFT + B. At least it's pretty fast in VS 2008 and it won't blow up the temporary internet files folder like web site projects can.\n\nI can't say that web sites are inferior to web applications overall. There are cases where web sites do work very well, especially with smaller and simpler projects. I just personally don't find that having on-the-fly compilation is really much extra value, while more control over the application's compilation is always a good thing.\n\n[http://reddnet.net/code/asp-net-web-site-vs-web-application-project-part-2/]",
    "CreateDate": "2009-08-09T22:02:38.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-09T22:02:38.0000000",
    "DocumentId": "2076072175",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5895",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Delegates Explained in Plain English”; Simon Pickersgill",
    "SortOrdinal": null,
    "ItemChar": "Delegates are fundamental to the .NET Framework (events and callbacks wouldn't work without them) and can be extremely powerful to the .NET Developer once they come to grasps with exactly what they are and how to use them. In this blog I will consider aspects of a real world situation in which delegates are useful, after which I will explain, in illustrative terms exactly what delegates are all about. You will see how delegates are an intrinsic part of the events structure in the .NET framework, but also why they are useful in their own right. First, though, we need to understand a little about the origins of delgates in the .NET framework.\n\n…\n\nWhere one class may wants to be represented within another class it can use a delegate. This is a lot more efficient that passing itself to the other class in its entirety, and is a lot more flexible. The delegate has to conform to certain limitations, though, just as the real world delegate does.\n\nWhen a delegate is declared it is declared much along the lines of a method/sub/function declaration. For example, in C#, a delegate declaration might look like:\n\n    public delegate void NewStaffCreatedHandler(StaffMember NewStaffMember)\n\n\nIt is given a scope public, a return type void (although it could equally be any other type), and specifies parameters. This constitutes the agreement as to how the implementation of the delegate (i.e. the method/sub/function it points to) must behave. In other words, any method/sub/function that this delegate points to must return a void and take a StaffMember object parameter.\n\nThe most common event handler delegate EventHandler, for example, has the following declaration:\n\n    public delegate void EventHandler(object sender, EventArgs e);\n\n\nAll events are of a delegate type. In other words, all events are declared with a specific delegate as their representative. For example, a delegate at a Microsoft conference could report back on an event that a delegate at an Sun conference couldn't (although they in turn could report back on an event that the Microsoft delegate couldn't), because they weren't in attendance at the same conference.\n\nSo, if you wanted to declare an event in your program that used the standard EventHandler delegate you would declare it as follows:\n\n    public event EventHandler MyEvent;\n\n…\n\nIn essence, delegates allow one class to invoke code in another class, without necessarily needing to care where that code is, or even if it exists at all…\n\n[http://www.codeproject.com/Articles/38716/\n    Delegates-Explained-in-Plain-English.aspx]\n\nNote that this article does not recognize the role generics play with delegates.\n",
    "ItemText": null,
    "CreateDate": "2009-08-10T20:37:01.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-10T20:37:01.0000000",
    "DocumentId": "2076072176",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5896",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Generic Delegates”; MSDN",
    "SortOrdinal": null,
    "ItemChar": "A  delegate can define its own type parameters. Code that references the generic delegate can specify the type argument to create a closed constructed type, just like when instantiating a generic class or calling a generic method, as shown in the following example:\n\npublic delegate void Del<T>(T item);\npublic static void Notify(int i) { }\n\nDel<int> m1 = new Del<int>(Notify);\n\nC# version 2.0 has a new feature called method group conversion, which applies to concrete as well as generic delegate types, and enables you to write the previous line with this simplified syntax:\n\nDel<int> m2 = Notify;\n\nDelegates defined within a generic class can use the generic class type parameters in the same way that class methods do.\n\nclass Stack<T>\n{\n    T[] items;\n    int index;\n\n    public delegate void StackDelegate(T[] items);\n}\n\nCode that references the delegate must specify the type argument of the containing class, as follows:\n\nprivate static void DoWork(float[] items) { }\n\npublic static void TestStack()\n{\n    Stack<float> s = new Stack<float>();\n    Stack<float>.StackDelegate d = DoWork;\n}\n\nGeneric delegates are especially useful in defining events based on the typical design pattern because the sender argument can be strongly typed and no longer has to be cast to and from Object.\n\ndelegate void StackEventHandler<T, U>(T sender, U eventArgs);\n\nclass Stack<T>\n{\n    public class StackEventArgs : System.EventArgs { }\n    public event StackEventHandler<Stack<T>, StackEventArgs> stackEvent;\n\n    protected virtual void OnStackChanged(StackEventArgs a)\n    {\n        stackEvent(this, a);\n    }\n}\n\nclass SampleClass\n{\n    public void HandleStackChange<T>(Stack<T> stack, Stack<T>.StackEventArgs args) { }\n}\n\npublic static void Test()\n{\n    Stack<double> s = new Stack<double>();\n    SampleClass o = new SampleClass();\n    s.stackEvent += o.HandleStackChange;\n}\n\n[http://msdn.microsoft.com/en-us/library/sx2bwtw7(VS.80).aspx]\n",
    "ItemText": null,
    "CreateDate": "2009-08-10T20:40:07.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-10T20:40:07.0000000",
    "DocumentId": "2076072177",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5897",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“The C# ?? null coalescing operator”; Scott Guthrie",
    "SortOrdinal": null,
    "ItemChar": "One of the subtle (but cool) language features of C# is the ?? “null coalescing” operator.  This provides a nice, terse way to check whether a value is null, and if so return an alternate value.\n\n…\n\nThe ?? operator works for both reference types and value types.  For example, below we are checking whether the nullable integer “number” variable is null.  Because it isn't, the result will be the original value (55):\n\n    int? number = 55;\n    int result = number ?? 0;\n\n[http://weblogs.asp.net/scottgu/archive/2007/09/20/\n    the-new-c-null-coalescing-operator-and-using-it-with-linq.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-10T20:51:47.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-10T20:51:47.0000000",
    "DocumentId": "2076072178",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5898",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Patterns and Practices: “SOLID and DRY”;  Jeremy Likness\n",
    "SortOrdinal": null,
    "ItemChar": "No, this isn’t a commercial for deodorant.\n\nIt’s funny how many developers become so entrenched in their company and projects that they seldom venture outside to see what is going in the bigger world of Information Technology. I see this often in my interviews: a senior developer has worked a company for several years, quickly rose to the top and is the “go to” guy and now is ready to be an “architect.” The only problem is that they only know how to work on their VisualBasic 6.0 system and think the best architecture is pulling everything as ADO XML and using stylesheet transformations to drive the application (I say this tongue-in-cheek because this is a framework I worked with and implemented in my past).\n\nI can think of two good examples for this. The first is test-driven development (TDD). You can ask a question about TDD in an interview, and while there are many people who have never heard of it, you’ll get a few that say, “Yes, absolutely, I follow TDD.” “How, exactly?” “Oh, we write unit tests.” If you think that writing unit tests means you are practicing TDD, you might want to do a little more research. The second example is generics—most people are familiar with generics in C#. What are they for? They are for lists, of course! (Again, if you feel that generics are only good for typing lists to prevent boxing, you'll want to research a bit deeper). Oh, and I just thought of a third: delegates are just for events, right?\n\nMy point is that sometimes we get stuck in what works for our system and it works well, but it’s not always the right or best solution and we need to constantly challenge ourselves as software engineers (or whatever we call ourselves today) to stay on top of what’s out there.\n\nI decided to post this article in my C#er : IMage blog because I feel SOLID and DRY are very sound principles for software development and yet I constantly see people tripping over these concepts.\n\nLet’s tackle DRY first:\n\nDon’t Repeat Yourself\n\nIt’s a simple principle, really.\n\nI am writing an application I need to validate that a field follows the specific pattern for an IP address. So I plug in a textbox, attach a custom regex validator control and I’m off to the races. One year later we have a huge application with IP addresses all over the place, and we discover that the regular expression we Googled to validate IP addresses has a bug! Now it’s search and replace and a LOT of unit testing.\n\nI should have caught myself the second time I was adding a regex validator. It’s easy to think, “I’m writing nice code because I’m not hand-rolling a regular expression validation, I’m using the validator.” But even something like that lent itself to create an “IP textbox control” with the validator embedded. Then, instead of repeating myself, I can drop in that control. If it changes, I change it once.\n\nYou can repeat yourself by decorated code with string literals instead of collapsing them into constants, by having little utility methods and not saying to yourself, “Wow, I just wrote that method twice…time to move it into a class.” It’s a powerful principle that will help you write scalable, maintainable code. You don't need to give it a fancy name like “Single Point of Truth” to appreciate that if you find yourself repeating something, anything, it’s a good candidate to break out into a separate, reusable class.\n\nThis takes us to SOLID, which is a study in and of itself, so I’m going to be brief here. The intent is just to introduce you to the principle so you can study it yourself and learn from it, because I see a lot of developers who would benefit from understanding it.\n\nSOLID is an acronym for:\n\n    * Single Responsibility Principle\n    * Open/Closed Principle\n    * Liskov Substitution Principle\n    * Interface Segregation Principle\n    * Dependency Inversion\n\nSingle Responsibility Principle\n\nA class should have one, and only one reason to change.\n\nThis is fairly close to DRY, no? We say: keep it simple. A common pattern for this is Model-View-Controller (MVC). Instead of combining presentation concerns, data persistance concerns, and business logic all in the same class, you break it out so each class focuses on its own. Why is this so important? Because each thing the application does is not only a potential point of failure, but also a point of change. In other words, “doing something” might be “doing something different” down the road.\n\nA common example of this is writing a drop down class. It calls the database, does an “order by” and then renders the control. Then you find out another page needs this same control, but as a textbox that has a “dynamic search” feature. So you copy the control, use some cool AJAX, and are looking good until you are informed that states will no longer be stored in the database, but must be managed via XML. Now you have TWO controls to change because of the ONE change of storing data.\n\nIf you followed the Single Responsibility Principle, you would have probably had four classes: one to fetch the data (persistance management), one to sort it (business logic), one to bind the data to a drop down and another for the fancy “look ahead” control (presentation). When the switch came, you'd only have to change it in one place.\n\nThis principle also makes it easier to scale development teams. Have you heard the saying, “9 women can’t make a baby in 1 month?” With this principle, you can scale the speed of delivery for your application by breaking it into smaller, more maintainable units of work.\n\nOpen/Closed Principle\n\nOpen for extension, closed for modification.\n\nThis simply states that you should be able to extend what a class does without modifying its core behavior. It’s open for extension, but closed for modification. Again, let’s take an example. You might have a class that represents a user in the system, and you’ve determined that fundamentally a user consists of a login, a password, and an email address. Later, you find out some users can have contact information. Eventually you learn that some users are administrators and have additional information such as which parts of the application they can manage.\n\nA class that violates these principles would require you to have a bloated class with lots of flags indicating what/who the user is. Every time you had to change or add something, you’d need to change that original class.\n\nA more stable approach would be to put your fundamentals into a base class. Now you can have a ContactUser : BaseUser and extend the user to have contact information. Then you can have a AdminUser : BaseUser or perhaps an AdminUser : ContactUser. You are extending, not modifying the base class. I mentioned generics earlier: this is a perfect example where generics can be used to define some base functionality (for example, in your data access layer, opening and closing the connections) while your extensions strongly type the behavior for a specific class.\n\nThe Liskov Substitution Principle\n\nDerived classes must be able to substitute for their base classes.\n\nWhy is this so important? Think about the example above with different contacts. If I have a function that validates a login, then I should be able to simply check the username and the password of the class. To do this, I don’t need to know if the class is a base user, a contact user, or an admin user. All of these classes extend base user, so I will code my login against base user. The contact user behaves exactly as the base user.\n\nWhat if I decide to write another class that displays user information? I make it UserInfo<T> but then break the principle by doing this:\n\n    if (typeof(T) == typeof(BaseUser) { return ((BaseUser)T).Email; }\n    else if (typeof(T) == typeof(ContactUser) { return ((ContactUser)T).Phone; }\n    else { throw new Exception(\"Could not determine the type.\"); }\n\nWhat just happened? It might work on the surface, but suddenly I have a very difficult class. This class now needs to understand every possible derived type of T in order to do its job. How can the application possibly scale if I have to keep coming back to the same place to make changes and keep up to date? I might hire a new developer who goes off and builds a AccountingUser…and then blows up the system because they did not update UserInfo.\n\nA better way would be to override the ToString method. Each class can implement its own version of what “display information” is. Any other object can handle BaseUser (not caring what the derived type is) and display useful information simply by invoking ToString().\n\nNow things are starting to get interesting because we’re going to tackle one of the most popular “buzz words” going around today: dependency injection / inversion of control…stay tuned, because we have two more principles to cover!\n\n[http://csharperimage.jeremylikness.com/2009/05/solid-and-dry.html]",
    "ItemText": "No, this isn’t a commercial for deodorant.\n\nIt’s funny how many developers become so entrenched in their company and projects that they seldom venture outside to see what is going in the bigger world of Information Technology. I see this often in my interviews: a senior developer has worked a company for several years, quickly rose to the top and is the “go to” guy and now is ready to be an “architect.” The only problem is that they only know how to work on their VisualBasic 6.0 system and think the best architecture is pulling everything as ADO XML and using stylesheet transformations to drive the application (I say this tongue-in-cheek because this is a framework I worked with and implemented in my past).\n\nI can think of two good examples for this. The first is test-driven development (TDD). You can ask a question about TDD in an interview, and while there are many people who have never heard of it, you’ll get a few that say, “Yes, absolutely, I follow TDD.” “How, exactly?” “Oh, we write unit tests.” If you think that writing unit tests means you are practicing TDD, you might want to do a little more research. The second example is generics—most people are familiar with generics in C#. What are they for? They are for lists, of course! (Again, if you feel that generics are only good for typing lists to prevent boxing, you'll want to research a bit deeper). Oh, and I just thought of a third: delegates are just for events, right?\n\nMy point is that sometimes we get stuck in what works for our system and it works well, but it’s not always the right or best solution and we need to constantly challenge ourselves as software engineers (or whatever we call ourselves today) to stay on top of what’s out there.\n\nI decided to post this article in my C#er : IMage blog because I feel SOLID and DRY are very sound principles for software development and yet I constantly see people tripping over these concepts.\n\nLet’s tackle DRY first:\n\nDon’t Repeat Yourself\n\nIt’s a simple principle, really.\n\nI am writing an application I need to validate that a field follows the specific pattern for an IP address. So I plug in a textbox, attach a custom regex validator control and I’m off to the races. One year later we have a huge application with IP addresses all over the place, and we discover that the regular expression we Googled to validate IP addresses has a bug! Now it’s search and replace and a LOT of unit testing.\n\nI should have caught myself the second time I was adding a regex validator. It’s easy to think, “I’m writing nice code because I’m not hand-rolling a regular expression validation, I’m using the validator.” But even something like that lent itself to create an “IP textbox control” with the validator embedded. Then, instead of repeating myself, I can drop in that control. If it changes, I change it once.\n\nYou can repeat yourself by decorated code with string literals instead of collapsing them into constants, by having little utility methods and not saying to yourself, “Wow, I just wrote that method twice…time to move it into a class.” It’s a powerful principle that will help you write scalable, maintainable code. You don't need to give it a fancy name like “Single Point of Truth” to appreciate that if you find yourself repeating something, anything, it’s a good candidate to break out into a separate, reusable class.\n\nThis takes us to SOLID, which is a study in and of itself, so I’m going to be brief here. The intent is just to introduce you to the principle so you can study it yourself and learn from it, because I see a lot of developers who would benefit from understanding it.\n\nSOLID is an acronym for:\n\n    * Single Responsibility Principle\n    * Open/Closed Principle\n    * Liskov Substitution Principle\n    * Interface Segregation Principle\n    * Dependency Inversion\n\nSingle Responsibility Principle\n\nA class should have one, and only one reason to change.\n\nThis is fairly close to DRY, no? We say: keep it simple. A common pattern for this is Model-View-Controller (MVC). Instead of combining presentation concerns, data persistance concerns, and business logic all in the same class, you break it out so each class focuses on its own. Why is this so important? Because each thing the application does is not only a potential point of failure, but also a point of change. In other words, “doing something” might be “doing something different” down the road.\n\nA common example of this is writing a drop down class. It calls the database, does an “order by” and then renders the control. Then you find out another page needs this same control, but as a textbox that has a “dynamic search” feature. So you copy the control, use some cool AJAX, and are looking good until you are informed that states will no longer be stored in the database, but must be managed via XML. Now you have TWO controls to change because of the ONE change of storing data.\n\nIf you followed the Single Responsibility Principle, you would have probably had four classes: one to fetch the data (persistance management), one to sort it (business logic), one to bind the data to a drop down and another for the fancy “look ahead” control (presentation). When the switch came, you'd only have to change it in one place.\n\nThis principle also makes it easier to scale development teams. Have you heard the saying, “9 women can’t make a baby in 1 month?” With this principle, you can scale the speed of delivery for your application by breaking it into smaller, more maintainable units of work.\n\nOpen/Closed Principle\n\nOpen for extension, closed for modification.\n\nThis simply states that you should be able to extend what a class does without modifying its core behavior. It’s open for extension, but closed for modification. Again, let’s take an example. You might have a class that represents a user in the system, and you’ve determined that fundamentally a user consists of a login, a password, and an email address. Later, you find out some users can have contact information. Eventually you learn that some users are administrators and have additional information such as which parts of the application they can manage.\n\nA class that violates these principles would require you to have a bloated class with lots of flags indicating what/who the user is. Every time you had to change or add something, you’d need to change that original class.\n\nA more stable approach would be to put your fundamentals into a base class. Now you can have a ContactUser : BaseUser and extend the user to have contact information. Then you can have a AdminUser : BaseUser or perhaps an AdminUser : ContactUser. You are extending, not modifying the base class. I mentioned generics earlier: this is a perfect example where generics can be used to define some base functionality (for example, in your data access layer, opening and closing the connections) while your extensions strongly type the behavior for a specific class.\n\nThe Liskov Substitution Principle\n\nDerived classes must be able to substitute for their base classes.\n\nWhy is this so important? Think about the example above with different contacts. If I have a function that validates a login, then I should be able to simply check the username and the password of the class. To do this, I don’t need to know if the class is a base user, a contact user, or an admin user. All of these classes extend base user, so I will code my login against base user. The contact user behaves exactly as the base user.\n\nWhat if I decide to write another class that displays user information? I make it UserInfo<T> but then break the principle by doing this:\n\n    if (typeof(T) == typeof(BaseUser) { return ((BaseUser)T).Email; }\n    else if (typeof(T) == typeof(ContactUser) { return ((ContactUser)T).Phone; }\n    else { throw new Exception(\"Could not determine the type.\"); }\n\nWhat just happened? It might work on the surface, but suddenly I have a very difficult class. This class now needs to understand every possible derived type of T in order to do its job. How can the application possibly scale if I have to keep coming back to the same place to make changes and keep up to date? I might hire a new developer who goes off and builds a AccountingUser…and then blows up the system because they did not update UserInfo.\n\nA better way would be to override the ToString method. Each class can implement its own version of what “display information” is. Any other object can handle BaseUser (not caring what the derived type is) and display useful information simply by invoking ToString().\n\nNow things are starting to get interesting because we’re going to tackle one of the most popular “buzz words” going around today: dependency injection / inversion of control…stay tuned, because we have two more principles to cover!\n\n[http://csharperimage.jeremylikness.com/2009/05/solid-and-dry.html]",
    "CreateDate": "2009-08-11T11:00:49.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-11T11:00:49.0000000",
    "DocumentId": "2076072179",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5899",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C#: the differences between readonly and const; MSDN; l-value",
    "SortOrdinal": null,
    "ItemChar": "The readonly keyword is different from the  const keyword. A const field can only be initialized at the declaration of the field. A readonly field can be initialized either at the declaration or in a constructor. Therefore, readonly fields can have different values depending on the constructor used. Also, while a const field is a compile-time constant, the readonly field can be used for runtime constants…\n\n[http://msdn.microsoft.com/en-us/library/acdd6hb7(VS.71).aspx]\n\nAttempting to assign a value to a readonly member will cause the compiler error, “The left-hand side of an assignment must be an l-value.”\n\n…\n\nSome languages use the idea of lvalues and rvalues. Lvalues are values that have addresses, meaning they are variables or dereferenced references to a certain memory location. Rvalues are non-lvalues—a term only used to distinguish from lvalues. In C, the term lvalue originally meant something that could be assigned to (coming from left-value, indicating it was on the left side of the assignment operator), but since ‘const’ was added to the language, this now is termed a ‘modifiable lvalue’.\n\nThe lvalue expression designates (refers to) an object. A non-modifiable lvalue is addressable, but not assignable. A modifiable lvalue allows the designated object to be changed as well as examined. An rvalue is any expression that is not an lvalue. It refers to a data value which is “immediate value” (look below) and consequently not addressable.\n\nThe notion of lvalues and rvalues was introduced by CPL. [Combined Programming Language]\n\n[http://en.wikipedia.org/wiki/Value_(computer_science)]",
    "ItemText": null,
    "CreateDate": "2009-08-12T20:23:09.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-12T20:23:09.0000000",
    "DocumentId": "2076072180",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5900",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET: “Don’t run production ASP.NET Applications with debug=\"true\" enabled”; Scott Guthrie",
    "SortOrdinal": null,
    "ItemChar": "One of the things you want to avoid when deploying an ASP.NET application into production is to accidentally (or deliberately) leave the <compilation debug=\"true\"/> switch on within the application’s web.config file.\n\nDoing so causes a number of non-optimal things to happen including:\n\n1) The compilation of ASP.NET pages takes longer (since some batch optimizations are disabled)\n\n2) Code can execute slower (since some additional debug paths are enabled)\n\n3) Much more memory is used within the application at runtime\n\n4) Scripts and images downloaded from the WebResources.axd handler are not cached\n\n[http://weblogs.asp.net/scottgu/archive/2006/04/11/Don_1920_t-run-\n    production-ASP.NET-Applications-with-debug_3D001D20_true_1D20_-\n    enabled.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-14T19:32:39.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-14T19:32:39.0000000",
    "DocumentId": "2076072181",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5901",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET: “Tip/Trick: Using Server Side Comments with ASP.NET 2.0”; Scott Guthrie",
    "SortOrdinal": null,
    "ItemChar": "ASP.NET supports a little known feature called “server-side comments” that you can use to completely disable code/controls/html in a page.  Server-side comments in ASP.NET are delimited using a <%-- --%> syntax.\n\n[http://weblogs.asp.net/scottgu/archive/2006/07/09/\n    Tip_2F00_Trick_3A00_-Using-Server-Side-Comments-with-ASP.NET-2.0-.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-14T19:34:23.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-14T19:34:23.0000000",
    "DocumentId": "2076072182",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5902",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CNN.com: “English gets millionth word on Wednesday, site says”; The Immense Size of the English Language",
    "SortOrdinal": null,
    "ItemChar": "English contains more words than any other language on the planet and added its millionth word early Wednesday, according to the Global Language Monitor, a Web site that uses a math formula to estimate how often words are created.\n\n[http://www.cnn.com/2009/TECH/06/10/million.words/index.html]",
    "ItemText": null,
    "CreateDate": "2009-08-14T19:37:08.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-14T19:37:08.0000000",
    "DocumentId": "2076072183",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5903",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C#: Controlling the default value of an enum; MSDN",
    "SortOrdinal": null,
    "ItemChar": "The default underlying type of the enumeration elements is int. By default, the first enumerator has the value 0, and the value of each successive enumerator is increased by 1.\n\n…\n\nEnumerators can have initializers to override the default values. For example:\n\n    enum Days {Sat=1, Sun, Mon, Tue, Wed, Thu, Fri};\n\nIn this enumeration, the sequence of elements is forced to start from 1 instead of 0.\n\nThe default value of an enum E is the value produced by the expression (E)0.\n\n…\n\nIn this example, the base-type option is used to declare an enum whose members are of the type long. Notice that even though the underlying type of the enumeration is long, the enumeration members must still be explicitly converted to type long using a cast.\n\n// keyword_enum2.cs\n// Using long enumerators\nusing System;\npublic class EnumTest \n{\n    enum Range :long {Max = 2147483648L, Min = 255L};\n    public static void Main() \n    {\n       long x = (long) Range.Max;\n       long y = (long) Range.Min;\n       Console.WriteLine(\"Max = {0}\", x);\n       Console.WriteLine(\"Min = {0}\", y);\n    } \n}\n\n[http://msdn.microsoft.com/en-us/library/sbbt4032(VS.71).aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-14T19:45:34.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-14T19:45:34.0000000",
    "DocumentId": "2076072184",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5904",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Functional Programming: Complex adaptive system",
    "SortOrdinal": null,
    "ItemChar": "Complex adaptive systems are special cases of complex systems. They are complex in that they are diverse and made up of multiple interconnected elements (and so a part of network science) and adaptive in that they have the capacity to change and learn from experience. The term complex adaptive systems (CAS) was coined at the interdisciplinary Santa Fe Institute (SFI), by John H. Holland, Murray Gell-Mann and others.\n\n…\n\nThe term complex adaptive systems, or complexity science, is often used to describe the loosely organized academic field that has grown up around the study of such systems. Complexity science is not a single theory— it encompasses more than one theoretical framework and is highly interdisciplinary, seeking the answers to some fundamental questions about living, adaptable, changeable systems.\n\nExamples of complex adaptive systems include the stock market, social insect and ant colonies, the biosphere and the ecosystem, the brain and the immune system, the cell and the developing embryo, manufacturing businesses and any human social group-based endeavour in a cultural and social system such as political parties or communities. There are close relationships between the field of CAS and artificial life. In both areas the principles emergence and self-organization are very important.\n\n[http://en.wikipedia.org/wiki/Complex_adaptive_system]",
    "ItemText": null,
    "CreateDate": "2009-08-17T14:16:05.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T14:16:05.0000000",
    "DocumentId": "2076072185",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5905",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The Thunder, Perfect Mind",
    "SortOrdinal": null,
    "ItemChar": "The Thunder, Perfect Mind is a poem discovered among the Gnostic manuscripts at Nag Hammadi in 1945.\n\nFor I am knowledge and ignorance.\nI am shame and boldness.\nI am shameless; I am ashamed.\nI am strength and I am fear.\nI am war and peace.\n—The Thunder, Perfect Mind [1]\nFor it is I who am acquaintance: and lack of acquaintance.\nIt is I who am reticence: and frankness.\nI am shameless: I am ashamed.\nI am strong: and I am afraid.\nIt is I who am war: and peace.\n—The Thunder - Perfect Intellect, Lines 26-31 from another translation. [2]\n\nThunder Perfect Mind (the title is, more accurately, The Thunder - Perfect Intellect), takes the form of an extended, riddling monologue, in which an immanent saviour speaks a series of paradoxical statements concerning the divine feminine nature. These paradoxical utterances echo Greek identity riddles, a common poetic form in the Mediterranean. There are some translations to the right from the same section of the poem. Line numbering is different in different translations.\n\n[http://www.gnosis.org/naghamm/thunder.html]\n[http://en.wikipedia.org/wiki/The_Thunder,_Perfect_Mind]",
    "ItemText": null,
    "CreateDate": "2009-08-17T14:18:40.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T14:18:40.0000000",
    "DocumentId": "2076072186",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5906",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Link to Meroitic Script Image",
    "SortOrdinal": null,
    "ItemChar": "[http://en.wikipedia.org/wiki/File:Meroitic.png]",
    "ItemText": null,
    "CreateDate": "2009-08-17T14:20:11.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T14:20:11.0000000",
    "DocumentId": "2076072187",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5907",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The Standing Army in Ancient Egypt",
    "SortOrdinal": null,
    "ItemChar": "The invasion and overthrow of Egypt by the Hyksos (c.1660-1550 BC) was due to superior military techniques and strategies. The Hyksos were already masters of mobile warfare with the advent of the horse drawn chariot, a formidable fighting machine, which the Egyptians had no answer to until they introduced their own version of the war chariot at the beginning of the 18th dynasty (c.1550-1295 BC). ...The Egyptians were not the inventors of the war chariot - this honour can be attributed to the Syrians. In fact, the first time the Egyptians saw a chariot was during the war against the Hyksos (c.1650-1550BC). The first known inscription depicting an Egyptian chariot is to be found on a scarab belonging to Thutmosis I c.1524-1518 BC pursuing a foe.\n\n[http://www.egyptologyonline.com/the_army_in_ancient_egypt.htm]",
    "ItemText": null,
    "CreateDate": "2009-08-17T14:21:22.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T14:21:22.0000000",
    "DocumentId": "2076072188",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5908",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Adansonia; Manna from heaven?",
    "SortOrdinal": null,
    "ItemChar": "The leaves are commonly used as a leaf vegetable throughout the area of mainland African distribution, including Malawi, Zimbabwe, and the Sahel. They are eaten both fresh and as a dry powder. In Nigeria, the leaves are locally known as kuka, and are used to make kuka soup. The fruit is nutritious possibly having more vitamin C than oranges and exceeding the calcium content of cow's milk. Also known as \"sour gourd\" or \"monkey's bread\", the dry fruit pulp separated from seeds and fibers is eaten directly or mixed into porridge or milk. In Malawi, the fruit pulp is used to make a nutrient-rich juice…\n\n[http://en.wikipedia.org/wiki/Adansonia]",
    "ItemText": null,
    "CreateDate": "2009-08-17T14:22:51.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T14:22:51.0000000",
    "DocumentId": "2076072189",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5909",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "The ANU People",
    "SortOrdinal": null,
    "ItemChar": "The \"Tera-neter\" tile is predynastic being found by British Egyptologist W.M. Flinders Petrie (1853-1942) in the early temple at Abydos underneath the dynastic temple. The figure is on a green glazed faience. Petrie, famously known as \"The Father of Pre-history\". Petrie, excavations at Nagada and Ballas in Upper Egypt nearly 100 years ago unearth nearly 2200 ancient graves. He wrote over a thousand books, articles and reviews reporting on his excavations and his finds.\n\n[http://destee.com/forums/archive/index.php/t-42129.html]",
    "ItemText": null,
    "CreateDate": "2009-08-17T14:24:35.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T14:24:35.0000000",
    "DocumentId": "2076072190",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5910",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Semna (Nubia)",
    "SortOrdinal": null,
    "ItemChar": "Semna was a fortified town established in the reign of Senusret I (1965-1920 BC) on the west bank of the Nile at the southern end of a series of fortresses founded during the 12th Dynasty (1985-1795 BC) in the second-cataract area of Lower Nubia. The Semna gorge, at the southern edge of ancient Egypt, was the narrowest part of the Nile valley. It was here, at this strategic location, that the 12th Dynasty pharaohs built a cluster of four mud-brick fortresses: Semna, Kumma, Semna South and Uronarti (all covered by the waters of Lake Nasser since the completion of the Aswan High Dam in 1971). The rectangular Kumma fortress, the L-shaped Semna fortress (on the opposite bank) and the smaller square fortress of Semna South were each investigated by the American archaeologist George Reisner in 1924 and 1928. Semna and Kumma also included the remains of temples, houses and cemeteries dating to the New Kingdom (1550-1069 BC), which would have been roughly contemporary with such lower Nubian towns as Amara West and Sesebisudla, when the second cataract region had become part of an Egyptian 'empire', rather than simply a frontier zone.\n\n[http://en.wikipedia.org/wiki/Semna]",
    "ItemText": null,
    "CreateDate": "2009-08-17T14:25:44.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T14:25:44.0000000",
    "DocumentId": "2076072191",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5911",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Codex Sinaiticus",
    "SortOrdinal": null,
    "ItemChar": "Codex Sinaiticus is one of the most important books in the world. Handwritten well over 1600 years ago, the manuscript contains the Christian Bible in Greek, including the oldest complete copy of the New Testament. Its heavily corrected text is of outstanding importance for the history of the Bible and the manuscript – the oldest substantial book to survive Antiquity – is of supreme importance for the history of the book\n\n[http://www.codexsinaiticus.org/en/]",
    "ItemText": null,
    "CreateDate": "2009-08-17T15:01:50.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T15:01:50.0000000",
    "DocumentId": "2076072192",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5912",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“An explanation of the new /C and /I Switches that are available to use with Chkdsk.exe”",
    "SortOrdinal": null,
    "ItemChar": "Chkdsk.exe is the command-line interface for the CHKDSK program, which verifies the logical integrity of a file system. If CHKDSK encounters logical inconsistencies in file system data, CHKDSK performs actions that repair the file system data (assuming that the data is not in read-only mode).\n\nThe /C and /I switches are valid only for a drive that is formatted in the NTFS file system. Each of the new switches directs the CHKDSK routine to bypass certain actions that CHKDSK would otherwise take to validate the integrity of NTFS data structures.\n\n…\n\nIntroducing the /C and /I switches\nThe /C switch\nThe /C switch directs CHKDSK to skip the checks that detect cycles in the directory structure. Cycles are a very rare form of corruption in which a subdirectory has itself for an \"ancestor.\"\n\nUsing the /C switch can speed up CHKDSK by about 1 to 2 percent, but using this switch can also leave directory \"loops\" on an NTFS volume. Such loops might be inaccessible from the rest of the directory tree, and some files might be orphaned in the sense that Win32 programs, including backup programs, cannot see the files.\nThe /I switch\nThe /I switch directs CHKDSK to skip the checks that compare directory entries to their corresponding file record segments. With this switch in effect, directory entries are still checked for internal consistency, but the directory entries are not necessarily consistent with the data that is stored in the corresponding file record segments.\n\nHow much time you will save by using the /I switch is difficult to predict. Typically, the /I switch lowers CHKDSK times by 50 to 70 percent, depending on factors such as the ratio of files to directories and the speed of disk I/O relative to CPU speed.\n\nUsing the /I switch has these limitations:\n\n    * You may have directory entries that refer to incorrect file record segments. In this case, any program that tries to use such an entry will encounter errors.\n    * You may have file record segments that no directory entry references (another way that orphaned files occur). A file that is actually intact, as represented by the file record segment, may be invisible to all Win32 programs, including backup programs.\n\nThe value of the /C and /I switches\nWhen disk corruption is detected on a volume, there are three basic options for response.\n\nThe first option is to take no action. On a mission-critical server that is expected to be online 24 hours a day, this is often the choice of necessity. The drawback is that relatively minor corruption can snowball into major corruption. Therefore, consider this option only if keeping the server online is more important than guarding the integrity of the data that is stored on the corrupted volume. All data on the corrupted volume should be considered \"at risk\" until you run CHKDSK. The second option is to run a full CHKDSK operation to repair all file system data and restore all of the user data that can be recovered by means of an automated process. However, running a full CHKDSK operation can cost you several hours of downtime for a mission-critical server at an inopportune time. Your third option is to run an abbreviated CHKDSK operation by using one or both of the /C and /I switches, to repair the kinds of corruption that can snowball into bigger problems in much less time than a full CHKDSK requires.\n\nNote however that running an abbreviated CHKDSK does not repair all of the corruption that might exist. You still need to run a full CHKDSK at some future time to guarantee that all recoverable data has in fact been recovered.\n\nNote also that NTFS does not guarantee the integrity of user data after an instance of disk corruption, even if you immediately run a full CHKDSK operation. There might be files that CHKDSK cannot recover, and files that CHKDSK does recover might still be internally corrupted. It remains vitally important that you protect mission-critical data by performing periodic backups or by using some other robust method of data recovery.\n\n[http://support.microsoft.com/?id=314835]",
    "ItemText": null,
    "CreateDate": "2009-08-17T16:48:46.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T16:48:46.0000000",
    "DocumentId": "2076072193",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5913",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005: Summary of DBCC Commands; Emil Chang",
    "SortOrdinal": null,
    "ItemChar": "DBCC stands for database consistency checker. We use these commands to check the consistency of the databases.\nExample, maintenance, validation task and status checks.\n\nDBCC CHECKALLOC - Check consistency of disk allocation.\nDBCC CHECKCATALOG - Check catalog consistency\nDBCC CHECKCONSTRAINTS - Check integrity of table constraints.\nDBCC CHECKDB - Check allocation, and integrity of all objects.\nDBCC CHECKFILEGROUP - Check all tables and indexed views in a filegroup.\nDBCC CHECKIDENT - Check identity value for a table.\nDBCC CHECKTABLE - Check integrity of a table or indexed view.\nDBCC CLEANTABLE - Reclaim space from dropped variable-length columns.\nDBCC dllname - Unload a DLL from memory.\nDBCC DROPCLEANBUFFERS - Remove all clean buffers from the buffer pool.\nDBCC HELP - Help for DBCC commands.\nDBCC INPUTBUFFER - Display last statement sent from a client to a database instance.\nDBCC OPENTRAN - Display information about recent transactions.\nDBCC OUTPUTBUFFER - Display last statement sent from a client to a database instance.\nDBCC PROCCACHE - Display information about the procedure cache\nDBCC SHOW_STATISTICS - Display the current distribution statistics\nDBCC SHRINKDATABASE - Shrink the size of the database data and log files.\nDBCC SHRINKFILE - Shrink or empty a database data or log file.\nDBCC SQLPERF - Display transaction-log space statistics. Reset wait and latch statistics.\nDBCC TRACE - Enable or Disable trace flags\nDBCC UPDATEUSAGE - Report and correct page and row count inaccuracies in catalog views\nDBCC USEROPTIONS - Return the SET options currently active\nDBCC deprecated commands \n\n[http://sqltutorials.blogspot.com/2008/07/list-of-dbcc-in-sql-server-2005.html]",
    "ItemText": null,
    "CreateDate": "2009-08-17T16:53:39.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T16:53:39.0000000",
    "DocumentId": "2076072194",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5914",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "NetBeans for PHP: “Defining a variable type in comment”; Petr Pisl",
    "SortOrdinal": null,
    "ItemChar": "The comment has to be /* @var $variable type */ . If the comment is written in the right form, then the var tag has bold font.\n\nYou can use this helper, when NetBeans is not able to recognize the type of the variable. On the picture below you can see that NetBeans recognizes that the variable $media in the echo statement is Book type. But then another object is assigned to the $media variable through the getLastMovie() function. This function defines the return type Movie, so from this line NetBeans knows that $media variable contains an object of Movie type.\n\n[http://blogs.sun.com/netbeansphp/entry/defining_variable_type_in_a]",
    "ItemText": null,
    "CreateDate": "2009-08-17T16:55:44.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T16:55:44.0000000",
    "DocumentId": "2076072195",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5915",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PowerShell: “Getting Credentials From The Command Line”; Jeffrey Snover; Get-Credential",
    "SortOrdinal": null,
    "ItemChar": "When you use the Get-Credential cmdlet, you get a GUI dialog box to enter the credentials.  This is the \"Common Criteria Certified\" way of handling credentials.  It is also a pain in the butt at times.  If you are an admin, you can alter this and request credentials via the command line as follows:\n\nPS> $key = \"HKLM:\\SOFTWARE\\Microsoft\\PowerShell\\1\\ShellIds\"\nPS> Set-ItemProperty $key ConsolePrompting True\nPS> Get-Credential\n\ncmdlet Get-Credential at command pipeline position 1\nSupply values for the following parameters:\nCredential\nUser: ntdev\\jsnover\nPassword for user ntdev\\jsnover: **************\n\n\nUserName                                       Password\n--------                                               --------\nntdev\\jsnover                                  System.Security.SecureString\n\n[http://blogs.msdn.com/powershell/archive/2008/06/20/\n    getting-credentials-from-the-command-line.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-17T17:07:20.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T17:07:20.0000000",
    "DocumentId": "2076072196",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5916",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WSS 3.0: “WSS 3.0 Web Service Reference Guide”; Glen Cooper; CJ",
    "SortOrdinal": null,
    "ItemChar": "Admin Web Service\nhttp://<AdminSite>/_vti_adm/Admin.asmx\nProvides methods for managing a deployment of Microsoft Windows SharePoint Services, such as for creating or deleting site collections.\nCreateSite\nDeleteSite\nGetLanguages\nRefreshConfigCache\n\nAlerts\nhttp://<Site>/_vti_bin/Alerts.asmx\nProvides methods for working with alerts for list items in a SharePoint site.\nDeleteAlerts\nGetAlerts\n\nAuthentication\nhttp://<Site>/_vti_bin/Authentication.asmx\nLogin\nMode\n\nCopy\nhttp://<Site>/_vti_bin/Authentication.asmx\nProvides methods for copying files to or from or within a SharePoint site.\nCopyIntoItems\nCopyIntoItemsLocal\nGetItem\n\nDocument Workspace\nhttp://<Site>/_vti_bin/Dws.asmx\nExposes methods for managing Document Workspace sites and the data they contain.\nCanCreateDwsUrl\nCreateDws\nCreateFolder\nDeleteDws\nDeleteFolder\nFindDwsDoc\nGetDwsData\nGetDwsMetaData\nRemoveDwsUser\nRenameDws\nUpdateDwsData\n\nForms\nhttp://<Site>/_vti_bin/Forms.asmx\nProvides methods for returning forms that are used in the user interface when working with the contents of a list.\nGetForm\nGetFormCollection\n\nImaging\nhttp://<Site>/_vti_bin/Imaging.asmx\nProvides methods that enable you to create and manage picture libraries.\nCheckSubwebAndList\nCreateNewFolder\nDelete\nDownload\nEdit\nGetItemsByIds\nGetItemsXMLData\nGetListItems\nListPictureLibrary\nRename\nUpload\n\nList Data Retrieval (StsAdapter)\nhttp://<Site>/_vti_bin/DspSts.asmx\nRepresents the adapter service used to perform queries against sites and lists in Microsoft Windows SharePoint Services.\nQuery\n\nLists\nhttp://<Site>/_vti_bin/Lists.asmx\nProvides methods for working with lists and list data.\nAddAttachment\nAddDiscussionBoardItem\nAddList\nAddListFromFeature\nApplyContentTypeToList\nCheckInFile\nCheckOutFile\nCreateContentType\nDeleteAttachment\nDeleteContentType\nDeleteContentTypeXmlDocument\nDeleteList\nGetAttachmentCollection\nGetList\nGetListAndView\nGetListCollection\nGetListContentType\nGetListContentTypes\nGetListItemChanges\nGetListItemChangesSinceToken\nGetListItems\nGetVersionCollection\nUndoCheckOut\nUpdateContentType\nUpdateContentTypesXmlDocument\nUpdateContentTypeXmlDocument\nUpdateList\nUpdateListItems\n\nMeetings\nhttp://<Site>/_vti_bin/Meetings.asmx\nEnables you to create and manage Meeting Workspace sites.\nAddMeeting\nAddMeetingFromICal\nCreateWorkspace\nDeleteWorkspace\nGetMeetingsInformation\nGetMeetingWorkspaces\nRemoveMeeting\nRestoreMeeting\nSetAttendeeResponse\nSetWorkspaceTitle\nUpdateMeeting\nUpdateMeetingFromICal\n\nPeople\nhttp://<Site>/_vti_bin/People.asmx\nResolvePrincipals\nSearchPrincipals\n\nPermissions\nhttp://<Site>/_vti_bin/Permissions.asmx\nProvides methods for working with the permissions for a site or list.\nAddPermission\nAddPermissionCollection\nGetPermissionCollection\nRemovePermission\nRemovePermissionCollection\nUpdatePermission\n\nSite Data\nhttp://<Site>/_vti_bin/SiteData.asmx\nProvides methods that return metadata or list data from sites or lists in Microsoft Windows SharePoint Services.\nEnumerateFolder\nGetAttachments\nGetChanges\nGetContent\nGetList\nGetListCollection\nGetListItems\nGetSite\nGetSiteAndWeb\nGetSiteUrl\nGetURLSegments\nGetWeb\n\nSites\nhttp://<Site>/_vti_bin/Sites.asmx\nProvides a method for returning information about the collection of site templates on the virtual server.\nExportWeb\nGetSiteTemplates\nGetUpdatedFormDigest\nImportWeb\n\nSearch\nhttp://<Site>/_vti_bin/spsearch.asmx\nThe QueryService class is the entry point for calling the Search in Microsoft Windows SharePoint Services Query web service.\nGetPortalSearchInfo (MOSS only)\nGetSearchMetadata (MOSS only)\nQuery\nQueryEx\nRecordClick (MOSS only)\nRegistration\nStatus\n\nUsers and Groups\nhttp://<Site>/_vti_bin/usergroup.asmx\nProvides methods for working with users, role definitions, and groups.\nAddGroup\nAddGroupToRole\nAddRole\nAddRoleDef\nAddUserCollectionToGroup\nAddUserCollectionToRole\nAddUserToGroup\nAddUserToRole\nGetAllUserCollectionFromWeb\nGetGroupCollection\nGetGroupCollectionFromRole\nGetGroupCollectionFromSite\nGetGroupCollectionFromUser\nGetGroupCollectionFromWeb\nGetGroupInfo\nGetRoleCollection\nGetRoleCollectionFromGroup\nGetRoleCollectionFromUser\nGetRoleCollectionFromWeb\nGetRoleInfo\nGetRolesAndPermissionsForCurrentUser\nGetRolesAndPermissionsForSite\nGetUserCollection\nGetUserCollectionFromGroup\nGetUserCollectionFromRole\nGetUserCollectionFromSite\nGetUserCollectionFromWeb\nGetUserInfo\nGetUserLoginFromEmail\nRemoveGroup\nRemoveGroupFromRole\nRemoveRole\nRemoveUserCollectionFromGroup\nRemoveUserCollectionFromRole\nRemoveUserCollectionFromSite\nRemoveUserFromGroup\nRemoveUserFromRole\nRemoveUserFromSite\nRemoveUserFromWeb\nUpdateGroupInfo\nUpdateRoleDefInfo\nUpdateRoleInfo\nUpdateUserInfo\n\nVersions\nhttp://<Site>/_vti_bin/Versions.asmx\nProvides methods for working with file versions.\nDeleteAllVersions\nDeleteVersion\nGetVersions\nRestoreVersion\n\nViews\nhttp://<Site>/_vti_bin/Views.asmx\nProvides methods for working with views of lists.\nAddView\nDeleteView\nGetView\nGetViewCollection\nGetViewHtml\nUpdateView\nUpdateViewHtml\nUpdateViewHtml2\n\nWeb Part Pages\nhttp://<Site>/_vti_bin/WebPartPages.asmx\nProvides methods for working with Web Parts.\nAddWebPart\nAddWebPartToZone\nAssociateWorkflowMarkup\nConvertWebPartFormat\nDeleteWebPart\nExecuteProxyUpdates\nFetchLegalWorkflowActions\nGetAssemblyMetaData\nGetBindingResourceData\nGetCustomControlList\nGetDataFromDataSourceControl\nGetFormCapabilityFromDataSourceControl\nGetSafeAssemblyInfo\nGetWebPart\nGetWebPart2\nGetWebPartCrossPageCompatibility\nGetWebPartPage\nGetWebPartPageConnectionInfo\nGetWebPartPageDocument\nGetWebPartProperties\nGetWebPartProperties2\nGetXmlDataFromDataSource\nRemoveWorkflowAssociation\nRenderWebPartForEdit\nSaveWebPart\nSaveWebPart2\nValidateWorkflowMarkupAndCreateSupportObjects\n\nWebs\nhttp://<Site>/_vti_bin/Webs.asmx\nProvides methods for working with sites and subsites.\nCreateContentType\nCustomizeCss\nDeleteContentType\nGetActivatedFeatures\nGetAllSubWebCollection\nGetColumns\nGetContentType\nGetContentTypes\nGetCustomizedPageStatus\nGetListTemplates\nGetWeb\nGetWebCollection\nRemoveContentTypeXmlDocument\nRevertAllFileContentStreams\nRevertCss\nRevertFileContentStream\nUpdateColumns\nUpdateContentType\nUpdateContentTypeXmlDocument\nWebUrlFromPageUrl\n\n[http://claytonj.wordpress.com/2007/02/19/wss-30-web-service-reference-guide/]\n[http://glenc.wordpress.com/2006/11/24/wss-30-web-service-quick-reference/]",
    "ItemText": null,
    "CreateDate": "2009-08-17T17:10:01.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T17:10:01.0000000",
    "DocumentId": "2076072197",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5917",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WSS 3.0:  MOSS 2007 and WSS 2007 Server Setup; The call to SearchServiceInstance.Provision (server 'YourServerName') failed.; Sahil Malik",
    "SortOrdinal": null,
    "ItemChar": "So I turn on diagnostic logging (which was off by default), on the same page, and here is the rather uninformative error I found deep inside sharepoint logs.\n\nThe call to SearchServiceInstance.Provision (server 'YourServerName') failed. Setting back to previous status 'Disabled'. System.ComponentModel.Win32Exception: OSearch ('YourSearchAcct')     at Microsoft.SharePoint.Win32.SPAdvApi32.ChangeServiceConfiguration(String strServiceName, String strAccountName, SecureString sstrPassword, IdentityType identityType, Boolean bDontRestartService)     at Microsoft.SharePoint.Administration.SPProvisioningAssistant.ProvisionProcessIdentity(String strUserName, SecureString secStrPassword, IdentityType identityType, Boolean isAdminProcess, Boolean isWindowsService, String strServiceName, Boolean dontRestartService)     at Microsoft.SharePoint.Administration.SPProcessIdentity.ProvisionInternal(SecureString sstrPassword, Boolean isRunningInTimer)     at Microsoft.... \n\nI swear - what the hell is the above error message useful for? Not much if you'd ask me. And no I didn't truncate the above error message - Thats about all that got logged. :-/\n\nSo what is the solution?\n\nMake sure that you enter the account name for crawling and searching as \"Domain\\accnt name\" EVEN IF they are local accounts. Then you won't get the above error.\n\n[http://blah.winsmarts.com/2006-10-MOSS_2007_and_WSS_2007_-\n    _Server_setup_tip.aspx?postID=113]",
    "ItemText": null,
    "CreateDate": "2009-08-17T17:13:45.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T17:13:45.0000000",
    "DocumentId": "2076072198",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5918",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Blender 3D: “Getting Blender to find Python in Windows XP”",
    "SortOrdinal": null,
    "ItemChar": "If this is what appears on the console when you start Blender:\n\nCompiled with Python version 2.5.\n'import site' failed; use -v for traceback\nChecking for installed Python... No installed Python found.\n\n\nThis means Blender could not find Python on your box. Either Python is not installed or it is the wrong version. Blender needs Python to run scripts. Blender 2.44 needs Python 2.5 and Blender 2.43 needs Python 2.4.\n\nTo resolve this issue you have to tell the system and blender how to find the necessary Python files to work.\n\n- download Blender from blender.org (yah, duh, eh?)\n\n- download the associated Python for Windows from python.org ( for example you need Python 2.4 for Blender 2.43 but you need Python 2.51 for Blender 2.44; the console tells you which version of Python Blender needs when it starts by saying\"Compiled with Python version ...\")\n\n- install Python (actually I am not sure the install order matters at all but hey, it makes more sense to me to have Python setup before trying to get Blender to run properly)\n\n- once python is installed, right click on you \"My Computer\" icon on your desktop and bring up \"Properties\" select the \"Advanced\" tab and then the \"Environment Variables\" button at the bottom left of that tab\n\n- you get a window with two panes, \"User Variables for <yourusername>\" for the current user and \"System Variables\" for all users. Under the \"System Variables\" window there is a \"New\" button. Click it to add a new variable called \"PYTHONPATH\". If you do not have administrator privileges you will not be able to add the new System Variable, so at least add it to your \"User Variables\" section by clicking on the new button underneath the \"User Variables for...\" window.\n\n- In the editing dialogue that pops up, the new variable name, as I said, is \"PYTHONPATH\" and the variable value is the path to your Python install. If you selected the default \"C:\\Python25\\\" directory for Python for Windows version 2.51, then enter the following path information \"C:\\Python25\\;C:\\Python25\\DLLs\\;C:\\Python25\\Lib\\;C:\\Python25\\Lib\\lib-tk;\"\n\n-Click OK to exit the variable editing dialogue, click OK to leave the Environment Variables window and click OK once more to leave the System Properties dialogue, thereby saving all your changes.\n\n- you may have to reboot, but probably not.\n\n- install Blender\n\n- Run Blender\n\n- If you are still getting that console output saying that Blender can't find a Python install instead of Blender saying \"Checking for installed Python...got It\", then with Blender running, bring up the Info window (See this page http://www.blender.org/tutorials-help/tutorials/tutorial-folder/the-blender-windows/) which you get at by dragging down the bottom edge of what looks like the menu at the top of the screen. Click on the \"File Paths\" button and in the Python entry box, type in \"C:\\Python25\\Lib\". Drag the bottom edge of the Info window back up and then in that upper menu, click on \"File\" then \"Save Default Settings\".\n\n- you should now quit and restart Blender.\n\n- if that still doesn't work, try rebooting the system so that the Environment variables get properly initialized.\n\nI hope that helps.\n\nPeter\n\n[http://www.blender.org/forum/viewtopic.php?t=11938]",
    "ItemText": null,
    "CreateDate": "2009-08-17T17:16:08.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T17:16:08.0000000",
    "DocumentId": "2076072199",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5919",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP: readfile() Problem with content-disposition in FireFox",
    "SortOrdinal": null,
    "ItemChar": "I saw in previous contributed notes that in content-disposition the file is not a quoted-string, there is no problem if the filename have no spaces but if it has in IE it works but in Firefox not. The RFC 2616 puts as an example this: Content-Disposition: attachment; filename=\"fname.ext\" You can see http://www.faqs.org/rfcs/rfc2616.html section \"19.5.1 Content-Disposition\" for more details. The correct header then is this:\n\n    header(\"Content-Disposition: attachment; filename=\\\"$filename\\\"\");\n\n[http://us.php.net/readfile]",
    "ItemText": null,
    "CreateDate": "2009-08-17T17:18:57.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T17:18:57.0000000",
    "DocumentId": "2076072200",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5920",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“yield (C# Reference)”; MSDN",
    "SortOrdinal": null,
    "ItemChar": "Used in an  iterator block to provide a value to the enumerator object or to signal the end of iteration. It takes one of the following forms:\n\n    yield return <expression>;\n\n    yield break;\n\nThe yield statement can only appear inside an iterator block, which might be used as a body of a method, operator, or accessor. The body of such methods, operators, or accessors is controlled by the following restrictions:\n\n    * Unsafe blocks are not allowed.\n    * Parameters to the method, operator, or accessor cannot be ref or out.\n\nA yield statement cannot appear in an anonymous method.\n\n…\n\nStarting from .NET 2.0 you also use System.Collections.Generic.IEnumerable<T> as return type of iterator block.\n\n\nA yield statement can not be used in body of finally block.\n\n\nUsing  try/finally blocks with yield return statement inside them is unsafe if iteration performed using MoveNext/Current methods. Execution of statements inside finally block is not guaranteed. They will be executed only after all values before block will be iterated and next one requested OR IDisposable.Dispose method called on IEnumerator. Finally statements will not be executed during garbage collection as compiler generated iterator class have no finalizer. Using with foreach is safe as compiler will generate call to Dispose.\n\n[http://msdn.microsoft.com/en-us/library/9k7k7cf0(VS.80).aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-17T22:03:18.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T22:03:18.0000000",
    "DocumentId": "2076072201",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5921",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C#: Flippant Remarks about the yield Statement",
    "SortOrdinal": null,
    "ItemChar": "The yield statement allows us to populate an instance implementing IEnumerable. Modifying the MSDN code sample for yield, this is an example without using yield:\n\n    public static List<int> Power(int number, int exponent)\n    {\n        int counter = 0;\n        int result = 1;\n        var list = new List<int>();\n        while(counter++ < exponent)\n        {\n            result = result * number;\n            list.Add(result);\n        }\n        return list;\n    }\n\nWithout yield we are forced to choose a class implementing IEnumerable. In the example above we must use List<int>. Now the example using yield:\n\n    public static IEnumerable<int> Power(int number, int exponent)\n    {\n        int counter = 0;\n        int result = 1;\n        while(counter++ < exponent)\n        {\n            result = result * number;\n            yield return result;\n        }\n    }\n\nThe opinion here is that yield is harder to understand when the purpose of IEnumerable is not understood. One reminder is that IEnumerable requires sequential access through, say, the foreach loop. The IEnumerable interface does not define a member for random-access.\n\nMore information: “Using C# Yield for Readability and Performance”\n\n    http://www.ytechie.com/2009/02/\n        using-c-yield-for-readability-and-performance.html\n\n",
    "ItemText": null,
    "CreateDate": "2009-08-17T23:09:59.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T23:09:59.0000000",
    "DocumentId": "2076072202",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5922",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Data Structures and Algorithms with Object-Oriented Design Patterns in C#: “Enumerable Collections and Enumerators”",
    "SortOrdinal": null,
    "ItemChar": "In this section we introduce an abstraction called an enumerator. An enumerator provides the means to access one-by-one all the objects in a container. Enumerators are an alternative to using the visitors described in Section gif.\n\nThe Container interface given in Program gif extends the standard C# IEnumerable interface . The following code fragment defines the IEnumerable interface.\n\nnamespace System.Collections\n{\n    public interface IEnumerable\n    {\n\tpublic IEnumerator GetEnumerator();\n    }\n}\n\nSimply put, a class that is enumerable provides a method that returns an enumerator.\n\nThe idea is that for every concrete container class we will also implement a related class that implements the standard C# IEnumerator interface . The following code fragment defines the IEnumerator interface.\n\nnamespace System.Collections\n{\n    public interface IEnumerator\n    {\n\tpublic bool MoveNext();\n\tpublic object Current { get; }\n\tpublic void Reset();\n    }\n}\n\nThe interface comprises two methods, MoveNext and Reset, and a property, Current.\n\nIn order to understand the desired semantics, it is best to consider first an example which illustrates the use of an enumerator. Consider a concrete container class, say SomeContainer, that implements the Container interface. The following code fragment illustrates the use of the enumerator to access one-by-one the objects contained in the container:\n\nContainer c = new SomeContainer();\n// ...\nIEnumerator e = c.GetEnumerator();\nwhile (e.MoveNext())\n{\n    object obj = e.Current;\n    Console.WriteLine(obj);\n}\ne.Reset();\n\nIn order to have the desired effect, the members of the IEnumerator interface must have the following behaviors:\n\nMoveNext\n    The MoveNext method is called in the loop-termination test part of the while statement. The MoveNext conceptually moves the enumerator to the next object to be visited. The MoveNext method returns true when there are still more objects in the container to be visited and it returns false when all of the contained objects have been visited. \nCurrent\n    The Current property provides a get accessor that returns the next object in the container to be visited. If there is no current object to be visited, this accessor throws a InvalidOperationException exception. \nReset\n    The Reset method resets the enumerator so that all the objects in the container can be visited again.\n\nGiven these semantics for the enumerator methods, the program fragment shown above systematically visits all of the objects in the container and prints each one on its own line of the console.\n\nOne of the advantages of using an enumerator object which is separate from the container is that it is possible then to have more than one enumerator associated with a given container. This provides greater flexibility than possible using a visitor, since only one visitor can be accepted by a container at any given time. For example, consider the following code fragment:\n\nContainer c = new SomeContainer();\n// ...\nIEnumerator e1 = c.GetEnumerator();\nwhile (e1.MoveNext())\n{\n    object obj1 = e1.Current;\n    IEnumerator e2 = c.GetEnumerator();\n    while (e2.MoveNext())\n    {\n\tobject obj2 = e2.Current;\n\tif (obj1.Equals(obj2))\n\t    Console.WriteLine(obj1 + \"=\" + obj2);\n    }\n}\n\nThis code compares all pairs of objects in the container c and prints out those which are equal.\n\nA certain amount of care is required when defining and using enumerators. In order to simplify the implementation of enumerators, we shall assume that while an enumerator is in use, the associated container will not be modified.\n\n[http://www.brpreiss.com/books/opus6/html/page126.html]",
    "ItemText": null,
    "CreateDate": "2009-08-17T23:12:43.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T23:12:43.0000000",
    "DocumentId": "2076072203",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5923",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“What does ‘yield break;’ do in C#?”; StackOverflow.com",
    "SortOrdinal": null,
    "ItemChar": "It specifies that an iterator has come to an end. You can think of yield break as return statement which does not return value.\n\nFor example, if you define a function as iterator, a body of the function may look like this:\n\nfor (int i = 0; i < 5; i++) {\n    yield return i;\n}\n\nConsole.Out.WriteLine(\"You will see me\");\n\nNote that after the loop has completed all cycles, the last line gets executed and you will see the message in your console app.\n\nOr like this with yield break:\n\nint i = 0;\nwhile (true) {\n    if (i < 5) {\n        yield return i;\n    } else {\n        // note that i++ will not be executed after this\n        yield break;\n    }\n    i++;\n}\n\nConsole.Out.WriteLine(\"Won't see me\");\n\nIn this case last statement is never executed because we left function early.\n\n[http://stackoverflow.com/questions/231893/what-does-yield-break-do-in-c]",
    "ItemText": null,
    "CreateDate": "2009-08-17T23:22:42.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-17T23:22:42.0000000",
    "DocumentId": "2076072204",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5924",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PowerShell: Using Windows PowerShell “Here-Strings”; Windows PowerShell Tip of the Week; TechNet",
    "SortOrdinal": null,
    "ItemChar": "We want to assign our string value to a variable named $x; that’s why we started things off with $x = followed by @\", the syntax that represents the start of our here-string. (Which, we should add, needs to be on a line all by itself.) We then indicate the end of the here-string by typing the construction \"@, also on a line by itself.\n\nThe cool part, however, is what lies in-between the beginning and the end of the here-string. In between the opening line and the closing line all we have to do is type the string value exactly the way we want it assigned; in turn, PowerShell will respect any line breaks, double and single quote marks, and blank spaces we type in. Suppose we wanted to type each word and punctuation mark on a separate line. In that case, our here-string (or at least the first part of it) would look like this:\n\n$x = @\"\n\"\nCuriouser \nand \ncuriouser\n!\n\"\n\"@\n\nAnd what do you suppose will show up onscreen when we echo back the value of $x? Good guess:\n\n\"\nCuriouser \nand \ncuriouser\n!\n\"\n\nAs you might expect, this is also a nifty way to add comments to a script: you can type as much text as you want any way you want, and without having to comment out each and every line. Here’s a comment that uses a here-string:\n\n$x = @\"\n\nThis script demonstrates the use of \"here-strings.\"\nAnything typed between the top line of this code block\nand the bottom line of this code block will be formatted\nexactly as shown here.\n\n\"@\n\n\n[http://www.microsoft.com/technet/scriptcenter/resources/\n    pstips/jun07/pstip0629.mspx]",
    "ItemText": null,
    "CreateDate": "2009-08-18T18:46:53.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-18T18:46:53.0000000",
    "DocumentId": "2076072205",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5925",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Custom XML Serialization of a .NET class”; Robert Bogue [MVP]",
    "SortOrdinal": null,
    "ItemChar": "I love serialization -- right up to the point where it breaks. I have always found that it's difficult to get right if the out of the box stuff breaks. However, I may have changed my mind. I had to do some of my own serialization because some of the properties that I was working with in my class didn't serialize well. After a long and drawn out look at the problem here's my input:\n\n   1. Implement the IXmlSerializable interface. It contains three methods\n   2. GetSchema() has been obsoleted. Just return null. There's a suggestion that you should use an [XmlSchemaProvider] attribute on your class to communicate the method to be used to return the schema for your Xml serialization. My recommendation is to skip it -- if you don't have to validate your Xml (and I don't know why you would) you don't have to have this.\n   3. WriteXml() writes the data to an XmlWriter. Use WriteAttributeString(string, string) to write out the attributes you need. You can also write out sub-elements but using attributes is easy enough for non-complex types.\n   4. If you need to write out a blob of data in middle of your tag you can use WriteCData() to write the contents of a string to the center of your element tag.\n   5. ReadXml() reads the serialized data from an XmlReader. Getting your content out is as simple as doing .MoveToContent() and a set of indexer deferences for attributes (i.e. reader[\"myAttributeName\"]). Finally if you want to read the inner contents you put into a CData section you can do .ReadString(). \n\nThat's all there is to writing your custom Xml Serialization interface. This way you don't have to worry about the dynamic assemblies.\n\n[http://thorprojects.com/blog/archive/2009/07/16/\n    custom-xml-serialization-of-a-net-class.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-18T18:48:49.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-18T18:48:49.0000000",
    "DocumentId": "2076072206",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5926",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF: Implementing a Notify Icon without Windows Forms; Philipp Sumi; CodeProject.com",
    "SortOrdinal": null,
    "ItemChar": "I discovered that there’s no built-in NotifyIcon available within the WPF namespace—I had to fall back to the component of the Windows Forms namespace. So far so good, but I quickly started to miss quite a few features, including:\n\n    * Rich ToolTips rather than text\n    * WPF context menus and popups\n    * Command support and routed events \n    * Flexible data binding  \n    * Rich balloon messages rather than the default messages provides by the OS\n\n…\n\nJust like the WinForms NotifyIcon, this control is basically a wrapper around the Shell_NotifyIcon function of the Windows API. It does, however, support the latest improvements (up to Vista), including richer ToolTips (with a fallback mechanism for Windows xp) and custom icons for balloon messages.\n\nIn case you want to start your own implementation (be it WPF or not), you can basically take the code of the Interop namespace along with the helper methods in the Util class and you should be good to go: The classes and enums there provide you with a clean and well documented façade to Shell_NotifyIcon and related classes.\n\n[http://www.codeproject.com/KB/WPF/wpf_notifyicon.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-18T18:57:32.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-18T18:57:32.0000000",
    "DocumentId": "2076072207",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5927",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP: “WordPress Feeds”; codex.wordpress.org",
    "SortOrdinal": null,
    "ItemChar": "By default, WordPress comes with various feeds. They are generated by template tag for bloginfo() for each type of feed and are typically listed in the sidebar and/or footer of most WordPress Themes. They look like this:\n\nURL for RDF/RSS 1.0 feed \n    <?php bloginfo('rdf_url'); ?> \n\nURL for RSS 0.92 feed \n    <?php bloginfo('rss_url'); ?> \n\nURL for RSS 2.0 feed \n    <?php bloginfo('rss2_url'); ?> \n\nURL for Atom feed \n    <?php bloginfo('atom_url'); ?> \n\nURL for comments RSS 2.0 feed \n    <?php bloginfo('comments_rss2_url'); ?> \n\nThe first four feeds display recent updates and changes to your site's content for the different feedreaders. Of these, the RSS feeds are the most well known. The last feed example is used by RSS 2.0 feedreaders and does not show your site's content. It only shows the comments made on your site. \n\n…\n\nThere are times when you want to tell someone your site's feed address or URL, or you need it to submit it to search engines and directories, many of which now accept feed URL submissions. There are four possible URLs for each of your feeds. Any of these will work.\n\nhttp://example.com/wp-rss.php\nhttp://example.com/wp-rss2.php\nhttp://example.com/wp-rdf.php\nhttp://example.com/wp-atom.php\n\nOr you can access them like this:\n\nhttp://example.com/?feed=rss\nhttp://example.com/?feed=rss2\nhttp://example.com/?feed=rdf\nhttp://example.com/?feed=atom\n\nIf you are using custom permalinks, you should be able to reach them through this usage:\n\nhttp://example.com/feed/\nhttp://example.com/feed/rss/\nhttp://example.com/feed/rss2/\nhttp://example.com/feed/rdf/\nhttp://example.com/feed/atom/\n\nCategories and Tags\n\nYou can also provide feeds to only specific categories or tags on your site by adding the following to the end of the link:\n\nhttp://www.example.com/?cat=42&feed=rss2\nor\nhttp://www.example.com/?tag=tagname&feed=rss2\nor\nhttp://example.com/category/categoryname/feed\n\nOlder versions of Wordpress used a format such as\n\nhttp://example.com/wp-rss2.php?cat=42\n\nbut this has been deprecated in newer versions.\n\n\n[http://codex.wordpress.org/WordPress_Feeds]",
    "ItemText": null,
    "CreateDate": "2009-08-18T19:41:02.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-18T19:41:02.0000000",
    "DocumentId": "2076072208",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5928",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Dr. Sebi: Recommended Vegetables",
    "SortOrdinal": null,
    "ItemChar": "Amaranth greens—same as Callaloo, a variety of Spinach\nAvocado\nAsparagus\nBell Peppers\nChayote (Mexican Squash)\nCorn Chips, corn Tortillas or air-popped corn\nCucumber\nDandelion greens\nGarbanzo beans (chick peas)\nGreen banana\nIzote—cactus flower/ cactus leaf- grows naturally in California\nJicama\nKale\nLettuce (all, except Iceberg)\nMushrooms  (all, except Shitake)\nMustard greens\nNopales—Mexican Cactus\nOkra\nOlives\nOnions\nPoke salad—greens\nSea Vegetables  (wakame/dulse/arame/hijiki/nori)\nSquash\nSpinach (use sparingly)\nString beans\nTomato—cherry and plum only\nTomatillo\nTurnip greens\nZucchini\n\n[http://www.drsebiproducts.com/id60.html]",
    "ItemText": null,
    "CreateDate": "2009-08-21T12:22:20.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-21T12:22:20.0000000",
    "DocumentId": "2076072209",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5929",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Dr. Sebi: Recommended Fruits",
    "SortOrdinal": null,
    "ItemChar": "Apples\nBananas – the smallest one or the Burro/mid-size (original banana)\nBerries – all varieties- Elderberries in any form – no cranberries\nCantaloupe\nCherries\nCurrants\nDates\nFigs\nGrapes -seeded\nLimes (key limes preferred with seeds)\nMango\nMelons -seeded\nOrange (Seville or sour preferred, difficult to find )\nPapayas\nPeaches\nPears\nPlums\nPrunes\nRaisins -seeded\nSoft Jelly Coconuts\nSoursops –Latin or West Indian markets)\nSugar apples (chermoya)\n\n[http://www.drsebiproducts.com/id60.html]",
    "ItemText": null,
    "CreateDate": "2009-08-21T10:51:08.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-21T10:51:08.0000000",
    "DocumentId": "2076072210",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5930",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Dr. Sebi: Recommended Teas, Spices, Seeds and Nuts (Butters)",
    "SortOrdinal": null,
    "ItemChar": ">>>Herbal Teas:\nAllspice\nAnise\nChamomile\nCloves\nFennel\nGinger\nLemon grass\nRaspberry\n\n>>>Mild Flavors\nBasil\nBay leaf\nCilantro\nDill\nMarjoram\nOregano\nSavory\nSweet Basil\nTarragon\nThyme\n\n>>>Pungent & Spicy Flavors\nAchiote\nCayenne\nCumin\nCoriander\nOnion Powder\nSage\n\n>>>Salty Flavors\nPure Sea Salt\nPowdered Granulated Seaweed\n(Kelp/Dulce/Nori – has “sea taste”)\n\n>>>Sweet Flavors\n100% Pure Maple Syrup – Grade B recommended\nMaple “Sugar” (from dried maple syrup)\nDate “Sugar” (from dried dates)\n100% Pure Agave Syrup – (from cactus)\n\n>>>Nuts, Seeds (Butters)\nRaw Almonds and Almond butter\nRaw Sesame Seeds\nRaw Sesame “Tahini” Butter\nWalnuts\n\n[http://www.drsebiproducts.com/id60.html]",
    "ItemText": null,
    "CreateDate": "2009-08-21T10:57:15.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-21T10:57:15.0000000",
    "DocumentId": "2076072211",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5931",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Apache License, Version 2.0",
    "SortOrdinal": null,
    "ItemChar": "Apache License, Version 2.0\n\nApache License\nVersion 2.0, January 2004\nhttp://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n\"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.\n\n\"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.\n\n\"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.\n\n\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License.\n\n\"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.\n\n\"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.\n\n\"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).\n\n\"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.\n\n\"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"\n\n\"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.\n\n2. Grant of Copyright License.\n\nSubject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License.\n\nSubject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.\n\n4. Redistribution.\n\nYou may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:\n\n   1. You must give any other recipients of the Work or Derivative Works a copy of this License; and\n   2. You must cause any modified files to carry prominent notices stating that You changed the files; and\n   3. You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and\n   4. If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.\n\nYou may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.\n\n5. Submission of Contributions.\n\nUnless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.\n\n6. Trademarks.\n\nThis License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty.\n\nUnless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability.\n\nIn no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability.\n\nWhile redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work\n\n    To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives.\n\n       Copyright [yyyy] [name of copyright owner]\n\n       Licensed under the Apache License, Version 2.0 (the \"License\");\n       you may not use this file except in compliance with the License.\n       You may obtain a copy of the License at\n\n         http://www.apache.org/licenses/LICENSE-2.0\n\n       Unless required by applicable law or agreed to in writing, software\n       distributed under the License is distributed on an \"AS IS\" BASIS,\n       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n       See the License for the specific language governing permissions and\n       limitations under the License.\n\n[http://www.opensource.org/licenses/apache2.0.php]",
    "ItemText": "Apache License, Version 2.0\n\nApache License\nVersion 2.0, January 2004\nhttp://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n\"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.\n\n\"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.\n\n\"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.\n\n\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License.\n\n\"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.\n\n\"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.\n\n\"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).\n\n\"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.\n\n\"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"\n\n\"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.\n\n2. Grant of Copyright License.\n\nSubject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License.\n\nSubject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.\n\n4. Redistribution.\n\nYou may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:\n\n   1. You must give any other recipients of the Work or Derivative Works a copy of this License; and\n   2. You must cause any modified files to carry prominent notices stating that You changed the files; and\n   3. You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and\n   4. If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.\n\nYou may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.\n\n5. Submission of Contributions.\n\nUnless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.\n\n6. Trademarks.\n\nThis License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty.\n\nUnless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability.\n\nIn no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability.\n\nWhile redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work\n\n    To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives.\n\n       Copyright [yyyy] [name of copyright owner]\n\n       Licensed under the Apache License, Version 2.0 (the \"License\");\n       you may not use this file except in compliance with the License.\n       You may obtain a copy of the License at\n\n         http://www.apache.org/licenses/LICENSE-2.0\n\n       Unless required by applicable law or agreed to in writing, software\n       distributed under the License is distributed on an \"AS IS\" BASIS,\n       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n       See the License for the specific language governing permissions and\n       limitations under the License.\n\n[http://www.opensource.org/licenses/apache2.0.php]",
    "CreateDate": "2009-08-21T18:38:26.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-21T18:38:26.0000000",
    "DocumentId": "2076072212",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5932",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Test-Driven Development: “TDD Anti-Patterns”; James Carr",
    "SortOrdinal": null,
    "ItemChar": "TDD Anti-Pattern Catalogue\n\nThe Liar\n    An entire unit test that passes all of the test cases it has and appears valid, but upon closer inspection it is discovered that it doesn’t really test the intended target at all. \n\nExcessive Setup\n    A test that requires a lot of work setting up in order to even begin testing. Sometimes several hundred lines of code is used to setup the environment for one test, with several objects involved, which can make it difficult to really ascertain what is tested due to the “noise” of all of the setup going on.\n\nThe Giant\n    A unit test that, although it is validly testing the object under test, can span thousands of lines and contain many many test cases. This can be an indicator that the system under tests is a God Object\n\nThe Mockery\n    Sometimes mocking can be good, and handy. But sometimes developers can lose themselves and in their effort to mock out what isn’t being tested. In this case, a unit test contains so many mocks, stubs, and/or fakes that the system under test isn’t even being tested at all, instead data returned from mocks is what is being tested.\n\nThe Inspector\n    A unit test that violates encapsulation in an effort to achieve 100% code coverage, but knows so much about what is going on in the object that any attempt to refactor will break the existing test and require any change to be reflected in the unit test.\n\nGenerous Leftovers [4]\n    An instance where one unit test creates data that is persisted somewhere, and another test reuses the data for its own devious purposes. If the “generator” is ran afterward, or not at all, the test using that data will outright fail.\n\nThe Local Hero [1]\n    A test case that is dependent on something specific to the development environment it was written on in order to run. The result is the test passes on development boxes, but fails when someone attempts to run it elsewhere.\n\nThe Nitpicker [1]\n    A unit test which compares a complete output when it’s really only interested in small parts of it, so the test has to continually be kept in line with otherwise unimportant details. Endemic in web application testing. \n\nThe Secret Catcher[1]\n    A test that at first glance appears to be doing no testing due to the absence of assertions, but as they say, “the devil’s in the details.” The test is really relying on an exception to be thrown when a mishap occurs, and is expecting the testing framework to capture the exception and report it to the user as a failure.\n\nThe Dodger [1]\n    A unit test which has lots of tests for minor (and presumably easy to test) side effects, but never tests the core desired behavior. Sometimes you may find this in database access related tests, where a method is called, then the test selects from the database and runs assertions against the result.\n\nThe Loudmouth [1]\n    A unit test (or test suite) that clutters up the console with diagnostic messages, logging messages, and other miscellaneous chatter, even when tests are passing. Sometimes during test creation there was a desire to manually see output, but even though it’s no longer needed, it was left behind.\n\nThe Greedy Catcher [1]\n    A unit test which catches exceptions and swallows the stack trace, sometimes replacing it with a less informative failure message, but sometimes even just logging (c.f. Loudmouth) and letting the test pass.\n\nThe Sequencer [1]\n    A unit test that depends on items in an unordered list appearing in the same order during assertions.\n\nHidden Dependency\n    A close cousin of The Local Hero, a unit test that requires some existing data to have been populated somewhere before the test runs. If that data wasn’t populated, the test will fail and leave little indication to the developer what it wanted, or why… forcing them to dig through acres of code to find out where the data it was using was supposed to come from.\n\nThe Enumerator [2]\n    A unit test with each test case method name is only an enumeration, i.e. test1, test2, test3. As a result, the intention of the test case is unclear, and the only way to be sure is to read the test case code and pray for clarity.\n\nThe Stranger\n    A test case that doesn’t even belong in the unit test it is part of. it’s really testing a separate object, most likely an object that is used by the object under test, but the test case has gone and tested that object directly without relying on the output from the object under test making use of that object for its own behavior. Also known as TheDistantRelative[5]. \n\nThe Operating System Evangelist [3]\n    A unit test that relies on a specific operation system environment to be in place in order to work. A good example would be a test case that uses the newline sequence for windows in an assertion, only to break when ran on Linux.\n\nSuccess Against All Odds [2]\n    A test that was written pass first rather than fail first. As an unfortunate side effect, the test case happens to always pass even though the test should fail.\n\nThe Free Ride\n    Rather than write a new test case method to test another feature or functionality, a new assertion rides along in an existing test case.\n\nThe One\n    A combination of several patterns, particularly TheFreeRide and TheGiant, a unit test that contains only one test method which tests the entire set of functionality an object has. A common indicator is that the test method is often the same as the unit test name, and contains multiple lines of setup and assertions.\n\nThe Peeping Tom\n    A test that, due to shared resources, can see the result data of another test, and may cause the test to fail even though the system under test is perfectly valid. This has been seen commonly in fitnesse, where the use of static member variables to hold collections aren’t properly cleaned after test execution, often popping up unexpectedly in other test runs. Also known as TheUninvitedGuests\n\nThe Slow Poke\n    A unit test that runs incredibly slow. When developers kick it off, they have time to go to the bathroom, grab a smoke, or worse, kick the test off before they go home at the end of the day.\n\n[http://blog.james-carr.org/2006/11/03/tdd-anti-patterns/]",
    "ItemText": null,
    "CreateDate": "2009-08-21T18:50:20.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-21T18:50:20.0000000",
    "DocumentId": "2076072213",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5933",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Interface vs Abstract Class”; StackOverflow.com",
    "SortOrdinal": null,
    "ItemChar": "In .NET (similar for Java):\n\n    * interfaces can have no state or implementation\n    * a class that implements an interface must provide an implementation of all the methods of that interface\n    * abstract classes may contain state (data members) and/or implementation (methods)\n    * abstract classes can be inherited without implementing the abstract methods (though such a derived class is abstract itslef)\n    * interfaces may be multiple-inherited, abstract classes may not (this is probably the key concrete reason for interfaces to exist separately from abtract classes - they permit an implementation of multiple inheritance that removes many of the problems of general MI).\n\nAs general OO terms, the differences are not necessarily well-defined. For example, there are C++ programmers who may hold similar rigid definitions (interfaces are a strict subset of abstract classes that cannot contain implementation), while some may say that an abstract class with some default implementations is still an interface or that a non-abstract class can still define an interface.\n\n…\n\n1) An interface can be seen as a pure Abstract Class, is the same, but despite this, is not the same to implement an interface and inheriting from an abstract class. When you inherit from this pure abstract class you are defining a hierarchy -> inheritance, if you implement the interface you are not, and you can implement as many interfaces as you want, but you can only inherit from one class.\n\n2) You can define a property in an interface, so the class that implements that interface must have that property.\n\nFor example:\n\n    public interface IVariable\n    {\n        string name {get; set;}\n    }\n\nThe class that implements that interface must have a property like that.\n\nhope this helps!\n\n[http://stackoverflow.com/questions/761194/\n    interface-vs-abstract-class-general-oo]",
    "ItemText": null,
    "CreateDate": "2009-08-21T18:55:15.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-21T18:55:15.0000000",
    "DocumentId": "2076072214",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5934",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server: “How to shrink the tempdb database in SQL Server”",
    "SortOrdinal": null,
    "ItemChar": "Method 3 to Shrink Tempdb\n\nUse the command DBCC SHRINKFILE to shrink the individual tempdb files. DBCC SHRINKFILE provides more flexibility than DBCC SHRINKDATABASE because you can use it on a single database file without affecting other files that belong to the same database. DBCC SHRINKFILE receives the target size parameter, which is the desired final size for the database file.\n\nIMPORTANT: You must run DBCC SHRINKFILE command while no other activity occurs in the tempdb database. To make sure that other processes cannot use tempdb while DBCC SHRINKFILE executes, you must restart SQL Server in the single user mode. For more information about DBCC SHRINKFILE, see the Effects of Execution of DBCC SHRINKDATABASE or DBCCSHRINKFILE While Tempdb Is In Use section of this article.\n\n   1. Determine the desired size for the primary data file (tempdb.mdf), the log file (templog.ldf), and/or additional files added to tempdb. Make sure that the space used in the files is less than or equal to the desired target size.\n   2. Connect to SQL Server with Query Analyzer, and then run the following Transact-SQL commands for the specific database files that you need to shrink:\n\n         use tempdb\n         go\n\n         dbcc shrinkfile (tempdev, 'target size in MB')\n         go\n         -- this command shrinks the primary data file\n\n         dbcc shrinkfile (templog, 'target size in MB')\n         go\n         -- this command shrinks the log file, look at the last paragraph.\n      \t\t\t\t\t\t\n\nAn advantage of DBCC SHRINKFILE is that it can reduce the size of a file to a size smaller than its original size. You can issue DBCC SHRINKFILE on any of the data or log files. A limitation of DBCC SHRINKFILE is that you cannot make the database smaller than the size of the model database.\n\nIn SQL Server 7.0 a transaction log shrink is a deferred operation and you must issue a log truncation and backup to help the shrink operation in a database. However, by default, tempdb has the trunc log on chkpt option set ON; therefore, there you do not need to issue a log truncation for that database.\n\n[http://support.microsoft.com/kb/307487]",
    "ItemText": null,
    "CreateDate": "2009-08-26T17:30:42.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-26T17:30:42.0000000",
    "DocumentId": "2076072215",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5935",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PowerShell: “Even More Things You Can Do With Arrays”",
    "SortOrdinal": null,
    "ItemChar": "One of the very first things people notice about Windows PowerShell is this: PowerShell makes it very easy to create arrays and to add new items to arrays. With VBScript, these same tasks are a bit … challenging … to say the least: you either have to declare the array size in advance (leaving you with an array that can’t be resized), or you have to declare a dynamic array, then resize that array each time you add a new item. (Taking care, of course, to preserve all the existing items in the array.) Sure that sounds like a lot of fun. But, trust us: it’s not\n\nWith Windows PowerShell, however, things are much different, and much easier. Want to create an array named $a, an array that contains the values 1, 2, and 3? Okey-doke:\n\n$a = 1, 2, 3\n\nThat’s all you have to do: just separate the items using commas and add them all to the array in one fell swoop. Can you create an array of string values using this same approach? Of course you can; just make sure you enclose the string values in double quote marks:\n\n$a = \"one\", \"two\", \"three\"\n\nAh, good question: what if you do want to add a new item to the array? No problem; this line of code will do the trick:\n\n$a = $a + 4\n\nIf $a formerly contained the values 1, 2, and 3, what do you suppose $a will be equal to now? You’re absolutely right:\n\n1\n2\n3\n4\n\nSo is this the easiest thing you’ll ever do in your entire life? Probably; we can’t think of too may things that are easier.\n\nOf course, because creating new arrays and adding items to existing arrays is so easy you might think you know everything there is to know about arrays in Windows PowerShell. Is that really true? Well, maybe; let’s find out for ourselves.\n\n[http://www.microsoft.com/technet/\n    scriptcenter/resources/pstips/aug07/pstip0803.mspx]",
    "ItemText": null,
    "CreateDate": "2009-08-26T17:34:25.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-26T17:34:25.0000000",
    "DocumentId": "2076072216",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5936",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WSS: “Unable to run Repair on SharePoint installation”; David M. Sterling",
    "SortOrdinal": null,
    "ItemChar": "Should you need to run a Repair operation on MOSS or WSS, it usually works well and can fix some unusual problems. However, on some in cases, you may encounter an error that looks like…\n\nMicrosoft Office SharePoint Server 2007 configuration did not complete succesfully.\nAn installation package for the product Microsoft Office Shared Coms English Language Pack cannot be found. Try the installation again using a valid copy of the installation package 'osrvmui.msi'.\n\nThe cause is painfully simple - during the Repair operation the original installation media (DVD/ISO) MUST BE Mounted before hand. Unlike Microsoft Office, when the repair operation checks for this file, rather than request the media, it simply fails the operation.\n\n[http://davidmsterling.blogspot.com/2008_02_01_archive.html]",
    "ItemText": null,
    "CreateDate": "2009-08-26T17:38:18.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-26T17:38:18.0000000",
    "DocumentId": "2076072217",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5937",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "XSLT: “XPath and Default Namespace handling”",
    "SortOrdinal": null,
    "ItemChar": " Now let's take the same XML however now defining all elements in the 'http://www.edankert.com/examples/' namespace.\n\nAnd instead of prefixing all the different elements (although this would cause the same problem), we're declaring a so-called default namespace at the root element.\n\nSo the XML now looks like:\n\n<catalog x­mlns=\"http://www.edankert.com/examples/\">\n  <cd>\n    <artist>Sufjan Stevens</artist>\n    <title>Illinois</title>\n    <src>http://www.sufjan.com/</src>\n  </cd>\n  <cd>\n    <artist>Stoat</artist>\n    <title>Future come and get me</title>\n    <src>http://www.stoatmusic.com/</src>\n  </cd>\n  <cd>\n    <artist>The White Stripes</artist>\n    <title>Get behind me satan</title>\n    <src>http://www.whitestripes.com/</src>\n  </cd>\n</catalog>\n\nWhen we now use the same XPath as above '//cd', we notice that nothing is returned. This is because the specified XPath returns all cd elements that have not been declared in a namespace and in the example above all the 'cd' elements are declared in the 'http://www.edankert.com/examples/' namespace.\nNamespace-Prefix mappings\n\nWe need some kind of way to specify in our XPath expression that we are looking for all 'cd' elements in the 'http://www.edankert.com/examples/' namespace.\n\nTo handle this, the XPath specification allows us to use a QName to specify an element or an attribute. A QName can be either a name on its own 'element' or a name with a prefix 'pre:element'. This prefix however needs to be mapped to a Namespace URI. So mapping the 'pre' prefix to the 'http://www.edankert.com/test' Namespace URI should allow us to find all 'element' elements defined in the 'http://www.edankert.com/test' namespace.\n\nIn this case for instance we could use the 'edx' prefix and map this prefix to the 'http://www.edankert.com/examples/' namespace URI. This would result in the following XPath expression that should return all 'cd' elements that are declared in the 'http://www.edankert.com/examples/' namespace: '//edx:cd'.\n\nAll XPath processors allow you to specify prefix-namespace mappings, however how depends on the specific implementation. See below for examples of how to map namespaces and prefixes using Jaxen (JDOM/dom4j/XOM), JAXP and XSLT.\n\n…\n\nXPath was originally designed to be used with XSLT, this (and maybe because XSLT is an XML vocabulary) might explain why declaring prefix namespace-uri mappings in XSLT seems very natural.\n\n<xsl:stylesheet version=\"1.1\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n  <xsl:template match=\"//edx:cd\" xmlns:edx=\"http://www.edankert.com/examples/\">\n    <xsl:apply-templates/>\n  </xsl:template>\n</xsl:stylesheet>\n\nTo specify the prefix namespace-uri we can simply specify a namespace-uri for the 'edx' prefix, using the normal XML mechanism.\n\nTo get the same output as for the previous examples, we can use a xsl:template that matches our //edx:cd XPath expression.\n\nConclusion\n\nSo, to be able to use XPath expressions on XML content defined in a (default) namespace, we need to specify a namespace prefix mapping. As we have seen, it does not matter what prefix the namespace is mapped to. \n\n[http://www.edankert.com/defaultnamespaces.html]",
    "ItemText": null,
    "CreateDate": "2009-08-27T10:24:25.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-27T10:24:25.0000000",
    "DocumentId": "2076072218",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5938",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "XSLT: “Using Multiple URIResolvers for the Same Stylesheet”",
    "SortOrdinal": null,
    "ItemChar": "A URIResolver, an interface defined in the javax.xml.transform package, is used to process a URI and create a Source object out of it. All Java developers working with XSLT have to decide which URIResolver they're going to use to resolve the URI.\n\nIn small examples and code snippets this is very simple. However, when working with large systems that are styling dynamic content, the decision on which URIResolver to use can be a very important one that will help create a more flexible and scalable application. This article will show how a URIResolver is utilized to resolve a URI and how to create a URIResolver that will allow these references to be resolved differently within the same stylesheet.\n\nWhen we develop with Java and XSLT, a URIResolver is used to perform this function on the XSLT elements xsl:import and xsl:include as well as the XSL function document(). Commonly, relative URIs are used in these pieces of XSLT to reference other stylesheets or node sets. This will work beautifully if the developer is always aware of the base URI for the context in which he or she is currently developing. Keeping track of this can become complicated as more stylesheets are added to a system in different paths. For example, consider the folder structure shown in Figure 1.\n\nIf we're developing on a Windows box, we can import 02.xsl from 01.xsl\n\n<xsl:stylesheet version=\"1.0\" xmlns:\nxsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:import href=\"c:/root/02.xsl\"/>\n\nand 03.xsl from 02.xsl.\n\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:import href=\"c:/root/folder01/03.xsl\"/>\n\nThis works great for development, but as soon as we move to the testing or production environment, where the base of the directory structure and platform is not the same, we have to go through and change all of the xsl:import, xsl:include, and document() calls in each of the XSL files. Of course, this is not an acceptable solution either because once the code is approved for production, no code modifications should be necessary to move from the testing to the production environment.\n\nThe URIResolver interface helps solve these problems. We can create a URIResolver that will always know where it should find the proper stylesheet. Before we see how this is done, let's make sure that we understand the URIResolver interface.\n\nThe URIResolver Interface\nThe URIResolver interface exists in the javax.xml.transform package and is part of the JAXP API (see Figure 2). It has a single method, resolve, that any implementing class must provide. This method takes two String parameters, href and base, and returns a Source object. The href parameter corresponds to the href in the xsl:import or xsl:include elements. It is also the first parameter in the document() function. For example, in an import from a stylesheet <import href=\"02.xsl\"/> the href parameter passed to the resolver is the string 02.xsl. The base parameter is not as straightforward. If the xsl:import, xsl:include, or document() call is made from within the primary document, then the base is the base URI of that document or the second parameter in the case of document(). However, if the message is sent from an external entity, then the base is the URI of that calling external entity. Let's consider the previous example of stylesheets 01.xsl, 02.xsl, and 03.xsl. The base for the import element in 01.xsl of <import href=\"c:/root/02.xsl\"/> is c:/root/. Because we import 03.xsl from 02.xsl we are importing from an external entity, which makes the base for the import element <import href=\"c:/root/folder01/03.xsl\"/> have a base of c:/root/02.xsl.\n\nNow that we understand the URIResolver interface, we can put it to use in helping us resolve our problem. We would like to build a URIResolver that is smart enough to know the path to all of our stylesheets. Knowing that we will always deploy a WAR file helps us with a quick potential solution. If we can figure out what the path to our application is dynamically on any server, then we can solve the problem (see Listing 1).\n\nWith this URIResolver we are able to dynamically determine the path to our stylesheet using the ServletContext. When transforming, we can set this to be our URIResolver with: \n\nTransformerFactory factory =\nTransformerFactory.newInstance();\nfactory.setURIResolver(newServletContextURIResolver\n(getServletContext(), \"/style\"));\n\nInstead of worrying about changing references to the stylesheets, we can simply rely on the URIResolver to appropriately find the stylesheet documents. When the resolver is invoked, the ServletContext is used to find the real path to the directory containing the stylesheet documents. When the resolve method is called, the href will be appended to this path and a Source object created from that combined path. With this URIResolver in place the xsl:import, xsl:include, and document() need only to reference the relative path from the stylesheet directory. For example, if our stylesheets exist in the style directory on our application server, we can reference a stylesheet \"mystyle.xsl\" in the following manner: <import href=\"/mystyle.xsl\"/>. We no longer have to specify the URI from the root of our system. We can start with a directory structure that we know will exist.\n\nUsing this solution for the problem of locating different stylesheets works great, but it does limit us to only one URIResolver for a transformation. Being able to reference multiple URIResolvers could be useful for retrieving stylesheets and documents from several different locations and for resolving custom stylesheets on the fly. How can we use multiple URIResolvers within one transformation of a particular stylesheet? There are several possible solutions to this problem, but we'll investigate one particular design that involves the ability to switch URIResolvers based upon the href and base passed to the installed URIResolver. This allows the stylesheet programmer to place key values in the xsl:import, xsl:include, and document() calls from the stylesheet that can cause different URIResolvers to be used. Consider the diagram in Figure 3.\n\nInstead of using the ServletContextURIResolver, we will use the Dispatching URIResolver. The purpose of this DispatchingURIResolver is to simply dispatch the work to other URIResolvers. It does not do any resolving on its own. To accomplish this task, it makes use of two other classes, the DelimitedKeyParser and the BuilderURIResolverFactory. When the resolve method is called on the DispatchingURIResolver, it will use the DelimitedKeyParser to determine whether a special key has been specified for locating a unique resolver. If a key was found, then the BuilderURIResolverFactory creates a URIResolver that it associates with the key. If a key was not found, then the BuilderURIResolverFactory simply creates the default URIResolver. Assuming that there would be only a few cases in which a unique URIResolver would be needed within an application, it's important to provide this default case. This allows an application that uses a single URIResolver to use this pattern and keep itself open to future changes. The single URIResolver that is used would be installed as the default URIResolver and created every time. Once the factory is asked to create the appropriate URIResolver, the DispatchingURIResolver simply dispatches the work off to that new URIResolver. The resolve() method of the DispatchingURIResolver is shown in Listing 2.\n\nNow that we know what's involved in dispatching to the proper URIResolver, let's take a look at an implementation of the DelimitedKeyParser and BuilderURIResolverFactory.\n\nLet's assume that we'll use the ServletContextURIResolver as our default URIResolver. This means that, for the most part, our stylesheet imports will look like <import href=\"/02.xsl\"/>. If our application must also access stylesheets that exist elsewhere on the Internet, we will need to use a different resolver. We'll call this resolver a RemoteStyleURIResolver. It will return the source of a stylesheet that exists on its server (see Figure 4).\n\nWe'll still need to specify an href to the proper stylesheet, but we must also identify it as a remote stylesheet. If we create an import statement that looks like <import href=\"remote.style#/style.xsl\"/>, the DelimitedKeyParser will look for a # character delimiting the key and the href parts. In this example, the key would be remote.style and the href to be passed on to the URIResolver should be /style.xsl. The getKey method assumes that if it does not find the # character, then the key is the entire href. If this is incorrect, then the factory will not find any URIResolver associated with it and the default URIResolver will still be requested. The getHref method returns all of the String after the # character, or the entire String if no # is found. Finally, the getBase simply returns the entire base since we're not using it to determine any information in this example. If another delimiter is needed for the application instead of the default # character, then the new character delimiter can be set on the DelimitedKeyParser with the setDelimiter() method.\n\nThe BuilderURIResolverFactory has the responsibility of creating the appropriate URIResolver for a given key. To allow the concrete implementations to be dynamic if needed, the IURIResolverBuilder interface is used. This allows the creation of each URIResolver to be done in any manner that the application sees fit. The IURIResolverBuilder interface has a single method, build(), that is called from the BuilderURIResolverFactory create() and createDefault() methods. Adding IURIResolverBuilders to the Builder URIResolverFactory is very simple. There are two methods provided on the BuilderURIResolverFactory that allow the addition of an IURIResovlerBuilder implementation. The addBuilder (String key, IURIResolverBuilder builder) method is very straightforward, taking String as the first parameter and a builder as the second. The key identifies the partnering builder. When the factory is requested to create a new URIResolver through the create() method, it is given a key. This key will be used to retrieve the builder that was associated with it through the addBuilder method. The default IURIResolverBuilder can be specified either at the creation time of the factory through the constructor, or with the setDefaultBuilder(IURIResolverBuilder builder) method. This builder will be used when the createDefault method is invoked.\n\nA simple, concrete implementation of the IURIResolverBuilder interface is one that uses the same instance of the given builder for each invocation of the resolve method. The SingleInstanceURIResolverBuilder stores the URIResolver it's given at its creation and returns it every time the build method is called. Special caution should be taken when using this builder to ensure that the URIResolver that is kept is not affected by a multithreaded environment.\n\nAnother implementation of a IURIResolverBuilder is the Reflective URIResovlerBuilder, which is thread-safe by nature. It takes a URIResolver as a parameter to its constructor. When its build() method is invoked, a new instance of the URIResolver is created and returned. The URIResolver class that is given to the ReflectiveURIResolver must have a default constructor for the build() method to successfully execute. Using the IURIResolverBuilder interface allows not only the generic creation of URIResolvers (as we see with the ReflectiveURIResolverBuilder), but also the dynamic creation of URIResolvers based upon specific application data (see Figure 5).\n\nWe now have the ability to use two different URIResolvers for the same transformation of a single stylesheet. We can make this all work by installing our DispatchingURIResolver as the resolver for the transformations. The following example shows how we can use this DispatchingURIResolver with the ServletContextURIResovler as the default resolver and the RemoteStyleURIResolver used for any key found in the xsl:import, xsl:include, or document() calls using the key \"remote:style\" (see Listing 3).\n\nThis implementation is very simple, straightforward, and ready for immediate use. If the DelimitedKeyParser or the BuilderURIResolverFactory implementations do not meet the needs of an application, developers may choose to implement their own implementations. This is made possible by the use of the IKeyParser and IURIResolverFactory interfaces within the DispatchingURIResolver. While the provided BuilderURIResolverFactory and DelimiterKeyParser should meet the needs of most situations, the solution is flexible enough to take other forms because of the use of these interfaces (see Figure 6).\n\nThe use of the DispatchingURIResolver gives developers creating applications using XSLT the flexibility to use more than one URIResolver for a Transformer. This opens up the door for many possibilities, including pulling stylesheets from different sources and generating dynamic stylesheets.\n\n[http://xml.sys-con.com/node/40655]",
    "ItemText": "A URIResolver, an interface defined in the javax.xml.transform package, is used to process a URI and create a Source object out of it. All Java developers working with XSLT have to decide which URIResolver they're going to use to resolve the URI.\n\nIn small examples and code snippets this is very simple. However, when working with large systems that are styling dynamic content, the decision on which URIResolver to use can be a very important one that will help create a more flexible and scalable application. This article will show how a URIResolver is utilized to resolve a URI and how to create a URIResolver that will allow these references to be resolved differently within the same stylesheet.\n\nWhen we develop with Java and XSLT, a URIResolver is used to perform this function on the XSLT elements xsl:import and xsl:include as well as the XSL function document(). Commonly, relative URIs are used in these pieces of XSLT to reference other stylesheets or node sets. This will work beautifully if the developer is always aware of the base URI for the context in which he or she is currently developing. Keeping track of this can become complicated as more stylesheets are added to a system in different paths. For example, consider the folder structure shown in Figure 1.\n\nIf we're developing on a Windows box, we can import 02.xsl from 01.xsl\n\n<xsl:stylesheet version=\"1.0\" xmlns:\nxsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:import href=\"c:/root/02.xsl\"/>\n\nand 03.xsl from 02.xsl.\n\n<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n<xsl:import href=\"c:/root/folder01/03.xsl\"/>\n\nThis works great for development, but as soon as we move to the testing or production environment, where the base of the directory structure and platform is not the same, we have to go through and change all of the xsl:import, xsl:include, and document() calls in each of the XSL files. Of course, this is not an acceptable solution either because once the code is approved for production, no code modifications should be necessary to move from the testing to the production environment.\n\nThe URIResolver interface helps solve these problems. We can create a URIResolver that will always know where it should find the proper stylesheet. Before we see how this is done, let's make sure that we understand the URIResolver interface.\n\nThe URIResolver Interface\nThe URIResolver interface exists in the javax.xml.transform package and is part of the JAXP API (see Figure 2). It has a single method, resolve, that any implementing class must provide. This method takes two String parameters, href and base, and returns a Source object. The href parameter corresponds to the href in the xsl:import or xsl:include elements. It is also the first parameter in the document() function. For example, in an import from a stylesheet <import href=\"02.xsl\"/> the href parameter passed to the resolver is the string 02.xsl. The base parameter is not as straightforward. If the xsl:import, xsl:include, or document() call is made from within the primary document, then the base is the base URI of that document or the second parameter in the case of document(). However, if the message is sent from an external entity, then the base is the URI of that calling external entity. Let's consider the previous example of stylesheets 01.xsl, 02.xsl, and 03.xsl. The base for the import element in 01.xsl of <import href=\"c:/root/02.xsl\"/> is c:/root/. Because we import 03.xsl from 02.xsl we are importing from an external entity, which makes the base for the import element <import href=\"c:/root/folder01/03.xsl\"/> have a base of c:/root/02.xsl.\n\nNow that we understand the URIResolver interface, we can put it to use in helping us resolve our problem. We would like to build a URIResolver that is smart enough to know the path to all of our stylesheets. Knowing that we will always deploy a WAR file helps us with a quick potential solution. If we can figure out what the path to our application is dynamically on any server, then we can solve the problem (see Listing 1).\n\nWith this URIResolver we are able to dynamically determine the path to our stylesheet using the ServletContext. When transforming, we can set this to be our URIResolver with: \n\nTransformerFactory factory =\nTransformerFactory.newInstance();\nfactory.setURIResolver(newServletContextURIResolver\n(getServletContext(), \"/style\"));\n\nInstead of worrying about changing references to the stylesheets, we can simply rely on the URIResolver to appropriately find the stylesheet documents. When the resolver is invoked, the ServletContext is used to find the real path to the directory containing the stylesheet documents. When the resolve method is called, the href will be appended to this path and a Source object created from that combined path. With this URIResolver in place the xsl:import, xsl:include, and document() need only to reference the relative path from the stylesheet directory. For example, if our stylesheets exist in the style directory on our application server, we can reference a stylesheet \"mystyle.xsl\" in the following manner: <import href=\"/mystyle.xsl\"/>. We no longer have to specify the URI from the root of our system. We can start with a directory structure that we know will exist.\n\nUsing this solution for the problem of locating different stylesheets works great, but it does limit us to only one URIResolver for a transformation. Being able to reference multiple URIResolvers could be useful for retrieving stylesheets and documents from several different locations and for resolving custom stylesheets on the fly. How can we use multiple URIResolvers within one transformation of a particular stylesheet? There are several possible solutions to this problem, but we'll investigate one particular design that involves the ability to switch URIResolvers based upon the href and base passed to the installed URIResolver. This allows the stylesheet programmer to place key values in the xsl:import, xsl:include, and document() calls from the stylesheet that can cause different URIResolvers to be used. Consider the diagram in Figure 3.\n\nInstead of using the ServletContextURIResolver, we will use the Dispatching URIResolver. The purpose of this DispatchingURIResolver is to simply dispatch the work to other URIResolvers. It does not do any resolving on its own. To accomplish this task, it makes use of two other classes, the DelimitedKeyParser and the BuilderURIResolverFactory. When the resolve method is called on the DispatchingURIResolver, it will use the DelimitedKeyParser to determine whether a special key has been specified for locating a unique resolver. If a key was found, then the BuilderURIResolverFactory creates a URIResolver that it associates with the key. If a key was not found, then the BuilderURIResolverFactory simply creates the default URIResolver. Assuming that there would be only a few cases in which a unique URIResolver would be needed within an application, it's important to provide this default case. This allows an application that uses a single URIResolver to use this pattern and keep itself open to future changes. The single URIResolver that is used would be installed as the default URIResolver and created every time. Once the factory is asked to create the appropriate URIResolver, the DispatchingURIResolver simply dispatches the work off to that new URIResolver. The resolve() method of the DispatchingURIResolver is shown in Listing 2.\n\nNow that we know what's involved in dispatching to the proper URIResolver, let's take a look at an implementation of the DelimitedKeyParser and BuilderURIResolverFactory.\n\nLet's assume that we'll use the ServletContextURIResolver as our default URIResolver. This means that, for the most part, our stylesheet imports will look like <import href=\"/02.xsl\"/>. If our application must also access stylesheets that exist elsewhere on the Internet, we will need to use a different resolver. We'll call this resolver a RemoteStyleURIResolver. It will return the source of a stylesheet that exists on its server (see Figure 4).\n\nWe'll still need to specify an href to the proper stylesheet, but we must also identify it as a remote stylesheet. If we create an import statement that looks like <import href=\"remote.style#/style.xsl\"/>, the DelimitedKeyParser will look for a # character delimiting the key and the href parts. In this example, the key would be remote.style and the href to be passed on to the URIResolver should be /style.xsl. The getKey method assumes that if it does not find the # character, then the key is the entire href. If this is incorrect, then the factory will not find any URIResolver associated with it and the default URIResolver will still be requested. The getHref method returns all of the String after the # character, or the entire String if no # is found. Finally, the getBase simply returns the entire base since we're not using it to determine any information in this example. If another delimiter is needed for the application instead of the default # character, then the new character delimiter can be set on the DelimitedKeyParser with the setDelimiter() method.\n\nThe BuilderURIResolverFactory has the responsibility of creating the appropriate URIResolver for a given key. To allow the concrete implementations to be dynamic if needed, the IURIResolverBuilder interface is used. This allows the creation of each URIResolver to be done in any manner that the application sees fit. The IURIResolverBuilder interface has a single method, build(), that is called from the BuilderURIResolverFactory create() and createDefault() methods. Adding IURIResolverBuilders to the Builder URIResolverFactory is very simple. There are two methods provided on the BuilderURIResolverFactory that allow the addition of an IURIResovlerBuilder implementation. The addBuilder (String key, IURIResolverBuilder builder) method is very straightforward, taking String as the first parameter and a builder as the second. The key identifies the partnering builder. When the factory is requested to create a new URIResolver through the create() method, it is given a key. This key will be used to retrieve the builder that was associated with it through the addBuilder method. The default IURIResolverBuilder can be specified either at the creation time of the factory through the constructor, or with the setDefaultBuilder(IURIResolverBuilder builder) method. This builder will be used when the createDefault method is invoked.\n\nA simple, concrete implementation of the IURIResolverBuilder interface is one that uses the same instance of the given builder for each invocation of the resolve method. The SingleInstanceURIResolverBuilder stores the URIResolver it's given at its creation and returns it every time the build method is called. Special caution should be taken when using this builder to ensure that the URIResolver that is kept is not affected by a multithreaded environment.\n\nAnother implementation of a IURIResolverBuilder is the Reflective URIResovlerBuilder, which is thread-safe by nature. It takes a URIResolver as a parameter to its constructor. When its build() method is invoked, a new instance of the URIResolver is created and returned. The URIResolver class that is given to the ReflectiveURIResolver must have a default constructor for the build() method to successfully execute. Using the IURIResolverBuilder interface allows not only the generic creation of URIResolvers (as we see with the ReflectiveURIResolverBuilder), but also the dynamic creation of URIResolvers based upon specific application data (see Figure 5).\n\nWe now have the ability to use two different URIResolvers for the same transformation of a single stylesheet. We can make this all work by installing our DispatchingURIResolver as the resolver for the transformations. The following example shows how we can use this DispatchingURIResolver with the ServletContextURIResovler as the default resolver and the RemoteStyleURIResolver used for any key found in the xsl:import, xsl:include, or document() calls using the key \"remote:style\" (see Listing 3).\n\nThis implementation is very simple, straightforward, and ready for immediate use. If the DelimitedKeyParser or the BuilderURIResolverFactory implementations do not meet the needs of an application, developers may choose to implement their own implementations. This is made possible by the use of the IKeyParser and IURIResolverFactory interfaces within the DispatchingURIResolver. While the provided BuilderURIResolverFactory and DelimiterKeyParser should meet the needs of most situations, the solution is flexible enough to take other forms because of the use of these interfaces (see Figure 6).\n\nThe use of the DispatchingURIResolver gives developers creating applications using XSLT the flexibility to use more than one URIResolver for a Transformer. This opens up the door for many possibilities, including pulling stylesheets from different sources and generating dynamic stylesheets.\n\n[http://xml.sys-con.com/node/40655]",
    "CreateDate": "2009-08-27T10:26:52.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-27T10:26:52.0000000",
    "DocumentId": "2076072219",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5939",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Enabling anonymous access in SharePoint 2007”; Bil Simser",
    "SortOrdinal": null,
    "ItemChar": "Even though Microsoft has done a great job on improving the user interface in SharePoint 2007, some things are still buried and require a little “black magic” to get done. In this entry I’ll show you how to enable anonymous access on your site.\n\nFirst, you need to enable anonymous on the IIS web site (called a Web Application in SharePoint land). This can be done by:\n\n    * Launching Internet Information Services Manager from the Start -> Administration Tools menu\n    * Select the web site, right click and select Properties\n    * Click on the Directory Security tab\n    * Click on Edit in the Authentication and access control section\n\nInstead we’ll do it SharePoint style using the Central Administration section:\n\n    * First get to your portal. Then under “My Links” look for “Central Administration” and select it.\n    * In the Central Administration site select “Application Management” either in the Quick Launch or across the top tabs\n    * Select “Authentication Providers” in the “Application Security” section\n    * Click on the “Default” zone (or whatever zone you want to enable anonymous access for)\n    * Under “Anonymous Access” click the check box to enable it and click “Save”\n\nNOTE: Make sure the “Web Application” in the menu at the top right is your portal/site and not the admin site.\n\nYou can confirm that anonymous access is enabled by going back into the IIS console and checking the Directory Security properties.\n\nNow the second part is to enable anonymous access in the site.\n\n    * Return to your sites home page and navigate to the site settings page. In MOSS, this is under Site Actions – Site Settings – Modify All Site Settings. In WSS it’s under Site Actions – Site Settings.\n    * Under the “Users and Permissions” section click on “Advanced permissions”\n    * On the “Settings” drop down menu (on the toolbar) select “Anonymous Access”\n    * Select the option you want anonymous users to have (full access or documents and lists only)\n\nNow users without logging in will get whatever option you allowed them.\n\nA couple of notes about anonymous access:\n\n    * You will need to set up the 2nd part for all sites unless you have permission inheritance turned on\n    * If you don’t see the “Anonymous Access” menu option in the “Settings” menu, it might not be turned on in Central Admin/IIS. You can manually navigate to “_layouts/setanon.aspx” if you want, but the options will be grayed out if it hasn’t been enabled in IIS\n    * You must do both setups to enable anonymous access for users, one in IIS and the other in each site\n\n[http://weblogs.asp.net/bsimser/archive/2006/09/25/\n    Enabling-anonymous-access-in-SharePoint-2007.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-27T13:15:33.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-27T13:15:33.0000000",
    "DocumentId": "2076072220",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5940",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SharePoint Portal Server 2003: “Using Folders in document libraries”",
    "SortOrdinal": null,
    "ItemChar": "Funny enough these things always come together the same time. Edward Ferron is talking about when using folders in document libraries and when not to use them. Same thing I discussed with a customer yesterday. I mentioned better to use meta data to group or order documents instead of folders. Edward describes the reasons why:\n\n\"When using document libraries in SharePoint try to avoid the temptation of creating nested folders.  There are several reasons you do not want ot create folders more than one level deep if you need to create them at all.\n\n   1. You are just recreating the problem you had in file severs when you created nested folders\n   2. You can not apply security to a folder in SharePoint\n   3. You can not add a folder by itself to a web page in a web part so personalization is difficult\n\nInstead of creating folders in Document Libraries create a seperate document library, this allows users to consume the content most important to them and you have more control over security and other features such as custom views.\n\nQ: When should you use folders?\n\nA: Archiving documents - maybe you archive all documents for a year in the 2004 folder or if you have a lot of documents being added like meeting minutes maybe you add a folder for the month and archive all the meeting minute documents for a given month.\n\nNote: A single level of folder structure is generally ok when you really do not desire to create a seperate document library for one reason or another however avoid going 2 and 3 levels deep (keep in mind these are just guidelines).\n\nQ: How do I keep related document libraries together on a single page?\n\nA: Create a web part page and add all of the document libraries to that web part page.  An example would be multiple document libraries for a given project, you would create a web part page called 'My Project Documents'.  Then you could take your Design, Models, Requirements, User documentation document libraries and store on the new web part page you just created.\"\n\n[http://blogs.tamtam.nl/mart/\n    SharePointTipUsingFoldersInDocumentLibraries.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-27T13:19:10.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-27T13:19:10.0000000",
    "DocumentId": "2076072221",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5941",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu: “How to Clean Up Your Ubuntu Installation”; Faraz Ahmed",
    "SortOrdinal": null,
    "ItemChar": "Windows installations get messed up pretty easy. If you use Windows for long enough you will find out that the performance of yousystem is not what it used to be, it has become slower. The solution would be to use cleanup tools such as registry cleaner and crap cleaner. Thiswould clean all of the registry problems and delete unneccesary and unwanted files in the temp folder.\n\nWhen I switched over to Ubuntu, I thought I did not have to worry about Temp files and \"crap cleaning\" but it turns out that I was wrong. Although Ubuntu installations handle temporary files way better than Windows does, we still have to clean up our installation from time to time to keep our system running smooth.\n\nCleanup Residual Config Packages\n\nResidual config packages are dependency packages that are left behind after youuninstall n application from your Ubuntu installation. Since we don't need these packages anymore they are just taking up space. Time to get rid of them.\n\nThis feature is already available in Synaptic Package Manger. All you have to do is go to System > Administration > Synaptic Package Manager, when the window opens up, you should see a \"Status\" button on the bottom left hand corner of that window, Click on it. When you click on it you should see options such as \"installed\", \"not installed\", \"Sections\", \"Residual Config\".\n\nClick on Residual Config. You should now see a list of packages on the right. These are the residual config packages. Select all of them and choose Mark for Complete Removal. Once you have done that click on the apply button on the top.\n\nIf you do not see any Residual Config option in the list of synaptic package manager then that means you dont have any in your system. So you dont have to worry about this step then. :)\n\nCleanup Unnecessary Language and Help Files\n\nRemember during the installation of Ubuntu you were asked to select your language from a long list of languages. Well guess what, all those languages and their help files are still in your hard drive and taking up space. Time to remove them.\n\nFor this you need a package called \"localepurge\" you can download it from synaptics package manager. Start up synaptics as mentioned above now for this installation choose sections from the listand in the search type in localpurge when the search finishes click on it and selet mark for installation. Now hit apply.\n\nWhen the download finishes a windows will pop up with a list of abbreviations such as:\n\nen\n\nfr\n\npo\n\nsp\n\nka\n\nFrom the list select your language. If you use English then choose \"en\", if French then choose \"fr\" and so on. Click next and this will delete all those unnecessary languages.\n\nCleanup Partial Packages\n\nWhen we are downloading an application or a package and if for some reason we cancel the download before it has completed then this leaves behind the packages that were downloaded. Since the download was not completed so these packages just sit there unused, taking up space. Time toremove them.\n\nFor this we can use the Terminal with the help of a simple command. You can open up terminal from Applications > Accessories > Terminal. Once there type this command:\n\nsudo apt-get autoclean\n\nPress Enter and you are done.\n\nYour system is now a whole lot cleaner and will perform better than before also. :) \n\n[http://hubpages.com/hub/How-to-Clean-Up-Your-Ubuntu-Installation]",
    "ItemText": null,
    "CreateDate": "2009-08-27T13:22:13.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-27T13:22:13.0000000",
    "DocumentId": "2076072222",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5942",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WCF: “Wcf Binding Comparision List and Supported Features (Reference)”; Dan Rigsby",
    "SortOrdinal": null,
    "ItemChar": ">>>BasicHttpBinding\n(Config Name) [Schemas]: (basicHttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text\nMessage Version: SOAP 1.1\nInterop: Basic Profile 1.1\nSecurity: None [default], Transport, Message, Mixed\nSession: No Support\nTx Flow: No Support\nDuplex: N\n\nA binding that is suitable for communicating with WS-Basic Profile conformant Web services like ASP.NET Web services (ASMX)-based services.\n\n>>>WSHttpBinding\n(Config Name) [Schemas]: (wsHttpBinding, webHttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS\nSecurity: None, Transport, Message [default], Mixed\nSession: None [default], Transport, Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: N\n\nA secure and interoperable binding that is suitable for non-duplex service contracts.\n\n>>>WS2007HttpBinding\n(Config Name) [Schemas]: (ws2007HttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS-Security, WS-Trust, WS-SC, WS-SP\nSecurity: None, Transport, Message [default], Mixed\nSession: None [default], Transport, Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: N\n\n>>>WSDualHttpBinding\n(Config Name) [Schemas]: (wsDualHttpBinding) [http]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS\nSecurity: None, Message [default]\nSession: Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: Y\n\nA secure and interoperable binding that is suitable for duplex service contracts or communication through SOAP intermediaries.\n\n>>>WSFederationHttpBinding\n(Config Name) [Schemas]: (wsFederationHttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS-Federation\nSecurity: None, Message [default], Mixed\nSession: None [default], Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: N\n\nA secure and interoperable binding that supports the WS-Federation protocol, enabling organizations that are in a federation to efficiently authenticate and authorize users.\n\n>>>WS2007FederationHttpBinding\n(Config Name) [Schemas]: (ws2007FederationHttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS-Federation\nSecurity: None, Message [default], Mixed\nSession: None [default], Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: N\n\nA secure and interoperable binding that derives from WS2007HttpBinding and supports federated security.\n\n>>>NetTcpBinding\n(Config Name) [Schemas]: (netTcpBinding) [net.tcp]\nTransport: TCP\nMessage Encoding: Binary\nMessage Version: SOAP 1.2\nInterop: .Net\nSecurity: None, Transport [default], Message, Mixed\nSession: Transport [default], Reliable Session\nTx Flow: No [default], Yes (OleTx)\nDuplex: Y\n\nA secure and optimized binding suitable for cross-machine communication between WCF applications.\n\n>>>NetPeerTcpBinding\n(Config Name) [Schemas]: (netTcpBinding) [net.p2p]\nTransport: P2P\nMessage Encoding: Binary\nMessage Version: SOAP 1.2\nInterop: Peer\nSecurity: None, Transport [default], Message, Mixed\nSession: Not Supported\nTx Flow: Not Supported\nDuplex: Y\n\nA binding that enables secure, multi-machine communication.\n\n>>>NetNamedPipeBinding\n(Config Name) [Schemas]: (netNamedPipeBinding) [net.pipe]\nTransport: Named Pipe (IPC)\nMessage Encoding: Binary\nMessage Version: SOAP 1.2\nInterop: .Net\nSecurity: None, Transport [default]\nSession: None, Transport [default]\nTx Flow: No, Yes (OleTx)\nDuplex: Y\n\n>>>NetMsmqBinding\n(Config Name) [Schemas]: (netMsmqBinding) [net.msmq]\nTransport: MSMQ\nMessage Encoding: Binary\nMessage Version: SOAP 1.2\nInterop: .Net\nSecurity: None, Transport [default], Message, Both\nSession: Not Supported\nTx Flow: No, Yes (OleTx)\nDuplex: N\n\nA queued binding that is suitable for cross-machine communication between WCF applications.\n\n>>>MsmqIntegrationBinding\nTransport: HTTP/HTTPS\nMessage Encoding: Text\nMessage Version: SOAP 1.1\nInterop: Basic Profile 1.1\nSecurity: None [default], Transport, Message, Mixed\nSession: No Support\nTx Flow: No Support\nDuplex: N\n\nA binding that is suitable for communicating with WS-Basic Profile conformant Web services like ASP.NET Web services (ASMX)-based services.\n\n>>>WSHttpBinding\n(Config Name) [Schemas]: (wsHttpBinding, webHttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS\nSecurity: None, Transport, Message [default], Mixed\nSession: None [default], Transport, Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: N\n\nA secure and interoperable binding that is suitable for non-duplex service contracts.\n\n>>>WS2007HttpBinding\n(Config Name) [Schemas]: (ws2007HttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS-Security, WS-Trust, WS-SC, WS-SP\nSecurity: None, Transport, Message [default], Mixed\nSession: None [default], Transport, Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: N\n\n>>>WSDualHttpBinding\n(Config Name) [Schemas]: (wsDualHttpBinding) [http]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS\nSecurity: None, Message [default]\nSession: Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: Y\n\nA secure and interoperable binding that is suitable for duplex service contracts or communication through SOAP intermediaries.\n\n>>>WSFederationHttpBinding\n(Config Name) [Schemas]: (wsFederationHttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS-Federation\nSecurity: None, Message [default], Mixed\nSession: None [default], Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: N\n\nA secure and interoperable binding that supports the WS-Federation protocol, enabling organizations that are in a federation to efficiently authenticate and authorize users.\n\n>>>WS2007FederationHttpBinding\n(Config Name) [Schemas]: (ws2007FederationHttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS-Federation\nSecurity: None, Message [default], Mixed\nSession: None [default], Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: N\n\nA secure and interoperable binding that derives from WS2007HttpBinding and supports federated security.\n\n>>>NetTcpBinding\n(Config Name) [Schemas]: (netTcpBinding) [net.tcp]\nTransport: TCP\nMessage Encoding: Binary\nMessage Version: SOAP 1.2\nInterop: .Net\nSecurity: None, Transport [default], Message, Mixed\nSession: Transport [default], Reliable Session\nTx Flow: No [default], Yes (OleTx)\nDuplex: Y\n\nA secure and optimized binding suitable for cross-machine communication between WCF applications.\n\n>>>NetPeerTcpBinding\n(Config Name) [Schemas]: (netTcpBinding) [net.p2p]\nTransport: P2P\nMessage Encoding: Binary\nMessage Version: SOAP 1.2\nInterop: Peer\nSecurity: None, Transport [default], Message, Mixed\nSession: Not Supported\nTx Flow: Not Supported\nDuplex: Y\n\nA binding that enables secure, multi-machine communication.\n\n>>>NetNamedPipeBinding\n(Config Name) [Schemas]: (netNamedPipeBinding) [net.pipe]\nTransport: Named Pipe (IPC)\nMessage Encoding: Binary\nMessage Version: SOAP 1.2\nInterop: .Net\nSecurity: None, Transport [default]\nSession: None, Transport [default]\nTx Flow: No, Yes (OleTx)\nDuplex: Y\n\n>>>NetMsmqBinding\n(Config Name): (msmqIntegrationBinding)\nTransport: MSMQ\nMessage Encoding: Doesn’t use a WCF message encoding – instead it lets you choose a pre-WCF serialization format\nMessage Version: N/A\nInterop: MSMQ\nSecurity: None, Transport [default]\nSession: Not Supported\nTx Flow: No, Yes\nDuplex: N\n\nA binding that is suitable for cross-machine communication between a WCF application and existing MSMQ applications.\n\n>>>Feature and Description\n\nName: The name of the binding.\n\nConfig Name: The name of the binding used in configuration such as app.config or web.config.\n\nScheme: The supported Uri schemes.\n\nTransport: The supported types of message transport (similar to Providers in Remoting).\n\nMessage Encoding: The supported types of message encoding.\n\nMessage Version: The supported message versions.\n\nInterop: Names the protocol or technology with which the binding ensures interoperation.\n\nSecurity: Specifies how the channel is secured:\n    * None: The SOAP message is not secured and the client is not authenticated.\n    * Transport: Security requirements are satisfied at the transport layer.\n    * Message: Security requirements are satisfied at the message layer.\n    * Mixed: This security mode is known as TransportWithMessageCredentials. It handles credentials at the message level, and integrity and confidentiality requirements are satisfied by the transport layer.\n    * Both: Both message level and transport level security are used. This ability is unique to the NetMsmqBinding.\n\nSession: Specifies whether this binding supports session contracts.\n\nTransaction Flow: Specifies whether transactions are enabled and the transaction flow type in ().\n\nDuplex:\tSpecifies whether duplex contracts are supported. Note this feature requires support for Sessions in the binding.\n\n[http://www.danrigsby.com/blog/index.php/2008/01/19/\n    wcf-binding-comparision-list-and-supported-features-reference/]",
    "ItemText": ">>>BasicHttpBinding\n(Config Name) [Schemas]: (basicHttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text\nMessage Version: SOAP 1.1\nInterop: Basic Profile 1.1\nSecurity: None [default], Transport, Message, Mixed\nSession: No Support\nTx Flow: No Support\nDuplex: N\n\nA binding that is suitable for communicating with WS-Basic Profile conformant Web services like ASP.NET Web services (ASMX)-based services.\n\n>>>WSHttpBinding\n(Config Name) [Schemas]: (wsHttpBinding, webHttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS\nSecurity: None, Transport, Message [default], Mixed\nSession: None [default], Transport, Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: N\n\nA secure and interoperable binding that is suitable for non-duplex service contracts.\n\n>>>WS2007HttpBinding\n(Config Name) [Schemas]: (ws2007HttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS-Security, WS-Trust, WS-SC, WS-SP\nSecurity: None, Transport, Message [default], Mixed\nSession: None [default], Transport, Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: N\n\n>>>WSDualHttpBinding\n(Config Name) [Schemas]: (wsDualHttpBinding) [http]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS\nSecurity: None, Message [default]\nSession: Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: Y\n\nA secure and interoperable binding that is suitable for duplex service contracts or communication through SOAP intermediaries.\n\n>>>WSFederationHttpBinding\n(Config Name) [Schemas]: (wsFederationHttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS-Federation\nSecurity: None, Message [default], Mixed\nSession: None [default], Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: N\n\nA secure and interoperable binding that supports the WS-Federation protocol, enabling organizations that are in a federation to efficiently authenticate and authorize users.\n\n>>>WS2007FederationHttpBinding\n(Config Name) [Schemas]: (ws2007FederationHttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS-Federation\nSecurity: None, Message [default], Mixed\nSession: None [default], Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: N\n\nA secure and interoperable binding that derives from WS2007HttpBinding and supports federated security.\n\n>>>NetTcpBinding\n(Config Name) [Schemas]: (netTcpBinding) [net.tcp]\nTransport: TCP\nMessage Encoding: Binary\nMessage Version: SOAP 1.2\nInterop: .Net\nSecurity: None, Transport [default], Message, Mixed\nSession: Transport [default], Reliable Session\nTx Flow: No [default], Yes (OleTx)\nDuplex: Y\n\nA secure and optimized binding suitable for cross-machine communication between WCF applications.\n\n>>>NetPeerTcpBinding\n(Config Name) [Schemas]: (netTcpBinding) [net.p2p]\nTransport: P2P\nMessage Encoding: Binary\nMessage Version: SOAP 1.2\nInterop: Peer\nSecurity: None, Transport [default], Message, Mixed\nSession: Not Supported\nTx Flow: Not Supported\nDuplex: Y\n\nA binding that enables secure, multi-machine communication.\n\n>>>NetNamedPipeBinding\n(Config Name) [Schemas]: (netNamedPipeBinding) [net.pipe]\nTransport: Named Pipe (IPC)\nMessage Encoding: Binary\nMessage Version: SOAP 1.2\nInterop: .Net\nSecurity: None, Transport [default]\nSession: None, Transport [default]\nTx Flow: No, Yes (OleTx)\nDuplex: Y\n\n>>>NetMsmqBinding\n(Config Name) [Schemas]: (netMsmqBinding) [net.msmq]\nTransport: MSMQ\nMessage Encoding: Binary\nMessage Version: SOAP 1.2\nInterop: .Net\nSecurity: None, Transport [default], Message, Both\nSession: Not Supported\nTx Flow: No, Yes (OleTx)\nDuplex: N\n\nA queued binding that is suitable for cross-machine communication between WCF applications.\n\n>>>MsmqIntegrationBinding\nTransport: HTTP/HTTPS\nMessage Encoding: Text\nMessage Version: SOAP 1.1\nInterop: Basic Profile 1.1\nSecurity: None [default], Transport, Message, Mixed\nSession: No Support\nTx Flow: No Support\nDuplex: N\n\nA binding that is suitable for communicating with WS-Basic Profile conformant Web services like ASP.NET Web services (ASMX)-based services.\n\n>>>WSHttpBinding\n(Config Name) [Schemas]: (wsHttpBinding, webHttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS\nSecurity: None, Transport, Message [default], Mixed\nSession: None [default], Transport, Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: N\n\nA secure and interoperable binding that is suitable for non-duplex service contracts.\n\n>>>WS2007HttpBinding\n(Config Name) [Schemas]: (ws2007HttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS-Security, WS-Trust, WS-SC, WS-SP\nSecurity: None, Transport, Message [default], Mixed\nSession: None [default], Transport, Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: N\n\n>>>WSDualHttpBinding\n(Config Name) [Schemas]: (wsDualHttpBinding) [http]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS\nSecurity: None, Message [default]\nSession: Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: Y\n\nA secure and interoperable binding that is suitable for duplex service contracts or communication through SOAP intermediaries.\n\n>>>WSFederationHttpBinding\n(Config Name) [Schemas]: (wsFederationHttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS-Federation\nSecurity: None, Message [default], Mixed\nSession: None [default], Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: N\n\nA secure and interoperable binding that supports the WS-Federation protocol, enabling organizations that are in a federation to efficiently authenticate and authorize users.\n\n>>>WS2007FederationHttpBinding\n(Config Name) [Schemas]: (ws2007FederationHttpBinding) [http, https]\nTransport: HTTP/HTTPS\nMessage Encoding: Text [default], MTOM\nMessage Version: SOAP 1.2, WS-A 1.0\nInterop: WS-Federation\nSecurity: None, Message [default], Mixed\nSession: None [default], Reliable Session\nTx Flow: No [default], Yes (WS-AT)\nDuplex: N\n\nA secure and interoperable binding that derives from WS2007HttpBinding and supports federated security.\n\n>>>NetTcpBinding\n(Config Name) [Schemas]: (netTcpBinding) [net.tcp]\nTransport: TCP\nMessage Encoding: Binary\nMessage Version: SOAP 1.2\nInterop: .Net\nSecurity: None, Transport [default], Message, Mixed\nSession: Transport [default], Reliable Session\nTx Flow: No [default], Yes (OleTx)\nDuplex: Y\n\nA secure and optimized binding suitable for cross-machine communication between WCF applications.\n\n>>>NetPeerTcpBinding\n(Config Name) [Schemas]: (netTcpBinding) [net.p2p]\nTransport: P2P\nMessage Encoding: Binary\nMessage Version: SOAP 1.2\nInterop: Peer\nSecurity: None, Transport [default], Message, Mixed\nSession: Not Supported\nTx Flow: Not Supported\nDuplex: Y\n\nA binding that enables secure, multi-machine communication.\n\n>>>NetNamedPipeBinding\n(Config Name) [Schemas]: (netNamedPipeBinding) [net.pipe]\nTransport: Named Pipe (IPC)\nMessage Encoding: Binary\nMessage Version: SOAP 1.2\nInterop: .Net\nSecurity: None, Transport [default]\nSession: None, Transport [default]\nTx Flow: No, Yes (OleTx)\nDuplex: Y\n\n>>>NetMsmqBinding\n(Config Name): (msmqIntegrationBinding)\nTransport: MSMQ\nMessage Encoding: Doesn’t use a WCF message encoding – instead it lets you choose a pre-WCF serialization format\nMessage Version: N/A\nInterop: MSMQ\nSecurity: None, Transport [default]\nSession: Not Supported\nTx Flow: No, Yes\nDuplex: N\n\nA binding that is suitable for cross-machine communication between a WCF application and existing MSMQ applications.\n\n>>>Feature and Description\n\nName: The name of the binding.\n\nConfig Name: The name of the binding used in configuration such as app.config or web.config.\n\nScheme: The supported Uri schemes.\n\nTransport: The supported types of message transport (similar to Providers in Remoting).\n\nMessage Encoding: The supported types of message encoding.\n\nMessage Version: The supported message versions.\n\nInterop: Names the protocol or technology with which the binding ensures interoperation.\n\nSecurity: Specifies how the channel is secured:\n    * None: The SOAP message is not secured and the client is not authenticated.\n    * Transport: Security requirements are satisfied at the transport layer.\n    * Message: Security requirements are satisfied at the message layer.\n    * Mixed: This security mode is known as TransportWithMessageCredentials. It handles credentials at the message level, and integrity and confidentiality requirements are satisfied by the transport layer.\n    * Both: Both message level and transport level security are used. This ability is unique to the NetMsmqBinding.\n\nSession: Specifies whether this binding supports session contracts.\n\nTransaction Flow: Specifies whether transactions are enabled and the transaction flow type in ().\n\nDuplex:\tSpecifies whether duplex contracts are supported. Note this feature requires support for Sessions in the binding.\n\n[http://www.danrigsby.com/blog/index.php/2008/01/19/\n    wcf-binding-comparision-list-and-supported-features-reference/]",
    "CreateDate": "2009-08-27T17:56:23.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-27T17:56:23.0000000",
    "DocumentId": "2076072223",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5943",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Convert XElement to XmlNode (and Convert XmlNode to XElement)”; Eric White",
    "SortOrdinal": null,
    "ItemChar": "Sometimes you want to convert an XmlNode to an XElement and back again.  Some programming libraries define methods that take XmlNode objects as parameters.  These libraries also may contain properties and methods that return XmlNode objects.  However, it is more convenient to work with LINQ to XML instead of the classes in System.Xml (XmlDocument, XmlNode, etc.)  This post presents a bit of code to do these conversions.\n\n…\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Xml;\nusing System.Xml.Linq;\n\npublic static class MyExtensions\n{\n    public static XElement GetXElement(this XmlNode node)\n    {\n        XDocument xDoc = new XDocument();\n        using (XmlWriter xmlWriter = xDoc.CreateWriter())\n            node.WriteTo(xmlWriter);\n        return xDoc.Root;\n    }\n\n    public static XmlNode GetXmlNode(this XElement element)\n    {\n        using (XmlReader xmlReader = element.CreateReader())\n        {\n            XmlDocument xmlDoc = new XmlDocument();\n            xmlDoc.Load(xmlReader);\n            return xmlDoc;\n        }\n    }\n}\n\n[http://blogs.msdn.com/ericwhite/archive/2008/12/22/\n    convert-xelement-to-xmlnode-and-convert-xmlnode-to-xelement.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-27T18:03:15.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-27T18:03:15.0000000",
    "DocumentId": "2076072224",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5944",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Mozilla: About:config entries",
    "SortOrdinal": null,
    "ItemChar": "This is a reference to the entries in about:config, where all user preferences can be viewed and modified. Entries that apply to Firefox or Thunderbird may also apply to Mozilla Suite/SeaMonkey and vice versa.\n\n[http://kb.mozillazine.org/Firefox_:_FAQs_:_About:config_Entries]",
    "ItemText": null,
    "CreateDate": "2009-08-27T18:06:46.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-27T18:06:46.0000000",
    "DocumentId": "2076072225",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5945",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Java SE: “Sorting Strings” by John Zukowski",
    "SortOrdinal": null,
    "ItemChar": "Sorting strings with the Java platform can be thought of as an easy task, but there is much more thought that should be put into it when developing programs for an international market. If you're stuck in the English-only mindset, and you think your program works fine because it shows that the string tomorrow comes after today, you might think all is great. But, once you have a Spanish user who wants mañana to be sorted properly, if all you use is the default compare() method of String for sorting, the ñ character will come after the z character and will not be the natural Spanish ordering, between the n character and o character. That's where the Collator class of the java.text package comes into play.\n\nImagine a list of words\n\n    * first\n    * mañana\n    * man\n    * many\n    * maxi\n    * next \n\nUsing the default sorting mechanism of String, its compare() method, this will result in a sorted list of:\n\n    * first\n    * man\n    * many\n    * maxi\n    * mañana\n    * next \n\nHere, mañana comes between maxi and next. In the Spanish world, what should happen is mañana should come between many and maxi as the ñ character (pronounced eñe) comes after the n in that alphabet. While you could write your own custom sort routine to handle the ñ, what happens to your program when a German user comes around and wants to use their own diacritical marks, or what about just a list of design patterns with façade? Do you want façade before or after factory? (Essentially treating the ç with the little cedilla hook the same as c or different.)\n\nThat's where the Collator class comes in handy. The Collator class takes into account language-sensitive sorting issues and doesn't just try to sort words based upon their ASCII/Unicode character values. Using Collator requires understanding one additional property before you can fully utilize its features, and that is something called strength. The strength setting of the Collator determines how strong (or weak) a match is used for ordering. There are four possible values for the property: PRIMARY, SECONDARY, TERTIARY, and IDENTICAL. What actually happens with each is dependent on the locale. Typically what happens is as follows. In reverse order, IDENTICAL strength means just that, the characters must be identical for them to be treated the same. TERTIARY typically is for ignoring case differences. SECONDARY is for ignoring diacritical marks, like n vs. ñ. PRIMARY is like IDENTICAL for base letter differences, but has some differences when handling control characters and accents. See the Collator javadoc for more information on these differences and decomposition mode rules.\n\nTo work with Collator, you need to start by getting one. You can either call getInstance() to get one for the default locale, or pass the specific Locale to the getInstance() method to get a locale for the one provided. For instance, to get one for the Spanish language, you would create a Spanish Locale with new Locale(\"es\") and then pass that into getInstance():\n\n Collator esCollator =\n   Collator.getInstance(new Locale(\"es\"));\n\nAssuming the default Collator strength for the locale is sufficient, which happens to be SECONDARY for Spanish, you would then pass the Collator like any Comparator into the sort() routine of Collections to get your sorted List:\n\n Collections.sort(list, esCollator);\n\nWorking with the earlier list, that now gives you a proper sorting with the Spanish alphabet:\n\n    * first\n    * man\n    * many\n    * mañana\n    * maxi\n    * next \n\nHad you instead used the US Locale for the Collator, mañana would appear between man and many since the ñ is not its own letter.\n\nHere's a quick example that shows off the differences.\n\nimport java.awt.*;\nimport java.text.*;\nimport java.util.*;\nimport java.util.List; // Explicit import required\nimport javax.swing.*;\n\npublic class Sort {\n public static void main(String args[]) {\n   Runnable runner = new Runnable() {\n     public void run() {\n       String words[] = {\"first\", \"mañana\", \"man\",\n                         \"many\", \"maxi\", \"next\"};\n       List list = Arrays.asList(words);\n       JFrame frame = new JFrame(\"Sorting\");\n       frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n       Box box = Box.createVerticalBox();\n       frame.setContentPane(box);\n       JLabel label = new JLabel(\"Word List:\");\n       box.add(label);\n       JTextArea textArea = new JTextArea( list.toString());\n       box.add(textArea);\n       Collections.sort(list);\n       label = new JLabel(\"Sorted Word List:\");\n       box.add(label);\n       textArea = new JTextArea(list.toString ());\n       box.add(textArea);\n       Collator esCollator = Collator.getInstance(new Locale(\"es\"));\n       Collections.sort(list, esCollator);\n       label = new JLabel(\"Collated Word List:\");\n       box.add(label);\n       textArea = new JTextArea(list.toString());\n       box.add(textArea);\n       frame.setSize(400, 200);\n       frame.setVisible(true);\n     }\n   };\n   EventQueue.invokeLater (runner);\n }\n}\n\n[http://blogs.sun.com/CoreJavaTechTips/entry/sorting_strings]",
    "ItemText": null,
    "CreateDate": "2009-08-27T21:24:44.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-27T21:24:44.0000000",
    "DocumentId": "2076072226",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5946",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WCF: “Since a WCF service can return any user defined class, why use a DataContract and CompositeType class?”; StackOverflow.com",
    "SortOrdinal": null,
    "ItemChar": "Blankman: Since a WCF service can return any user defined class, why use a DataContract and CompositeType class?\n\nI can return something like:\n\n[OperationContract]\nMyUserCollection GetUsers();\n\nWhat am I missing?\n\nGuy Starbuck: The DataContract is just a formal definition of a type that can be understood on both sides of the service boundary.\n\nIf you return, as in your example, a \"MyUserCollection\" object, the consumers of your service will need to reference the innards of your service/system, which is a violation of the SOA tenet of explicit boundaries. By using a DataContract, you are publishing the structure of your return types in a loosely-coupled way.\n\n[http://stackoverflow.com/questions/303013/whats-the-point-of-a-datacontract-in-wcf]",
    "ItemText": null,
    "CreateDate": "2009-08-27T21:50:32.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-27T21:50:32.0000000",
    "DocumentId": "2076072227",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5947",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Word 2007 Fluent Ribbon: “Ahem… but I am actually customizing Word 2007…”",
    "SortOrdinal": null,
    "ItemChar": "And to further contradict my previous rants, it is possible to write a macro to load Word Document Parts. However, none of these contradictions hold comfortable solutions. First, you can see the XML file, customUI.xml, in my Normal.dotm template. All I had to do was to edit this file to customize the Word 2007 “Fluent” Ribbon. This is what I did:\n\n   1. Use the Custom UI Editor Tool to generate the proper OpenXML parts in the Normal.dotm template to get me started writing raw XML against the Word 2007 application. I could have done this by hand using the tool mentioned in step 2 but was too “lazy.”\n\n   2. Use the Open XML Package Editor in the VSTO 2008 Power Tools to write raw XML. Doing this in Visual Studio was easier on my eyes (larger, bolder fonts than the Custom UI Editor Tool) and I could use the customUI.xsd schema (in 2007 Office System: XML Schema Reference) to make writing faster (Intellisense support). Also I found out the hard way that it is better to write this XML in a separate file in case Word panics and auto-magically deletes all of my hard work! Visual Studio is a great XML file editor.\n\n   3. Use the 2007 Office System Document: Lists of Control IDs to wade through the sea of “Fluent” fluxions. Utterly ridiculous but it helped.\n\nOkay: and now the macro thing. This is the important call in the important line of code that makes loading Quick Parts (or Custom Quick Parts) automatable: Call Application.NormalTemplate.BuildingBlockEntries.Add(). So what’s my problem? The problem is that a Range containing my custom XML does not get saved properly. Sometimes elements named “unknown” come out from the Quick Part Gallery. You don’t understand what I am talking about? I can sympathize. It would take days upon days to explain to a Microsoft employee—even one on the Word 2007 team—what the hell I am talking about… My guess is that this “edge case” will be fixed by accident in a future release.\n\n[http://kintespace.com/rasxlog/?p=928]",
    "ItemText": null,
    "CreateDate": "2009-08-28T10:31:54.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-28T10:31:54.0000000",
    "DocumentId": "2076072228",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5948",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "jQuery: JQuery: “Error: jQuery.support is undefined”; Schleichermann; JQuery VisualStudio Intellisense",
    "SortOrdinal": null,
    "ItemChar": "jQuery.support is undefined\n\nif ( !jQuery.support.opacity && name == “opacity” ) {\n\nIf you are getting this error when trying to use JQuery.hide or JQuery.show it is most likely because you are also using the JQuery VisualStudio Intellisense Documentation ( VSDOC ). The error is simply caused by the fact that you are loading the VSDOC after JQuery. JavaScript loads/renders in the order you have it on the page and by loading the documentation after you load JQuery you are loading things out of order. Simply make sure you load the VSDOC first then JQuery and you are good to go.\n\n<script type=”text/javascript” src=”jquery-1.3.2-vsdoc.js”></script>\n<script type=”text/javascript” src=”jquery-1.3.2.min.js”></script>\n\n[http://schleichermann.wordpress.com/2009/03/10/\n    jquery-error-jquerysupport-is-undefined/]",
    "ItemText": null,
    "CreateDate": "2009-08-28T21:15:31.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-28T21:15:31.0000000",
    "DocumentId": "2076072229",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5949",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CSS: “CSS Transparency Settings for All Browsers” by Chris Coyier",
    "SortOrdinal": null,
    "ItemChar": "Transparency is one of those weird things that is treated completely differently in all browsers. To cover all your bases, you need four separate CSS statements. Fortunately they don’t interfere with each other really, so using them all every time you wish to add transparency is no big hassle and worry-free. Here they are, and are currently set to 50% transparency:\n\n.transparent_class {\n\tfilter:alpha(opacity=50);\n\t-moz-opacity:0.5;\n\t-khtml-opacity: 0.5;\n\topacity: 0.5;\n}\n\nUPDATE: I wanted to pull this post out of the archives and update it a bit because it there seems to be a good amount of interest in this subject.\n\nHere is what each of those CSS properties is for:\n\n    * opacity: 0.5; This is the “most important” one because it is the current standard in CSS. This will work in most versions of Firefox, Safari, and Opera. This would be all you need if all browsers supported current standards. Which, of course, they don’t.\n    * filter:alpha(opacity=50); This one you need for IE.\n    * -moz-opacity:0.5; You need this one to support way old school versions of the Mozilla browsers like Netscape Navigator.\n    * -khtml-opacity: 0.5; This is for way old versions of Safari (1.x) when the rendering engine it was using was still referred to as KTHML, as opposed to the current WebKit.\n\n[http://css-tricks.com/css-transparency-settings-for-all-broswers/]",
    "ItemText": null,
    "CreateDate": "2009-08-28T21:17:08.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-28T21:17:08.0000000",
    "DocumentId": "2076072230",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5950",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2008 R2: “Using Remote Desktop”",
    "SortOrdinal": null,
    "ItemChar": "To allow remote connections for administrative purposes only, you do not have to install the RD Session Host role service. Instead, you enable Remote Desktop on the computer that you want to remotely administer.\n\nRemote Desktop supports only two concurrent remote connections to the computer. You do not need Remote Desktop Services client access licenses (RDS CALs) for these connections.\n\nYou can use the following procedure to enable Remote Desktop on a Windows Server 2008 R2 computer.\n\nMembership in the local Administrators group, or equivalent, on the computer that you plan to configure, is the minimum required to complete this procedure.\nTo enable Remote Desktop\n\n   1. Start the System tool. To start the System tool, click Start, click Run, type control system and then click OK.\n\n   2. Under Tasks, click Remote settings.\n\n   3. In the System Properties dialog box, on the Remote tab, click either of the following, depending on your environment:\n\n          * Allow connections from computers running any version of Remote Desktop (less secure)\n\n          * Allow connections only from computers running Remote Desktop with Network Level Authentication (more secure)\n\n      For more information about the two options, click the Help me choose link on the Remote tab.\n\n   4. Click Select Users to add the users and groups that need to connect to the computer by using Remote Desktop. The users and groups that you add are added to the Remote Desktop Users group.\n\n      Members of the local Administrators group can connect even if they are not listed.\n\n[http://technet.microsoft.com/en-us/library/cc742816.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-28T23:22:15.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-28T23:22:15.0000000",
    "DocumentId": "2076072231",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5951",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“System.Diagnostics.DebuggerStepThrough and More System.Diagnostics Namespace Stuff”; Mark Michaelis",
    "SortOrdinal": null,
    "ItemChar": "I came across a neat little trick relating to diagnostics this morning.  The System.Diagnostics.DebuggerStepThroughAttribute attribute will add metadata to a method such that when the debugger sees the attribute it will not step into the method even when the developer chooses the \"StepInto\" command.  You can still place breakpoints, however.  If you happen to now want breakpoints to work in the method either, you can use the System.Diagnostics.DebuggerHiddenAttribute attribute.\n\nWhile I was checking out the above attributes I came across one more called System.Diagnostics.DebuggableAttribute.  The name of this one sounds a lot cooler than it actually is, however.  Based on my understanding (which I suspect may be missing something) this is cool sounding attribute affects what code the JIT compiler generates only.  It is not clear what functionality it adds and when one would choose to use it.\n\nBefore we leave the System.Diagnostics there is one more class to check out, System.Diagnostics.Debugger.  This class has a Break() method on it which causes the debugger to break on the line following this function.\n\nI have posted the sample code that I used to check out this stuff here.  I confess that the project and solution files may not be compatible with Visual Studio.NET 2002 so you may need to create a new project and add the cs files manually.\n\n[http://mark.michaelis.net/Blog/SystemDiagnosticsDebuggerStepThrough\n    AndMoreSystemDiagnosticsNamespaceStuff.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-28T21:58:49.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-28T21:58:49.0000000",
    "DocumentId": "2076072232",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5952",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SOLID: “The Liskov Substitution Principle—Agile Software Development Principles Patterns and Practices”",
    "SortOrdinal": null,
    "ItemChar": "Liskov Substitution Principle\n\n“What is wanted is something like the following substitution property: If for each object o1 of type S there is an object o2 of type T such that for all programs P defined in terms of T, the behavior of P is unchanged when o1 is substituted for o2, then S is a subtype of T. [Liskov88]“\n\nIs it me, or is that painful to read?  Robert Martin puts it a bit simpler:\n\nSubtypes must be substitutable for their base types\n\nThe classic example of this principle in code is inheriting the Square Class from the Rectangle Class.\n\n \nClassic Example of LSP\n\npublic class Rectangle\n{\n    protected int _width;\n    protected int _height;\n    \n    public int Width\n    {\n        get { return _width; }\n    }\n    \n    public int Height\n    {\n        get { return _height; }\n    }\n    \n    public virtual void SetWidth(int width)\n    {\n        _width = width;\n    }\n    \n    public virtual void SetHeight(int height)\n    {\n        _height = height;\n    }\n}\n\npublic class Square: Rectangle\n{\n    public override void SetWidth(int width)\n    {\n        _width = width;\n        _height = width;\n    }\n    \n    public override void SetHeight(int height)\n    {\n        _height = height;\n        _width = height;\n    }\n}\n\n[TestFixture]\npublic class RectangleTests\n{\n    [Test]\n    public void AreaOfRectangle()\n    {\n        Rectangle r = new Square();\n        \n        r.SetWidth(5);\n        r.SetHeight(2);\n        \n        // Will Fail - r is a square and sets\n        // width and height equal to each other.\n        Assert.IsEqual(r.Width * r.Height,10);\n    }\n}\n\nIf you look at the test above, it will fail because a square is being substituted for a rectangle and the area won't be 10 as expected.  It will actually be 4 because “unexpectedly” in this case, both height and width are being set to each other when the width or height is set on a square.  Therefore, if this behavior by Square is unacceptable and unexpected, Square should not be a subclass of Rectangle (at least not coded like this with these expectations anyway).\n\nThis is the whole point of the Liskov Substitution Principle.  It basically wants you to think clearly about the expected behavior and expectations of a class before you derive new classes from it.  It could turn out that when subclasses are substituted for a base class, you may get unexpected results.  This is where unit tests can really be handy.  The unit tests essentially describe and test for the expected behavior of objects (design by contract, if you will).\n\n[http://codebetter.com/blogs/david.hayden/archive/2005/06/11/64477.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-28T22:20:40.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-28T22:20:40.0000000",
    "DocumentId": "2076072233",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5953",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“A summary of OO Priciples” by Nigel-Findlater",
    "SortOrdinal": null,
    "ItemChar": "Introduction\n\nOO Design is more than just using an OO language. Over the years many bright programmers have built up a collection of rules that help to build well designed maintainable code. This article lists the main rules of OO programming. The intention is to inspire the reader to think about these rules and make further reading. There is a lot of material on the web that drills down into more details with plenty of examples.\n\nIvar Jacabson said “All systems change during their life cycles. This must be borne in mind when developing systems expected to last longer than the first version”. In other words software requirements change with time. The goal of Object Orientated Design is to program in such a way that such changes to the software are predictable and do not make a large impact in the program. In other words it should be stable in the presence of change\n\nBad design is characterized by\n\n    * A single change affects many other parts of the system (Rigidity)\n    * A single change affects unexpected parts of the system (Fragility)\n    * It is hard to reuse in another application (Immobility) \n\nThe Dependency Inversion Principle DIP\n\nImagine you have a simple database program. You don’t want to change the entire application when changing the database. This principle is targeted at removing such unwanted interdependency that can cause a design to be fragile. The rule states\n\n    * High level modules should not depend upon low level modules. Both should depend upon abstractions\n    * Abstractions should not depend upon details. Details should depend upon abstractions \n\nBooch said “All well structured object orientated architectures have clearly-defined layers with each layer providing some coherent set of services through a well defined and controlled interface.”\n\nIn other words design applications in layers where high level layers call lower level layers using Abstract interfaces. To conform to the principle of dependency inversion, we must isolate abstraction from the details of the problem. Then we must direct the dependencies of the design upon the abstractions.\n\nGood dependencies are extremely unlikely to change. In other words they are stable. We would like to base our architectural design around stable, non-volatile modules.\n\nThe Open-Close Principle OCP\n\nSoftware entities (Classes, Modules, functions etc) should be open for extension, but closed for modification\n\nIn other words design classes that never change. When a new requirements come add new code and don’t edit existing code. It is not possible to close against all possible changes. Therefore an experienced developer needs to understand the possible future wishes of users in order to make Strategic Closure. There are two ways of closure:\n\n    * Using Abstraction to gain explicit closure - This means the programmer applies abstraction to those parts of the programmer the designer feels are subject to change.\n    * Using Data Driven Approach to achieve closure\n\nLiskov Substitution Principle LSP\n\nEvery function that operates upon a reference or pointer to a base class should be able to operate on derivatives of that base class without knowing it. This means that virtual member functions of the derived class must expect only all the corresponding member functions of the base class. In other words any function that uses a base class must not be confused when a derived class is substituted for the base class\n\nThis is a difficult principle to apply. To conform avoid overwriting base class functions because this involves programming with details, instead try to program in abstractions\n\nIf this is violated then functions that operate on the pointers must first check the type of the actual object in order to work correctly.\n\nHeuristics and Conventions\n\nMake all member variables Private: Otherwise no function that calls the class can be closed to change. For example a status variable can change from Boolean to an enumeration, if this is not handled as a property then we cannot close status. This is called encapsulation.\n\nNo Global Variables. Because misbehaving modules may write erroneous data to such global variables whose effect can be felt in many places throughout the program. Sometimes Global variables are useful e.g. cout and cin in c++. If they do not violate the open close principle then sometimes they are worth the style violation\nStability Dependencies Principle SDP\n\nThe dependencies between packages in a design should be in the direction of stability of the packages. A package should only depend upon packages that are more stable than it is.\n\nSome volatility is necessary if the design is to be maintained. This is achieved by using the Common Closure Principle, in this way we design packages to be volatile and we expect them to change. Any package that we expect to be volatile should not be depended upon by a package that is difficult to change.\n\nSome things we don’t want to change. For example architectural decisions should be stable and not at all volatile. Therefore classes that encapsulate the high level design should be stable.\nThe stable Abstractions Principle SAP\n\nPackages that are maximally stable should be maximally abstract. Instable packages should be concrete. The abstraction of a package should be in proportion to it's stability\n\nCommon Reuse Principle CRP\n\nIf you reuse one class of a package, you reuse them all. This because any package delivered contains a released set of classes, therefore a change in any class means a new release of the entire package.\nThe Reuse / Release Equivalence Principle REP\n\nThe granule of reuse is the granule of release. Only components that are released through a tracking system can be effectively reused. This principle is important when there are several teams working on an application. To avoid one team disrupting another all packages used are tested and released. In this way the introduction of modified packages is in a controlled way.\n\nThe Common Closure Principle CCP\n\nThe classes in a package should be closed together against the same kinds of changes. Any change in a package affects all classes in the package. Just like a well organized team has a common goal because they all have to work together. This principle means that you should have a common strategic closure concept used through all classes in a package because they have to be released all together.\n\nThe stability Dependencies Principle SDP\n\nThe dependencies between packages in a design should be in the direction of stability of the packages. A package should only depend upon packages that are more stable than it is.\n\nDesigns that are highly interdependent tend to be rigid, not reusable and hard to maintain\n\nThe Acyclic Dependencies Principle (ADP)\n\nThe dependency structure between package must be a Direct Acyclic Graph (DAG). This means that if you plot out all packages it should be possible to arrange the dependencies to always point from top to bottom. Also it should not be possible to follow any lines of dependence and end up back at the same package. Because such packages would have to be released all at the same time defeating the object of having them as separate packages\nThe Interface Segregation Principle ISP\n\nClients should not be forced to depend upon interfaces that they don’t use.\n\nThis principle deals with the disadvantages of fat interfaces. Fat interfaces are not cohesive. In other words the interfaces of classes should be broken into groups of member functions. Each groups servers a different set of clients. Separation can be achieved by:\n\n    * Separation through Delegation\n    * Separation through multiple inheritance \n\nIf this principle is violated then there is a coupling between all clients\nPolyad vs Monad\n\nMonad is when properties are grouped into 1 single object that is then passed in a function parameter. Unfortunately this brings a dependency across all properties in that single object. Therefore its better to pass smaller objects (Polyad), in this way the dependencies are broken into smaller groups.\n\nInterface Pollution\n\nAs we build up classes there is a tendency for us to add functionality that is specific for a particular implementation. In this way the interface gets populated by functions and properties that are not required if the class was in a different context, thus making the interface fat. In this way this violates the Liskov Substitution principle. Separate Clients means separate interfaces\n\nThere is a backward force applied by clients upon interfaces. For example a user may wish to add a trivial extra function that cannot be exactly positioned in existing interfaces.\n\n[http://www.codeproject.com/KB/architecture/nfOORules.aspx]",
    "ItemText": "Introduction\n\nOO Design is more than just using an OO language. Over the years many bright programmers have built up a collection of rules that help to build well designed maintainable code. This article lists the main rules of OO programming. The intention is to inspire the reader to think about these rules and make further reading. There is a lot of material on the web that drills down into more details with plenty of examples.\n\nIvar Jacabson said “All systems change during their life cycles. This must be borne in mind when developing systems expected to last longer than the first version”. In other words software requirements change with time. The goal of Object Orientated Design is to program in such a way that such changes to the software are predictable and do not make a large impact in the program. In other words it should be stable in the presence of change\n\nBad design is characterized by\n\n    * A single change affects many other parts of the system (Rigidity)\n    * A single change affects unexpected parts of the system (Fragility)\n    * It is hard to reuse in another application (Immobility) \n\nThe Dependency Inversion Principle DIP\n\nImagine you have a simple database program. You don’t want to change the entire application when changing the database. This principle is targeted at removing such unwanted interdependency that can cause a design to be fragile. The rule states\n\n    * High level modules should not depend upon low level modules. Both should depend upon abstractions\n    * Abstractions should not depend upon details. Details should depend upon abstractions \n\nBooch said “All well structured object orientated architectures have clearly-defined layers with each layer providing some coherent set of services through a well defined and controlled interface.”\n\nIn other words design applications in layers where high level layers call lower level layers using Abstract interfaces. To conform to the principle of dependency inversion, we must isolate abstraction from the details of the problem. Then we must direct the dependencies of the design upon the abstractions.\n\nGood dependencies are extremely unlikely to change. In other words they are stable. We would like to base our architectural design around stable, non-volatile modules.\n\nThe Open-Close Principle OCP\n\nSoftware entities (Classes, Modules, functions etc) should be open for extension, but closed for modification\n\nIn other words design classes that never change. When a new requirements come add new code and don’t edit existing code. It is not possible to close against all possible changes. Therefore an experienced developer needs to understand the possible future wishes of users in order to make Strategic Closure. There are two ways of closure:\n\n    * Using Abstraction to gain explicit closure - This means the programmer applies abstraction to those parts of the programmer the designer feels are subject to change.\n    * Using Data Driven Approach to achieve closure\n\nLiskov Substitution Principle LSP\n\nEvery function that operates upon a reference or pointer to a base class should be able to operate on derivatives of that base class without knowing it. This means that virtual member functions of the derived class must expect only all the corresponding member functions of the base class. In other words any function that uses a base class must not be confused when a derived class is substituted for the base class\n\nThis is a difficult principle to apply. To conform avoid overwriting base class functions because this involves programming with details, instead try to program in abstractions\n\nIf this is violated then functions that operate on the pointers must first check the type of the actual object in order to work correctly.\n\nHeuristics and Conventions\n\nMake all member variables Private: Otherwise no function that calls the class can be closed to change. For example a status variable can change from Boolean to an enumeration, if this is not handled as a property then we cannot close status. This is called encapsulation.\n\nNo Global Variables. Because misbehaving modules may write erroneous data to such global variables whose effect can be felt in many places throughout the program. Sometimes Global variables are useful e.g. cout and cin in c++. If they do not violate the open close principle then sometimes they are worth the style violation\nStability Dependencies Principle SDP\n\nThe dependencies between packages in a design should be in the direction of stability of the packages. A package should only depend upon packages that are more stable than it is.\n\nSome volatility is necessary if the design is to be maintained. This is achieved by using the Common Closure Principle, in this way we design packages to be volatile and we expect them to change. Any package that we expect to be volatile should not be depended upon by a package that is difficult to change.\n\nSome things we don’t want to change. For example architectural decisions should be stable and not at all volatile. Therefore classes that encapsulate the high level design should be stable.\nThe stable Abstractions Principle SAP\n\nPackages that are maximally stable should be maximally abstract. Instable packages should be concrete. The abstraction of a package should be in proportion to it's stability\n\nCommon Reuse Principle CRP\n\nIf you reuse one class of a package, you reuse them all. This because any package delivered contains a released set of classes, therefore a change in any class means a new release of the entire package.\nThe Reuse / Release Equivalence Principle REP\n\nThe granule of reuse is the granule of release. Only components that are released through a tracking system can be effectively reused. This principle is important when there are several teams working on an application. To avoid one team disrupting another all packages used are tested and released. In this way the introduction of modified packages is in a controlled way.\n\nThe Common Closure Principle CCP\n\nThe classes in a package should be closed together against the same kinds of changes. Any change in a package affects all classes in the package. Just like a well organized team has a common goal because they all have to work together. This principle means that you should have a common strategic closure concept used through all classes in a package because they have to be released all together.\n\nThe stability Dependencies Principle SDP\n\nThe dependencies between packages in a design should be in the direction of stability of the packages. A package should only depend upon packages that are more stable than it is.\n\nDesigns that are highly interdependent tend to be rigid, not reusable and hard to maintain\n\nThe Acyclic Dependencies Principle (ADP)\n\nThe dependency structure between package must be a Direct Acyclic Graph (DAG). This means that if you plot out all packages it should be possible to arrange the dependencies to always point from top to bottom. Also it should not be possible to follow any lines of dependence and end up back at the same package. Because such packages would have to be released all at the same time defeating the object of having them as separate packages\nThe Interface Segregation Principle ISP\n\nClients should not be forced to depend upon interfaces that they don’t use.\n\nThis principle deals with the disadvantages of fat interfaces. Fat interfaces are not cohesive. In other words the interfaces of classes should be broken into groups of member functions. Each groups servers a different set of clients. Separation can be achieved by:\n\n    * Separation through Delegation\n    * Separation through multiple inheritance \n\nIf this principle is violated then there is a coupling between all clients\nPolyad vs Monad\n\nMonad is when properties are grouped into 1 single object that is then passed in a function parameter. Unfortunately this brings a dependency across all properties in that single object. Therefore its better to pass smaller objects (Polyad), in this way the dependencies are broken into smaller groups.\n\nInterface Pollution\n\nAs we build up classes there is a tendency for us to add functionality that is specific for a particular implementation. In this way the interface gets populated by functions and properties that are not required if the class was in a different context, thus making the interface fat. In this way this violates the Liskov Substitution principle. Separate Clients means separate interfaces\n\nThere is a backward force applied by clients upon interfaces. For example a user may wish to add a trivial extra function that cannot be exactly positioned in existing interfaces.\n\n[http://www.codeproject.com/KB/architecture/nfOORules.aspx]",
    "CreateDate": "2009-08-28T22:47:12.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-28T22:47:12.0000000",
    "DocumentId": "2076072234",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5954",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Principles Of Object Oriented Design”",
    "SortOrdinal": null,
    "ItemChar": "There are five principles of class design (aka SOLID):\n\n    * (SRP) The Single Responsibility Principle\n    * (OCP) The Open Closed Principle\n    * (LSP) The Liskov Substitution Principle\n    * (ISP) The Interface Segregation Principle\n    * (DIP) The Dependency Inversion Principle\n\nThere are three principles of package cohesion\n\n    * (REP) The Reuse Release Equivalence Principle\n    * (CCP) The Common Closure Principle\n    * (CRP) The Common Reuse Principle\n\nThere are three principles of package coupling\n\n    * (ADP) The Acyclic Dependencies Principle\n    * (SDP) The Stable Dependencies Principle\n    * (SAP) The Stable Abstractions Principle\n\n[http://c2.com/cgi/wiki?PrinciplesOfObjectOrientedDesign]",
    "ItemText": null,
    "CreateDate": "2009-08-28T23:17:41.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-28T23:17:41.0000000",
    "DocumentId": "2076072235",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5955",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Basic Unit Testing Guidelines” by Chris Eargle",
    "SortOrdinal": null,
    "ItemChar": "When I recently started looking through a certain project’s tests, I was struck by how difficult it was for me to read and understand. The tests were laid out haphazardly, and the code contained enough logic to make me wonder if it would be easier to analyze the functional code. Tests don’t do anyone good if they require that much analysis. In contrast, one of my favorite open source projects contains tests that allow me to learn the functionality of the system without looking at any functional code.\n\nThe intent of this post isn’t to describe advanced unit testing techniques but to describe a few guidelines that I feel should be implemented regardless if you’re mocking objects, using test driven development, or just want to ensure your code works. I am using Microsoft’s unit testing framework, but these same guidelines apply in most other unit testing frameworks.\n\nName Code Files Sensibly\n\nYou should be able to find your test, which may be difficult to do if you name your file “MyTests.cs.” Naming the file after the class you’re testing is a guideline many people use. Alternatively, you can name it after a functional area if you have more than one fixture per file. Yes, generally speaking you should have one class per file, but I admit to relaxing this rule because you are going to experience class explosion if you’re striving for 100% coverage. I prefer to name my class files after the class just as I do in functional development.\n\nName Fixture After Scenario\n\nYour test fixture should set up a scenario, and the name of the class should reflect that scenario. For example, if you’re testing what happens when a user activates an account, name the class “WhenUserActivatesAccount.”\n\n[TestClass]\npublic class WhenUserActivatesAccount\n{\n}\n\nSetup Code in Constructor\n\nUsually, your constructor (or Setup method in some frameworks) should initialize the scenario that you’re testing. If external setup must be done, use the ClassInitializer attribute on a static method.\n\nUser user;\nAccount account;\n\npublic WhenUserActivatesAccount()\n{\n    user = new User(\"kodefuguru\");\n    account = user.Account;\n    account.Activate();\n}\n\nIf you expect exceptions with certain parameters in various, similar scenarios; it may be necessary to call the setup code from within the testing method. I prefer to refactor my tests so that the test for the expected exception is in a derived class that tweaks the modifications within its constructor before calling the base constructor… for example, “public class WhenInvalidUserActivatesAccount : WhenUserActivatesAccount.”\n\nName Test After Expected Result\n\nIdeally, tests contain one Assert statement. You’re testing a specific condition that you expect to occur as a result of the scenario you’ve presented. When a user activates an account, you expect the account to activated. Therefore, your test should be named “AccountActivatedShouldBeTrue,” with the assertion “Assert.IsTrue(account.Activated).”\n\n[TestMethod]\npublic void AccountActivatedShouldBeTrue()\n{\n    Assert.IsTrue(account.Activated);\n}\n\nNo Conditionals Containing Assertions\n\nIf assertions are contained within a conditional statement, then you aren’t really ensuring that your code is running as expected. When you’re writing tests, you’re declaring the behavior of your system based upon certain conditions.\n\n[TestMethod]\npublic void AccountActivatedShouldDependOnUserValid()\n{\n    if (user.Valid)\n    {\n        Assert.IsTrue(account.Activated);\n    }\n    else\n    {\n        Assert.IsFalse(account.Activated);\n    }\n}\n\nIf I have a test like this, I’m not really declaring a fact about the system. Instead, I’m declaring facts about two different situations, one of which will not occur. Whether user.Valid is true or not should depend on the setup of my test, and I should know what the value will be when this test runs.\n\nDifferentiate Between Unit Tests and Integration Tests\n\nUnit tests are for testing an individual unit of code. Integration tests are for testing functionality between different systems. It is best to separate unit tests and integration tests by placing them in separate projects. If you’re not already doing so, at some point you may wish to automate your testing process. In a continuous integration environment, unit tests should be run with every build. Integration tests tend to be slower, and it is oftentimes not practical to automate them as frequently.\n\nIf you have trouble differentiating between unit tests and integration tests (i.e. everything you do connects to a service or persists to the database), it would be a good idea to look into mocking and inversion of control so that you can create tests for units of functionality.\n\n---\n\nThere are many more things you can do to create effective unit tests, but if you follow the few guidelines I have listed you will benefit immediately. It is important that it is easy for anyone looking at your tests to know how the system is supposed to behave. There is additional benefit in that you can harvest fixture and test names to create functional documentation for your software.\n\n[http://www.kodefuguru.com/post/2009/07/23/\n    Basic-Unit-Testing-Guidelines.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-28T23:24:42.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-28T23:24:42.0000000",
    "DocumentId": "2076072236",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5956",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Design Patterns”; dofactory.com",
    "SortOrdinal": null,
    "ItemChar": " Design patterns are recurring solutions to software design problems you find again and again in real-world application development. Patterns are about design and interaction of objects, as well as providing a communication platform concerning elegant, reusable solutions to commonly encountered programming challenges.\n\nThe Gang of Four (GoF) patterns are generally considered the foundation for all other patterns. They are categorized in three groups: Creational, Structural, and Behavioral. Here you will find information on these important patterns.\n\nTo give you a head start, the C# source code is provided in 2 forms: 'structural' and 'real-world'. Structural code uses type names as defined in the pattern definition and UML diagrams. Real-world code provides real-world programming situations where you may use these patterns.\n\nA third form, '.NET optimized' demonstrates design patterns that exploit built-in .NET 2.0, 3.0, and 3.5 features, such as, generics, attributes, delegates, object and collection initializers, automatic properties, and reflection. These and much more are available in our Design Pattern Framework 3.5TM. See our Singleton page for a .NET 3.5 Optimized code sample.\n\n  Creational Patterns\n  Abstract Factory \t  Creates an instance of several families of classes\n  Builder \t  Separates object construction from its representation\n  Factory Method \t  Creates an instance of several derived classes\n  Prototype \t  A fully initialized instance to be copied or cloned\n  Singleton \t  A class of which only a single instance can exist\n\n  Structural Patterns\n  Adapter \t  Match interfaces of different classes\n  Bridge \t  Separates an object’s interface from its implementation\n  Composite \t  A tree structure of simple and composite objects\n  Decorator \t  Add responsibilities to objects dynamically\n  Facade \t  A single class that represents an entire subsystem\n  Flyweight \t  A fine-grained instance used for efficient sharing\n  Proxy \t  An object representing another object\n\n  Behavioral Patterns\n  Chain of Resp. \t  A way of passing a request between a chain of objects\n  Command \t  Encapsulate a command request as an object\n  Interpreter \t  A way to include language elements in a program\n  Iterator \t  Sequentially access the elements of a collection\n  Mediator \t  Defines simplified communication between classes\n  Memento \t  Capture and restore an object's internal state\n  Observer \t  A way of notifying change to a number of classes\n  State \t  Alter an object's behavior when its state changes\n  Strategy \t  Encapsulates an algorithm inside a class\n  Template Method \t  Defer the exact steps of an algorithm to a subclass\n  Visitor \t  Defines a new operation to a class without change\n\n[http://www.dofactory.com/Patterns/Patterns.aspx]",
    "ItemText": null,
    "CreateDate": "2009-08-29T20:58:28.0000000",
    "EndDate": null,
    "ModificationDate": "2009-08-29T20:58:28.0000000",
    "DocumentId": "2076072237",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5957",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C#: “Direct casting vs ‘as’ operator?”; stackoverflow.com",
    "SortOrdinal": null,
    "ItemChar": "void Handler(object o, EventArgs e)\n{\n   // I swear o is a string\n   string s = (string)o; // 1\n   //-OR-\n   string s = o as string; // 2\n   // -OR-\n   string s = o.ToString(); // 3\n}\n\n/*\n\n1. Throws InvalidCastException if o is not a string. Otherwise, assigns o to s, even if o is null.\n\n2. Assigns null to s if o is not a string or if o is null. For this reason, you cannot use it with value types (the operator could never return null in that case). Otherwise, assigns o to s\n\n3. Causes a NullReferenceException of o is null. Assigns whatever o.ToString() returns to s, no matter what type o is.\n\nUse 1 for most conversions - it's simple and straightforward. I tend to almost never use 2 since if something is not the right type, I usually expect an exception to occur. I have only seen a need for this return-null type of functionality with badly designed libraries which use error codes (e.g. return null = error, instead of using exceptions).\n\n3 is not a cast and is just a method invocation. Use it for when you need the string representation of a non-string object.\n\n*/",
    "ItemText": null,
    "CreateDate": "2009-09-07T20:16:46.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-07T20:16:46.0000000",
    "DocumentId": "2076072238",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5958",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio and CodeRush XPress: “Can I change the key bindings on the free version of CodeRush Express for Visual Studio?”; stackoverflow.com",
    "SortOrdinal": null,
    "ItemChar": "The DevExpress guys responded. It's Ctrl+Shift+Alt+O to bring up the options.\n\n[http://stackoverflow.com/questions/459656/can-i-change-the-key-bindings-\n    on-the-free-version-of-coderush-express-for-visual]",
    "ItemText": null,
    "CreateDate": "2009-09-08T20:40:12.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-08T20:40:12.0000000",
    "DocumentId": "2076072239",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5959",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WSS: “Web Service Guidelines”; MSDN",
    "SortOrdinal": null,
    "ItemChar": "The Windows SharePoint Services Web services provided by the  Microsoft.SharePoint.SoapServer namespace include methods for accessing content on a Web site—such as for working with lists or site data—as well as methods for customizing meetings, imaging, document workspaces, or search.\n\nSOAP interfaces used in these services provide Microsoft .NET Framework developers with object models for creating solutions that work with Windows SharePoint Services remotely from a client or custom application. The interfaces are defined through the server-side object model of the Microsoft.SharePoint assembly, and their design is optimized to reduce the number of roundtrips transacted between client computer and server.\n\nMost Web services provide their functionality through the /_vti_bin virtual directory, which maps to the \\\\Program Files\\Common Files\\Microsoft Shared\\web Server extensions\\12\\ISAPI physical directory in the file system. The Administration Web service uses the /_vti_adm virtual directory, which maps to \\12\\ADMISAPI.\n\nNote:\n\nWindows SharePoint Services does not require the implementation of a particular version of SOAP. The SOAP response in any transaction with Windows SharePoint Services is managed by the .NET Framework.\n\nGuidelines\n\nYou can create a project in Microsoft Visual Studio 2005, such as a Windows application or console application, that uses a Windows SharePoint Services Web service to interact with SharePoint site and list data. For introductory information about creating a project in Visual Studio that works within the context of Windows SharePoint Services, see Getting Started with Programmatically Customizing a SharePoint Web Site in Visual Studio. After you create a project, you must set a reference to the Web service you want to implement in your code, specifying the full path to the Web service in relation to the site containing the data.\n\nTo add a reference to a Windows SharePoint Services Web service in Visual Studio\n\n1. In Solution Explorer, right-click References, and then click Add WebReference.\n\n2. In the Add Web Reference dialog box, for URL, type the absolute URL for the Web service in the following format: A path that includes the Web site for which the Web service will be available.\n\n    http://MyServer/[sites/][MySite/][MySubsite/]_vti_bin/Web_Service.asmx\n\nIf you are using methods in the Administration Web service, instead specify a path that goes to the administration port and that uses _vti_adm as the virtual directory, as follows:\n\n    http:// MyServer:Port_Number/_vti_adm/Admin.asmx\n\n3. Type a Web reference name, and then click Add Reference.\n\nInstantiating a Service\n\nInstantiate a Web service within code by using a constructor as follows:\n\n    Web_Reference_Name.Service_Name ServiceInstanceName =\n        new Web_Reference _Name.Service_Name();\n\nWeb_Reference_Name represents the name used for the reference to the Web service in Visual Studio, and Service_Name represents the name of the class providing methods that can be called through the Web service.\n\nEstablishing User Credentials\n\nTo establish system credentials for the current security context in which the application is running, add the following line after the previous line, which authenticates the user running the code by passing their default credentials to the Web service from the system credential cache. \n\n[http://msdn.microsoft.com/en-us/library/ms458094.aspx]",
    "ItemText": null,
    "CreateDate": "2009-09-08T21:49:14.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-08T21:49:14.0000000",
    "DocumentId": "2076072240",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5960",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“How to configure and use Text-to-Speech in Windows XP and in Windows Vista”; Windows Narrator",
    "SortOrdinal": null,
    "ItemChar": "Configure Text-to-Speech Options\n\nDetermine the Selected TTS Voice or Engine\nTo determine the selected Text-to-Speech voice, follow these steps:\n\n   1. Click Start, click Control Panel, and then double-click Speech.\n\n      On the Text-to-Speech tab, the displayed name in the Voice selection drop-down list is the currently active voice.\n   2. Click Preview Voice to hear the active voice. The text is spoken and the words are highlighted as they are spoken. \n\nPreview TTS Voice\nTo preview the Text-to-Speech voice, follow these steps:\n\n   1. Click Start, click Control Panel, and then double-click Speech.\n\n      On the Text-to-Speech tab, the displayed name in the Voice selection drop-down list is the active voice.\n   2. Click Preview Voice to hear the currently selected voice. The text is spoken and the words are highlighted as they are spoken.\n   3. During playback, Preview Voice will change to Stop. Click Stop to interrupt the voice playback. \n\nNOTE:You can change the text to be read by the Preview Voice by highlighting the text and typing in new text. These changes are not permanent and when you reopen Speech properties or select a different voice, the text will reset to the default.\n\nChange the TTS Voice or Engine\nTo change the Text-to-Speech voice or engine, follow these steps:\n\n   1. Click Start, click Control Panel, and then double-click Speech.\n   2. On the Text-to-Speech tab, the name displayed in the Voice selection drop-down list is the active voice.\n   3. Click the active voice inside the drop-down list, or use the arrow to display a list of available voices.\n   4. Click a new voice to select it.\n\n      The newly selected voice speaks the text in Preview Voice box.\n   5. Click OK or Apply to accept the new voice. \n\nNotes:\n\n    * A Text-to-Speech voice is closely associated with a particular speech engine. It may not be clear from the displayed name which language a voice is using. After selecting a speech engine or voice, test the voice and language by clicking Preview Voice.\n    * The language or voices supported by a speech engine may not be obvious from the engine's displayed name. Refer to the specific user's guide for detailed information about the engine. This includes not only the language supported, but also the lexicon purpose. The lexicon purpose indicates whether it is a general grammar or jargon specific to a profession such as legal or medical.\n    * Microsoft does not provide additional speech engines (voices), but a number of third-party products are available that support the new Microsoft Speech API. For information on these products, visit the following Microsoft Web site:\n      http://www.microsoft.com/speech/evaluation/thirdparty/engines.mspx (http://www.microsoft.com/speech/evaluation/thirdparty/engines.mspx) \n\nChange TTS Voice Rate\nTo change the Text-to-Speech voice rate, follow these steps:\n\n   1. Click Start, click Control Panel, and then double-click Speech.\n   2. Select the Text-to-Speech tab.\n   3. Move the Voice speed slider to change the rate of the Text-to-Speech voice. By default, it is set to Normal.\n   4. Click Preview Voice to hear the currently selected voice at the new rate. The text is spoken and the words are highlighted as they are spoken. \n\nTo Change the Text-to-Speech Volume\n\nTo adjust the volume output levels, follow the procedure below. Note that not all devices support this option in the same way. Some devices will not support volume control and the Volume button will be unavailable. Other devices may use their own display. In those cases, follow the instructions presented on the screen or documented separately with the engine.\n\n   1. Click Start, click Control Panel, and then double-click Speech.\n   2. On the Text-to-Speech tab, click Audio Output, and then click Volume.\n   3. A volume control mixer will be displayed. Adjust the appropriate device to the required level. \n\nUsing Text-to-Speech with Narrator\n\nNarrator is a Text-to-Speech utility for users who are blind or have impaired vision. Narrator reads what is displayed on your screen: the contents of the active window, menu options, or the text that you type.\n\nNarrator is designed to work with the Notepad, WordPad, Control Panel programs, Microsoft Internet Explorer, the Windows desktop, and Windows Setup. Narrator may not read words aloud correctly in other programs.\n\nNarrator has a number of options that allow you to customize the way screen elements are read.\n\n    * You can have new windows, menus, or shortcut menus read aloud when they are displayed.\n    * You can have typed characters read aloud.\n    * You can have the mouse pointer follow the active item on the screen.\n    * You can adjust the speed, volume, or pitch of the voice. \n\nThe accessibility tools included with Windows are intended to provide a minimum level of functionality for users with special needs. Most users with disabilities will need utility programs with more advanced functionality for daily use.\n\nNarrator is not available for all languages and is only supported on the English version of Windows XP and Windows Vista.\n\nTo Have Narrator Announce Events on the Screen\n\n1. Start Narrator by using one of the following methods:\n          * Click Start, point to Programs, point to Accessories, point to Accessibility, and then click Narrator.\n            -or-\n          * Press CTRL+ESC, press R, type narrator, and then press ENTER. \n2. In the Narrator dialog box, select the Announce events on screen check box. \n\nTo Have Narrator Read Typed Keys Aloud\n\n1. Press CTRL+ESC, press R, type narrator, and then press ENTER.\n2. Select the Read typed characters check box. \n\nTo Have the Mouse Pointer Move to Active Items When You Use Narrator\n\n1. Press CTRL+ESC, press R, type narrator, and then press ENTER.\n2. Select the Move mouse pointer to the active item check box. \n\nNavigating with the Keyboard and Narrator\n\nReading options\n\n    * To read an entire window, click the window and then press CTRL+SHIFT+SPACEBAR.\n    * To get information about the current item, press CTRL+SHIFT+ENTER.\n    * To get a more detailed description of an item, press CTRL+SHIFT+INSERT.\n    * To read the title bar of a window, press ALT+HOME.\n    * To read the status bar of a window, press ALT+END.\n    * To read the contents of an edit field, press CTRL+SHIFT+ENTER, or use the arrow keys.\n    * To silence the speech, press CTRL. \n\nKeyboard Options\n\n    * To switch to another program, press ALT+TAB.\n    * To switch to the next button or tool, press TAB. To go back, press SHIFT+TAB.\n    * To select an item from a drop-down list, use the arrow keys.\n    * To select a check box or option button, press SPACEBAR.\n    * To open Utility Manager, press the Windows logo key+U. \n\nTo Set Narrator Voice Options\n\n1. Press CTRL+ESC, press R, type narrator, and then press ENTER. Click Voice.\n\n2. In the Voice Settings dialog box, select the voice options that you want to change:\n     * To change the speed of the voice, click a number in the Speed box.\n     * To change the volume of the voice, click a number in the Volume box.\n     * To change the pitch of the voice, click a number in the Pitch box. \n\nNote: When you change voice settings, it may take from a few seconds to a minute before the new settings take effect. \n\nTo Start Narrator Minimized\n\nYou may find it useful to run Narrator minimized (after you have set the options in Narrator), because you do not need to see the Narrator dialog box when Narrator is running.\n\n1. Press CTRL+ESC, press R, type narrator, and then press ENTER.\n\n2. Select the Start Narrator minimized check box. \n\nTroubleshooting Text-to-Speech\n\nTo determine if Text-to-Speech is working properly, use the following tests.\n\n   1. Click Start, click Control Panel, and then double-click Speech.\n\n   2. On the Text-to-Speech tab, click Preview Voice. The text in Preview Voice should be spoken audibly with each word highlighted in turn. If so, TTS and the speakers are working. If you cannot hear the Preview Voice and see words highlighted as they are spoken, see \"Possible Text-to-Speech Problems\" section of this article for troubleshooting solutions. \n\nPossible Text-to-Speech Problems\nIf you do not hear speech after testing the system, consider the following:\n\n   1. The speaker volume is not turned up or is muted. Some speakers have external controls for volume and muting. Make sure the volume is turned up sufficiently or that muting is off.\n\n   2. The speakers may not be selected as the current output device. On the Text-to-Speech tab, click Audio Output to make sure that the speakers are selected.\n\n   3. The speakers might not be connected properly. Consult the speaker hardware documentation for additional information. Make certain that the sound card for the computer is also properly seated and installed, and that the correct drivers are available. See \"Set Up Speakers\" for additional connection information.\n\n   4. The Text-to-Speech engine may be corrupted. To test for corruption, switch to another engine. See the \"Changing the TTS voice or engine\" section of this article. If another engine is working properly, reinstall the specific engine from the original source. If no engine is working properly, reinstall the speech engine from the original source or CD. \n\n[http://support.microsoft.com/kb/306902]",
    "ItemText": "Configure Text-to-Speech Options\n\nDetermine the Selected TTS Voice or Engine\nTo determine the selected Text-to-Speech voice, follow these steps:\n\n   1. Click Start, click Control Panel, and then double-click Speech.\n\n      On the Text-to-Speech tab, the displayed name in the Voice selection drop-down list is the currently active voice.\n   2. Click Preview Voice to hear the active voice. The text is spoken and the words are highlighted as they are spoken. \n\nPreview TTS Voice\nTo preview the Text-to-Speech voice, follow these steps:\n\n   1. Click Start, click Control Panel, and then double-click Speech.\n\n      On the Text-to-Speech tab, the displayed name in the Voice selection drop-down list is the active voice.\n   2. Click Preview Voice to hear the currently selected voice. The text is spoken and the words are highlighted as they are spoken.\n   3. During playback, Preview Voice will change to Stop. Click Stop to interrupt the voice playback. \n\nNOTE:You can change the text to be read by the Preview Voice by highlighting the text and typing in new text. These changes are not permanent and when you reopen Speech properties or select a different voice, the text will reset to the default.\n\nChange the TTS Voice or Engine\nTo change the Text-to-Speech voice or engine, follow these steps:\n\n   1. Click Start, click Control Panel, and then double-click Speech.\n   2. On the Text-to-Speech tab, the name displayed in the Voice selection drop-down list is the active voice.\n   3. Click the active voice inside the drop-down list, or use the arrow to display a list of available voices.\n   4. Click a new voice to select it.\n\n      The newly selected voice speaks the text in Preview Voice box.\n   5. Click OK or Apply to accept the new voice. \n\nNotes:\n\n    * A Text-to-Speech voice is closely associated with a particular speech engine. It may not be clear from the displayed name which language a voice is using. After selecting a speech engine or voice, test the voice and language by clicking Preview Voice.\n    * The language or voices supported by a speech engine may not be obvious from the engine's displayed name. Refer to the specific user's guide for detailed information about the engine. This includes not only the language supported, but also the lexicon purpose. The lexicon purpose indicates whether it is a general grammar or jargon specific to a profession such as legal or medical.\n    * Microsoft does not provide additional speech engines (voices), but a number of third-party products are available that support the new Microsoft Speech API. For information on these products, visit the following Microsoft Web site:\n      http://www.microsoft.com/speech/evaluation/thirdparty/engines.mspx (http://www.microsoft.com/speech/evaluation/thirdparty/engines.mspx) \n\nChange TTS Voice Rate\nTo change the Text-to-Speech voice rate, follow these steps:\n\n   1. Click Start, click Control Panel, and then double-click Speech.\n   2. Select the Text-to-Speech tab.\n   3. Move the Voice speed slider to change the rate of the Text-to-Speech voice. By default, it is set to Normal.\n   4. Click Preview Voice to hear the currently selected voice at the new rate. The text is spoken and the words are highlighted as they are spoken. \n\nTo Change the Text-to-Speech Volume\n\nTo adjust the volume output levels, follow the procedure below. Note that not all devices support this option in the same way. Some devices will not support volume control and the Volume button will be unavailable. Other devices may use their own display. In those cases, follow the instructions presented on the screen or documented separately with the engine.\n\n   1. Click Start, click Control Panel, and then double-click Speech.\n   2. On the Text-to-Speech tab, click Audio Output, and then click Volume.\n   3. A volume control mixer will be displayed. Adjust the appropriate device to the required level. \n\nUsing Text-to-Speech with Narrator\n\nNarrator is a Text-to-Speech utility for users who are blind or have impaired vision. Narrator reads what is displayed on your screen: the contents of the active window, menu options, or the text that you type.\n\nNarrator is designed to work with the Notepad, WordPad, Control Panel programs, Microsoft Internet Explorer, the Windows desktop, and Windows Setup. Narrator may not read words aloud correctly in other programs.\n\nNarrator has a number of options that allow you to customize the way screen elements are read.\n\n    * You can have new windows, menus, or shortcut menus read aloud when they are displayed.\n    * You can have typed characters read aloud.\n    * You can have the mouse pointer follow the active item on the screen.\n    * You can adjust the speed, volume, or pitch of the voice. \n\nThe accessibility tools included with Windows are intended to provide a minimum level of functionality for users with special needs. Most users with disabilities will need utility programs with more advanced functionality for daily use.\n\nNarrator is not available for all languages and is only supported on the English version of Windows XP and Windows Vista.\n\nTo Have Narrator Announce Events on the Screen\n\n1. Start Narrator by using one of the following methods:\n          * Click Start, point to Programs, point to Accessories, point to Accessibility, and then click Narrator.\n            -or-\n          * Press CTRL+ESC, press R, type narrator, and then press ENTER. \n2. In the Narrator dialog box, select the Announce events on screen check box. \n\nTo Have Narrator Read Typed Keys Aloud\n\n1. Press CTRL+ESC, press R, type narrator, and then press ENTER.\n2. Select the Read typed characters check box. \n\nTo Have the Mouse Pointer Move to Active Items When You Use Narrator\n\n1. Press CTRL+ESC, press R, type narrator, and then press ENTER.\n2. Select the Move mouse pointer to the active item check box. \n\nNavigating with the Keyboard and Narrator\n\nReading options\n\n    * To read an entire window, click the window and then press CTRL+SHIFT+SPACEBAR.\n    * To get information about the current item, press CTRL+SHIFT+ENTER.\n    * To get a more detailed description of an item, press CTRL+SHIFT+INSERT.\n    * To read the title bar of a window, press ALT+HOME.\n    * To read the status bar of a window, press ALT+END.\n    * To read the contents of an edit field, press CTRL+SHIFT+ENTER, or use the arrow keys.\n    * To silence the speech, press CTRL. \n\nKeyboard Options\n\n    * To switch to another program, press ALT+TAB.\n    * To switch to the next button or tool, press TAB. To go back, press SHIFT+TAB.\n    * To select an item from a drop-down list, use the arrow keys.\n    * To select a check box or option button, press SPACEBAR.\n    * To open Utility Manager, press the Windows logo key+U. \n\nTo Set Narrator Voice Options\n\n1. Press CTRL+ESC, press R, type narrator, and then press ENTER. Click Voice.\n\n2. In the Voice Settings dialog box, select the voice options that you want to change:\n     * To change the speed of the voice, click a number in the Speed box.\n     * To change the volume of the voice, click a number in the Volume box.\n     * To change the pitch of the voice, click a number in the Pitch box. \n\nNote: When you change voice settings, it may take from a few seconds to a minute before the new settings take effect. \n\nTo Start Narrator Minimized\n\nYou may find it useful to run Narrator minimized (after you have set the options in Narrator), because you do not need to see the Narrator dialog box when Narrator is running.\n\n1. Press CTRL+ESC, press R, type narrator, and then press ENTER.\n\n2. Select the Start Narrator minimized check box. \n\nTroubleshooting Text-to-Speech\n\nTo determine if Text-to-Speech is working properly, use the following tests.\n\n   1. Click Start, click Control Panel, and then double-click Speech.\n\n   2. On the Text-to-Speech tab, click Preview Voice. The text in Preview Voice should be spoken audibly with each word highlighted in turn. If so, TTS and the speakers are working. If you cannot hear the Preview Voice and see words highlighted as they are spoken, see \"Possible Text-to-Speech Problems\" section of this article for troubleshooting solutions. \n\nPossible Text-to-Speech Problems\nIf you do not hear speech after testing the system, consider the following:\n\n   1. The speaker volume is not turned up or is muted. Some speakers have external controls for volume and muting. Make sure the volume is turned up sufficiently or that muting is off.\n\n   2. The speakers may not be selected as the current output device. On the Text-to-Speech tab, click Audio Output to make sure that the speakers are selected.\n\n   3. The speakers might not be connected properly. Consult the speaker hardware documentation for additional information. Make certain that the sound card for the computer is also properly seated and installed, and that the correct drivers are available. See \"Set Up Speakers\" for additional connection information.\n\n   4. The Text-to-Speech engine may be corrupted. To test for corruption, switch to another engine. See the \"Changing the TTS voice or engine\" section of this article. If another engine is working properly, reinstall the specific engine from the original source. If no engine is working properly, reinstall the speech engine from the original source or CD. \n\n[http://support.microsoft.com/kb/306902]",
    "CreateDate": "2009-09-08T21:54:36.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-08T21:54:36.0000000",
    "DocumentId": "2076072241",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5961",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 7: “30 Windows 7 Secrets”; Tim Sneath",
    "SortOrdinal": null,
    "ItemChar": "   1.  Windows Management. By now, you’ve probably seen that Windows 7 does a lot to make window management easier: you can “dock” a window to the left or right half of the screen by simply dragging it to the edge; similarly, you can drag the window to the top of the screen to maximize it, and double-click the window top / bottom border to maximize it vertically with the same horizontal width. What you might not know is that all these actions are also available with keyboard shortcuts:\n          * Win+Left Arrow and Win+Right Arrow dock;\n          * Win+Up Arrow and Win+Down Arrow maximizes and restores / minimizes;\n          * Win+Shift+Up Arrow and Win+Shift+Down Arrow maximizes and restores the vertical size.\n\n      This side-by-side docking feature is particularly invaluable on widescreen monitors – it makes the old Windows way of shift-clicking on two items in the taskbar and then using the context menu to arrange them feel really painful.\n\n   2. Display Projection. Had enough of messing around with weird and wonderful OEM display driver utilities to get your notebook display onto an external projector? In that case, you’ll be pleased to know that projection is really quick and simple with Windows 7. Just hit Win+P, and you’ll be rewarded by the following pop-up window:\n      The Win+P Projector Settings window allows you to quickly switch display settings. \n      Use the arrow keys (or keep hitting Win+P) to switch to “clone”, “extend” or “external only” display settings. You can also access the application as displayswitch.exe.\n\n      If you want broader control over presentation settings, you can also press Win+X to open the Windows Mobility Center, which allows you to turn on a presentation “mode” that switches IM clients to do not disturb, disables screensavers, sets a neutral wallpaper etc. (Note that this feature is also available in Windows Vista.)\n\n   3. Cut Out The Clutter. Working on a document in a window and want to get rid of all the extraneous background noise? Simply hit Win+Home to minimize all the non-active background windows, keeping the window you’re using in its current position. When you’re ready, simply press Win+Home again to restore the background windows to their original locations.\n\n   4. Multi-Monitor Windows Management. The earlier tip on window management showed how you can dock windows within a monitor. One refinement of those shortcuts is that you can use Win+Shift+Left Arrow and Win+Shift+Right Arrow to move windows from one monitor to another – keeping them in the same relative location to the monitor’s top-left origin.\n\n   5. Command Junkies Only. One of the most popular power toys in Windows XP was “Open Command Prompt Here”, which enabled you to use the graphical shell to browse around the file system and then use the context menu to open a command prompt at the current working directory. In Windows 7 (and in Windows Vista, incidentally – although not many folk knew about it), you can simply hold the Shift key down while selecting the context menu to get exactly the same effect. If the current working directory is a network location, it will automatically map a drive letter for you.\n\n   6. It’s a Global Village. If you’ve tried to change your desktop wallpaper, you’ve probably noticed that there’s a set of wallpapers there that match the locale you selected when you installed Windows. (If you picked US, you’ll see beautiful views of Crater Lake in Oregon, the Arches National Park, a beach in Hawai’i, etc.) In fact, there are several sets of themed wallpapers installed based on the language you choose, but the others are in a hidden directory. If you’re feeling in an international mood, simply browse to C:\\Windows\\Globalization\\MCT and you’ll see a series of pictures under the Wallpaper directory for each country. Just double-click on the theme file in the Theme directory to display a rotation through all the pictures for that country. (Note that some countries contain a generic set of placeholder art for now.)\n\n   7. The Black Box Recorder. Every developer wishes there was a way that an end-users could quickly and simply record a repro for the problem that they’re running into that is unique to their machine. Windows 7 comes to the rescue! Part of the in-built diagnostic tools that we use internally to send feedback on the product, the Problem Steps Recorder provides a simple screen capture tool that enables you to record a series of actions. Once you hit “record”, it tracks your mouse and keyboard and captures screenshots with any comments you choose to associate alongside them. Once you stop recording, it saves the whole thing to a ZIP file, containing an HTML-based “slide show” of the steps. It’s a really neat little tool and I can’t wait for it to become ubiquitous on every desktop! The program is called psr.exe; you can also search for it from Control Panel under “Record steps to reproduce a problem”.\n      The Problem Steps Recorder provides an easy way for users to record a problem repro for later diagnosis.\n\n   8. The Font of All Knowledge. Long Zheng will be happy: we’ve got rid of the Add Fonts dialog that has served Windows faithfully for the last twenty years. (Of course, for most of that time, it’s been deprecated – the easy way to install a set of fonts has simply been to drag them into the Fonts folder via Control Panel.) But now font installation is really easy – we’ve added an “Install” button to the font viewer applet that takes care of the installation process:\n      You can install a font in Windows 7 from the standard font viewer dialog.\n      There are lots of other new features built into Windows 7 that will satisfy those of a typographic bent, incidentally – grouping multiple weights together, the ability to hide fonts based on regional settings, a new text rendering engine built into the DirectWrite API, and support in the Font common file dialog for more than the four “standard” weights. For example:\n      The new common font dialog in Windows 7 supports more than four weights for a font. \n\n   9. Gabriola. As well as the other typographic features mentioned above, Windows 7 includes Gabriola, an elaborate display type from the Tiro Typeworks foundry that takes advantage of OpenType Layout to provide a variety of stylistic sets, flourishes and ornamentation ligatures:\n      Some sample variants of the Gabriola display font.\n\n  10. Who Stole My Browser? If you feel like Internet Explorer is taking a long time to load your page, it’s worth taking a look at the add-ons you have installed. One of the more helpful little additions in Internet Explorer 8 is instrumentation for add-on initialization, allowing you to quickly see whether you’re sitting around waiting for plug-ins to load. Just click Tools / Manage Add-ons, and then scroll right in the list view to see the load time. On my machine, I noticed that the Research add-on that Office 2007 installs was a particular culprit, and since I never use it, it was simple to disable it from the same dialog box.\n\n  11. Rearranging the Furniture. Unless you’ve seen it demonstrated, you may not know that the icons in the new taskbar aren’t fixed in-place. You can reorder them to suit your needs, whether they’re pinned shortcuts or running applications. What’s particularly nice is that once they’re reordered, you can start a new instance of any of the first five icons by pressing Win+1, Win+2, Win+3 etc. I love that I can quickly fire up a Notepad2 instance on my machine with a simple Win+5 keystroke, for instance.\n\n      What’s less well-known is that you can similarly drag the system tray icons around to rearrange their order, or move them in and out of the hidden icon list. It’s an easy way to customize your system to show the things you want, where you want them.\n\n  12. Installing from a USB Memory Stick. My wife has a Samsung NC10 netbook (very nice machine, by the way), and we wanted to install Windows 7 Beta on this machine to replace the pre-installed Windows XP environment. Like most netbook-class devices, this machine has no built-in media drive, and nor did I have an external USB DVD drive available to boot off. The solution: I took a spare 4GB USB 2.0 thumbdrive, reformatted it as FAT32, and simply copied the contents of the Windows 7 Beta ISO image to the memory stick using xcopy e:\\ f:\\ /e /f (where e: was the DVD drive and f: was the removable drive location). Not only was it easy to boot and install from the thumbdrive, it was also blindingly fast: quicker than the corresponding DVD install on my desktop machine.\n\n      It’s also worth noting in passing that Windows 7 is far better suited to a netbook than any previous operating system: it has a much lighter hard drive and memory footprint than Windows Vista, while also being able to optimize for solid state drives (for example, it switches off disk defragmentation since random read access is as fast as sequential read access, and it handles file deletions differently to minimize wear on the solid state drive).\n\n  13. I Want My Quick Launch Toolbar Back! You might have noticed that the old faithful Quick Launch toolbar is not only disabled by default in Windows 7, it’s actually missing from the list of toolbars. As is probably obvious, the concept of having a set of pinned shortcut icons is now integrated directly into the new taskbar. Based on early user interface testing, we think that the vast majority of users out there (i.e. not the kind of folk who read this blog, with the exception of my mother) will be quite happy with the new model, but if you’re after the retro behavior, you’ll be pleased to know that the old shortcuts are all still there. To re-enable it, do the following:\n          * Right-click the taskbar, choose Toolbars / New Toolbar\n          * In the folder selection dialog, enter the following string and hit OK:\n            %userprofile%\\AppData\\Roaming\\Microsoft\\Internet Explorer\\Quick Launch\n          * Turn off the “lock the taskbar” setting, and right-click on the divider. Make sure that “Show text” and “Show title” are disabled and the view is set to “small icons”.\n          * Use the dividers to rearrange the toolbar ordering to choice, and then lock the taskbar again.\n\n      If it’s not obvious by the semi-tortuous steps above, it’s worth noting that this isn’t something we’re exactly desperate for folks to re-enable, but it’s there if you really need it for some reason. Incidentally, we’d love you to really try the new model first and give us feedback on why you felt the new taskbar didn’t suit your needs.\n\n  14. It’s a Drag. Much play has been made of the Jump Lists feature in Windows 7, allowing applications like Windows Live Messenger to offer an easy task-based entry point. Jump lists replace the default right-click context menu in the new taskbar; another way to access them (particularly useful if you’re running Windows 7 on a one-button MacBook) is by left-clicking and dragging up in a kind of “swooshing” motion. This was designed for touch-enabled devices like the beautiful HP TouchSmart all-in-one PC, where the same gesture applies.\n\n      Another place where you can “swoosh” (not an official Microsoft term) is the IE 8 address bar, where the downward drag gesture brings up an expanded list containing the browser history, favorites and similar entries. The slower you drag, the cooler the animation!\n\n  15. Standards Support. Every review of Windows 7 that I’ve seen has noted the revamped WordPad and Paint applets that add an Office-like ribbon to expose their functionality. Few, however, have noticed one small but hopefully appreciated feature: WordPad can now read and write both the Word 2007-compatible Office Open XML file format but also the OpenDocument specification that IBM and Sun have been advocating:\n      WordPad in Windows 7 allows you to save in ODF or OOXML formats. \n\n  16. Windows Vista-Style Taskbar. I wasn’t initially a fan of the Windows 7 taskbar when it was first introduced in early Windows 7 builds, but as the design was refined in the run up to the beta, I was converted and now actively prefer the new look, particularly when I’ve got lots of windows open simultaneously. For those who really would prefer a look more reminiscent of Windows Vista, the good news is that it’s easy to customize the look of the taskbar to more closely mirror the old version:\n      The Windows 7 Taskbar can be configured for a Windows Vista compatibility view. \n      To achieve this look, right-click on the taskbar and choose the properties dialog. Select the “small icons” checkbox and under the “taskbar buttons” setting, choose “combine when taskbar is full”. It’s not pixel-perfect in accuracy, but it’s close from a functionality point of view.\n\n  17. Peeking at the Desktop. While we’re on the taskbar, it’s worth noting a few subtleties. You’ve probably seen the small rectangle in the bottom right hand corner: this is the feature we call “Aero Peek”, which enables you to see any gadgets or icons you’ve got on your desktop. I wanted to note that there’s a keyboard shortcut that does the same thing – just press Win+Space.\n\n  18. Running with Elevated Rights. Want to quickly launch a taskbar-docked application as an administrator? It’s easy – hold down Ctrl+Shift while you click on the icon, and you’ll immediately launch it with full administrative rights (assuming your account has the necessary permissions, of course!)\n\n  19. One More of the Same, Please. I’ve seen a few folk caught out by this one. If you’ve already got an application open on your desktop (for example, a command prompt window), and you want to open a second instance of the same application, you don’t have to go back to the start menu. You can simply hold down the Shift key while clicking on the taskbar icon, and it will open a new instance of the application rather than switching to the existing application. For a keyboard-free shortcut, you can middle-click with the third mouse button to do the same thing. (This trick assumes that your application supports multiple running instances, naturally.)\n\n  20. Specialized Windows Switching. Another feature that power users will love is the ability to do a kind of “Alt+Tab” switching across windows that belong to just one application. For example, if you’ve got five Outlook message windows open along with ten other windows, you can quickly tab through just the Outlook windows by holding down the Ctrl key while you repeatedly click on the single Outlook icon. This will toggle through each of the five Outlook windows in order, and is way faster than opening Alt+Tab and trying to figure out which of the tiny thumbnail images relates to the specific message you’re trying to find.\n\n  21. Walking Through the Taskbar. Another “secret” Windows shortcut: press Win+T to move the focus to the taskbar. Once you’re there, you can use the arrow keys to select a particular window or group and then hit Enter to launch or activate it. As ever, you can cancel out of this mode by hitting the Esc key. I don’t know for sure, but I presume this shortcut was introduced for those with accessibility needs. However, it’s equally valuable to power users – another good reason for all developers to care about ensuring their code is accessible.\n\n  22. image The Widescreen Tip. Almost every display sold these days is widescreen, whether you’re buying a notebook computer or a monitor. While it might be great for watching DVDs, when you’re trying to get work done it can sometimes feel like you’re a little squeezed for vertical space.\n\n      As a result, the first thing I do when I set up any new computer is to dock the taskbar to the left hand side of the screen. I can understand why we don’t set this by default – can you imagine the complaints from enterprise IT departments who have to retrain all their staff – but there’s no reason why you as a power user should have to suffer from default settings introduced when the average screen resolution was 800x600.\n\n      In the past, Windows did an indifferent job of supporting “side dockers” like myself. Sure, you could move the taskbar, but it felt like an afterthought – the gradients would be wrong, the Start menu had a few idiosyncrasies, and you’d feel like something of a second-class citizen. The Windows 7 taskbar feels almost as if it was designed with vertical mode as the default – the icons work well on the side of the screen, shortcuts like the Win+T trick mentioned previously automatically switch from left/right arrows to up/down arrows, and so on. The net effect is that you wind up with a much better proportioned working space.\n\n      Try it – in particular, if you’ve got a netbook computer that has a 1024x600 display, you’ll immediately appreciate the extra space for browsing the Internet. For the first day you’ll feel a little out of sync, but then I guarantee you’ll become an enthusiastic convert!\n\n  23. Pin Your Favorite Folders. If you’re always working in the same four or five folders, you can quickly pin them with the Explorer icon on the taskbar. Hold the right-click button down and drag the folder to the taskbar, and it will be automatically pinned in the Explorer Jump List.\n\n  24. Starting Explorer from “My Computer”. If you spend more time manipulating files outside of the documents folders than inside, you might want to change the default starting directory for Windows Explorer so that it opens at the Computer node:\n      The Computer node in Windows 7. \n      To do this, navigate to Windows Explorer in the Start Menu (it’s in the Accessories folder). Then edit the properties and change the target to read:\n      %SystemRoot%\\explorer.exe /root,::{20D04FE0-3AEA-1069-A2D8-08002B30309D}\n\n      If you want the change to affect the icon on the taskbar, you’ll need to unpin and repin it to the taskbar so that the new shortcut takes affect. It’s worth noting that Win+E will continue to display the documents library as the default view: I’ve not found a way to change this from the shell at this time.\n\n  25. ClearType Text Tuning and Display Color Calibration. If you want to tune up your display for image or text display, we have the tools included out of the box. It’s amazing what a difference this makes: by slightly darkening the color of the text and adjusting the gamma back a little, my laptop display looks much crisper than it did before. You’d adjust the brightness and contrast settings on that fancy 42” HDTV you’ve just bought: why wouldn’t you do the same for the computer displays that you stare at every day? \n      image image\n      Check out cttune.exe and dccw.exe respectively, or run the applets from Control Panel.\n\n  26. ISO Burning. Easy to miss if you’re not looking for it: you can double-click on any DVD or CD .ISO image and you’ll see a helpful little applet that will enable you to burn the image to a blank disc. No more grappling for shareware utilities of questionable parentage!\n      You can burn an ISO image to disk with this built-in utility in Windows 7.\n\n  27. Windows Movie Maker. Windows 7 doesn’t include a movie editing tool – it’s been moved to the Windows Live Essentials package, along with Photo Gallery, Mail and Messenger. Unfortunately, Windows Live Movie Maker is currently still in an early beta that is missing most of the old feature set (we’re reworking the application), and so you might be feeling a little bereft of options. It goes without saying that we intend to have a better solution by the time we ship Windows 7, but in the meantime the best solution for us early adopters is to use Windows Movie Maker 2.6 (which is essentially the same as the most recent update to the Windows XP version). It’s missing the full set of effects and transitions from the Windows Vista version, and doesn’t support HD editing, but it’s pretty functional for the typical usage scenario of home movie editing.\n      Windows Movie Maker 2.6 is compatible with Windows 7. \n      Download Windows Movie Maker 2.6 from here:\n      http://microsoft.com/downloads/details.aspx?FamilyID=d6ba5972-328e-4df7-8f9d-068fc0f80cfc \n\n  28. Hiding the Windows Live Messenger Icon. Hopefully your first act after Windows 7 setup completed was to download and install the Windows Live Essentials suite of applications (if not, then you’re missing out on a significant part of the Windows experience). If you’re a heavy user of IM, you may love the way that Windows Live Messenger is front and central on the taskbar, where you can easily change status and quickly send an IM to someone:\n      Windows Live Messenger appears by default on the taskbar.\n      On the other hand, you may prefer to keep Windows Live Messenger in the system tray where it’s been for previous releases. If so, you can fool the application into the old style of behavior. To do this, close Windows Live Messenger, edit the shortcut properties and set the application to run in Windows Vista compatibility mode. Bingo!\n\n  29. Enjoy The Fish. I’m surprised that not many people seem to have caught the subtle joke with the Siamese fighting fish that is part of the default background, so I’ll do my part at keeping the secret hidden. Check out wikipedia for a clue.\n\n  30. When All Else Fails… There are always those times when you’re in a really bad spot – you can’t boot up properly, and what you really want is something you can quickly use to get at a command prompt so you can properly troubleshoot. Windows 7 now includes the ability to create a system repair disc, which is essentially a CD-bootable version of Windows that just includes the command prompt and a suite of system tools. Just type “system repair disc” in the Start Menu search box, and you’ll be led to the utility.\n\n\n[http://blogs.msdn.com/tims/archive/2009/01/12/\n    the-bumper-list-of-windows-7-secrets.aspx]",
    "ItemText": "   1.  Windows Management. By now, you’ve probably seen that Windows 7 does a lot to make window management easier: you can “dock” a window to the left or right half of the screen by simply dragging it to the edge; similarly, you can drag the window to the top of the screen to maximize it, and double-click the window top / bottom border to maximize it vertically with the same horizontal width. What you might not know is that all these actions are also available with keyboard shortcuts:\n          * Win+Left Arrow and Win+Right Arrow dock;\n          * Win+Up Arrow and Win+Down Arrow maximizes and restores / minimizes;\n          * Win+Shift+Up Arrow and Win+Shift+Down Arrow maximizes and restores the vertical size.\n\n      This side-by-side docking feature is particularly invaluable on widescreen monitors – it makes the old Windows way of shift-clicking on two items in the taskbar and then using the context menu to arrange them feel really painful.\n\n   2. Display Projection. Had enough of messing around with weird and wonderful OEM display driver utilities to get your notebook display onto an external projector? In that case, you’ll be pleased to know that projection is really quick and simple with Windows 7. Just hit Win+P, and you’ll be rewarded by the following pop-up window:\n      The Win+P Projector Settings window allows you to quickly switch display settings. \n      Use the arrow keys (or keep hitting Win+P) to switch to “clone”, “extend” or “external only” display settings. You can also access the application as displayswitch.exe.\n\n      If you want broader control over presentation settings, you can also press Win+X to open the Windows Mobility Center, which allows you to turn on a presentation “mode” that switches IM clients to do not disturb, disables screensavers, sets a neutral wallpaper etc. (Note that this feature is also available in Windows Vista.)\n\n   3. Cut Out The Clutter. Working on a document in a window and want to get rid of all the extraneous background noise? Simply hit Win+Home to minimize all the non-active background windows, keeping the window you’re using in its current position. When you’re ready, simply press Win+Home again to restore the background windows to their original locations.\n\n   4. Multi-Monitor Windows Management. The earlier tip on window management showed how you can dock windows within a monitor. One refinement of those shortcuts is that you can use Win+Shift+Left Arrow and Win+Shift+Right Arrow to move windows from one monitor to another – keeping them in the same relative location to the monitor’s top-left origin.\n\n   5. Command Junkies Only. One of the most popular power toys in Windows XP was “Open Command Prompt Here”, which enabled you to use the graphical shell to browse around the file system and then use the context menu to open a command prompt at the current working directory. In Windows 7 (and in Windows Vista, incidentally – although not many folk knew about it), you can simply hold the Shift key down while selecting the context menu to get exactly the same effect. If the current working directory is a network location, it will automatically map a drive letter for you.\n\n   6. It’s a Global Village. If you’ve tried to change your desktop wallpaper, you’ve probably noticed that there’s a set of wallpapers there that match the locale you selected when you installed Windows. (If you picked US, you’ll see beautiful views of Crater Lake in Oregon, the Arches National Park, a beach in Hawai’i, etc.) In fact, there are several sets of themed wallpapers installed based on the language you choose, but the others are in a hidden directory. If you’re feeling in an international mood, simply browse to C:\\Windows\\Globalization\\MCT and you’ll see a series of pictures under the Wallpaper directory for each country. Just double-click on the theme file in the Theme directory to display a rotation through all the pictures for that country. (Note that some countries contain a generic set of placeholder art for now.)\n\n   7. The Black Box Recorder. Every developer wishes there was a way that an end-users could quickly and simply record a repro for the problem that they’re running into that is unique to their machine. Windows 7 comes to the rescue! Part of the in-built diagnostic tools that we use internally to send feedback on the product, the Problem Steps Recorder provides a simple screen capture tool that enables you to record a series of actions. Once you hit “record”, it tracks your mouse and keyboard and captures screenshots with any comments you choose to associate alongside them. Once you stop recording, it saves the whole thing to a ZIP file, containing an HTML-based “slide show” of the steps. It’s a really neat little tool and I can’t wait for it to become ubiquitous on every desktop! The program is called psr.exe; you can also search for it from Control Panel under “Record steps to reproduce a problem”.\n      The Problem Steps Recorder provides an easy way for users to record a problem repro for later diagnosis.\n\n   8. The Font of All Knowledge. Long Zheng will be happy: we’ve got rid of the Add Fonts dialog that has served Windows faithfully for the last twenty years. (Of course, for most of that time, it’s been deprecated – the easy way to install a set of fonts has simply been to drag them into the Fonts folder via Control Panel.) But now font installation is really easy – we’ve added an “Install” button to the font viewer applet that takes care of the installation process:\n      You can install a font in Windows 7 from the standard font viewer dialog.\n      There are lots of other new features built into Windows 7 that will satisfy those of a typographic bent, incidentally – grouping multiple weights together, the ability to hide fonts based on regional settings, a new text rendering engine built into the DirectWrite API, and support in the Font common file dialog for more than the four “standard” weights. For example:\n      The new common font dialog in Windows 7 supports more than four weights for a font. \n\n   9. Gabriola. As well as the other typographic features mentioned above, Windows 7 includes Gabriola, an elaborate display type from the Tiro Typeworks foundry that takes advantage of OpenType Layout to provide a variety of stylistic sets, flourishes and ornamentation ligatures:\n      Some sample variants of the Gabriola display font.\n\n  10. Who Stole My Browser? If you feel like Internet Explorer is taking a long time to load your page, it’s worth taking a look at the add-ons you have installed. One of the more helpful little additions in Internet Explorer 8 is instrumentation for add-on initialization, allowing you to quickly see whether you’re sitting around waiting for plug-ins to load. Just click Tools / Manage Add-ons, and then scroll right in the list view to see the load time. On my machine, I noticed that the Research add-on that Office 2007 installs was a particular culprit, and since I never use it, it was simple to disable it from the same dialog box.\n\n  11. Rearranging the Furniture. Unless you’ve seen it demonstrated, you may not know that the icons in the new taskbar aren’t fixed in-place. You can reorder them to suit your needs, whether they’re pinned shortcuts or running applications. What’s particularly nice is that once they’re reordered, you can start a new instance of any of the first five icons by pressing Win+1, Win+2, Win+3 etc. I love that I can quickly fire up a Notepad2 instance on my machine with a simple Win+5 keystroke, for instance.\n\n      What’s less well-known is that you can similarly drag the system tray icons around to rearrange their order, or move them in and out of the hidden icon list. It’s an easy way to customize your system to show the things you want, where you want them.\n\n  12. Installing from a USB Memory Stick. My wife has a Samsung NC10 netbook (very nice machine, by the way), and we wanted to install Windows 7 Beta on this machine to replace the pre-installed Windows XP environment. Like most netbook-class devices, this machine has no built-in media drive, and nor did I have an external USB DVD drive available to boot off. The solution: I took a spare 4GB USB 2.0 thumbdrive, reformatted it as FAT32, and simply copied the contents of the Windows 7 Beta ISO image to the memory stick using xcopy e:\\ f:\\ /e /f (where e: was the DVD drive and f: was the removable drive location). Not only was it easy to boot and install from the thumbdrive, it was also blindingly fast: quicker than the corresponding DVD install on my desktop machine.\n\n      It’s also worth noting in passing that Windows 7 is far better suited to a netbook than any previous operating system: it has a much lighter hard drive and memory footprint than Windows Vista, while also being able to optimize for solid state drives (for example, it switches off disk defragmentation since random read access is as fast as sequential read access, and it handles file deletions differently to minimize wear on the solid state drive).\n\n  13. I Want My Quick Launch Toolbar Back! You might have noticed that the old faithful Quick Launch toolbar is not only disabled by default in Windows 7, it’s actually missing from the list of toolbars. As is probably obvious, the concept of having a set of pinned shortcut icons is now integrated directly into the new taskbar. Based on early user interface testing, we think that the vast majority of users out there (i.e. not the kind of folk who read this blog, with the exception of my mother) will be quite happy with the new model, but if you’re after the retro behavior, you’ll be pleased to know that the old shortcuts are all still there. To re-enable it, do the following:\n          * Right-click the taskbar, choose Toolbars / New Toolbar\n          * In the folder selection dialog, enter the following string and hit OK:\n            %userprofile%\\AppData\\Roaming\\Microsoft\\Internet Explorer\\Quick Launch\n          * Turn off the “lock the taskbar” setting, and right-click on the divider. Make sure that “Show text” and “Show title” are disabled and the view is set to “small icons”.\n          * Use the dividers to rearrange the toolbar ordering to choice, and then lock the taskbar again.\n\n      If it’s not obvious by the semi-tortuous steps above, it’s worth noting that this isn’t something we’re exactly desperate for folks to re-enable, but it’s there if you really need it for some reason. Incidentally, we’d love you to really try the new model first and give us feedback on why you felt the new taskbar didn’t suit your needs.\n\n  14. It’s a Drag. Much play has been made of the Jump Lists feature in Windows 7, allowing applications like Windows Live Messenger to offer an easy task-based entry point. Jump lists replace the default right-click context menu in the new taskbar; another way to access them (particularly useful if you’re running Windows 7 on a one-button MacBook) is by left-clicking and dragging up in a kind of “swooshing” motion. This was designed for touch-enabled devices like the beautiful HP TouchSmart all-in-one PC, where the same gesture applies.\n\n      Another place where you can “swoosh” (not an official Microsoft term) is the IE 8 address bar, where the downward drag gesture brings up an expanded list containing the browser history, favorites and similar entries. The slower you drag, the cooler the animation!\n\n  15. Standards Support. Every review of Windows 7 that I’ve seen has noted the revamped WordPad and Paint applets that add an Office-like ribbon to expose their functionality. Few, however, have noticed one small but hopefully appreciated feature: WordPad can now read and write both the Word 2007-compatible Office Open XML file format but also the OpenDocument specification that IBM and Sun have been advocating:\n      WordPad in Windows 7 allows you to save in ODF or OOXML formats. \n\n  16. Windows Vista-Style Taskbar. I wasn’t initially a fan of the Windows 7 taskbar when it was first introduced in early Windows 7 builds, but as the design was refined in the run up to the beta, I was converted and now actively prefer the new look, particularly when I’ve got lots of windows open simultaneously. For those who really would prefer a look more reminiscent of Windows Vista, the good news is that it’s easy to customize the look of the taskbar to more closely mirror the old version:\n      The Windows 7 Taskbar can be configured for a Windows Vista compatibility view. \n      To achieve this look, right-click on the taskbar and choose the properties dialog. Select the “small icons” checkbox and under the “taskbar buttons” setting, choose “combine when taskbar is full”. It’s not pixel-perfect in accuracy, but it’s close from a functionality point of view.\n\n  17. Peeking at the Desktop. While we’re on the taskbar, it’s worth noting a few subtleties. You’ve probably seen the small rectangle in the bottom right hand corner: this is the feature we call “Aero Peek”, which enables you to see any gadgets or icons you’ve got on your desktop. I wanted to note that there’s a keyboard shortcut that does the same thing – just press Win+Space.\n\n  18. Running with Elevated Rights. Want to quickly launch a taskbar-docked application as an administrator? It’s easy – hold down Ctrl+Shift while you click on the icon, and you’ll immediately launch it with full administrative rights (assuming your account has the necessary permissions, of course!)\n\n  19. One More of the Same, Please. I’ve seen a few folk caught out by this one. If you’ve already got an application open on your desktop (for example, a command prompt window), and you want to open a second instance of the same application, you don’t have to go back to the start menu. You can simply hold down the Shift key while clicking on the taskbar icon, and it will open a new instance of the application rather than switching to the existing application. For a keyboard-free shortcut, you can middle-click with the third mouse button to do the same thing. (This trick assumes that your application supports multiple running instances, naturally.)\n\n  20. Specialized Windows Switching. Another feature that power users will love is the ability to do a kind of “Alt+Tab” switching across windows that belong to just one application. For example, if you’ve got five Outlook message windows open along with ten other windows, you can quickly tab through just the Outlook windows by holding down the Ctrl key while you repeatedly click on the single Outlook icon. This will toggle through each of the five Outlook windows in order, and is way faster than opening Alt+Tab and trying to figure out which of the tiny thumbnail images relates to the specific message you’re trying to find.\n\n  21. Walking Through the Taskbar. Another “secret” Windows shortcut: press Win+T to move the focus to the taskbar. Once you’re there, you can use the arrow keys to select a particular window or group and then hit Enter to launch or activate it. As ever, you can cancel out of this mode by hitting the Esc key. I don’t know for sure, but I presume this shortcut was introduced for those with accessibility needs. However, it’s equally valuable to power users – another good reason for all developers to care about ensuring their code is accessible.\n\n  22. image The Widescreen Tip. Almost every display sold these days is widescreen, whether you’re buying a notebook computer or a monitor. While it might be great for watching DVDs, when you’re trying to get work done it can sometimes feel like you’re a little squeezed for vertical space.\n\n      As a result, the first thing I do when I set up any new computer is to dock the taskbar to the left hand side of the screen. I can understand why we don’t set this by default – can you imagine the complaints from enterprise IT departments who have to retrain all their staff – but there’s no reason why you as a power user should have to suffer from default settings introduced when the average screen resolution was 800x600.\n\n      In the past, Windows did an indifferent job of supporting “side dockers” like myself. Sure, you could move the taskbar, but it felt like an afterthought – the gradients would be wrong, the Start menu had a few idiosyncrasies, and you’d feel like something of a second-class citizen. The Windows 7 taskbar feels almost as if it was designed with vertical mode as the default – the icons work well on the side of the screen, shortcuts like the Win+T trick mentioned previously automatically switch from left/right arrows to up/down arrows, and so on. The net effect is that you wind up with a much better proportioned working space.\n\n      Try it – in particular, if you’ve got a netbook computer that has a 1024x600 display, you’ll immediately appreciate the extra space for browsing the Internet. For the first day you’ll feel a little out of sync, but then I guarantee you’ll become an enthusiastic convert!\n\n  23. Pin Your Favorite Folders. If you’re always working in the same four or five folders, you can quickly pin them with the Explorer icon on the taskbar. Hold the right-click button down and drag the folder to the taskbar, and it will be automatically pinned in the Explorer Jump List.\n\n  24. Starting Explorer from “My Computer”. If you spend more time manipulating files outside of the documents folders than inside, you might want to change the default starting directory for Windows Explorer so that it opens at the Computer node:\n      The Computer node in Windows 7. \n      To do this, navigate to Windows Explorer in the Start Menu (it’s in the Accessories folder). Then edit the properties and change the target to read:\n      %SystemRoot%\\explorer.exe /root,::{20D04FE0-3AEA-1069-A2D8-08002B30309D}\n\n      If you want the change to affect the icon on the taskbar, you’ll need to unpin and repin it to the taskbar so that the new shortcut takes affect. It’s worth noting that Win+E will continue to display the documents library as the default view: I’ve not found a way to change this from the shell at this time.\n\n  25. ClearType Text Tuning and Display Color Calibration. If you want to tune up your display for image or text display, we have the tools included out of the box. It’s amazing what a difference this makes: by slightly darkening the color of the text and adjusting the gamma back a little, my laptop display looks much crisper than it did before. You’d adjust the brightness and contrast settings on that fancy 42” HDTV you’ve just bought: why wouldn’t you do the same for the computer displays that you stare at every day? \n      image image\n      Check out cttune.exe and dccw.exe respectively, or run the applets from Control Panel.\n\n  26. ISO Burning. Easy to miss if you’re not looking for it: you can double-click on any DVD or CD .ISO image and you’ll see a helpful little applet that will enable you to burn the image to a blank disc. No more grappling for shareware utilities of questionable parentage!\n      You can burn an ISO image to disk with this built-in utility in Windows 7.\n\n  27. Windows Movie Maker. Windows 7 doesn’t include a movie editing tool – it’s been moved to the Windows Live Essentials package, along with Photo Gallery, Mail and Messenger. Unfortunately, Windows Live Movie Maker is currently still in an early beta that is missing most of the old feature set (we’re reworking the application), and so you might be feeling a little bereft of options. It goes without saying that we intend to have a better solution by the time we ship Windows 7, but in the meantime the best solution for us early adopters is to use Windows Movie Maker 2.6 (which is essentially the same as the most recent update to the Windows XP version). It’s missing the full set of effects and transitions from the Windows Vista version, and doesn’t support HD editing, but it’s pretty functional for the typical usage scenario of home movie editing.\n      Windows Movie Maker 2.6 is compatible with Windows 7. \n      Download Windows Movie Maker 2.6 from here:\n      http://microsoft.com/downloads/details.aspx?FamilyID=d6ba5972-328e-4df7-8f9d-068fc0f80cfc \n\n  28. Hiding the Windows Live Messenger Icon. Hopefully your first act after Windows 7 setup completed was to download and install the Windows Live Essentials suite of applications (if not, then you’re missing out on a significant part of the Windows experience). If you’re a heavy user of IM, you may love the way that Windows Live Messenger is front and central on the taskbar, where you can easily change status and quickly send an IM to someone:\n      Windows Live Messenger appears by default on the taskbar.\n      On the other hand, you may prefer to keep Windows Live Messenger in the system tray where it’s been for previous releases. If so, you can fool the application into the old style of behavior. To do this, close Windows Live Messenger, edit the shortcut properties and set the application to run in Windows Vista compatibility mode. Bingo!\n\n  29. Enjoy The Fish. I’m surprised that not many people seem to have caught the subtle joke with the Siamese fighting fish that is part of the default background, so I’ll do my part at keeping the secret hidden. Check out wikipedia for a clue.\n\n  30. When All Else Fails… There are always those times when you’re in a really bad spot – you can’t boot up properly, and what you really want is something you can quickly use to get at a command prompt so you can properly troubleshoot. Windows 7 now includes the ability to create a system repair disc, which is essentially a CD-bootable version of Windows that just includes the command prompt and a suite of system tools. Just type “system repair disc” in the Start Menu search box, and you’ll be led to the utility.\n\n\n[http://blogs.msdn.com/tims/archive/2009/01/12/\n    the-bumper-list-of-windows-7-secrets.aspx]",
    "CreateDate": "2009-09-08T21:59:17.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-08T21:59:17.0000000",
    "DocumentId": "2076072242",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5962",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "MOSS: “Programmatically retrieve an InfoPath form from a SharePoint library--?MOSS??|SharePoint???”",
    "SortOrdinal": null,
    "ItemChar": "The System.Net.WebClient class is good to use when you are only making use of Windows SharePoint Services 3.0 without Forms Server installed. If Forms Server has been installed on top of WSS 3.0, the System.Net.WebClient class will return the contents of the ASP.NET page used by Forms Server to display InfoPath forms instead of the actual XML contents of the form, unless the query string parameter noredirect with a value of true is appended to the URL of the form.\n\n[http://www.mosstec.cn/html/c23/2009-03/183.htm]",
    "ItemText": null,
    "CreateDate": "2009-09-15T17:08:55.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-15T17:08:55.0000000",
    "DocumentId": "2076072243",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5963",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET MVC: “What is the best way to return XML from a controller’s action in ASP.NET MVC?”; stackoverflow.com",
    "SortOrdinal": null,
    "ItemChar": "Use MVCContrib's XmlResult Action.\n\nFor reference here is their code:\n\npublic class XmlResult : ActionResult\n{\n    private object objectToSerialize;\n\n    /// <summary>\n    /// Initializes a new instance of the <see cref=\"XmlResult\"/> class.\n    /// </summary>\n    /// <param name=\"objectToSerialize\">The object to serialize to XML.</param>\n    public XmlResult(object objectToSerialize)\n    {\n        this.objectToSerialize = objectToSerialize;\n    }\n\n    /// <summary>\n    /// Gets the object to be serialized to XML.\n    /// </summary>\n    public object ObjectToSerialize\n    {\n        get { return this.objectToSerialize; }\n    }\n\n    /// <summary>\n    /// Serialises the object that was passed into the constructor to XML and writes the corresponding XML to the result stream.\n    /// </summary>\n    /// <param name=\"context\">The controller context for the current request.</param>\n    public override void ExecuteResult(ControllerContext context)\n    {\n        if (this.objectToSerialize != null)\n        {\n            context.HttpContext.Response.Clear();\n            var xs = new System.Xml.Serialization.XmlSerializer(this.objectToSerialize.GetType());\n            context.HttpContext.Response.ContentType = \"text/xml\";\n            xs.Serialize(context.HttpContext.Response.Output, this.objectToSerialize);\n        }\n    }\n}\n\n[http://stackoverflow.com/questions/134905/what-is-the-best-way-\n    to-return-xml-from-a-controllers-action-in-aspnet-mvc]\n\n[http://www.codeplex.com/MVCContrib]\n",
    "ItemText": null,
    "CreateDate": "2009-09-15T17:11:39.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-15T17:11:39.0000000",
    "DocumentId": "2076072244",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5964",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET MVC: “Custom Route Constraints”; James Welch",
    "SortOrdinal": null,
    "ItemChar": "Here’s the resulting constraint class:\n\nusing System;\nusing System.Web;\nusing System.Web.Routing;\n\npublic class NotEqual : IRouteConstraint\n{\n   private string[] _matches = null; \n\n   public NotEqual(params string[] matches)\n   {\n      _matches = matches;\n   }\n\n   public bool Match(HttpContextBase httpContext, Route route,\n                     string parameterName, RouteValueDictionary values,\n                     RouteDirection routeDirection)\n   {\n      bool foundMatch = false;\n      foreach (string match in _matches)\n         if (String.Compare(values[parameterName].ToString(), match, true)\n               == 0)\n            foundMatch = true;\n\n      return !foundMatch;//not matching!\n   }\n}\n\nThis was a pretty simple fix, just changing the code to use params string[] instead of a single string argument. You can also use this in replace of Stephen’s code, since you can also pass in a single argument. \n\n[http://jamesewelch.wordpress.com/\n    2008/08/11/custom-route-constraints-aspnet-mvc/]",
    "ItemText": null,
    "CreateDate": "2009-09-15T17:15:40.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-15T17:15:40.0000000",
    "DocumentId": "2076072245",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5965",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET MVC: “Tip #30 – Create Custom Route Constraints”; NotEqual Constraint\n; Stephen Walther",
    "SortOrdinal": null,
    "ItemChar": "Creating a NotEqual Constraint\n\nThe easiest way to exclude one set of pages from matching a particular route is to take advantage of the custom route constraint in Listing 2.\n\nListing 2 – NotEqualConstraint.cs\n\n    using System;  \n    using System.Web;  \n    using System.Web.Routing;  \n\n    public class NotEqual : IRouteConstraint  \n    {  \n        private string _match = String.Empty;  \n\n        public NotEqual(string match)  \n        {  \n            _match = match;  \n        }  \n\n        public bool Match(HttpContextBase httpContext, Route route, string parameterName, RouteValueDictionary values, RouteDirection routeDirection)  \n        {  \n            return String.Compare(values[parameterName].ToString(), _match, true) != 0;  \n        }  \n    }  \nHere’s how you can use the NotEqual constraint to exclude the /Admin pages from the Default route:\n\n    routes.MapRoute(\n        \"Default\",\n        \"{controller}/{action}/{id}\",\n        new { controller = \"Home\", action = \"Index\", id = \"\" }, \n        new { controller = new NotEqual(\"Admin\") }\n    );\n\nThis route won’t match any request when the controller parameter gets the value Admin. For example, this route won’t match the URLs /Admin/DeleteAll or /Admin/Index.\n\n[http://stephenwalther.com/blog/archive/\n    2008/08/07/asp-net-mvc-tip-30-create-custom-route-constraints.aspx]",
    "ItemText": null,
    "CreateDate": "2009-09-15T18:02:38.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-15T18:02:38.0000000",
    "DocumentId": "2076072246",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5966",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Does Salt Change the pH of Water?”; eHow.com",
    "SortOrdinal": null,
    "ItemChar": "It depends upon the pH of the water into which the salt is being introduced. Chemically speaking, salt is a base compound, falling smack in the center of the acid-alkaline spectrum. If introduced to water which has a high pH, the pH might be lowered incrementally toward the center of the pH spectrum depending on how much water there was and how much salt was introduced. If the water had a very low pH, making it very acidic, the salt would increase the pH toward the center of the spectrum.\n\n[http://www.ehow.com/how-does_4577912_does-salt-change-ph-water.html]",
    "ItemText": null,
    "CreateDate": "2009-09-15T18:03:57.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-15T18:03:57.0000000",
    "DocumentId": "2076072247",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5967",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005/2008: “SQL Server UPDATE STATISTICS”",
    "SortOrdinal": null,
    "ItemChar": "You can add statistics on columns that don't have statistics in order to boost query performance. For example, you can create statistics for columns in a composite index other than the first column (which is the default for AUTO CREATE STATISTICS), and for columns that are not indexed.\n\nThe SQL Server Query Optimizer has the ability to use statistics on columns that are not indexed in order to create more optimal execution plans. Doing so can increase performance without having the overhead of indexes. In fact, sometimes it is more efficient to use column statistics instead of an index to optimize query performance. The only way to know this for sure is to make controlled experiments and see what works best for your situation.\n\n[http://www.sql-server-performance.com/tips/update_statistics_p1.aspx]",
    "ItemText": null,
    "CreateDate": "2009-09-15T18:05:25.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-15T18:05:25.0000000",
    "DocumentId": "2076072248",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5968",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: “Constructor Chaining : C# 411”",
    "SortOrdinal": null,
    "ItemChar": "When you want to share initialization code among multiple constructors, there are generally two approaches. \n\nInitialization Method\n\nThe first approach is to create a private initialization method that you call from each constructor:\n\n    public class Test\n    {\n        public Test( bool a, int b, string c )\n        {\n            this.m_C = c;\n            this.Initialize( a, b );\n        }\n        public Test( bool a, int b, float d )\n        {\n            this.m_D = d;\n            this.Initialize( a, b );\n        }\n        private void Initialize( bool a, int b )\n        {\n            this.m_A = a;\n            this.m_B = b;\n        }\n        private bool m_A;\n        public bool A { get { return this.m_A; } }\n        private int m_B;\n        public int B { get { return this.m_B; } }\n        private string m_C;\n        public string C { get { return this.m_C; } }\n        private float m_D;\n        public float D { get { return this.m_D; } }\n    }\n\nConstructor Chaining\n\nAnother approach is to use constructor chaining, where a constructor calls another constructor in its class using the \": this()\" designation as shown below:\n\n    public Test( bool a, int b, string c )\n        : this( a, b )\n    {\n        this.m_C = c;\n    }\n    public Test( bool a, int b, float d )\n        : this( a, b )\n    {\n        this.m_D = d;\n    }\n    private Test( bool a, int b )\n    {\n        this.m_A = a;\n        this.m_B = b;\n    }\n\nChaining is Better\n\nAs described in Nazish Ahsan's blog, constructor chaining is preferred over an initialization method because it eliminates duplicate code and supports readonly members.\n\nThe compiler automatically adds code to constructors to initialize variables and call the base class constructor.  When you write your own common initialization function, the compiler duplicates this code in each constructor that calls the base constructor.  Using constructor chaining so that you have only one constructor calling the base constructor will eliminate this duplicate code.\n\nIn addition, you can initialize readonly members only in a constructor and not in a method.  So if the member m_A in our Test class is readonly, the first example would fail to compile since it tries to initialize the m_A readonly member in the Initialize method.  This means you must either duplicate read-only initialization code in every constructor (bad idea) or use constructor chaining as shown in the second approach (good idea).\n\nAlso notice in the second example how the chained constructor \"Test( bool a, int b)\" is marked private, even though the constructors that call it are public.  This allows you to hide chained constructors if desired.\n\n[http://www.csharp411.com/constructor-chaining/]\n\n[http://nazish.blog.com/1027633/]",
    "ItemText": null,
    "CreateDate": "2009-09-15T18:07:57.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-15T18:07:57.0000000",
    "DocumentId": "2076072249",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5969",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PowerShell and Team Foundation Server: “Team Foundation Server Project Browser PowerPack”",
    "SortOrdinal": null,
    "ItemChar": "The edit work item dialog is not functional due to a Multithreaded Apartment/Single-threaded Apartment issue. Powershell runs in MTA mode and the TFS work item editor control requires STA mode. Currently there doesn't seem to be any nice way of launching a STA thread from Powershell.\n- The move work item iteration functionality seems to update the local work item instance, but the change doesn't flush to the server.\n- I haven't been able to successfully load the TFS assemblies from within Powershell on a 64bit install of Windows.\n\n[http://www.powergui.org/entry.jspa?externalID=1852&categoryID=21]",
    "ItemText": null,
    "CreateDate": "2009-09-15T18:09:42.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-15T18:09:42.0000000",
    "DocumentId": "2076072250",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5970",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Silverlight Tip of the Day #57—How to Dynamically Load a Silverlight Control within another Silverlight Control”; Mike Snow",
    "SortOrdinal": null,
    "ItemChar": "Let’s say your site is entirely written in Silverlight but you want to be able to load and run a different Silverlight application within your main Silverlight application/site. Currently this scenario is not directly supported in Silverlight. However, I have a work around that will more or less accomplish this scenario.\n\nThe way I do this is to add a second, hidden Silverlight control to your web page. I set the Source for this second Silverlight control to be empty (“”) until I want the Silverlight control to load and display. I also put the control in a DIV that is hidden. You can load and unload this control as well and you can dynamically set it to point to different XAP’s to load different applications in your site.\n\nStep 1.\n\nIn my web site (I.e. default.aspx file):\n\n    Main Silverlight Control that represents my web site:\n\n    <div style=\"height: 100%; z-index: 1; position: absolute;\">\n        <asp:Silverlight ID=\"Xaml1\" runat=\"server\" Source=\"~/ClientBin/SLDev.xap\"  MinimumVersion=\"2.0.30523\" Width=\"100%\" Height=\"100%\" />\n    </div>\n\n    Second Silverlight control that we will load and display within the main site:\n\n    <div id=\"myDIV\" style=\"z-index: 2; display: none; position: absolute; padding-left: 0px;   padding-top: 200px;\">\n        <asp:Silverlight ID=\"Silverlight1\" runat=\"server\" Source=\"\" MinimumVersion=\"2.0.30523\" Width=\"800px\" Height=\"600px\" />\n    </div>\n\nThings to notice:\n\n   1. I set the style z-index order to be higher for the second Silverlight control than the first so that it appears on top.\n   2. I set style display = none for the DIV of the second Silverlight control so that it is not displayed and does not interfere with mouse/keyboard input for the first Silverlight control.\n   3. I set style position = absolute so that the controls can float on top of each other. You will want to adjust the padding-left and padding-right to properly position the control where you want it on your site.\n   4. I set Source =”” for the second Silverlight control to keep it from loading an application until I am ready.\n\nStep 2.\n\nIn my web site (I.e default.aspx) I add two Javascript functions that my Silverlight application can call to load and hide the second Silverlight control. Few notes:\n\n   1. LoadSilverlightControl() – This function takes a parameter that contains the full path to the XAP we want to load. Example: “ClientBin\\TankWar.xap”\n   2. For the Silverlight Control, I call setAttribute() to change the source of the Silverlight control.\n   3. For the DIV I modify style.display setting it to “block” so that it will display or “none” to hide it.\n\n<script type=\"text/javascript\">\n\n    function LoadSilverlightControl(ctrl) {\n\n \n\n        var control = document.getElementById(\"Silverlight1\");\n\n        var div = document.getElementById(\"myDIV\");\n\n        div.style.display = \"block\";        \n\n        control.setAttribute(\"Source\", ctrl);\n\n    }\n\n \n\n    function HideSilverlightControl() {\n\n \n\n        var control = document.getElementById(\"Silverlight1\");\n\n        var div = document.getElementById(\"myDIV\");\n\n        div.style.display = \"none\";\n\n        control.setAttribute(\"Source\", \"\");\n\n    }\n\n</script>\n\nStep 3.\n\nThe call from Silverlight->Javascript to make the control load and run:\n\nHtmlPage.Window.Invoke(\"LoadSilverlightControl\", \"ClientBin/TankWar.xap\");\n\nTo hide it:\n\nHtmlPage.Window.Invoke(\"HideSilverlightControl\");\n\nResult.\n\nThe following screen shots show this in action. Click on the “Games” button….\n\n[http://blogs.silverlight.net/blogs/msnow/archive/2008/10/08/\n    silverlight-tip-of-the-day-57-how-to-dynamically-load-\n    a-silverlight-control-within-another-silverlight-control.aspx]",
    "ItemText": null,
    "CreateDate": "2009-09-17T20:02:12.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-17T20:02:12.0000000",
    "DocumentId": "2076072251",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5971",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Silverlight Tip of the Day #58 – Text Wrapping and Line Breaks in TextBlocks”",
    "SortOrdinal": null,
    "ItemChar": "TextBlocks are a great control to use in Silverlight to display read only text. In Tip of the Day #45 I covered the basic usage of TextBlocks including formatting and text runs.\n\nFor this tip I would like to show you how to make a TextBlock with wrapping text and line breaks.\n\nTo make a TextBlock wrap its text you will need to set TextWrapping =\"Wrap\" on the TextBlock. The following example below shows a TextBlock in a ContentControl that is only 100 pixels wide. With TextWrapping set to “Wrap”, the TextBlock will wrap to a new line each time its contents reach 100 pixels in width.\n\nXAML:\n\n<Canvas Margin=\"10\">\n    <ContentControl Width=\"100\">\n        <TextBlock TextWrapping=\"Wrap\">        \n\n            A lie can travel half way around the world while the truth is putting on its shoes.        \n\n            --Mark Twain\n        </TextBlock>\n    </ContentControl>\n</Canvas>\n\n…\n\nAs you may notice the text above does not include any of the line breaks seen in the XAML. To insert a line break all you need to do is insert a <LineBreak> tag within the text.\n\nExample:\n\n<Canvas Margin=\"10\">\n    <ContentControl Width=\"100\">\n        <TextBlock TextWrapping=\"Wrap\">\n            A lie can travel half way around the world while the truth is putting on its shoes.\n            <LineBreak></LineBreak>\n            <LineBreak></LineBreak>\n            --Mark Twain\n        </TextBlock>\n    </ContentControl>\n\n</Canvas>\n\n[http://blogs.silverlight.net/blogs/msnow/archive/2008/10/09/\n    silverlight-tip-of-the-day-58-text-\n    wrapping-and-line-breaks-in-textblocks.aspx]",
    "ItemText": null,
    "CreateDate": "2009-09-17T20:04:51.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-17T20:04:51.0000000",
    "DocumentId": "2076072252",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5972",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2005: “Understanding \"login failed\" (Error 18456) error messages”",
    "SortOrdinal": null,
    "ItemChar": "In continuing with the theme of understanding error messages I'll discuss the \"login failed\" messages that are surfaced by the client and written to the server's error log (if the auditlevel is set to log failures on login which is the default) in the event of an error during the login process.\n\nIf the server encounters an error that prevents a login from succeeding, the client will display the following error mesage.\n\nMsg 18456, Level 14, State 1, Server <server name>, Line 1\nLogin failed for user '<user name>'\n\nNote that the message is kept fairly nondescript to prevent information disclosure to unauthenticated clients.   In particular, the 'State' will always be shown to be '1' regardless of the nature of the problem.  To determine the true reason for the failure, the administrator can look in the server's error log where a corresponding entry will be written.  An example of an entry is:\n\n2006-02-27 00:02:00.34 Logon     Error: 18456, Severity: 14, State: 8.\n\n2006-02-27 00:02:00.34 Logon     Login failed for user '<user name>'. [CLIENT: <ip address>]\n\nThe key to the message is the 'State' which the server will accurately set to reflect the source of the problem.  In the example above, State 8 indicates that the authentication failed because the user provided an incorrect password.\n\n[http://blogs.msdn.com/sql_protocols/archive/2006/02/21/536201.aspx]",
    "ItemText": null,
    "CreateDate": "2009-09-17T20:08:16.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-17T20:08:16.0000000",
    "DocumentId": "2076072253",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5973",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“WPF Multithreading with BackgroundWorker”; Pavan Podila",
    "SortOrdinal": null,
    "ItemChar": "UI libraries in general have always been single-threaded. This means that you can access the UI controls only from the thread that created it (thread-affinity). When running long-running operations you would typically use a background thread to do that job. However progress needs to be reported on the UI and the user needs to have a way to cancel the operation. Doing that from a background thread is not possible and hence you have to jump threads, ie. from the  background-thread to the ui-thread.\n\nIn WPF you can do that with the Dispatcher using Dispather.BeginInvoke(). This allows a background-task to put a delegate on the Dispatcher queue which will be then invoked on the UI thread. However this approach by itself does not allow reporting progress or user-cancellations. You will have to build a component that uses the Dispatcher.BeginInvoke() to provide this functionality, using a technique described in this MSDN article.\n\nThe good news is that you really don’t have to write such a component since one is available already: the BackgroundWorker class introduced in .Net Framework 2.0. Programmers who are familiar with WinForms 2.0 may have already used this component. But BackgroundWorker works equally well with WPF because it is completely agnostic to the threading model. BackgroundWorker provides the facilities that I mentioned  before: progress reporting and user-cancellation and makes it very convenient to use. If you are not familiar with this class, have a look at this article.\n\nThe internals\n\nUnder the covers it makes use of some new classes introduced in Framework 2.0, namely the SynchronizationContext, AsyncOperation and  AsyncOperationManager. I found this great article by Leslie Sanford at CodeProject which describes these classes. In short AsyncOperationManager is the central class that makes use of the other two. When you call BackgroundWorker.RunWorkerAsync(), its the AsyncOperationManager that collects the synchronization-context of the invoking thread and knows how to marshall calls to the UI-thread from the background-thread.\n\nThe real trick happens with the SynchronizationContext instance. A WinForms app would provide its own context: System.Windows.Forms.WindowsFormsSynchronizationContext, which derives from SynchronizationContext and knows how to Send/Post to the UI thread. Similarly in WPF we have the DispatcherSynchronizationContext that does exactly the same job.\n\nBackgroundWorker uses the AsyncOperationManager, which internally gets an instance of DispatcherSynchronizationContext when a WPF app starts up. Thus when you call RunWorkerAsync(), the right context is picked up. Inside the DoWork delegate, when you call BackgroundWorker.ReportProgress(), the call internally marshalls it to run on the UI thread.\n\nSo with this powerful combination of classes, multithreading in WPF only got so much easier ;-) . I have attached a simple project that demonstrates the use of BackgroundWorker with WPF.\n\n[http://blog.pixelingene.com/?p=36]",
    "ItemText": null,
    "CreateDate": "2009-09-17T20:13:10.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-17T20:13:10.0000000",
    "DocumentId": "2076072254",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5974",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code:  ToType<T>() Extension Method; “how to handle conversions from an anonymous type to a specific type by using .NET 3.5 extensions”; Ed Guzman; CodeProject.com",
    "SortOrdinal": null,
    "ItemChar": "public static object ToType<T>(this object obj, T type)\n{\n\n    //create instance of T type object:\n    var tmp = Activator.CreateInstance(Type.GetType(type.ToString())); \n\n    //loop through the properties of the object you want to covert:          \n    foreach (PropertyInfo pi in obj.GetType().GetProperties()\n    {\n      try \n      {   \n\n        //get the value of property and try \n        //to assign it to the property of T type object:\n        tmp.GetType().GetProperty(pi.Name).SetValue(tmp, \n                                  pi.GetValue(obj, null), null)\n      }\n      catch { }\n     }  \n\n   //return the T type object:         \n   return tmp; \n}\n\n[http://www.codeproject.com/KB/linq/AnonymousTypeTransform.aspx]",
    "ItemText": null,
    "CreateDate": "2009-09-17T20:18:30.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-17T20:18:30.0000000",
    "DocumentId": "2076072255",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5975",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "RAM: “What does 'nonecc unbuffered' mean for buying a memory upgrade?”; Yahoo! Answers",
    "SortOrdinal": null,
    "ItemChar": "ecc and unbuffered is the same thing and ecc means error correction code and the ram has a little code in it that runs all the time and checks for errors ( mostly used in servers and some workstations ) and it usually cost more than non ecc\n\nif yours is just a desktop then most times it will not need ( and some times will not work with) ecc also sometimes they state that the ecc is also edo ( extended data output ) which may not work either in a desktop\n\n[http://answers.yahoo.com/question/index?qid=20080120023001AAq3Fkg]",
    "ItemText": null,
    "CreateDate": "2009-09-19T21:20:02.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-19T21:20:02.0000000",
    "DocumentId": "2076072256",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5976",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“System.Windows.Markup Namespace”; XamlReader; MSDN",
    "SortOrdinal": null,
    "ItemChar": "Provides types to support serialization and Extensible Application Markup Language (XAML) in Windows Presentation Foundation (WPF). In particular, contains classes to support XAML markup extensions and other language concepts that are defined by the XAML specification, reader/writer implementation classes, serializers, and attributes that report XAML characteristics to reflection-based analysis.\n\n…\n\nXamlReader\n\nProvides the means to parse XAML markup into an object or a tree of objects. \n\n[http://msdn.microsoft.com/en-us/library/system.windows.markup.aspx]",
    "ItemText": null,
    "CreateDate": "2009-09-19T21:24:16.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-19T21:24:16.0000000",
    "DocumentId": "2076072257",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5977",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu: “Terminator—Multiple GNOME terminals in one window”; ubuntugeek.com",
    "SortOrdinal": null,
    "ItemChar": "This is a project to produce an efficient way of filling a large area of screen space with terminals. This is done by splitting the window into a resizeable grid of terminals. As such, you can produce a very flexible arrangements of terminals for different tasks.\n\nAt the moment, Terminator is available for Ubuntu Hardy and you can install from source in Feisty,Gutsy etc\n\nYou can download Terminator source code from here this is only for who is using ubuntu 7.10 and below version users\n\nIf you are using hardy use the following command to install\n\n    sudo aptitude install terminator\n\nInstall terminator in ubuntu gutsy,feisty etc\n\n[http://www.ubuntugeek.com/terminator-multiple-gnome-\n    terminals-in-one-window.html]",
    "ItemText": null,
    "CreateDate": "2009-09-19T21:28:09.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-19T21:28:09.0000000",
    "DocumentId": "2076072258",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5978",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF: “Using XamlReader.Load”; MSDN",
    "SortOrdinal": null,
    "ItemChar": "The  Load method is the managed API equivalent of the  CreateFromXaml method in the JavaScript API. As with  CreateFromXaml, the input to  Load is a XAML fragment provided as a string, and the output is an object that can be added to the Silverlight object tree.\n\nXamlReader in general is similar in design to \"XmlReader\" classes that are present in Silverlight (such as System.Xml..::.XmlReader or System.Xml..::.XmlDictionaryReader) as well as in other Microsoft development technologies. The XamlReader is a largely stateless static class with methods that create objects; it provides object construction behavior that parallels the XAML processing that generates run-time object trees from XAML in Silverlight.\n\nThere are several general concepts about creating objects from XAML that are identical whether you are using the JavaScript  CreateFromXaml or the managed Load method:\n\n* The XAML content string must define a single root element.\n\n* The XAML content string must be well-formed XML, as well as being valid XAML.\n\nThere are also several notable differences between using XamlReader and using the CreateFromXaml method:\n\n* For XamlReader, the required root element must specify a default XML namespace. This is typically the Silverlight namespace, xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\". For CreateFromXaml, the namespace is implicitly assumed to be the default if not specified.\n\n* For Load, the newly created object tree should maintain a discrete XAML namescope when it is connected to the main Silverlight object tree. CreateFromXaml can also have this behavior if you specify an optional parameter, but the default behavior for object trees created from CreateFromXaml is that the XAML namescopes are merged if and when the object trees are combined. This introduces the possibility of name collisions at the time the merge is attempted.\n\n* JavaScript is loosely typed. The object returned from CreateFromXaml is within the JavaScript API and is interpreted implicitly in the context of the property it is being used to set. Explicitly casting the object return value is not necessary. By contrast, the managed API has the same strong typing requirements as managed code in general. Load returns a generic object. Before being added to the Silverlight object tree, the object must be of the type that is required by the property or collection where it is added, and this might require a cast.\n\n[http://msdn.microsoft.com/en-us/library/cc189076%28VS.95%29.aspx]",
    "ItemText": null,
    "CreateDate": "2009-09-19T21:54:37.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-19T21:54:37.0000000",
    "DocumentId": "2076072259",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5979",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“VMware Self-Service- Hardware and Firmware Requirements for 64-Bit Guest Operating Systems”",
    "SortOrdinal": null,
    "ItemChar": "VMware Workstation and VMware Server require a 64-bit CPU to run a 64-bit guest operating system. While it is theoretically possible to emulate a 64-bit instruction set on 32-bit hardware, doing so results in unacceptable performance degradation. \n\n[http://vmware.com/info?id=152]\n\n[http://kb.vmware.com/selfservice/microsites/search.do?\n    language=en_US&cmd=displayKC&externalId=1901]",
    "ItemText": null,
    "CreateDate": "2009-09-19T21:57:00.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-19T21:57:00.0000000",
    "DocumentId": "2076072260",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5980",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WordPress CSS; WordPress Codex",
    "SortOrdinal": null,
    "ItemChar": "WordPress relies heavily on the presentation styles within CSS. With the introduction of WordPress v1.5 Themes, your layout options haven't just expanded, they've exploded! WordPress has made it easier than ever to change your website look, and opened up the field even more to help you create your own Theme and page layout.\n\nCSS stands for Cascading Style Sheets. It allows you to store style presentation information (like colors and layout) separate from your HTML structure. This allows precision control of your website layout and makes your pages faster and easier to update.\n\nThis article briefly describes the use of CSS in WordPress, and lists some references for further information. For information on CSS itself, see Know Your Sources#CSS.\n\nWordPress and CSS\n\nWordPress Themes use a combination of template files, template tags, and CSS style sheets to generate your WordPress site's look.\n\nTemplate Files \n    Template files are the building blocks which come together to create your site. In the WordPress Theme structure, the header, sidebar, content, and footer are all contained within individual files. They join together to create your page. This allows you to customize the building blocks. For example, in the Default WordPress Theme, the multi-post view found on the front page, category, archives, and search web pages on your site, the sidebar is present. Click on any post, you will be taken to the single post view and the sidebar will now be gone. You can choose which parts and pieces appear on your page, and customize them individually, allowing for a different header or sidebar to appear on all pages within a specific category. And more. For a more extensive introduction to Templates, see Stepping Into Templates. \n\nTemplate Tags \n    Template tags are the bits of code which provide instructions and requests for information stored within the WordPress database. Some of these are highly configurable, allowing you to customize the date, time, lists, and other elements displayed on your website. You can learn more about template tags in Stepping Into Template Tags. \n\nCSS Style Sheets \n    This is where it all comes together. On every template file within your site, there are XHTML tags and CSS references wrapped around your template tags and content. In the style sheet within each Theme are commands for the page's structure. Without these instructions, your page would simply look like a long typed page. With these instructions, you can move the building block structures around, making your header very long and filled with graphics or photographs, or simple and narrow. Your site can \"float\" in the middle of the viewer's screen with space on the left and right, or stretch across the screen, filling the whole page. Your sidebar can be on the right or left, or even start midway down the page. How you style your page is up to you. But the instructions for styling are found in the style.css file within each Theme folder. \n\nWordPress Generated Classes\n\nSeveral classes for aligning images and block elements (DIV, P, TABLE etc.) were introduced in WordPress 2.5: aligncenter, alignleft and alignright. In addition the class alignnone is added to images that are not aligned, so they can be styled differently if needed.\n\nThe same classes are used to align images that have a caption (as of WordPress 2.6). Three additional CSS classes are needed for the captions, together the alignment and caption classes are:\n\n.aligncenter,\ndiv.aligncenter {\n   display: block;\n   margin-left: auto;\n   margin-right: auto;\n}\n\n.alignleft {\n   float: left;\n}\n\n.alignright {\n   float: right;\n}\n\n.wp-caption {\n   border: 1px solid #ddd;\n   text-align: center;\n   background-color: #f3f3f3;\n   padding-top: 4px;\n   margin: 10px;\n   /* optional rounded corners for browsers that support it */\n   -moz-border-radius: 3px;\n   -khtml-border-radius: 3px;\n   -webkit-border-radius: 3px;\n   border-radius: 3px;\n}\n\n.wp-caption img {\n   margin: 0;\n   padding: 0;\n   border: 0 none;\n}\n\n.wp-caption p.wp-caption-text {\n   font-size: 11px;\n   line-height: 17px;\n   padding: 0 4px 5px;\n   margin: 0;\n}\n\nEach theme should have these or similar styles in its style.css file to be able to display images and captions properly.\n\nAdditionally, there are a few more WordPress class tags that you may optionally wish to style because they are generated by default:\n\n.categories {...}\n.cat-item {...}\n.current-cat {...}\n.current-cat-parent {...}\n.pagenav {...}\n.page_item {...}\n.current_page_item {...}\n.current_page_parent {...}\n.widget {...}\n.widget_text {...}\n.blogroll {...}\n.linkcat{...}\n\n\n[http://codex.wordpress.org/CSS]",
    "ItemText": null,
    "CreateDate": "2009-09-19T21:59:31.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-19T21:59:31.0000000",
    "DocumentId": "2076072261",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5981",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP: “Validating XML files within PHP 4 applications”; Xmllint; Raphael Stolt",
    "SortOrdinal": null,
    "ItemChar": "Today I ran into a small problem, validating import XML data against a DTD(Document Type Definition), and discovered a neat way to solve this without PHP4's own means, as the PHP 4 version on the running system wasn't supporting the DOM XML Functions.\n\nXmllint, a command line XML tool, parses provided XML files and can be used to verify that these files are well formed and are satisfying an associated DTD/XML Schema.\n\nThe following method body shows an example call of the xmllint tool for validating a given XML file against a DTD. The location of the DTD file is wrapped inside a DOCTYPE definition of the import file and will be automatically resolved by xmllint.\n\n<?php\n\n    ...\n\n    function isValidImportFile($filename) {\n\n        if($filename == '' || !$this->isSupposedFiletype($filename, 'xml')) {\n            return false;\n        }\n\n        $xmllintCall =  \"xmllint --valid --noout {$this->_xmlDirectory}{$filename}\";\n\n        exec(escapeshellcmd($xmllintCall), $xmllintOutput, $xmllintFeedback);\n\n        if($xmllintFeedback == '0') {\n            \n            return true;\n            \n        } else {\n        \n            // Maybe log xmllint feedback here for further evaluation.    \n            return false;\n            \n        }\n    }\n\n    ...\n\nIn addition xmllint is also very helpfull when writing custom DTDs or XML Schema, as you get an immediate reply regarding the correctness of the definition rules and their 'impact' on the associated XML files.\n\n[http://raphaelstolt.blogspot.com/2007/04/validating-xml-files-within-php-4.html]\n\n[http://infohost.nmt.edu/tcc/help/xml/lint.html]\n",
    "ItemText": null,
    "CreateDate": "2009-09-19T22:06:15.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-19T22:06:15.0000000",
    "DocumentId": "2076072262",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5982",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF: “Converting a WPF FlowDocument to an XPS FixedDocument”; Derek Smythe",
    "SortOrdinal": null,
    "ItemChar": "FlowDocuments are to Windows applications what HTML pages are to web browsers. FlowDocuments allow you to produce and display information in a document style in such a way that allows the documents content to re-shape itself depending on display space and options; just think web page and browser and your on the right track.\n\nFixedDocuments on the other hand are to Windows applications what PDF's are to Adobe Reader. The emphasis of FixedDocuments is not in how the document is displayed but how it is printed.\n\nWith Windows Presentation Foundation a new document format called Xml Paper Specification (XPS) was introduced. This standard for describing document was combined with Open Packaging Convention (OPC) to produce a new, more open, approach to creating, printing, and storing documents.\n\nThis article describes how FlowDocuments can be converted to FixedDocuments (and XPS documents).\n\nFlowDocuments vs FixedDocuments\n\n\nFlowDocuments\nFlowDocuments are XAML files that describe in an XML language the content and format of a document. The syntax is very similar in nature to HTML pages. Here is an example:\n\n<FlowDocument x­mlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    ColumnWidth=\"400\" FontSize=\"14\" FontFamily=\"Georgia\">\n    <Paragraph>\n        This is\n        <Bold>my</Bold> paragraph. There are\n        <Italic>many</Italic> like it but this one is\n        <Bold>mine.</Bold>\n    </Paragraph>\n    <Paragraph>\n        FlowDocuments are to Windows applications... \n    </Paragraph>\n    <Paragraph>\n        FixedDocuments on the other hand are to Windows applications....\n    </Paragraph>\n</FlowDocument>\n\n\nThe above XML can be generated in a variety of ways and can also be stored in a variety of ways. For example, the FlowDocument could be produced with a XmlWriter or through a XSLT transformation, SqlServer query, and even produced through code as the example below shows.\n\n            FlowDocument flowDocument = new FlowDocument();\n\n            Paragraph para = new Paragraph();\n            para.Inlines.Add(new Run(\"This is \"));\n            para.Inlines.Add(new Bold(\"my \"));\n            para.Inlines.Add(new Run(\"paragraph. There are \"));\n            para.Inlines.Add(new Italic(\"many \"));\n            para.Inlines.Add(new Run(\"like it but this one is \"));\n            para.Inlines.Add(new Bold(\"mine.\"));\n\n\nIn terms of storing the FlowDocument the document is simply text and so it can be stored to file, to database, stored to resource, and so on. However since a FlowDocument can be decribed with XAML the document can compiled into a more efficient BAML representation and stored within an assembly.\n\nRemember that FlowDocuments are for displaying documents on screen in such a way as they adapt to the displays size and display options.\n\nSee FlowDocuments for more information.\n\nFixedDocuments\nIn contrast a FixedDocument is created following the guidelines described in the XPS specification, which is beyond the scope of this article. In brief a XPS/FixedDocument is a collection of XML files (that describe pages and content), Font files, and Image files that are all related in such a way as to describe the contents of the document.\n\nThe files that describe the document are all packaged up into a OPC paackage, which is a single file with a *.xps extension.\n\nIn terms of this article though FixedDocuments are designed for both printing the document or storing the document in a read-only state, similar like a PDF. The documents content is fixed because it doesn't adapt to suit display options.\n\nSee Writing a XPS Document for more information.\n\nSystem.Printing.XpsDocumentWriter\nThere are two classes responsible for converting a FlowDocument to a FixedDocument. These two classes are the System.Printing.XpsDocumentWriter class and the System.Windows.Documents.DocumentPaginator class.\n\nThe DocumentPaginator class (or a class that derives from it) is used to describe how the documents content is positioned and formatted on the FixedDocument.\n\nFor more information see Creating a custom DocumentPaginator\n\nThe XpsDocumentWriter class takes an instance of a DocumentPaginator class and uses it to write the documents content to XPS file. It does this in such a way that the resulting XPS file is fully compliant with the XPS specification.\n\nWhat makes the conversion between FlowDocument and a FixedDocument work is the fact that a DocumentPaginator can be directly created from a FlowDocument. The FlowDocuments DocumentPaginator is passed to XpsDocumentWriter and the conversion is done.\n\nYou need to add a reference to System.Printing.dll before using System.Printing.XpsDocumentWriter.\n\nCode Example\nYou need to add references to the following before the code below will work:\n\n    * ReachFramework.dll - contains all the classes necessary for working with XPS files.\n    * WindowsBase.dll - contains all the classes necessary for working with OPC packages\n    * System.Printing.dll - contains the XpsDocumentWriter class.\n    * PresentationCore.dll and PresentationFramework.dll - the WPF classes (FlowDocument, etc)\n\n\nThe first step is to get a FlowDocument. There are a number of ways to do this and it all depending on the format and location of the FlowDocument.\n\nIf the FlowDocument is stored as a loose XAML file, usually specified with BuildOption Content, then you can use the XamlReader class to read it in.\n\n            FlowDocument document = null;\n            using (FileStream fs = File.Open(\"docAsContent.xaml\", FileMode.Open))\n            {\n                document = XamlReader.Load(fs) as FlowDocument;\n            }\n\n\nIf the FlowDocument was compiled into a BAML, usually specified with BuildOption Page, then you can use the static Application.LoadComponent method to read it.\n\n            FlowDocument document = null;\n            document = \n               Application.LoadComponent(new Uri(\"docAsBaml.xaml\", \n                                        UriKind.Relative)) as FlowDocument;\n\n\nThe next step, optional, is to display the generated XPS file. In order to this the DocumentViewer class is used. The following XAML shows a Window containing a DocumentViewer. In the code example that follows the generated XPS document will be displayed using this viewer.\n\n    <Window x:Class=\"WPFFlowDocToXPSFixedDoc.Window1\"\n        x­mlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        x­mlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        Title=\"Window1\" Height=\"300\" Width=\"300\">\n\n        <!-- DocumentViewer element is used to view Fixed Documents (XPS) -->\n        <DocumentViewer x:Name=\"xpsView\" />\n\n    </Window>\n\n\nFinally the conversion from FlowDocument to FixedDocument needs to be done. In order to do this you really need to think in terms of producing a XPS file. The process is really turn the FlowDocument to an XpsDocument and then turn the XpsDocument into a FixedDocument.\n\nSo FlowDocument to XpsDocument requires that a file is created, the XpsDocumentWriter then becomes a writer into that file. The content being written is the FlowDocuments DocumentPaginator.\n\nOnce the FlowDocument has been written to the XpsDocument a call to the XpsDocument.GetFixedDocumentSequence() is used to produce a FixedDocument and that is displayed in the DocumentViewer.\n\n        private void WriteXPS(FlowDocument flowDocument)\n        {\n            //generate temporary file name\n            string temp = System.IO.Path.GetTempFileName();\n            if (File.Exists(temp) == true)\n                File.Delete(temp);\n\n            //create a XPS document \n            XpsDocument xpsDoc = new XpsDocument(temp, FileAccess.ReadWrite);\n\n            //create a XPS document writer that writes to the XPS document\n            XpsDocumentWriter xpsWriter = XpsDocument.CreateXpsDocumentWriter(xpsDoc);\n\n            //write the flow document to the XPS document\n            //   use the flow documents default DocumentPaginator to do that\n            xpsWriter.Write((flowDocument as IDocumentPaginatorSource).DocumentPaginator);\n\n            //display the XPS document in the DocumentViewer\n            //   use the GetFixedDocumentSequence method to return a \n            //   FixedDocument representation of the XPS file\n            xpsView.Document = xpsDoc.GetFixedDocumentSequence();\n\n            //close the XPS file\n            xpsDoc.Close();\n        }\n\n[http://www.dsmyth.net/wiki/StudyNotes_WPFFlowDocToXPSFixedDoc.ashx]",
    "ItemText": "FlowDocuments are to Windows applications what HTML pages are to web browsers. FlowDocuments allow you to produce and display information in a document style in such a way that allows the documents content to re-shape itself depending on display space and options; just think web page and browser and your on the right track.\n\nFixedDocuments on the other hand are to Windows applications what PDF's are to Adobe Reader. The emphasis of FixedDocuments is not in how the document is displayed but how it is printed.\n\nWith Windows Presentation Foundation a new document format called Xml Paper Specification (XPS) was introduced. This standard for describing document was combined with Open Packaging Convention (OPC) to produce a new, more open, approach to creating, printing, and storing documents.\n\nThis article describes how FlowDocuments can be converted to FixedDocuments (and XPS documents).\n\nFlowDocuments vs FixedDocuments\n\n\nFlowDocuments\nFlowDocuments are XAML files that describe in an XML language the content and format of a document. The syntax is very similar in nature to HTML pages. Here is an example:\n\n<FlowDocument x­mlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    ColumnWidth=\"400\" FontSize=\"14\" FontFamily=\"Georgia\">\n    <Paragraph>\n        This is\n        <Bold>my</Bold> paragraph. There are\n        <Italic>many</Italic> like it but this one is\n        <Bold>mine.</Bold>\n    </Paragraph>\n    <Paragraph>\n        FlowDocuments are to Windows applications... \n    </Paragraph>\n    <Paragraph>\n        FixedDocuments on the other hand are to Windows applications....\n    </Paragraph>\n</FlowDocument>\n\n\nThe above XML can be generated in a variety of ways and can also be stored in a variety of ways. For example, the FlowDocument could be produced with a XmlWriter or through a XSLT transformation, SqlServer query, and even produced through code as the example below shows.\n\n            FlowDocument flowDocument = new FlowDocument();\n\n            Paragraph para = new Paragraph();\n            para.Inlines.Add(new Run(\"This is \"));\n            para.Inlines.Add(new Bold(\"my \"));\n            para.Inlines.Add(new Run(\"paragraph. There are \"));\n            para.Inlines.Add(new Italic(\"many \"));\n            para.Inlines.Add(new Run(\"like it but this one is \"));\n            para.Inlines.Add(new Bold(\"mine.\"));\n\n\nIn terms of storing the FlowDocument the document is simply text and so it can be stored to file, to database, stored to resource, and so on. However since a FlowDocument can be decribed with XAML the document can compiled into a more efficient BAML representation and stored within an assembly.\n\nRemember that FlowDocuments are for displaying documents on screen in such a way as they adapt to the displays size and display options.\n\nSee FlowDocuments for more information.\n\nFixedDocuments\nIn contrast a FixedDocument is created following the guidelines described in the XPS specification, which is beyond the scope of this article. In brief a XPS/FixedDocument is a collection of XML files (that describe pages and content), Font files, and Image files that are all related in such a way as to describe the contents of the document.\n\nThe files that describe the document are all packaged up into a OPC paackage, which is a single file with a *.xps extension.\n\nIn terms of this article though FixedDocuments are designed for both printing the document or storing the document in a read-only state, similar like a PDF. The documents content is fixed because it doesn't adapt to suit display options.\n\nSee Writing a XPS Document for more information.\n\nSystem.Printing.XpsDocumentWriter\nThere are two classes responsible for converting a FlowDocument to a FixedDocument. These two classes are the System.Printing.XpsDocumentWriter class and the System.Windows.Documents.DocumentPaginator class.\n\nThe DocumentPaginator class (or a class that derives from it) is used to describe how the documents content is positioned and formatted on the FixedDocument.\n\nFor more information see Creating a custom DocumentPaginator\n\nThe XpsDocumentWriter class takes an instance of a DocumentPaginator class and uses it to write the documents content to XPS file. It does this in such a way that the resulting XPS file is fully compliant with the XPS specification.\n\nWhat makes the conversion between FlowDocument and a FixedDocument work is the fact that a DocumentPaginator can be directly created from a FlowDocument. The FlowDocuments DocumentPaginator is passed to XpsDocumentWriter and the conversion is done.\n\nYou need to add a reference to System.Printing.dll before using System.Printing.XpsDocumentWriter.\n\nCode Example\nYou need to add references to the following before the code below will work:\n\n    * ReachFramework.dll - contains all the classes necessary for working with XPS files.\n    * WindowsBase.dll - contains all the classes necessary for working with OPC packages\n    * System.Printing.dll - contains the XpsDocumentWriter class.\n    * PresentationCore.dll and PresentationFramework.dll - the WPF classes (FlowDocument, etc)\n\n\nThe first step is to get a FlowDocument. There are a number of ways to do this and it all depending on the format and location of the FlowDocument.\n\nIf the FlowDocument is stored as a loose XAML file, usually specified with BuildOption Content, then you can use the XamlReader class to read it in.\n\n            FlowDocument document = null;\n            using (FileStream fs = File.Open(\"docAsContent.xaml\", FileMode.Open))\n            {\n                document = XamlReader.Load(fs) as FlowDocument;\n            }\n\n\nIf the FlowDocument was compiled into a BAML, usually specified with BuildOption Page, then you can use the static Application.LoadComponent method to read it.\n\n            FlowDocument document = null;\n            document = \n               Application.LoadComponent(new Uri(\"docAsBaml.xaml\", \n                                        UriKind.Relative)) as FlowDocument;\n\n\nThe next step, optional, is to display the generated XPS file. In order to this the DocumentViewer class is used. The following XAML shows a Window containing a DocumentViewer. In the code example that follows the generated XPS document will be displayed using this viewer.\n\n    <Window x:Class=\"WPFFlowDocToXPSFixedDoc.Window1\"\n        x­mlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        x­mlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        Title=\"Window1\" Height=\"300\" Width=\"300\">\n\n        <!-- DocumentViewer element is used to view Fixed Documents (XPS) -->\n        <DocumentViewer x:Name=\"xpsView\" />\n\n    </Window>\n\n\nFinally the conversion from FlowDocument to FixedDocument needs to be done. In order to do this you really need to think in terms of producing a XPS file. The process is really turn the FlowDocument to an XpsDocument and then turn the XpsDocument into a FixedDocument.\n\nSo FlowDocument to XpsDocument requires that a file is created, the XpsDocumentWriter then becomes a writer into that file. The content being written is the FlowDocuments DocumentPaginator.\n\nOnce the FlowDocument has been written to the XpsDocument a call to the XpsDocument.GetFixedDocumentSequence() is used to produce a FixedDocument and that is displayed in the DocumentViewer.\n\n        private void WriteXPS(FlowDocument flowDocument)\n        {\n            //generate temporary file name\n            string temp = System.IO.Path.GetTempFileName();\n            if (File.Exists(temp) == true)\n                File.Delete(temp);\n\n            //create a XPS document \n            XpsDocument xpsDoc = new XpsDocument(temp, FileAccess.ReadWrite);\n\n            //create a XPS document writer that writes to the XPS document\n            XpsDocumentWriter xpsWriter = XpsDocument.CreateXpsDocumentWriter(xpsDoc);\n\n            //write the flow document to the XPS document\n            //   use the flow documents default DocumentPaginator to do that\n            xpsWriter.Write((flowDocument as IDocumentPaginatorSource).DocumentPaginator);\n\n            //display the XPS document in the DocumentViewer\n            //   use the GetFixedDocumentSequence method to return a \n            //   FixedDocument representation of the XPS file\n            xpsView.Document = xpsDoc.GetFixedDocumentSequence();\n\n            //close the XPS file\n            xpsDoc.Close();\n        }\n\n[http://www.dsmyth.net/wiki/StudyNotes_WPFFlowDocToXPSFixedDoc.ashx]",
    "CreateDate": "2009-09-19T22:10:38.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-19T22:10:38.0000000",
    "DocumentId": "2076072263",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5983",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2008 SSRS: “All those temporary files (RSTempFiles)”; John Gallardo, MSDN",
    "SortOrdinal": null,
    "ItemChar": "When you install Reporting Services, we create a few directories:\n\n   1. LogFiles\n   2. ReportManager\n   3. ReportServer\n   4. RSTempFiles\n\nMost of these are fairly self explanatory.  LogFiles... well we put our log files in there.  ReportManager contains the Report Manager application (what you get when you browse to http://<server>/reports) and ReportServer contains the Report Server application which is the proper 'Report Server' which implements our Web Service and HTTP handler endpoints... it is what you get when you go to http://<server>/reportserver.\n\nSo what about that RSTempFiles thing?  Well it contains files that are temporary of course!\n\nThese temporary files can be broken down into a few categories:\n\n    * Temporary Report Snapshot files.\n          o These files are only created if you have opted into using temporary file storage (see the WebServiceUseFileShareStorage).\n          o For RS2000/2005, snapshots are more or less completely independent and each is contained in its own directory (identified by a GUID).  Each snapshot contains a set of files (internally, they are referred to as \"chunks\"). \n          o For RS2008, snapshots oftentimes contain some shared data.  The folder-per-snapshot hierarchy used in RS2000/2005 is replaced by a single directory called \"Chunks.\"  Each chunk is a discrete file in this directory.\n          o These files are automatically cleaned up by the Report Server on a time-based interval (same as snapshot data stored in ReportServer and ReportServerTempDB catalog databases).\n    * Output/Intermediate Streams\n          o These files are all created directly within the the RSTempFiles directory.  There is no way to differentiate between these two sub-categories of files currently.\n          o Output streams - these streams are generated as output from the renderers.  The server spools them to disk if they grow large enough.  RS has an output cache that may cause these streams to survive beyond the lifetime of the request so that subsequent accesses can be served directly from the cache. \n          o Intermediate files - these files contain results of intermediate calculations during report processing and rendering.  Generally, these contain data which is never returned to the client, but rather holds temporary results in order to relieve memory pressure.  These files are cleaned up when the request completes (no caching across requests).\n    * Conversion files\n          o These are stored under a folder named _Conversion. \n          o Our compression format for snapshots changed between RS2000 and RS2005.  This folder would contain temporary files supporting the on-demand one-time upgrade of these persisted snapshots.  Unless you are upgrading from an RS2000 instance, you should never see this directory or files created.  \n    * Shadow Copy Files\n          o This is only for RS2008.\n          o After the CTP6 release of RS2008, we enabled shadow copy for our ASP.Net worker domains under the new hosting model.\n\n[http://blogs.msdn.com/jgalla/archive/2008/06/30/\n    all-those-temporary-files-rstempfiles.aspx]",
    "ItemText": null,
    "CreateDate": "2009-09-19T22:13:02.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-19T22:13:02.0000000",
    "DocumentId": "2076072264",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5984",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2008: mklink; generating symlinks",
    "SortOrdinal": null,
    "ItemChar": "mklink [[/d] | [/h] | [/j]] <Link> <Target>\n\n…\n\n/d\n\nCreates a directory symbolic link. By default, mklink creates a file symbolic link.\n\n/h\n\nCreates a hard link instead of a symbolic link.\n\n/j\n\nCreates a Directory Junction.\n\n<Link>\n\nSpecifies the name of the symbolic link that is being created.\n\n<Target>\n\nSpecifies the path (relative or absolute) that the new symbolic link refers to.\n\n/?\n\nDisplays help at the command prompt.\n\n[http://technet.microsoft.com/en-us/library/cc753194%28WS.10%29.aspx]",
    "ItemText": null,
    "CreateDate": "2009-09-20T21:25:29.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-20T21:25:29.0000000",
    "DocumentId": "2076072265",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5985",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# LINQ to XML: “Empty Elements and Self-Closing Tags”; XElement",
    "SortOrdinal": null,
    "ItemChar": "Last January, I blogged about an approach to normalizing LINQ to XML trees.  That post is based on another post, Manually Cloning LINQ to XML Trees.  In those posts, my code to clone an element would clone a self-closing element (<Tag/>) as self-closing, and an empty element with a start and end tag (<Tag></Tag>) as an element with start and end tag.\n\nBut, in fact, this was not necessary – empty elements can be always serialized as self-closing elements – the XML specification states, “The representation of an empty element is either a start-tag immediately followed by an end-tag, or an empty-element tag.\"\n\nFurther, per the specification, “the empty-element tag SHOULD be used, and SHOULD only be used, for elements which are declared EMPTY”.  This means that it’s always safe to serialize an empty element as a self-closing element, but sometimes it’s not correct to serialize an empty element with a start and end tag.\n\nOriginally, the code to clone an element looked like this:\n\nstatic XElement CloneElement(XElement element)\n{\n\n    return new XElement(element.Name,\n\n        element.Attributes(),\n\n        element.Nodes().Select(n =>\n\n        {\n\n            XElement e = n as XElement;\n\n            if (e != null)\n\n                return CloneElement(e);\n\n            return n;\n\n        }),\n\n        (!element.IsEmpty && !element.Nodes().OfType<XText>().Any()) ? \"\" : null\n\n    );\n\n}\n\nI’ve revised both of the above referenced posts to remove the code to exactly serialize empty elements as they were in the source document.  The new code looks like this:\n\nstatic XElement CloneElement(XElement element)\n{\n\n    return new XElement(element.Name,\n\n        element.Attributes(),\n\n        element.Nodes().Select(n =>\n\n        {\n\n            XElement e = n as XElement;\n\n            if (e != null)\n\n                return CloneElement(e);\n\n            return n;\n\n        })\n\n    );\n\n}\n\nstatic void Main(string[] args)\n{\n\n    XElement root = XElement.Parse(\"<Root></Root>\");\n\n    Console.WriteLine(\"Original tree\");\n\n    Console.WriteLine(root);\n\n    Console.WriteLine();\n\n    Console.WriteLine(\"Cloned tree\");\n\n    XElement rootClone = CloneElement(root);\n\n    Console.WriteLine(rootClone);\n\n}\n\nThe code is simpler and more correct.  When you run this example, it produces:\n\nOriginal tree\n\n<Root></Root>\n\nCloned tree\n\n<Root />\n\n[http://blogs.msdn.com/ericwhite/archive/\n    2009/07/08/empty-elements-and-self-closing-tags.aspx]",
    "ItemText": null,
    "CreateDate": "2009-09-20T21:30:05.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-20T21:30:05.0000000",
    "DocumentId": "2076072266",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5986",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# LINQ to XML: “Document-Centric Transforms using LINQ to XML”; Eric White",
    "SortOrdinal": null,
    "ItemChar": "When thought of in a certain way, XML documents come in two flavors – data-centric and document-centric.  Further, there are two types of document-centric documents.  This post presents my thoughts about approaches to various types of document-centric transformations – data-centric to document-centric, document-centric to data-centric, and document-centric to document-centric.  Then, I’ll tie my thoughts back to Open XML transformations.\n\nData-centric to data-centric is, of course, the scenario that LINQ to XML absolutely shines at.  There’s been a lot written about this.  This post won’t focus on these types of transformations, but instead will give my thoughts on the wrinkle that document-centric XML documents give to transformations.\n\nFirst, I’ll define what I mean by data-centric and document-centric XML documents.\nData-Centric XML Document\n\nA data-centric XML document contains regular repeating elements.  Child elements of a given element might all have the same tag name, or they might not.  Typically, child element order doesn’t matter.  There are lots of examples of this – many types of transforms of a relational database to XML results in data-centric XML.  RSS feeds are another.\n\nHere’s a data-centric XML document:\n\n<Customers>\n\n  <Customer>\n\n    <Name>Bob</Name>\n\n    <Age>45</Age>\n\n  </Customer>\n\n  <Customer>\n\n    <Name>Jill</Name>\n\n    <Age>37</Age>\n\n  </Customer>\n\n</Customers>\n\n \nDocument-Centric XML Document\n\nDocument-centric XML documents have the characteristic that the child elements of a given element are much less bounded – you might have many child elements of a given name, or you might have none.  You might have ‘recursion’ in the hierarchy – element A is a child of element B, which is itself a child of a different element A.  A number of examples: Open XML word processing markup, XHTML, and XPS.\n\nI further divide document-centric XML documents into two camps – those that contained mixed content, and those that don’t.  Mixed content is a variety of XML where significant text nodes and elements are interspersed.  Insignificant text nodes are the white space that provides indenting when formatting XML.  Open XML word processing markup doesn’t contain mixed content, whereas XHTML does:\n\nAn Open XML paragraph that contains some bold text:\n\n<w:p>\n\n  <w:r>\n\n    <w:t>abc</w:t>\n\n  </w:r>\n\n  <w:r>\n\n    <w:rPr>\n\n      <w:b/>\n\n    </w:rPr>\n\n    <w:t>def</w:t>\n\n  </w:r>\n\n  <w:r>\n\n    <w:t>ghi</w:t>\n\n  </w:r>\n\n</w:p>\n\n \n\nAn XHTML document that contains significant text nodes interspersed with element start and end tags:\n\n<html>\n\n  <head></head>\n\n  <body>\n\n    <p>abc<b>def</b>ghi</p>\n\n  </body>\n\n</html>\n\n \nTypes of Transformations\n\nIf we’re going to divide the XML world into the categories of data-centric and document-centric, it follows that there are four types of transformations.\nData-Centric => Data Centric\n\nThere is a lot to say (and has been said) about these types of transformations.  In the LINQ to XML documentation, I included a tutorial on pure functional transformations of XML.  I also have a tutorial on my blog on composing queries in the pure functional style.\nData-Centric => Document Centric\n\nThese transforms are report writers for databases – take some subset of records, transform to XML, then transform that XML into another form – XPS, for instance.  The transform may be based on another source document, the report definition.  These types of transforms are straightforward to write in the pure functional style.  Based on the simplicity or complexity of the report definition, this type of transform could be a few hundred lines of code or many thousands.\n\nThere are also many good examples of transforming data-centric XML to Open XML markup.  We may want to transform a collection of records into a table in a word processing document, or into rows and cells in a worksheet.\nDocument-Centric => Data Centric\n\nWe write this type of transform when querying an Open XML document for some aspect of the markup.  If we want to retrieve a collection of comments from a document, or if we want a collection of content controls, then we write a query that iterates over certain descendant elements, projecting a regular data structure – perhaps a collection of strings or anonymous types.  The query that I develop in my functional programming tutorial is a document-centric => data-centric transform.\n\nAnother example is finding all hyper-links in an XHTML document.  It is easy to write a LINQ query to retrieve a collection of links and transform the collection to a regular repeating data structure.\nDocument-Centric => Document-Centric\n\nThis is where it starts to get a little more involved.  There are a variety of these types of transformations.\n\nCommon-vocabulary document-centric transform: Sometimes we want to transform a XML tree to a new tree in the same vocabulary.  For example, we can transform an Open XML document into a new Open XML document with modified contents - comments are removed or revisions accepted.  Another example - replace content controls with other markup based on the contents of the content controls.\n\nDifferent-vocabulary document-centric transform: Sometimes we want to transform from one document-centric vocabulary to another one – Open XML => XHTML, or XHTML => Open XML.  With this type of transform, the ease with which we write the transform is directly related to whether the two vocabularies have a similar structure.  For instance, there is much that is parallel between Open XML and XHTML.  There is a body element.  The body contains paragraphs and tables.  Tables contain rows, which contain cells.  Tables can contain other tables in cells.\n\nXSLT works well for these types of transformations – you write a pattern to match a node, and then supply the transformation for just that node.  In the case of XSLT, you can indicate to the transform engine to ‘continue processing rules for child elements’, so that you can specify the transforms for those child elements in their own rules.  If you are aware of Flat OPC, it is pretty easy to process Open XML documents using XSLT.\n\nSome time ago, I write a post on an approach for using LINQ to XML annotations for doing this type of transform.  In that post, I was proving out whether you could write document-centric transforms using LINQ to XML in a style similar to XSLT.  It’s easy to read the code to specify the transform if you read LINQ code easily, but there are obvious problems with the approach, not the least of which is that annotating a tree in that fashion might have performance issues if you are working with too large of a tree.\n\nEven though Open XML and XHTML have similar structures, there are places where the structures are not parallel, and in those cases, you still must jump through hoops.  In XSLT, this often means generating intermediate trees to use in subsequent transforms.  I’ve seen XSLT transforms where the first thing the developer did was to transform the tree to a new tree with new attributes on elements – the purpose of the attributes was to aid further transforms.  If using the LINQ to XML approach that uses annotations, you must deal with the same issues – parts of the transformation are expressed as nice mappings between a pattern that matches nodes and the subsequent transform of those nodes, and parts of the transformation deals with abstractions that often must be explained in comments.  It’s just more complicated to do these types of transformations.\nOpen XML Document-Centric Transforms\n\nThere are lots of examples of interesting common-vocabulary document-centric Open XML transforms.  Removing comments and accepting revisions are two, but there are many others.\n\nI've needed to write a number of these over the last couple of years.  Because I know the size of documents that I potentially need to process (>2 million nodes), I rejected the annotations approach for simple transforms of Open XML documents.  For performance reasons, it just wouldn’t fly.\n\nI also rejected using XSLT – I really don’t want to step out into another language.  XSLT is an attractive approach if you already have an XSLT transform written, or if you are particularly fluent in XSLT.  You must deal with converting the OPC (Zip) file to the Flat OPC format, but this is easy.  But when I’m writing little examples that show how to do something interesting in Open XML, XSLT isn’t appropriate.\n\nSo, for instance, for the code to accept tracked revisions, I opted for the tree-modification approach.  This isn’t idea from a functional programming purist’s point of view, but it performs well in the real world.  You have to be careful when coding, but no big deal.\nRecursive Approach to Transforms\n\nLately, I’ve been writing more of these types of transforms in a recursive style.  The gist of this technique is that you write a recursive function to clone a tree, and while cloning, you trim nodes, or transform nodes, or whatever.\n\nThis approach has good performance, and it is appealing in that when you are writing a more complicated recursive transform, you can write it in terms of other simpler recursive transforms.  The code should be written with no side effects, and if so, transforms are easy to write and debug.\n\nThis approach has a draw-back.  It’s somewhat harder to intuitively see the mapping between the pattern that matches a node, and the transform for that pattern.  However, we don’t lose this entirely.  For example, we may want to write a recursive transform of an XHTML document to Open XML.  Here is the XHTML document:\n\n<html>\n\n  <head></head>\n\n  <body>\n\n    <p>abc<b>def</b>ghi</p>\n\n  </body>\n\n</html>\n\n \n\nWe want to transform it to this document:\n\n<w:document xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\" >\n\n  <w:body>\n\n    <w:p>\n\n      <w:r>\n\n        <w:t>abc</w:t>\n\n      </w:r>\n\n      <w:r>\n\n        <w:rPr>\n\n          <w:b/>\n\n        </w:rPr>\n\n        <w:t>def</w:t>\n\n      </w:r>\n\n      <w:r>\n\n        <w:t>ghi</w:t>\n\n      </w:r>\n\n    </w:p>\n\n  </w:body>\n\n</w:document>\n\n \n\nWe can write the recursive transform like this:\n\nusing System;\n\nusing System.Linq;\n\nusing System.Xml.Linq;\n\n \n\nclass Program\n\n{\n\n    static object XHtmlToOpenXml(XNode node)\n\n    {\n\n        XNamespace w = \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\";\n\n \n\n        XElement element = node as XElement;\n\n        if (element != null)\n\n        {\n\n            if (element.Name == \"html\")\n\n                return new XElement(w + \"document\",\n\n                    new XAttribute(XNamespace.Xmlns + \"w\", w.NamespaceName),\n\n                    new XElement(w + \"head\", \"\"),\n\n                    element.Elements().Select(e => XHtmlToOpenXml(e)));\n\n \n\n            if (element.Name == \"body\")\n\n                return new XElement(w + \"body\",\n\n                    element.Elements().Select(e => XHtmlToOpenXml(e)));\n\n \n\n            if (element.Name == \"p\")\n\n                return new XElement(w + \"p\",\n\n                    element.Nodes().Select(n => XHtmlToOpenXml(n)));\n\n \n\n            if (element.Name == \"b\")\n\n                return new XElement(w + \"r\",\n\n                    new XElement(w + \"rPr\",\n\n                        new XElement(w + \"b\")),\n\n                    new XElement(w + \"t\",\n\n                        element.Value));\n\n        }\n\n \n\n        XText t = node as XText;\n\n        if (t != null)\n\n            return new XElement(w + \"r\",\n\n                new XElement(w + \"t\", t.Value));\n\n \n\n        // ignore all other nodes\n\n        return null;\n\n    }\n\n \n\n    static void Main(string[] args)\n\n    {\n\n        XElement root = XElement.Parse(\n\n            @\"<html>\n\n                <head></head>\n\n                <body>\n\n                  <p>abc<b>def</b>ghi</p>\n\n                </body>\n\n              </html>\");\n\n        Console.WriteLine(XHtmlToOpenXml(root));\n\n    }\n\n}\n\n \n\nIn the above transform, the code highlighted in yellow serves the same purpose as the XPath pattern to match in an XSLT template.  The code highlighted in green is the “sequence constructor”.  The expressions element.Nodes().Select(n => XHtmlToOpenXml(n)) and element.Elements().Select(e => XHtmlToOpenXml(e)) serves the same purpose as the xsl:apply-templates element in an XSLT template.\n\nKey to understanding this transform is that selectively, we can cause every node/element to be passed to this method.  But we can also trim descendant nodes if we like, sending only a subset back through this method.\n\nI initially started talking about this approach in a post that described manually cloning XML trees.  The code is short and easy to understand.\n\nI used this approach for code to normalize an XML tree.  It performs well.  Of the approaches that I could have taken for coding the sample, it was by far the easiest.\n\nI also used this approach for the code to split runs in paragraphs.  Again, it was the easiest way for me to write the code.\n\nFor more information about writing these types of transformations, see Recursive Approach to Pure Functional Transformations of XML.\n\nThis certainly isn’t the last word.  This is what has been on my mind lately, so wanted to blog it before I forgot about it.\n\nI’m fascinated by XML document transformation, primarily because of the power it gives me.  The ability to spin out an Open XML document in a couple hundred lines of code opens up a lot of interesting scenarios.  Generating documents server-side in SharePoint or a web application allows us to use documents to make it easier for people to communicate.  Document-centric transforms are key in these scenarios.\n\n[http://blogs.msdn.com/ericwhite/archive/2009/07/09/\n    document-centric-transforms-using-linq-to-xml.aspx]",
    "ItemText": "When thought of in a certain way, XML documents come in two flavors – data-centric and document-centric.  Further, there are two types of document-centric documents.  This post presents my thoughts about approaches to various types of document-centric transformations – data-centric to document-centric, document-centric to data-centric, and document-centric to document-centric.  Then, I’ll tie my thoughts back to Open XML transformations.\n\nData-centric to data-centric is, of course, the scenario that LINQ to XML absolutely shines at.  There’s been a lot written about this.  This post won’t focus on these types of transformations, but instead will give my thoughts on the wrinkle that document-centric XML documents give to transformations.\n\nFirst, I’ll define what I mean by data-centric and document-centric XML documents.\nData-Centric XML Document\n\nA data-centric XML document contains regular repeating elements.  Child elements of a given element might all have the same tag name, or they might not.  Typically, child element order doesn’t matter.  There are lots of examples of this – many types of transforms of a relational database to XML results in data-centric XML.  RSS feeds are another.\n\nHere’s a data-centric XML document:\n\n<Customers>\n\n  <Customer>\n\n    <Name>Bob</Name>\n\n    <Age>45</Age>\n\n  </Customer>\n\n  <Customer>\n\n    <Name>Jill</Name>\n\n    <Age>37</Age>\n\n  </Customer>\n\n</Customers>\n\n \nDocument-Centric XML Document\n\nDocument-centric XML documents have the characteristic that the child elements of a given element are much less bounded – you might have many child elements of a given name, or you might have none.  You might have ‘recursion’ in the hierarchy – element A is a child of element B, which is itself a child of a different element A.  A number of examples: Open XML word processing markup, XHTML, and XPS.\n\nI further divide document-centric XML documents into two camps – those that contained mixed content, and those that don’t.  Mixed content is a variety of XML where significant text nodes and elements are interspersed.  Insignificant text nodes are the white space that provides indenting when formatting XML.  Open XML word processing markup doesn’t contain mixed content, whereas XHTML does:\n\nAn Open XML paragraph that contains some bold text:\n\n<w:p>\n\n  <w:r>\n\n    <w:t>abc</w:t>\n\n  </w:r>\n\n  <w:r>\n\n    <w:rPr>\n\n      <w:b/>\n\n    </w:rPr>\n\n    <w:t>def</w:t>\n\n  </w:r>\n\n  <w:r>\n\n    <w:t>ghi</w:t>\n\n  </w:r>\n\n</w:p>\n\n \n\nAn XHTML document that contains significant text nodes interspersed with element start and end tags:\n\n<html>\n\n  <head></head>\n\n  <body>\n\n    <p>abc<b>def</b>ghi</p>\n\n  </body>\n\n</html>\n\n \nTypes of Transformations\n\nIf we’re going to divide the XML world into the categories of data-centric and document-centric, it follows that there are four types of transformations.\nData-Centric => Data Centric\n\nThere is a lot to say (and has been said) about these types of transformations.  In the LINQ to XML documentation, I included a tutorial on pure functional transformations of XML.  I also have a tutorial on my blog on composing queries in the pure functional style.\nData-Centric => Document Centric\n\nThese transforms are report writers for databases – take some subset of records, transform to XML, then transform that XML into another form – XPS, for instance.  The transform may be based on another source document, the report definition.  These types of transforms are straightforward to write in the pure functional style.  Based on the simplicity or complexity of the report definition, this type of transform could be a few hundred lines of code or many thousands.\n\nThere are also many good examples of transforming data-centric XML to Open XML markup.  We may want to transform a collection of records into a table in a word processing document, or into rows and cells in a worksheet.\nDocument-Centric => Data Centric\n\nWe write this type of transform when querying an Open XML document for some aspect of the markup.  If we want to retrieve a collection of comments from a document, or if we want a collection of content controls, then we write a query that iterates over certain descendant elements, projecting a regular data structure – perhaps a collection of strings or anonymous types.  The query that I develop in my functional programming tutorial is a document-centric => data-centric transform.\n\nAnother example is finding all hyper-links in an XHTML document.  It is easy to write a LINQ query to retrieve a collection of links and transform the collection to a regular repeating data structure.\nDocument-Centric => Document-Centric\n\nThis is where it starts to get a little more involved.  There are a variety of these types of transformations.\n\nCommon-vocabulary document-centric transform: Sometimes we want to transform a XML tree to a new tree in the same vocabulary.  For example, we can transform an Open XML document into a new Open XML document with modified contents - comments are removed or revisions accepted.  Another example - replace content controls with other markup based on the contents of the content controls.\n\nDifferent-vocabulary document-centric transform: Sometimes we want to transform from one document-centric vocabulary to another one – Open XML => XHTML, or XHTML => Open XML.  With this type of transform, the ease with which we write the transform is directly related to whether the two vocabularies have a similar structure.  For instance, there is much that is parallel between Open XML and XHTML.  There is a body element.  The body contains paragraphs and tables.  Tables contain rows, which contain cells.  Tables can contain other tables in cells.\n\nXSLT works well for these types of transformations – you write a pattern to match a node, and then supply the transformation for just that node.  In the case of XSLT, you can indicate to the transform engine to ‘continue processing rules for child elements’, so that you can specify the transforms for those child elements in their own rules.  If you are aware of Flat OPC, it is pretty easy to process Open XML documents using XSLT.\n\nSome time ago, I write a post on an approach for using LINQ to XML annotations for doing this type of transform.  In that post, I was proving out whether you could write document-centric transforms using LINQ to XML in a style similar to XSLT.  It’s easy to read the code to specify the transform if you read LINQ code easily, but there are obvious problems with the approach, not the least of which is that annotating a tree in that fashion might have performance issues if you are working with too large of a tree.\n\nEven though Open XML and XHTML have similar structures, there are places where the structures are not parallel, and in those cases, you still must jump through hoops.  In XSLT, this often means generating intermediate trees to use in subsequent transforms.  I’ve seen XSLT transforms where the first thing the developer did was to transform the tree to a new tree with new attributes on elements – the purpose of the attributes was to aid further transforms.  If using the LINQ to XML approach that uses annotations, you must deal with the same issues – parts of the transformation are expressed as nice mappings between a pattern that matches nodes and the subsequent transform of those nodes, and parts of the transformation deals with abstractions that often must be explained in comments.  It’s just more complicated to do these types of transformations.\nOpen XML Document-Centric Transforms\n\nThere are lots of examples of interesting common-vocabulary document-centric Open XML transforms.  Removing comments and accepting revisions are two, but there are many others.\n\nI've needed to write a number of these over the last couple of years.  Because I know the size of documents that I potentially need to process (>2 million nodes), I rejected the annotations approach for simple transforms of Open XML documents.  For performance reasons, it just wouldn’t fly.\n\nI also rejected using XSLT – I really don’t want to step out into another language.  XSLT is an attractive approach if you already have an XSLT transform written, or if you are particularly fluent in XSLT.  You must deal with converting the OPC (Zip) file to the Flat OPC format, but this is easy.  But when I’m writing little examples that show how to do something interesting in Open XML, XSLT isn’t appropriate.\n\nSo, for instance, for the code to accept tracked revisions, I opted for the tree-modification approach.  This isn’t idea from a functional programming purist’s point of view, but it performs well in the real world.  You have to be careful when coding, but no big deal.\nRecursive Approach to Transforms\n\nLately, I’ve been writing more of these types of transforms in a recursive style.  The gist of this technique is that you write a recursive function to clone a tree, and while cloning, you trim nodes, or transform nodes, or whatever.\n\nThis approach has good performance, and it is appealing in that when you are writing a more complicated recursive transform, you can write it in terms of other simpler recursive transforms.  The code should be written with no side effects, and if so, transforms are easy to write and debug.\n\nThis approach has a draw-back.  It’s somewhat harder to intuitively see the mapping between the pattern that matches a node, and the transform for that pattern.  However, we don’t lose this entirely.  For example, we may want to write a recursive transform of an XHTML document to Open XML.  Here is the XHTML document:\n\n<html>\n\n  <head></head>\n\n  <body>\n\n    <p>abc<b>def</b>ghi</p>\n\n  </body>\n\n</html>\n\n \n\nWe want to transform it to this document:\n\n<w:document xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\" >\n\n  <w:body>\n\n    <w:p>\n\n      <w:r>\n\n        <w:t>abc</w:t>\n\n      </w:r>\n\n      <w:r>\n\n        <w:rPr>\n\n          <w:b/>\n\n        </w:rPr>\n\n        <w:t>def</w:t>\n\n      </w:r>\n\n      <w:r>\n\n        <w:t>ghi</w:t>\n\n      </w:r>\n\n    </w:p>\n\n  </w:body>\n\n</w:document>\n\n \n\nWe can write the recursive transform like this:\n\nusing System;\n\nusing System.Linq;\n\nusing System.Xml.Linq;\n\n \n\nclass Program\n\n{\n\n    static object XHtmlToOpenXml(XNode node)\n\n    {\n\n        XNamespace w = \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\";\n\n \n\n        XElement element = node as XElement;\n\n        if (element != null)\n\n        {\n\n            if (element.Name == \"html\")\n\n                return new XElement(w + \"document\",\n\n                    new XAttribute(XNamespace.Xmlns + \"w\", w.NamespaceName),\n\n                    new XElement(w + \"head\", \"\"),\n\n                    element.Elements().Select(e => XHtmlToOpenXml(e)));\n\n \n\n            if (element.Name == \"body\")\n\n                return new XElement(w + \"body\",\n\n                    element.Elements().Select(e => XHtmlToOpenXml(e)));\n\n \n\n            if (element.Name == \"p\")\n\n                return new XElement(w + \"p\",\n\n                    element.Nodes().Select(n => XHtmlToOpenXml(n)));\n\n \n\n            if (element.Name == \"b\")\n\n                return new XElement(w + \"r\",\n\n                    new XElement(w + \"rPr\",\n\n                        new XElement(w + \"b\")),\n\n                    new XElement(w + \"t\",\n\n                        element.Value));\n\n        }\n\n \n\n        XText t = node as XText;\n\n        if (t != null)\n\n            return new XElement(w + \"r\",\n\n                new XElement(w + \"t\", t.Value));\n\n \n\n        // ignore all other nodes\n\n        return null;\n\n    }\n\n \n\n    static void Main(string[] args)\n\n    {\n\n        XElement root = XElement.Parse(\n\n            @\"<html>\n\n                <head></head>\n\n                <body>\n\n                  <p>abc<b>def</b>ghi</p>\n\n                </body>\n\n              </html>\");\n\n        Console.WriteLine(XHtmlToOpenXml(root));\n\n    }\n\n}\n\n \n\nIn the above transform, the code highlighted in yellow serves the same purpose as the XPath pattern to match in an XSLT template.  The code highlighted in green is the “sequence constructor”.  The expressions element.Nodes().Select(n => XHtmlToOpenXml(n)) and element.Elements().Select(e => XHtmlToOpenXml(e)) serves the same purpose as the xsl:apply-templates element in an XSLT template.\n\nKey to understanding this transform is that selectively, we can cause every node/element to be passed to this method.  But we can also trim descendant nodes if we like, sending only a subset back through this method.\n\nI initially started talking about this approach in a post that described manually cloning XML trees.  The code is short and easy to understand.\n\nI used this approach for code to normalize an XML tree.  It performs well.  Of the approaches that I could have taken for coding the sample, it was by far the easiest.\n\nI also used this approach for the code to split runs in paragraphs.  Again, it was the easiest way for me to write the code.\n\nFor more information about writing these types of transformations, see Recursive Approach to Pure Functional Transformations of XML.\n\nThis certainly isn’t the last word.  This is what has been on my mind lately, so wanted to blog it before I forgot about it.\n\nI’m fascinated by XML document transformation, primarily because of the power it gives me.  The ability to spin out an Open XML document in a couple hundred lines of code opens up a lot of interesting scenarios.  Generating documents server-side in SharePoint or a web application allows us to use documents to make it easier for people to communicate.  Document-centric transforms are key in these scenarios.\n\n[http://blogs.msdn.com/ericwhite/archive/2009/07/09/\n    document-centric-transforms-using-linq-to-xml.aspx]",
    "CreateDate": "2009-09-20T21:32:45.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-20T21:32:45.0000000",
    "DocumentId": "2076072267",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5987",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WordPress: “Single Item RSS Feeds on Wordpress blogs: RSS For the Content of This Page”",
    "SortOrdinal": null,
    "ItemChar": "The first thing you need to know is that you can get a single item RSS feed containing an RSS version of a single WordPress blog page by adding ?feed=rss2&withoutcomments=1 to the end of the page URL.\n\n[http://ouseful.wordpress.com/2009/07/08/\n    single-item-rss-feeds-on-wordpress-blogs-rss-for-the-content-of-this-page/]",
    "ItemText": null,
    "CreateDate": "2009-09-20T21:35:46.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-20T21:35:46.0000000",
    "DocumentId": "2076072268",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5988",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WordPress: “WordPress, GoDaddy, Permalinks, and 404’s”",
    "SortOrdinal": null,
    "ItemChar": "If you would like to use permalinks and you are using GoDaddy for hosting, all you must do is turn permalinks on and wait. I am not sure how long to wait but rest assured the permalinks will begin to work after a short period of time.\n\n[http://www.joshstauffer.com/tech/wordpress-godaddy-permalinks-and-404s/]",
    "ItemText": null,
    "CreateDate": "2009-09-20T21:37:36.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-20T21:37:36.0000000",
    "DocumentId": "2076072269",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5989",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server 2008: “Minimize SQL Server 2008 Surface Area”",
    "SortOrdinal": null,
    "ItemChar": "To configure the Database Engine to accept remote connections 1. In SQL Server Configuration Manager, expand SQL Server Network Configuration, and then click Protocols for <instancename>. 2. In the details pane, right-click one of the available protocols, and then click Properties. Note: The shared memory protocol cannot be enabled for remote connections.\n\n[http://msdn.microsoft.com/en-us/library/cc281850.aspx]",
    "ItemText": null,
    "CreateDate": "2009-09-20T21:41:19.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-20T21:41:19.0000000",
    "DocumentId": "2076072270",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5990",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu: “Configuring Fonts in Ubuntu Linux”; msttcorefonts",
    "SortOrdinal": null,
    "ItemChar": "Configuring Fonts in Ubuntu Linux\n\nThis document explains how to configure fonts in Ubuntu Linux to look more 'Windows'-like. There's a screenshot of the final product in my blog.\nWhy?\n\nPersonally, I was just frustrated with some web sites not rendering correctly using the default fonts and configuration. I also think it looks nicer, cleaner even, although I'm sure some will disagree ;).\nInstalling msttcorefonts\n\nThe msttcorefonts package contains the Microsoft core TrueType fonts:\n\n    * Andale Mono\n    * Arial Black\n    * Arial (Bold, Italic, Bold Italic)\n    * Comic Sans MS (Bold)\n    * Courier New (Bold, Italic, Bold Italic)\n    * Georgia (Bold, Italic, Bold Italic)\n    * Impact\n    * Times New Roman (Bold, Italic, Bold Italic)\n    * Trebuchet (Bold, Italic, Bold Italic)\n    * Verdana (Bold, Italic, Bold Italic)\n    * Webdings\n\nTo install the msttcorefonts package, you'll need to enable the universe (community maintained) and multiverse (non-free) apt repositories if you haven't done so already.\n\n    Enabling the Universe and Multiverse repositories in Ubuntu\n\nNow, assuming you have correctly enabled the universe and multiverse respositories, we'll install the msttcorefonts package.\n\nFrom a terminal, run:\n\nsudo apt-get install msttcorefonts\n\nInstalling Tahoma\n\nYou may also want to install the Tahoma font, which is not included in msttcorefonts, although this is entirely optional. I happen to like Tahoma :). If you don't want Tahoma or you don't think it's worth the hassle, keep scrolling down to the next step, Configure X to 96 dpi.\n\n   1. You'll need to get your hands on a copy of the Tahoma font files. You can copy them from an existing Windows installation if available. If that's not an option, you can find it on Google\n   2. Create the /usr/share/fonts/truetype/custom/ directory as root\n\n      sudo mkdir /usr/share/fonts/truetype/custom/\n\n   3. Copy tahoma.ttf and tahomabd.ttf in to /usr/share/fonts/truetype/custom/\n\n      sudo cp tahoma.ttf /usr/share/fonts/truetype/custom/\n      sudo cp tahomabd.ttf /usr/share/fonts/truetype/custom/\n\n\n   4. Create the Tahoma hints file\n\n      sudo gedit /etc/defoma/hints/custom.hints\n\n      and copy and paste this text in to the file:\n\n      <?xml version=\"1.0\"?>\n      <!DOCTYPE fontconfig SYSTEM \"fonts.dtd\">\n      <fontconfig>\n\n      <match target=\"font\">\n       <test compare=\"more\" name=\"pixelsize\" qual=\"any\">\n        <double>12</double>\n\n       </test>\n       <edit name=\"autohint\" mode=\"assign\" >\n        <bool>true</bool>\n       </edit>\n\n      </match>\n      <match target=\"pattern\">\n                  <test qual=\"any\" name=\"family\">\n                          <string>Bitstream Vera Sans</string>\n\n                  </test>\n                  <edit name=\"family\" mode=\"assign\">\n                          <string>Arial</string>\n                  </edit>\n\n      </match>\n          <match target=\"pattern\">\n                  <test qual=\"any\" name=\"family\">\n                          <string>Helvetica</string>\n\n                  </test>\n                  <edit name=\"family\" mode=\"assign\">\n                          <string>Arial</string>\n                  </edit>\n\n      </match>\n      <match target=\"pattern\">\n                  <test qual=\"any\" name=\"family\">\n                          <string>Palatino</string>\n\n                  </test>\n                  <edit name=\"family\" mode=\"assign\">\n                          <string>Georgia</string>\n                  </edit>\n\n      </match>\n      </fontconfig>\n\nConfigure X to 96 dpi\n\n   1. Back up your xorg.conf\n\n      sudo cp /etc/X11/xorg.conf /etc/X11/xorg.conf.bak\n      sudo gedit /etc/X11/xorg.conf\n\n   2. Add the following lines to the end of the Monitor section, before EndSection\n\n      #\tDisplaySize\t270\t203\t# 1024x768 96dpi\n      #\tDisplaySize\t338\t203\t# 1280x768 96dpi\n      #\tDisplaySize\t338\t254\t# 1280x960 96dpi\n      #\tDisplaySize\t338\t270\t# 1280x1024 96dpi\n      #\tDisplaySize\t370\t277\t# 1400x1050 96dpi\n      #\tDisplaySize\t423\t370\t# 1600x1400 96dpi\n      #\tDisplaySize\t423\t318\t# 1600x1200 96dpi\n\n   3. Uncomment the line which corresponds to your screen resolution. If your screen resolution isn't listed, use this formula to get the values (in millimetres): displaysize = (pixels)/96*25.4. For example, for 1280x768, 1280 / 96 * 25.4 = 338.67 = 339 would be the first number, and 768 / 96 * 25.4 = 203.2 = 203 would be the second.\n\nRestart Gnome and X\n\nLog out of Gnome and at the login screen, type Ctrl + Alt + Backspace to restart X. The new settings should now be applied.\n\nOnce you've logged back in, run the following command in a terminal to confirm that the resolution is 96x96dpi\n\nxdpyinfo | grep resolution\n\nIf the resolution is not 96x96 dots per inch, the screen size you set in the last step is wrong. Check your rounding and adjust the numbers until your resolution is 96x96 dpi.\n\n[http://warren.guy.net.au/docs/ubuntu-font-configuration.html]",
    "ItemText": null,
    "CreateDate": "2009-09-20T21:45:46.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-20T21:45:46.0000000",
    "DocumentId": "2076072271",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5991",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP: “Tip for Streamlining Your PHP if(statements)”; Keir Whitaker",
    "SortOrdinal": null,
    "ItemChar": "Recently I have been working on a WordPress plugin for Think Vitamin which necessitated getting back into the swing of PHP.\n\nWhilst getting my head around how to create the plugin I started to delve into some of the core WordPress files and came across an unfamiliar yet syntactically sweet PHP control structure. It’s a simple if statement used in a file that combines PHP and HTML.\n\nOld version:\n\n<?php if(<your evaluation here>) { ?>\n// Output\n<?php } else { ?>\n// Output\n<?php }; ?>\n\nNew version: Much easier to read\n\n<?php if(<your evaluation here>): ?>\n// Output\n<?php else: ?>\n// Output\n<?php endif; ?>\n\nIt also works on “for” and “while” loops as well as “elseif”.\n\nI have never been a fan of combining HTML and PHP, preferring the separation of code and HTML offered by template engines like Smarty, but I could be persuaded. To me this is syntactically much clearer and in my opinion wouldn’t be too difficult for non “coders” working on your project to grasp.\n\nHere are two further examples from WordPress:\n\n<?php if (have_posts()) : while (have_posts()) : the_post(); ?>\n\n<?php if (have_posts()) : while (have_posts()) : the_post(); ?>\n// Output\n<?php endwhile; else: ?>\n// Output\n<?php endif; ?>\n\nThere are always new things to learn and learning from other people’s code is a great place to start.\n\n[http://carsonified.com/blog/dev/php/tip-for-streamlining-your-php-ifstatements/]",
    "ItemText": null,
    "CreateDate": "2009-09-21T11:37:08.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-21T11:37:08.0000000",
    "DocumentId": "2076072272",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5992",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2008: “Start or Stop the Web Server (IIS 7)”; win2k8; technet",
    "SortOrdinal": null,
    "ItemChar": "To start or stop a Web server\n\nYou can perform this procedure using the user interface (UI) or a command line. For information about opening IIS Manager, see Open IIS Manager (IIS 7).\nUsing the UI\n\n1. Open IIS Manager and navigate to the Web server node in the tree.\n2. In the Actions pane, click Start if you want to start the Web server or Stop if you want to stop the Web server.\n\nUsing a command line\n\n1. Open an elevated command-line window.\n2. At the command prompt, type net stop WAS and press ENTER; type Y and then press ENTER to also stop W3SVC.\n3. To restart the Web server, type net start W3SVC and press ENTER to start both WAS and W3SVC.\n\n[http://technet.microsoft.com/en-us/library/cc732317%28WS.10%29.aspx]",
    "ItemText": null,
    "CreateDate": "2009-09-23T10:06:31.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-23T10:06:31.0000000",
    "DocumentId": "2076072273",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5993",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CMD: “Using command redirection operators”; technet",
    "SortOrdinal": null,
    "ItemChar": ">\n\nWrites the command output to a file or a device, such as a printer, instead of the Command Prompt window or a handle.\n\n<\n\nReads the command input from a file, instead of reading input from the keyboard or a handle.\n\n>>\n\nAppends the command output to the end of a file without deleting the information that is already in the file.\n\n>&\n\nWrites the output from one handle to the input of another handle.\n\n<&\n\nReads the input from one handle and writes it to the output of another handle.\n\n|\n\nReads the output from one command and writes it to the input of another command. Also known as a pipe. \n\n[http://technet.microsoft.com/en-us/library/cc772622%28WS.10%29.aspx]",
    "ItemText": null,
    "CreateDate": "2009-09-23T16:59:39.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-23T16:59:39.0000000",
    "DocumentId": "2076072274",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5994",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2008: “Rsync error ‘socket operation on non-socket’”; cwRsync; Windows Data Execution Prevention (DEP)",
    "SortOrdinal": null,
    "ItemChar": "Some of our users have recently reported seeing the following error in their rsync logs:\n\n    rsync: Failed to dup/close: Socket operation on non-socket (108)\n    rsync error: error in IPC code (code 14) at pipe.c(72) [sender=3.0.3]\n    rsync: read error: Connection reset by peer (104)\n    rsync error: error in IPC code (code 14) at io.c(803) [sender=3.0.3]\n\nBackupAssist 5.1 reports this error as BA3012 “Error in rsync protocol data stream”. BackupAssist 5.2 reports either BA3302 “Could not establish connection” or BA3014 “Error in IPC code”.\n\nWe have identified two possible causes for this error:\n\n1. Windows Data Execution Prevention (DEP) preventing rsync from running.\n2. Another program, such as the Kaseya Agent inserting itself into the Windows networking stack\n\nTo resolve the DEP issue you need to go to Control Panel > System > Advanced > Performance > Data Execution Prevention.\n\n…\n\nEither change the DEP setting to “essential Windows programs and services only”, or add exceptions for the three programs required for rsync: rsync.exe, ssh.exe and ssh-keygen.exe. These programs are located in \"C:\\ProgramData\\BackupAssist v5\\temp\\Rsync\" on Windows Vista and Server 2008, or in \"C:\\Documents and Settings\\All Users\\Application Data\\BackupAssist v5\\temp\\Rsync\" on earlier versions of Windows.\n\n[http://www.backupassist.com/blog/support/\n    rsync-error-socket-operation-on-non-socket/]",
    "ItemText": null,
    "CreateDate": "2009-09-23T20:36:17.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-23T20:36:17.0000000",
    "DocumentId": "2076072275",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5995",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: “Observations on the ‘if’ statement”",
    "SortOrdinal": null,
    "ItemChar": "A little while back a small debate has erupted over the if statement.  There is even and anti-if campaign going on.  If you read things wrong you would think that the ‘if’ needed to be banished from all languages.   And since I had so much fun with my “Refactoring a Switch statement”  (and the rebuttal), I thought I would see what damage I could do here.  (Come on Sean Timm, I double-dog dare you)\n\nThis isn’t what is going on here – well, not as I read it.  People often make brash statements so people will reconsider their actions.  So we call things ‘evil’, compare them to the Vietnam war, say they cripple the mind, etc.\n\nWhat people are really after is the miss-use of the if statement, not the expulsion.  After all, I believe there is an if statement in virtually every computer language ever created – oh wait, assembly doesn’t have one, but do you really want to code in assembly?\n\nSo how do you miss-use something as simple as an if?   There are several ways actually.  But the basic problem is nesting (see the Arrowhead Anti-pattern for an extreme example).  Nesting code can lead to confusion — regardless of container.\n\nArrowhead Anti-pattern\n\nThe Arrowhead anti-pattern, as written up by Chris Missal is a good place to start with this one.  The code ends up looking like this (code shamelessly stolen)\n\n    if\n        if\n            if\n                if\n                    do something\n                endif\n            endif\n        endif\n    endif\n\nThe issue comes from the nested if statements.  The farther the nesting goes, the harder the code is to follow.  Flatten the list as best you can.  Another tactic is to leave the method as soon as possible (return is your friend, or throw an exception).\n\nSo the code could be refactored to look like this:\n\n    if not something\n        return;\n    if not something\n        return;\n    do something\n\nWhen I started coding (1997-ish), we thought of that having multiple return statements as bad coding practice.  Now I can’t stand to do anything else.  But there are conditions on that.  First off, if you have multiple returns in a method, return out as early as possible, or at the end.  Try not do do this in the middle.  Also, I have no problem with a method that is nothing more than a series of small if statements with returns (as the code above does).\n\nAs an aside, we are talking about code blocks here as well.  In C#, that would be any code between the { and } with a for/if/while preceding it.  I don’t like to see significant amounts of code inside of any of them.  If there is a lot of code there, move it to another method.\nNever-ending conditions Anti-Pattern\n\nYou’ve all seen this type of code.  Where the distance between the ‘if’ and the ‘then’ can be measured by counting zip codes. Below is a simple example of the problem:\n\n    if (this and that and otherthing or something and not like-like-like ...)\n\nIf your ‘if conditions’ look like something that would come out of the mouth of a valley girl, you might be a bad developer.  How often have you looked at the if conditionals had had to spend five minutes to figure out WTF what going on?  Way too often for me.\n\nAny time you add an ‘AND’ (&&) or an ‘OR’ (||) to an if statement, please think about what you are trying to do.  Or better yet, do an extract to method.  Even as simple as this refactoring would be of help:\n\n    if (INeedSmackedUpSideTheHead(data)) {\n    }\n\n    bool INeedSmackedUpSideTheHead(data) {\n        return this and that and otherthing or something and not like-like-like...);\n    }\n\nEven better would be to break up the conditions into separate calls within the new method, and remove the OR entirely.\n\n    bool IsThisBetterNow(data) {\n        if (thisThing and that and otherthing) \n        return true;\n        if (something and not like-like-like)\n        return true;\n        return false;\n    }\n\nYou may disagree with me here, but in extended conditions, OR statements are a bit unnatural.  They break up the flow and the readability.  They cause the reader to have to go back and reevaluate what has been done, because it might not be relevant anymore – because of the OR.\n\nFor-If Anti-Pattern\n\nThis is a .net 3.5 specific anti-pattern (because of linq and lambda), so if you are using a lamba-less language, just ignore this for now.  But the For-If Anit-Pattern could be considered a functional development anti-pattern, so also consider this if you are entering the wonderful world of F# or Scala. \n\nNow some will call foul on this anti-pattern, mostly because the code looks simple enough, but the solution is still nicer.  First off, there is a simple for look with a nested if:\n\n    foreach(var data in list)\n    {\n        if (data.IsTrue)\n        {\n            // do something\n        }\n    }\n\nWith lambda you can now refactor this out a bit with what is essentially a custom iterator:\n\n    foreach(var data in list.Where(x=>x.IsTrue))\n    {\n        // do something\n    }\n\nOK, that is all that comes to mind at this point.  But as you can see, I hope, there are ways to misuse something as simple as an ‘if’. Actually, it is often the simplest things that get misused the most, you rarely see an IoC library so grossly misused.  Anyway, hope you all have a good weekend.\n\n[http://elegantcode.com/2009/08/14/observations-on-the-if-statement/]",
    "ItemText": null,
    "CreateDate": "2009-09-26T22:25:58.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-26T22:25:58.0000000",
    "DocumentId": "2076072276",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5996",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“How to Mirror an FTP Directory With Rsync and Curlftpfs”",
    "SortOrdinal": null,
    "ItemChar": "   1. Install curlftpfs\n\n      suda apt-get install curlftpfs\n\n   2. Install rsync\n\n      sudo apt-get install rsync\n\n   3. Create mountpoint\n\n      mkdir /path/to/mount\n\n   4. Mount remote directory\n\n      curlftpfs ftp.example.com /path/to/mount\n\n   5. Create local directory\n\n      mkdir /local/path\n\n   6. Rsync mounted directory to local directory\n\n      rsync -r -t -v --progress --bwlimit=500 /path/to/mount/ /local/path/\n\n[http://www.wikihow.com/Mirror-an-FTP-Directory-With-Rsync-and-Curlftpfs]\n\n[only for ubuntu gutsy feisty (>7.x)]",
    "ItemText": null,
    "CreateDate": "2009-09-26T22:30:06.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-26T22:30:06.0000000",
    "DocumentId": "2076072277",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5997",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: “Performance and Multiple Assigment in C#”; David Connell",
    "SortOrdinal": null,
    "ItemChar": "I was recently thinking if I really liked to use the Multiple assignment in 'C#' or if it was less readable. In 'C' this syntax was popular as it tended to lead to smaller and quicker code.\n\nSo I wondered in C# if the multiple assigment also lead to quicker code. So I quickly wrote some test cases to see which style of code was quicker to execute...\n\nI took a rather simplistic model to profile, in order to make the tests more repeatable and easy to follow.\n\nThe .NET code followed the followed the structure:\n\n[STAThread] static void Main(string[] args) \n            int Count1;\n            int  Count2;\n            int  Count3;\n            int  Count4;\n            int  Count5;\n            int  Count6;\n            int  Count7;\n            int  Count8;\n\n            Count1 =\n            Count2 =\n            Count3 =\n            Count4 =\n            Count5 =\n            Count6 =\n            Count7 =\n            Count8 = 100;\n            \n\t\t\t\n            DateTime time = DateTime.Now;\n            for (long i = 0; i < 1000000000; i++)\n            {\n                int  x = 100;\n                Count1 = \n                Count2 = \n                Count3 = \n                Count4 = \n                Count5 = \n                Count6 = \n                Count7 = \n                Count8 = x;\n            }\n\n            TimeSpan span = DateTime.Now - time;\n            Console.WriteLine(\"Time taken{0}\", span.TotalMilliseconds / 1000.0);\n} \n\nTest \t.NET 1.1\nDebug Mode \t.NET 1.1\nunder the debugger \t.NET 1.1\nRelease Mode\nCount1=x;Count2=x;..... \t7 \t7 \t4.5\nCount1=Count2=Count3 ...=x; \t9.5 \t9.5 \t4.5\n  \t\nResults are in seconds\n\nI did test out directly setting the values eg Count1=100; Count2=100; etc as well as using strings. These variations appeared to give similar results. I carried out the same expermiment under .NET 2 and the results were similar just slightly slower in debug mode.\n\nThe machine that carried out the tests was an Intel 3.4Ghz P4 running XP SP2 with 1GB RAM.\n\nI guess as ever this proves that it is more important to write readable code that requires the minimum of maintanance, rather than trying to outwit the compiler/CLR.\n\nSo would I use the multiple assignment? Probably not as much as I used to, but when it leads to easier to read code then yes. \n\n[http://www.simple-talk.com/community/blogs/\n    davidc/archive/2006/01/25/183.aspx]",
    "ItemText": null,
    "CreateDate": "2009-09-26T22:34:25.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-26T22:34:25.0000000",
    "DocumentId": "2076072278",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5998",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“20 Windows 7 Keyboard Shortcuts You Must Know”; \nSoumya Sinha",
    "SortOrdinal": null,
    "ItemChar": "From Desktop\n\n   1. Windows Key + Tab = Aero [press Tab to cycle between Windows]\n   2. Windows Key + E = Windows Explorer is launched.\n   3. Windows Key + R = Run Command is launched.\n   4. Windows Key + F = Search (which is there in previous Windows versions too)\n   5. Windows Key + X = Mobility Center\n   6. Windows Key + L = Lock Computer (It is there from the earlier versions as well)\n   7. Windows Key + U = Ease of Access\n   8. Windows Key + P = Projector\n   9. Windows Key + T = Cycle Super Taskbar Items\n  10. Windows Key + S = OneNote Screen Clipping Tool [requires OneNote]\n  11. Windows Key + M = Minimize All Windows\n  12. Windows Key + D = Show/Hide Desktop\n  13. Windows Key + Up = Maximize Current Window\n  14. Windows Key + Down = Restore Down / Minimize Current Windows\n  15. Windows Key + Left = Tile Current Window to the Left\n  16. Windows Key + Right = Tile Current Windows to the Right\n      [Continue pressing the Left and Right keys to rotate the window as well]\n  17. Windows Key + # = Quicklaunch\n  18. Windows Key + = = Magnifier\n\nFrom Windows Explorer\n\n19. Alt + Up = Go up one level\n20. Alt + Left/ Right = Back/ Forward\n\n[http://blog.taragana.com/index.php/archive/\n    20-windows-7-shortcuts-you-must-know/]",
    "ItemText": null,
    "CreateDate": "2009-09-27T16:00:35.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-27T16:00:35.0000000",
    "DocumentId": "2076072279",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "5999",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Mounting Windows Shares In Linux”",
    "SortOrdinal": null,
    "ItemChar": "I want to access the music collection on our big Windows XP-running game-playing desktop PC from my recycled Linux laptop down in the basement. I found a lot of information on connecting to a Linux file server from a Windows client, but not much on going the other way round. A bit here, and bit there, and this is what I came up with.\n\nFirst, edit your /etc/hosts file and give the Windows machine a name:\n\n192.168.1.2   pootie\n\nNext, install the samba and smbfs packages using your method of choice.\n\nCreate a directory where the share will appear on your local filesystem.\n\n$ sudo mkdir /mnt/music\n\nEdit /etc/fstab and add a line for the mount. Here “pootie” is the name of the machine and “music” is the name of the share.\n\n//pootie/music  /mnt/music  cifs exec,credentials=/etc/cifspw 0 0\n\nCreate a password file /etc/cifspw with the login credentials for your Windows account.\n\nusername=Jason\npassword=ImNotGonnaTellYouThat\n\nAnd secure the file:\n\n$ sudo chmod 600 /etc/cifspw\n\nGiddyup.\n\n$ sudo mount -a\n\n[http://industriousone.com/mounting-windows-shares-linux]",
    "ItemText": null,
    "CreateDate": "2009-09-27T16:10:22.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-27T16:10:22.0000000",
    "DocumentId": "2076072280",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6000",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows 7: “Fix Problems With Copying Large Files in Windows Vista”; netsh",
    "SortOrdinal": null,
    "ItemChar": "If you’ve been having problems copying large files over mapped drives, network disconnects, or having to reboot your router a lot more often than normal, then you can try out this fix to solve the problem.\n\nThe problem stems from the new auto-tuning network, which changes the receive window on the fly. Thankfully we can easily turn it off from an administrative mode command prompt.\n\nOpen Administrative Mode Command Prompt\n\nEither type cmd into the start menu and use Ctrl+Shift+Enter or right-click the Command Prompt shortcut and choose Run as Administrator.\n\nTurn Off Auto-Tuning\n\n    netsh int tcp set global autotuninglevel=disabled\n\nYou’ll have to reboot your system, but once you do, the problems should be resolved. If they are not you can always turn auto-tuning back on.\n\nTurn On Auto-Tuning\n\n    netsh int tcp set global autotuninglevel=normal\n\n\n[http://www.howtogeek.com/howto/windows-vista/\n    fix-problems-with-copying-large-files-in-windows-vista/]\n\n[http://blogs.msdn.com/wndp/archive/2007/07/05/\n    receive-window-auto-tuning-on-vista.aspx]\n\nYou might also disable another next-generation networking feature in Windows:\n\n    netsh interface tcp set global congestionprovider=none\n\n[http://technet.microsoft.com/en-us/library/bb726965.aspx]\n",
    "ItemText": null,
    "CreateDate": "2009-10-14T14:45:44.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-14T14:45:44.0000000",
    "DocumentId": "2076072281",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6001",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2008: “Command-line Tools in Windows Server 2008”; win2k8",
    "SortOrdinal": null,
    "ItemChar": "Like every release of the Windows Server OS before it, Windows Server 2008 includes a set of new command-line tools, some of which come from previous resource kits or support tools and others are new. Although Server 2008 includes Windows PowerShell, none of these new commands are PowerShell commands. For a complete list of commands in Server 2008, you can download the Windows Command Reference from Microsoft’s Web site (https://www.microsoft.com/downloads/details.aspx?FamilyID=5fb255ff-72da-4b08-a504-1b10266cf72a). Here are my favorite new commands in Server 2008.\n\n10. Oclist—Microsoft added the command-oriented Server Core as an installation option for Server 2008, and it has its own commands. Oclist queries the installed roles on your Server Core system. To list the status of all Server Core roles, you can run the command\n\noclist\n\n9. Ocsetup—The Ocsetup command is used to install and remove roles and features from a Server Core system. The following example shows how to add the DHCP Server role:\n\nstart /w ocsetup DHCPServerCore\n\n8. Bcdedit—Like Windows Vista, Server 2008 uses a new boot process that saves the system boot configuration in the Boot Configuration Data (BCD) store. The primary tool for editing Server 2008’s BCD store is the Bcdedit command, which supports many command-line options. To list the contents of the store, run\n\nbcdedit /enum\n\n7. Icacls—The Icacls command replaces the older Cacls and Xacls commands. Icacls lets you list, update, and back up the ACLs for files and directories. The following example shows how you can save the ACLs for the C:\\temp directory:\n\nicacls c:\\temp /save tempacl\n\n6. Mklink—The Mklink command creates a symbolic link in the file system that redirects all requests to a location you specify. Symbolic links are transparent to users, appearing as normal files or directories. The following example shows how to create a symbolic link named alsotemp for the C:\\temp directory:\n\nmklink /d alsotemp c:\\temp\n\n5. Robocopy—A staple in the Windows Resource Kit for years, Robocopy is more capable than the standard Windows Copy and Xcopy commands, and it’s able to resume after network outages as well as correctly copy file attributes, alternate streams, and security information. The following example shows how to use Robocopy to create a mirrored copy of the MyData directory and all its subfolders on the share named Backups on MyServer:\n\nrobocopy \"C:\\MyData\" \"\\\\MyServer\\Backups\" /MIR /R:2 /NP\n\n4. Wbadmin—Wbadmin is used for Server 2008 backup and restore operations. The following example shows how to use Wbadmin to perform a full system backup to the share named Backups on MyServer: wbadmin start backup -backuptarget \\\\MyServer\\Backups\n\n-allCritical -vssFull\n\n3. WinRS—The WinRS command lets you open a secure command window with a remote host. All communications between the client and the host are encrypted using Kerberos or NT LAN Manager (NTLM) keys. The following example connects to the server named MyServer and displays the command shell:\n\nwinrs -r:MyServer cmd\n\n2. Appcmd—Appcmd.exe is a new command-line tool that can be found in the \\%WinDir%\\System32\\InetSrv directory. Appcmd is used to query, create, and configure Microsoft IIS 7.0 server properties, Web sites, and application pools. To list all sites on the system, you can use the following command:\n\nappcmd list sites\n\n1. ServerManagerCmd—Without a doubt, the coolest commandline tool in Server 2008 is ServerManagerCmd.exe, which is the command-line version of the new Server Manager. This command essentially lets you script all of the Server Manager actions. To list all the installed roles and features on a Server 2008 system, you can enter\n\nservermanagercmd.exe -query\n\n[http://windowsitpro.com/article/articleid/99119/\n    command-line-tools-in-windows-server-2008.html]",
    "ItemText": null,
    "CreateDate": "2009-09-27T21:37:53.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-27T21:37:53.0000000",
    "DocumentId": "2076072282",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6002",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2008: “What happens if the owner cannot change the permissions on a file?”; win2k8",
    "SortOrdinal": null,
    "ItemChar": "Windows Server 2008 has provisions for this situation. Basically any users including an admin can lock themselves out of any object; however, users who are also members of the administrators group can assign ownership back to the domain administrators group, allowing any member (including the original owner) to modify the ownership of the object.\n\nIf you are a member of the administrators group, even though you can lock yourself out of being able to change permissions or see an object, your other rights will allow you to correct the action.\n\nWith these new features, it is likely that business policy and IT security policy will become a bit more closely related and work a little better for everyone.\n\n[http://blogs.techrepublic.com.com/networking/?p=1379]",
    "ItemText": null,
    "CreateDate": "2009-09-27T21:58:30.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-27T21:58:30.0000000",
    "DocumentId": "2076072283",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6003",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2008: “Effective File and Folder Permissions”; win2k8",
    "SortOrdinal": null,
    "ItemChar": "With all the different permission options provided by NTFS on Windows Server 2008, it can be difficult to determine how permissions may accumulate to affect a particular user or group for any given file or folder. In order to make this task a little easier, Windows provides a feature known as Effective Permissions which will list the cumulative permissions for a user or group. To access this feature, right click on the required file or folder in Windows Explorer, select Properties and then select the Security tab in the resulting properties dialog. Within the security panel, click on Advanced and select the Effective Permissions tab in the Advanced Security Settings dialog. The next step is to specify the user or group for which the effective permissions are to be calculated. To achieve this, click on the Select button and use the Select User or Group dialog to specify or search for a particular user or group and then click on OK.\n\n[http://www.techotopia.com/index.php/Understanding_Windows_Server_2008_\n    File_and_Folder_Ownership_and_Permissions]",
    "ItemText": null,
    "CreateDate": "2009-09-27T22:01:12.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-27T22:01:12.0000000",
    "DocumentId": "2076072284",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6004",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2008: Notes on Moving a Hard Drive to a New Machine; Orphaned SIDs; TAKEOWN.EXE; ICACLS.EXE; Get-Acl; Set-Acl",
    "SortOrdinal": null,
    "ItemChar": "It is very possible that orphaned SIDs (security IDs for unknown users) will appear when a drive (virtual or physical) is moved to a new machine. What is worse is when the orphaned SID is the owner of the file/folder.\n\nWindows machines updated after the release of Vista have the TAKEOWN command for Administrators. This is the first command to use before any other permissions operations can be done (otherwise you may get strange permission-denied messages, even with root privileges).\n\nTo take ownership of a directory root (c:\\root) and sub folders and files for the Administrators group, this is the form:\n\n    takeown /f c:\\root /a\n\nThe next thing to do is reset all privileges to defaults with the ICACLS command. This is done when you know you have not set any custom permissions on any files in the drive (or when you already have a script to rebuild custom permissions). This reset is important because it should remove all orphaned SIDs and ensure that default inheritance is in place. This is the form:\n\n    icacls c:\\root /reset /t\n\nEvan Anderson at serverfault.com wrote a script to sketch out his view of this procedure:\n\n@echo off\nFOR /D %%i in (*) do (\n    TAKEOWN /f \"%%i\" /r /d y\n    ICACLS \"%%i\" /reset /T\n    ICACLS \"%%i\" /grant:r \"DOMAIN\\%%i\":(OI)(CI)F\n    rem Unremark this line to set the owner to the user, if you like that\n    rem ICACLS \"%%i\" /setowner \"DOMAIN\\%%i\" /T\n)\n\n[http://serverfault.com/questions/45251/\n    script-to-reset-home-directory-permissons-on-a-windows-share]\n\nIcacls on Technet [http://technet.microsoft.com/en-us/library/cc753525%28WS.10%29.aspx].\n\nSome idea of what PowerShell can do about this issue is in “Hey, Scripting Guy! How Can I Use Windows PowerShell to Determine the Owner of a File?” [http://www.microsoft.com/technet/scriptcenter/resources/qanda/apr08/hey0415.mspx].",
    "ItemText": null,
    "CreateDate": "2009-09-28T10:02:03.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-28T10:02:03.0000000",
    "DocumentId": "2076072285",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6005",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu: “Find Out Your Ubuntu Version Name”; Nicole Hernandez",
    "SortOrdinal": null,
    "ItemChar": "Feisty will be released around the end of Spring 2007 (April I believe). So at the time of this writing, Edgy is the most current stable version to have. For many things in Ubuntu, particularly any time you are tinkering with adding repositories, you need to know your version. If nothing else, it can make you feel a little bit more like you know what’s going on if someone asks you and you actually know what your computer is running ;)\n\nIt’s easy enough to do.\n\n1) Applications -> Accessories -> Terminal\n2) Type the following at the prompt:\ncat /etc/lsb-release\n3) It should output something similar to mine, which looks like this:\nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=6.10\nDISTRIB_CODENAME=edgy\nDISTRIB_DESCRIPTION=\"Ubuntu 6.10\"\n\nNot too hard to figure out that the line that says ‘DISTRIB_CODENAME’ is the one that tells you the name of your version. Fairly painless.\n\n[http://blog.websitestyle.com/index.php/\n    2007/01/18/how-to-find-out-your-ubuntu-version-name/]",
    "ItemText": null,
    "CreateDate": "2009-09-28T13:41:21.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-28T13:41:21.0000000",
    "DocumentId": "2076072286",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6006",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: “What is the difference between ICollection and IDictionary in .NET/C#?”",
    "SortOrdinal": null,
    "ItemChar": "ICollection is an interface for collections of similar objects: the controls on a form, the elements in a list, the attributes in an XML tag, and so on. As of .NET 2.0, there’s a generic version, so you can refer to a collection of integers as ICollection<int>.\n\nIDictionary is an interface for mapping one type of object or value to another. It works like a real dictionary, or a phone book: you have a \"key\" in mind like a person’s name, and when you look it up, you get some information that’s identified by that key, like an address or phone number. Each key can only be listed once, although two different keys are still allowed to have the same value. This is also generic in .NET 2.0, so a dictionary whose keys are strings and whose values are integers would be IDictionary<string,int>.\n\nA dictionary is actually a collection of key/value pairs: you can use an IDictionary<int,string> as an ICollection<KeyValuePair<int,string>>, and you can access the keys and values as separate collections with the Keys and Values properties.\n\nBoth ICollection and IDictionary are unordered, meaning that although you can retrieve the elements in some order with the CopyTo method or a foreach loop, that order has no special meaning, and it might change for no apparent reason. That’s the main difference between ICollection and IList: a list lets you put items in specific positions, just like an array, and they stay there until you move them.\n\nFinally, note that these are all interfaces, not classes. .NET gives you a few different types of collections, lists, and dictionaries to choose from, and the interfaces like ICollection and IDictionary give you a common way to access all of them without worrying about the details. When you create one in your own code, you’ll usually want to use the generic List or Dictionary classes.\n\n[http://askville.amazon.com/difference-\n    ICollection-IDictionary-NET-C%23/AnswerViewer.do?requestId=8375948]",
    "ItemText": null,
    "CreateDate": "2009-09-30T18:00:34.0000000",
    "EndDate": null,
    "ModificationDate": "2009-09-30T18:00:34.0000000",
    "DocumentId": "2076072287",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6007",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“ASP.NET NTLM Authentication—is it worth it?”; Jeff Atwood",
    "SortOrdinal": null,
    "ItemChar": "At work, we have the luxury of assuming that everyone's on an intranet. So when it comes to identity management on our ASP.NET websites, NTLM authentication is the go-to solution. Why trouble the user with Yet Another Login Dialog when you can leverage the built in NTLM functionality of IIS and Internet Explorer? Just reach in and grab one of these Request.ServerVariables passed in through the HTTP headers:\n\nLOGON_USER  = HOMESERVER\\Jeff\nAUTH_USER   = HOMESERVER\\Jeff\nREMOTE_USER = HOMESERVER\\Jeff\n\nI don't pretend to understand the subtle difference between these three fields; this CodeProject article has some hints. At any rate, at least one of them will contain the domain\\username of the user accessing our web page. And it's free-- as long as you define \"free\" as three browser round trips…\n\nThis is the classic challenge-response handshaking sequence that Eric Lippert described in his recent entry You Want Salt With That? Part Four: Challenge-Response. And it really does work; no passwords are ever transmitted, and yet we know exactly who the user is.\n\nAlthough it is delightfully easy to implement, NTLM authentication carries a hefty performance cost. How hefty? The last time I benchmarked it, almost 1000ms per request, compared to under 20ms for anonymous requests. And there are a lot of other caveats, too:\n\n    * IE will only send NTLM credentials automatically to sites it deems in the \"Intranet Zone\". Websites in any other security zone will pop up a login prompt.\n\n    * NTLM credentials typically don't make it through a proxy, so you must enable Basic authentication in addition to NTLM, otherwise you risk permanently blocking a chunk of your userbase from your application. And Basic authentication is, uh, unsecure. Like \"barely better than plain text\" unsecure.\n\n    * If you have users coming in from multiple domains, you must set authentication to use \"all domains\" via the backslash trick. This leads to another problem: if users have accounts with the same name in other domains, those accounts will take priority.\n\n    * All new folders in IIS default to Integrated and Anonymous authentication. This seems contradictory; will NTLM be used, or will everyone map to the anonymous account? The Windows Server 2003 Directory Security dialog clarifies this at long last: anonymous will be used unless NTFS access control lists are specified on that folder. And how do we know that, exactly?\n\n    * It's also possible to control authentication via ASP.NET's <authorization> Web.config section. But this only works if the IIS Directory Security settings are left at their default of Integrated and Anonymous. IIS settings will overrule whatever you specify in Web.config.\n\n    * Integrated authentication checks the user's Windows account at the time they access your website. If there is any problem with a given user's Windows account, they won't be able to access your website. Is that user temporarily locked out? Password expired? Must change password at next logon? Are there network problems preventing your webserver from communicating with other domains? This inevitably results in a lot of user complaints that \"I can't get to your intranet site, but all the others work-- what's wrong with your site?\" Those other sites don't use NTLM. And I am put in the uncomfortable position of troubleshooting people's Windows accounts so they can get to our website. \n\nI used to be a big believer in NTLM authentication in ASP.NET. However, after living with it for the last two years, I'm starting to wonder if we wouldn't all be better off with Yet Another Login Dialog. \n\n[http://www.codinghorror.com/blog/archives/000263.html]",
    "ItemText": null,
    "CreateDate": "2009-10-01T09:15:26.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-01T09:15:26.0000000",
    "DocumentId": "2076072288",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6008",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu 8.04 (hardy): Installing badgerports; ",
    "SortOrdinal": null,
    "ItemChar": "Mono for Ubuntu\nOfficial Packages\n\nThe following official versions are available in the standard Ubuntu repositories:\nUbuntu Dapper (6.06 LTS): \t1.1.13.6\nUbuntu Hardy (8.04 LTS): \t1.2.6\nUbuntu Intrepid (8.10): \t1.9.1\nUbuntu Jaunty (9.04): \t2.0.1\nUbuntu Karmic (9.10): \t2.4.2.3 \n\n…\n\nUnofficial Packages\nUbuntu Hardy (8.04 LTS)\n\nUsers of Ubuntu 8.04 LTS (Hardy Heron) can install Mono 2.4.2.3 by using Synaptic from the badgerports (http://directhex.mfgames.com) repository. badgerports is an unofficial community project from one of the Debian/Ubuntu Mono developers to ship latest Ubuntu packages for Ubuntu LTS users. Please visit the URL below for full information on enabling these packages:\n\n    * http://directhex.mfgames.com/hardy.html \n\n[http://mono-project.com/DistroPackages/Ubuntu]\n\n\nThe primary purpose of badgerports is to provide recent versions of the Mono framework, and associated packages such as F-Spot, Banshee, and Monodevelop. Suggestions for other packages to include are welcome, but don't be offended if I decline for whatever reason.\nHow do I use badgerports?\n\nFirst, download a copy of the archive's GPG key from here [http://directhex.mfgames.com/directhex.ppa.asc], or obtain it yourself (key ID 0E1FAD0C).\n\nNext, launch Software Sources (System, Administration, Software Sources) and navigate to the Authentication tab. Click \"Import Key File\" and select the key file from earlier.\n\nClick on the \"Third Party Software\" tab, click \"Add\", type the following line, then click \"OK\":\n\ndeb http://directhex.mfgames.com/ hardy main\n\nNow, click the \"Close\" button to enable all badgerports packages.\n\n[http://directhex.mfgames.com/hardy.html]\n\n\nObtaining the GPG manually:\n\ngpg --keyserver subkeys.pgp.net --recv 0E1FAD0C\ngpg --export --armor 0E1FAD0C | sudo apt-key add -\nsudo apt-get update\n\n[http://ubuntuforums.org/showthread.php?t=1203095]",
    "ItemText": null,
    "CreateDate": "2009-10-01T10:35:19.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-01T10:35:19.0000000",
    "DocumentId": "2076072289",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6009",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“ASP.NET MVC Controller Overview (C#)”; ",
    "SortOrdinal": null,
    "ItemChar": "Understanding Action Results\n\nA controller action returns something called an action result. An action result is what a controller action returns in response to a browser request.\n\nThe ASP.NET MVC framework supports several types of action results including:\n\n   1. ViewResult – Represents HTML and markup.\n   2. EmptyResult – Represents no result.\n   3. RedirectResult – Represents a redirection to a new URL.\n   4. JsonResult – Represents a JavaScript Object Notation result that can be used in an AJAX application.\n   5. JavaScriptResult – Represents a JavaScript script.\n   6. ContentResult – Represents a text result.\n   7. FileContentResult – Represents a downloadable file (with the binary content).\n   8. FilePathResult – Represents a downloadable file (with a path).\n   9. FileStreamResult – Represents a downloadable file (with a file stream).\n\nAll of these action results inherit from the base ActionResult class.\n\n…you call one of the following methods of the Controller base class:\n\n   1. View – Returns a ViewResult action result.\n   2. Redirect – Returns a RedirectResult action result.\n   3. RedirectToAction – Returns a RedirectToRouteResult action result.\n   4. RedirectToRoute – Returns a RedirectToRouteResult action result.\n   5. Json – Returns a JsonResult action result.\n   6. JavaScriptResult – Returns a JavaScriptResult.\n   7. Content – Returns a ContentResult action result.\n   8. File – Returns a FileContentResult, FilePathResult, or FileStreamResult depending on the parameters passed to the method.\n\nSo, if you want to return a View to the browser, you call the View() method. If you want to redirect the user from one controller action to another, you call the RedirectToAction() method.\n\n[http://www.asp.net/Learn/mvc/tutorial-03-cs.aspx]\n",
    "ItemText": null,
    "CreateDate": "2009-10-01T20:09:35.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-01T20:09:35.0000000",
    "DocumentId": "2076072290",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6010",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“How does the ASP.NET Cache work?”; stackoverflow.com",
    "SortOrdinal": null,
    "ItemChar": "As applications grow it is quite normal to leverage caching as a way to gain scalability and keep consistent server response times. Caching works by storing data in memory to drastically decrease access times. To get started I would look at ASP.NET caching.\n\nThere are 3 types of general Caching techniques in ASP.NET web apps:\n\n    * Page Output Caching(Page Level)\n    * Page Partial-Page Output(Specific Elements of the page)\n    * Programmatic or Data Caching\n\nOutput Caching\n\nPage level output caching caches the html of a page so that each time ASP.NET page requested it checks the output cache first. You can vary these requests by input parameters(VaryByParam) so the the page will only be cached for users where ID=1 if a requests come in where ID=2 asp.net cache is smart enough to know it needs to re-render the page.\n\nPartial-Page Caching\n\na lot of times it wont make sense to cache the entire page in these circumstances you can use partial Page caching. This is usually used with user controls and is set the same way as page level only adding the OutputCache declarative inside the usercontrol.\n\nData Caching\n\nYou can store objects or values that are commonly used throughout the application. It can be as easy to as:\n\nCache[\"myobject\"] = person;\n\nEnterprise Level Caching\n\nIt is worth mention that there are many Enterprise level caching architectures that have come about to leverage the effectiveness caching. Memcache for .net and Velocity are a couple.\n\nIn General\n\nYou can't really make blanket statements on what you should and shouldn't cache because every application is different. However, you can make a few generalizations that hold true MOST of time. Static elements like images and content are OK to cache. Even a dynamic page that is getting hammered is worth caching for 5-10 seconds, it will make a world of difference to your web server.\n\n[http://stackoverflow.com/questions/\n    627865/how-does-the-asp-net-cache-work]\n\n[http://msdn.microsoft.com/en-us/kb/kb00323290.aspx]\n",
    "ItemText": null,
    "CreateDate": "2009-10-04T14:34:18.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-04T14:34:18.0000000",
    "DocumentId": "2076072291",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6011",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET MVC: “Using C# 3.0 Anonymous Types as Dictionaries”; History of Html.ActionLink(); Eilon Lipton",
    "SortOrdinal": null,
    "ItemChar": "During a design meeting for a new feature in ASP.NET we had a requirement that a new method accept a dictionary of name/values pairs. An obvious solution is to have the method accept a parameter of type IDictionary (or its generic cousin):\n\npublic static string GetHtmlLink(string text, IDictionary<string, string> properties) {\n    ...\n}\n\nWhile it looks nice and neat from the perspective of our function, the caller of this function has a real mess to deal with. Creating dictionaries is definitely somewhat of a pain. Since Dictionary<TKey, TValue> doesn't have an Add() method with one parameter you can't use C# 3.0's collection initializer syntax. This is some ugly code:\n\nDictionary<string, string> values = new Dictionary<string, string>();\nvalues.Add(\"key1\", \"value1\");\nvalues.Add(\"key2\", \"value2\");\nvalues.Add(\"key3\", \"value3\");\nGetHtmlLink(\"Click me\", values);\n\nMy proposal: Have the method accept a parameter of type object. Callers could pass in a type that has properties with the appropriate names and values. They can use C#'s object initializer syntax to save some space:\n\nMyParams myParams = new MyParams { Key1 = \"value1\", Key2 = \"value2\", Key3 = \"value3\" };\nGetHtmlLink(\"Click me\", myParams);\n\nHowever, there was the added work of defining the MyParams type. Admittedly, it wasn't that hard with C# 3.0's automatic properties, but I hate defining types that are used in only one place. If the user can pass in an arbitrary object with properties, why not let that object be of an anonymous type? Here's the final code:\n\nGetHtmlLink(\"Click me\", new { Key1 = \"value1\", Key2 = \"value2\", Key3 = \"value3\" });\n\nWoah! We went from five lines of code with dictionaries to two lines of code with object initializers (minus the type definition), to just one line of code with anonymous types!\n\nSo what does the GetHtmlLink method look like, anyway? Download the code from the attachment. You can now use the two helpers like so:\n\nSample link: <%= HtmlHelpers.GetHtmlLink(\"My Site\", new { @class = \"someStyle\", href = \"http://www.example.org\" })%>\n<br />\nSample URL: <%= HtmlHelpers.GetUrl(\"http://www.example.org/search\", new { query = \"kitten's mittens\", mode = \"details\" })%>\n\nAnd it'll render this HTML:\n\nSample link: <a class=\"someStyle\" href=\"http://www.example.org\">My Site</a>\n<br />\nSample URL: http://www.example.org/search?query=kitten's+mittens&mode=details\n\nSo, what do you think?\n\nI'm obviously ignoring certain aspects of this technique such as performance. There are certainly ways to optimize the performance with some clever caching. Performance might not be an issue anyway, depending on where this code is used.\n\nHave you come up with a novel way to use a new language feature that you'd like to share?\n\n[http://weblogs.asp.net/leftslipper/archive/\n    2007/09/24/using-c-3-0-anonymous-types-as-dictionaries.aspx]",
    "ItemText": null,
    "CreateDate": "2009-10-04T19:01:36.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-04T19:01:36.0000000",
    "DocumentId": "2076072292",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6012",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Prerequisite knowledge for ASP.NET MVC”; stackoverflow.com",
    "SortOrdinal": null,
    "ItemChar": "Here are some topics that you can look up online:\n\nRouting.\n\nThe MVC Pattern.\n\nControllers and Actions.\n\nMapping parameters.\n\nActionResults.\n\nError handling.\n\nAction filtering.\n\nPassing data to a view.\n\nHTML Helpers.\n\nView rendering extensibility.\n\nUsing jQuery with ASP.NET MVC.\n\nBest practice tips for views, controllers, and models.\n\nMVC Anti-patterns.\n\n[http://stackoverflow.com/questions/752035/\n    prerequisite-knowledge-for-asp-net-mvc]",
    "ItemText": null,
    "CreateDate": "2009-10-04T19:41:06.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-04T19:41:06.0000000",
    "DocumentId": "2076072293",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6013",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Filters in ASP.NET MVC CodePlex Preview 4”; Phil Haack 08/2008",
    "SortOrdinal": null,
    "ItemChar": "In CodePlex Preview 4 of ASP.NET MVC, we split out our action filters into four types of filters, each of which is an interface.\n\n    * IAuthorizationFilter\n    * IActionFilter\n    * IResultFilter\n    * IExceptionFilter\n\nIAuthorizationFilter\n\nAuthorization filters run before any of the action filters and allow you to cancel the action. If you cancel the action, you can set the ActionResult instance you want rendered in response to the current request.\n\nThere should be very few cases (hopefully) that you need to write such a filter of your own. In those rare cases when you do, you’ll be glad to have this interface around.\nIActionFilter\n\nAction filters allow you to run code before and after an action method is called, but before the result of the action method is executed. This effectively allows you to hook into the rendering of the view, for example.\n\nIn the “before” method (OnActionExecuting), you can cancel the action and even supply an action result of your own instead. If you cancel the action, no other filters higher up the stack will be executed and the invoker starts executing the “after” method for any action filter that had its “before” method called (except for the filter that canceled the action).\n\nIn the after method (OnActionExecuted) you can’t cancel the action (it already ran and we don’t have a ITimeMachineFilter implemented yet), but you can replace or modify the action result before it gets called.\n\nIf an exception was thrown by another action filter or by the action method itself, you can examine the exception thrown from your filter. Your filter can specify that it can handle the exception (seriously, only do this if your filter really can do this as it’s generally a bad thing to handle an exception you shouldn’t be handling), in which case the action result will still get executed. If the exception propagates up, the result will not get executed.\nIResultFilter\n\nResult filters are pretty much similar to action filters, except they run after the action method has executed, but before the result returned from the action method has been executed. The “before” method is called OnResultExecuting and the “after” method is called OnResultExecuted.\nIExceptionFilter\n\nThe exception filters are all guaranteed to run after all of the action filters and result filters have run. Even if an exception filter indicates that it can handle the exception, it will still run. This is useful for logging scenarios in cases where you want a filter to always run no matter what happens so it can log exceptions etc…\n\nOne interesting thing to note is that exception filters run after result filters. So what can you do from an exception filter? Well we give you one last ditch chance to render something to the user by allowing you to set the action result in the exception filter. If that action result throws an exception, you’re SOL and the exception filter does not handle that exception. Well, you’re not totally SOL. The normal ASP.NET web.config settings for custom errors will kick in if you set them.\n\n[http://haacked.com/archive/2008/08/14/aspnetmvc-filters.aspx]\n\n[http://www.asp.net/LEARN/mvc/tutorial-14-cs.aspx]\n",
    "ItemText": null,
    "CreateDate": "2009-10-04T19:50:23.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-04T19:50:23.0000000",
    "DocumentId": "2076072294",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6014",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu and VMware Tools: \"linux/version.h\" Error from ./vmware-install.pl",
    "SortOrdinal": null,
    "ItemChar": "Invoking ./vmware-install.pl may cause this error: “The path \"/usr/src/linux-headers-2.6.24-24/include\" is a kernel header file \ndirectory, but it does not contain the file \"linux/version.h\" as expected.  \nThis can happen if the kernel has never been built, or if you have invoked the \n\"make mrproper\" command in your kernel directory.  In any case, you may want to rebuild your kernel.” Not that 2.6.24-24 is likely to change over time.\n\nInstead of rebuilding your kernel, install a linux-headers-* package with:\n\n    sudo apt-get install linux-headers-`uname -r`\n\nThis should add new files in your /usr/src folder—a bunch of folders with symlinks pointing to another image of source files for your running kernel.\n\n[http://ubuntuforums.org/showthread.php?t=294384]",
    "ItemText": null,
    "CreateDate": "2009-10-05T12:03:51.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-05T12:03:51.0000000",
    "DocumentId": "2076072295",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6015",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "SQL Server CLR: “Regular Expressions in MS SQL Server 2005/2008”; CodeProject.com",
    "SortOrdinal": null,
    "ItemChar": "Reqular expressions in MS SQL Server 2005/2008. You can use all .Net Framework Regular Expressions stuff via MS Server CLR Integration. By the way you can use not only Regular Expressions from FCL.\n\nThis article describe how to create and use extension for LIKE (Transact-SQL) clause that supports regular expressions. Just for demo we also have created text parser that extracts tokens from text by given regular expression pattern. Also there is an overview of the namespaces and libraries required to compile database objects using the Microsoft SQL Server integration with the aid of .NET Framework common language runtime (CLR) as a whole.\nBackground\n\nStated material could be helpful if you know T-SQL and C#. In that case you can to wide library functionality. If you master T-SQL only (witout C#) you may just use RegExpLike function instead of standard LIKE clause in places where Regular Expressions functionality is needed.\nUsing the Code\nPart 1. Extension of LIKE clause\n\nAt the begin you have to allow MS SQL Server to use CLR Integration, i.e. to make possible usage of .Net assemblies and methods from them (by default this possibility is disabled). To do this use following script:\n\nsp_configure 'clr enabled', 1\nGO\nRECONFIGURE\nGO\n\nIf you want to revert defualt state run this script:\n\nsp_configure 'clr enabled', 0\nGO\nRECONFIGURE\nGO\n\nFrom here we create assembly that is Wrapper for Regular Expression .Net classes. To create user defined function for MS SQL Server in C#/.Net you have just to create library project, you create class, you add public static methods that will be SQL Function in future. And SqlFunctionAttribute must forestall each from these methods. It used to mark a method definition of a user-defined aggregate as a function in SQL Server. For our RegularExpressionLike method we have got method as shown:\n\n/// <summary>\n/// Class that allows to support regular expressions in MS SQL Server 2005/2008\n/// </summary>\npublic partial class SqlRegularExpressions\n{\t\n\t/// <summary>\n\t/// Checks string on match to regular expression\n\t/// </summary>\n\t/// <param name=\"text\">string to check</param>\n\t/// <param name=\"pattern\">regular expression</param>\n\t/// <returns>true - text consists match one at least, false - no matches</returns>\n\t[SqlFunction]\n\tpublic static bool Like(string text, string pattern)\n\t{\n\t\tMatch match = Regex.Match(text, pattern);\n\t\treturn (match.Value != String.Empty);\n\t}\n\t\n\t//...\n}\n\n\nNext step is assembly building. From now you have to deploy given assembly to MS SQL Server. To do this run next script (but you have to indicate path to assembly actual for your machine):\n\nCREATE ASSEMBLY \n--assembly name for references from SQL script\nSqlRegularExpressions \n-- assembly name and full path to assembly dll, SqlRegularExpressions in this case\nfrom 'd:\\Projects\\SqlRegularExpressions\\SqlRegularExpressions\\bin\\Release\\SqlRegularExpressions.dll' \nWITH PERMISSION_SET = SAFE\n\nBingo! Your assembly is registered and from now we may to use functionality from it. That is exactly what we plan do.\n\nBy the way to revert this action you can run script as following:\n\ndrop assembly \n--assembly name for references from SQL script\nSqlRegularExpressions \n\n\nTo bind assembly method with SQL Function you have to run script as shown:\n\n--function signature\nCREATE FUNCTION RegExpLike(@Text nvarchar(max), @Pattern nvarchar(255)) RETURNS BIT\n--function external name\nAS EXTERNAL NAME SqlRegularExpressions.SqlRegularExpressions.[Like]\n\nAnd that is all. Now you may use RegExpLike function to check string matching to pattern with regular expression:\n\n-- get all titles where title consists word that starts by 'A'\nselect * from titles\nwhere 1 = dbo.RegExpLike(title, '\\b(A\\S+)')   \n\n\n[http://www.codeproject.com/KB/database/\n    SqlRegularExpressions.aspx?display=Print]",
    "ItemText": null,
    "CreateDate": "2009-10-06T08:57:54.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-06T08:57:54.0000000",
    "DocumentId": "2076072296",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6016",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "\n“Sorting Lists using IComparable and IComparer Interface in .NET”",
    "SortOrdinal": null,
    "ItemChar": "It's easy to sort a list of strings or integers by just calling the List.Sort() method, but how can we sort two objects and based on what field?\n\n…\n\nLet's implement IComparable<> interface to our Employee class:\n\nclass Employee : IComparable<Employee>\n{\n     public string Name { get; set; }\n     public int Salary { get; set; }\n        \n     #region IComparable<Employee> Members\n       \n     public int CompareTo( Employee other )\n     {\n         if ( this.Salary < other.Salary ) return 1;\n         else if ( this.Salary > other.Salary ) return -1;\n         else return 0;\n     }\n        \n     #endregion\n}\n\nIn the above code, we are sorting objects based on salary of employee in descending order, by implementing CompareTo() method of IComparable interface which takes Employee reference as a parameter.\nNow, calling empList.Sort() gives no exception and empList is well sorted by salary.\n\nBut sometimes, we may need to sort a list of objects when class does not implement IComparable<> interface and also we may need various kinds of sorting on that class like:\n\n   1. Sort Employees by Salary in Ascending Order\n   2. Sort Employees by Salary in Descending Order\n   3. Sort Employees by Name\n\nTo solve this problem, .NET provides a special interface called IComparer<> which has a method Compare(), takes two object parameters X, Y and returns an int.\nUse of IComparer<> interface tells List how exactly you want to sort.\n\nclass Employee_SortBySalaryByAscendingOrder : IComparer<Employee>\n{\n    #region IComparer<Employee> Members\n    \n    public int Compare( Employee x, Employee y )\n    {\n        if ( x.Salary > y.Salary ) return 1;\n        else if ( x.Salary < y.Salary ) return -1;\n        else return 0;\n    }\n    \n    #endregion\n}\n\nclass Employee_SortBySalaryByDescendingOrder : IComparer<Employee>\n{\n    #region IComparer<Employee> Members\n    \n    public int Compare( Employee x, Employee y )\n    {\n        if ( x.Salary < y.Salary ) return 1;\n        else if ( x.Salary > y.Salary ) return -1;\n        else return 0;\n    }\n    \n    #endregion\n}\n\nclass Employee_SortByName : IComparer<Employee>\n{\n    #region IComparer<Employee> Members\n    \n    public int Compare( Employee x, Employee y )\n    {\n        return string.Compare( x.Name, y.Name );\n    }\n    \n    #endregion\n}\n\nThe above code introduces three classes by implementing Compare() method of IComparer interface.\n\nNow, how do we use this? We just have to pass the reference of these classes as a object parameter to Sort() method as shown below:\n\n// Use Collection Initializers( C# 3.0 ) to initialize the List \nList<Employee> empList = new List<Employee>() \n\t\t{ new Employee { Name = \"a\", Salary = 14000 },\n                    new Employee { Name = \"b\", Salary = 13000 } \n                  };\n                                     \nEmployee_SortBySalaryByAscendingOrder eAsc = \n\t\tnew Employee_SortBySalaryByAscendingOrder(); \n// Sort Employees by salary by ascending order.   \nempList.Sort( eAsc );\n    \nEmployee_SortBySalaryByDescendingOrder eDsc = \n\t\tnew Employee_SortBySalaryByDescendingOrder();\n// Sort Employees by salary by descending order. \nempList.Sort( eDsc );\n    \nEmployee_SortByName eName = new Employee_SortByName();\n// Sort Employees by their names.                                 \nempList.Sort( eName );\n\nConclusion\n\nSorting Lists is simple as long as you sort basic elements like strings and integers for which comparison classes are defined.\n\nUsage of IComparable<> and IComparer<> interface helps to sort Lists of objects on custom classes easily.\n\n[http://www.codeproject.com/KB/cs/Sorting_Lists.aspx?display=Print]",
    "ItemText": null,
    "CreateDate": "2009-10-06T09:01:11.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-06T09:01:11.0000000",
    "DocumentId": "2076072297",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6017",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# 3.0 Extension Methods: “Thinking Beyond ToString()”; Anoop Madhusudanan",
    "SortOrdinal": null,
    "ItemChar": "Here is a neat extension method for all your objects, so that it'll find the appropriate converter if one exists, or otherwise, fall back to ToString() :)\n\npublic static class ConverterExtension\n    {\n        public static string ConvertToString(this object value)\n        {\n            TypeConverter converter = \n              TypeDescriptor.GetConverter(value.GetType());\n\n            // Can converter convert this type to string?\n            if (converter.CanConvertTo(typeof(string)))\n            {\n                // Convert it\n                return converter.ConvertTo(value, \n                        typeof(string)) as string;\n            }\n\n            return value.ToString();\n        }\n    }\n\n[http://www.codeproject.com/Articles/42820/\n    Thinking-Beyond-ToString.aspx?display=Print]",
    "ItemText": null,
    "CreateDate": "2009-10-06T09:27:39.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-06T09:27:39.0000000",
    "DocumentId": "2076072298",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6018",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“SQL Server 2000 Sample Databases”; Northwind and pubs",
    "SortOrdinal": null,
    "ItemChar": "SQL Server 2000 Sample Databases: Northwind and pubs\n\n[http://code.msdn.microsoft.com/northwind/\n    Release/ProjectReleases.aspx?ReleaseId=1401]",
    "ItemText": null,
    "CreateDate": "2009-10-06T09:31:53.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-06T09:31:53.0000000",
    "DocumentId": "2076072299",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6019",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Implementing Finalize and Dispose to Clean Up Unmanaged Resources”; MSDN",
    "SortOrdinal": null,
    "ItemChar": "Class instances often encapsulate control over resources that are not managed by the runtime, such as window handles (HWND), database connections, and so on. Therefore, you should provide both an explicit and an implicit way to free those resources. Provide implicit control by implementing the protected Finalize Method on an object (destructor syntax in C# and the Managed Extensions for C++). The garbage collector calls this method at some point after there are no longer any valid references to the object.\n\nIn some cases, you might want to provide programmers using an object with the ability to explicitly release these external resources before the garbage collector frees the object. If an external resource is scarce or expensive, better performance can be achieved if the programmer explicitly releases resources when they are no longer being used. To provide explicit control, implement the Dispose method provided by the IDisposable Interface. The consumer of the object should call this method when it is done using the object. Dispose can be called even if other references to the object are alive.\n\nNote that even when you provide explicit control by way of Dispose, you should provide implicit cleanup using the Finalize method. Finalize provides a backup to prevent resources from permanently leaking if the programmer fails to call Dispose.\n\nFor more information about implementing Finalize and Dispose to clean up unmanaged resources, see Programming for Garbage Collection. The following code example illustrates the basic design pattern for implementing Dispose.\n\n[http://msdn.microsoft.com/en-us/library/b1yfkh5e%28VS.71%29.aspx]",
    "ItemText": null,
    "CreateDate": "2009-10-06T09:35:50.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-06T09:35:50.0000000",
    "DocumentId": "2076072300",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6020",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "PHP 5.x: “How to sort an array of objects in PHP?”; stackoverflow.com",
    "SortOrdinal": null,
    "ItemChar": "Here is a working code with a static method. It also uses the fact that the static method can access private ivars :) It also uses PHP awesome reflexivity <3.\n\nThe good point about that code is that Person is the class to provide the sort method, which is better on an OOP point of view. Only the class Person should be the one to know how to sort other Person. Neither People or another indepent function should.\n\nNote: not using is_callable(), as it only verifies if the parameter can be called as a function, but does not check if it's actually callable with the current visibility (public, private, protected)\n\nclass Person\n{\n    private $name, $sex, $age;\n    public function Person($name, $sex, $age)\n    {\n        $this->name = $name;\n        $this->sex = $sex;\n        $this->age = $age;\n    }\n\n    public static function sortByName(Person $p1, Person $p2)\n    {\n        return strcmp($p1->name, $p2->name);\n    }\n\n    public static function sortByAge(Person $p1, Person $p2)\n    {\n        return ($p1->age - $p2->age);\n    }\n}\n\nclass People\n{\n    private $people = array();\n    public function addPerson($name, $sex, $age)\n    {\n        $this->people[] = new Person($name, $sex, $age);\n    }\n\n    public function display()\n    {\n        print_r($this->people);\n    }\n\n    public function sort($attribute = 'name')\n    {\n        $sortFct = 'sortBy' . ucfirst(strtolower($attribute));\n        if (!in_array($sortFct, get_class_methods('Person')))\n        {\n            throw new Exception('People->sort(): Can\\'t sort by ' . $attribute);\n        }\n        usort($this->people, 'Person::' . $sortFct);\n    }\n}\n\n$people = new People;\n$people->addPerson('Steve', 'M', 31);\n$people->addPerson('John', 'M', 24);\n$people->addPerson('Jane', 'F', 26);\n$people->addPerson('Sally', 'F', 21);\n$people->display();\n$people->sort();\n$people->display();\n$people->sort('age');\n$people->display();\n\n…\n\nTake a look at usort. It allows you to specify your own comparison function. Every time two objects need to be compared, it will call that comparison function you specify to see which one is greater than the other (or if they are equal). In your comparison function you can do whatever you need to with the fields in the two Person objects to compare them.\n\nFor doing callbacks with class methods (as in your example), look at passing callbacks. For example, you could do something like this:\n\nclass People {\n    // your previously defined stuff here...\n\n    public function sort() {\n        usort($this->people, array($this, 'comparePeople'));\n    }\n\n    public function comparePeople(Person $p1, Person $p2) {\n        return strcmp($p1->getName(), $p2->getName());\n    }\n}\n\nYou would also of course need to add getName() to your Person class.\n\nFor a static approach, it might look something like this:\n\nfunction sortPeople($people) {\n    usort($people, array('People', 'comparePeople'));\n}\n\nclass People {\n    // your previously defined stuff here...\n\n    public static function comparePeople(Person $p1, Person $p2) {\n        return strcmp($p1->getName(), $p2->getName());\n    }\n}\n\nAs you can see, it looks very similar. I would not recommend you use the static approach. It's messier and violates the single responsibility principle.\n\n[http://stackoverflow.com/questions/1528561/\n    how-to-sort-an-array-of-objects-in-php]",
    "ItemText": null,
    "CreateDate": "2009-10-06T17:28:27.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-06T17:28:27.0000000",
    "DocumentId": "2076072301",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6021",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Why do you create a View in a database?”",
    "SortOrdinal": null,
    "ItemChar": "A view provides several benefits.\n\n1. Views can hide complexity\n\nIf you have a query that requires joining several tables, or has complex logic or calculations, you can code all that logic into a view, then select from the view just like you would a table.\n\n2. Views can be used as a security mechanism\n\nA view can select certain columns and/or rows from a table, and permissions set on the view instead of the underlying tables. This allows surfacing only the data that a user needs to see.\n\n3. Views can simplify supporting legacy code\n\nIf you need to refactor a table that would break a lot of code, you can replace the table with a view of the same name. The view provides the exact same schema as the original table, while the actual schema has changed. This keeps the legacy code that references the table from breaking, allowing you to change the legacy code at your leisure.\n\nThese are just some of the many examples of how views can be useful.\n\n[http://stackoverflow.com/questions/1278521/\n    why-do-you-create-a-view-in-a-database]",
    "ItemText": null,
    "CreateDate": "2009-10-06T17:31:53.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-06T17:31:53.0000000",
    "DocumentId": "2076072302",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6022",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CSS: “Attribute selectors”; css.maxdesign.com.au",
    "SortOrdinal": null,
    "ItemChar": "What are attributes?\n\nAll HTML elements can have associated properties, called attributes. These attributes generally have values. Any number of attribute/value pairs can be used in an element's tag - as long as they are separated by spaces. They may appear in any order.\n\nIn the example below, the code segments highlighted in blue are attributes and the segments highlighted in red are attribute values.\n<h1 id=\"section1\">\n<img src=\"small.gif\" width=\"100\" height=\"100\">\n<img title=\"mainimage\" alt=\"main image\">\n<a href=\"foo.htm\">\n<p class=\"maintext\">\n<form style=\"padding: 10px\">\nAttribute selectors\n\nAttribute selectors are used to select elements based on their attributes or attribute value. For example, you may want to select any image on an HTML page that is called \"small.gif\". This could be done with the rule below, that will only target images with the chosen name:\nimg[src=\"small.gif\"] { border: 1px solid #000; }\n\nThere are four types of attribute selectors.\n\nThe first option is to select based on attribute. The example below will select an element (in this case \"img\") with the relevant attribute. Examples could include:\nimg[title] { border: 1px solid #000; }\nimg[width] { border: 1px solid #000; }\nimg[alt] { border: 1px solid #000; }\n\nThe second option is to select based on value. The example below will select any image whose attribute (in this case \"src\") has a value of \"small.gif\".\nimg[src=\"small.gif\"] { border: 1px solid #000; }\n\nThe third method will select space separated instances of a value. The example below will select any image whose attribute (in this case \"alt\") contains a space separated list of words - in this case any \"alt\" that includes the word \"small\".\nimg[alt~=\"small\"] { border: 1px solid #000; }\n\nThe fourth method will select hyphen separated instances of a value. The example below will select any image whose attribute (in this case \"title\") has a hyphen separated list - in this case any title that includes \"small-\".\nimg[title|=\"small\"] { border: 1px solid #000; }\n\nAttribute selectors are not supported by Windows Internet Explorer 5, 5.5 and 6 or Macintosh Internet Explorer 5. They are also not supported by earlier versions of Opera. \n\n[http://css.maxdesign.com.au/selectutorial/selectors_attribute.htm]",
    "ItemText": null,
    "CreateDate": "2009-10-07T18:43:48.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-07T18:43:48.0000000",
    "DocumentId": "2076072303",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6023",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CSS: “The importance of !important in CSS”; yellowjug.com",
    "SortOrdinal": null,
    "ItemChar": "When a CSS propriety is specified twice, the browser will commonly use the last one. Let’s see an example:\n\n\n    #main {\n    width:600px;\n    width:800px;\n    }\n\nIn this example the browser will assign width 800 pixels to the #main element.\n\nThe declaration !important can be used in cascading style sheets to give priority to some parameters.\n\n\n    #main {\n    width:600px !important;\n    width:800px;\n    }\n\nIn the example above the browser will give priority to the first declaration and the #main element will be 600 pixels width.\n\nSo, what’s the point?\nInternet Explorer 6 and previous versions simply ignore the declaration !important (while IE 7 supports them) therefore we can take advantage of this issue to design a “browser-based” CSS.\n\nLet’s consider, for example, the CSS proprieties max-width and min-width: these parameters specify a maximum and minimum width of a web element (such as a table or a DIV container). This is a useful feature which allows to create fluid and dynamic layouts that can be displayed correctly both in low resolutions (e.g. 640×480) and in very high resolutions.\nUnfortunately IE 6, among other things, doesn’t even support the max/min width declaration: in order to obtain the same effect under IE6 you can use a proprietary code:\n\n    #main {\n    max-width: 900px;\n    width:expression(document.body.clientWidth > 900? \"900px\": \"auto\" ); /* IE proprietary code */\n    }\n\nIn this example the #main element will be rendered with a maximum width of 900px both in Firefox, Safari, Opera and Internet Explorer.\nPlease note that the proprietary code width:expression is not a valid CSS declaration, so if you decide to adopt it, your stylesheet won’t respect web standards and won’t be validated.\n\nHowever, we can use the !important declaration to avoid non-standard CSS expressions. Here is a “workaround” which allows to use max/min width with smart browsers and specify a fixed width for IE 6 users:\n\n    #main {\n    margin: 0 auto 0;\n    max-width: 900px;\n    min-width: 770px;\n    width:auto !important;\n    width:800px;\n    }\n\nIn the above example (you can see it in action on this website) the declaration !important is used to specify dynamic width attributes to browsers that support them (e.g. Firefox, Netscape, Opera, Safari and IE 7) while the width is fixed to an average value (800 pixels) for IE 6.\nThis doesn’t solve completely the matter, but can be considered as a workaround to improve your fluid layout appearance avoiding non-standard code.\n\n[http://www.yellowjug.com/web-design/the-importance-of-important-in-css/]",
    "ItemText": null,
    "CreateDate": "2009-10-08T13:00:26.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-08T13:00:26.0000000",
    "DocumentId": "2076072304",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6024",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "GIMP: “Layer to selection”",
    "SortOrdinal": null,
    "ItemChar": "You could just use \"Alpha to Selection\" under a layer (right click) and it will give you the same results. Unless your messing with the Alpha layer part of your layer then your plugin would be needed.\n\n[http://registry.gimp.org/node/14663]",
    "ItemText": null,
    "CreateDate": "2009-10-10T18:44:01.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-10T18:44:01.0000000",
    "DocumentId": "2076072305",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6025",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Java SE: System Properties; getProperties()",
    "SortOrdinal": null,
    "ItemChar": "This set of system properties always includes values for the following keys:\n\nKey \tDescription of Associated Value\njava.version \tJava Runtime Environment version\njava.vendor \tJava Runtime Environment vendor\njava.vendor.url \tJava vendor URL\njava.home \tJava installation directory\njava.vm.specification.version \tJava Virtual Machine specification version\njava.vm.specification.vendor \tJava Virtual Machine specification vendor\njava.vm.specification.name \tJava Virtual Machine specification name\njava.vm.version \tJava Virtual Machine implementation version\njava.vm.vendor \tJava Virtual Machine implementation vendor\njava.vm.name \tJava Virtual Machine implementation name\njava.specification.version \tJava Runtime Environment specification version\njava.specification.vendor \tJava Runtime Environment specification vendor\njava.specification.name \tJava Runtime Environment specification name\njava.class.version \tJava class format version number\njava.class.path \tJava class path\njava.ext.dirs \tPath of extension directory or directories\nos.name \tOperating system name\nos.arch \tOperating system architecture\nos.version \tOperating system version\nfile.separator \tFile separator (\"/\" on UNIX)\npath.separator \tPath separator (\":\" on UNIX)\nline.separator \tLine separator (\"\\n\" on UNIX)\nuser.name \tUser's account name\nuser.home \tUser's home directory\nuser.dir \tUser's current working directory\n\nNote that even if the security manager does not permit the getProperties operation, it may choose to permit the getProperty(String) operation.\n\n[http://java.sun.com/j2se/1.3/docs/api/java/lang/\n    System.html#getProperties%28%29]",
    "ItemText": null,
    "CreateDate": "2009-10-10T18:46:29.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-10T18:46:29.0000000",
    "DocumentId": "2076072306",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6026",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "ASP.NET: “Data Paging in ASP.NET”; DataPager Control",
    "SortOrdinal": null,
    "ItemChar": "Custom paging with GridView is great, but the problem is you must use GridView to use it. ASP.NET introduces new DataPager control, which works with ListView control (but will not work with DataList or Repeater controls). The using of DataPager control is simple. After you configured data source for ListView control, you simply drag DataPager from the menu and drop it on web form. After that you only need to set PagerControlID property to ID of ListView control and DataPager will work! You can customize its page size and look if you need.\n\nThe problem with DataPager control is that DataPager uses all data from data source to work with. It cannot select only current page to save up web server resources, but simply uses ListView's data source which is not efficient. If your data set has more than 100 or 200 pages or even more, this is unacceptable.\n\n[http://www.beansoftware.com/ASP.NET-Tutorials/Using-Data-Paging.aspx]",
    "ItemText": null,
    "CreateDate": "2009-10-10T18:49:03.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-10T18:49:03.0000000",
    "DocumentId": "2076072307",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6027",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Datalist paging with linq”; stackoverflow.com; Tomas Lycken",
    "SortOrdinal": null,
    "ItemChar": "You will find the methods .Skip() and .Take() very useful.\n\nI noticed you provided some code from your project, so here's an update on how you should implement these methods.\n\nIn your method for getting the data, do the following:\n\nDim query = (From st In db.students _\n            Order By st.st_studentid Ascending _\n            Select st).Skip((CurrentPage - 1) * PageSize).Take(PageSize)\n\nThen provide the CurrentPage and PageSize variables as arguments to the method. (You don't want to build them into the data access, as they could vary across different parts of your site...)\n\n[http://stackoverflow.com/questions/764364/datalist-paging-with-linq]\n\nNote that Skip and Take come from Haskel set operations.",
    "ItemText": null,
    "CreateDate": "2009-10-13T21:54:13.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-13T21:54:13.0000000",
    "DocumentId": "2076072308",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6028",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“How can I add a class attribute via Html.BeginForm?”; stackoverflow.com; Marwan Aouida",
    "SortOrdinal": null,
    "ItemChar": "Html.BeginForm(\"DoSearch\", \"Search\",\n    FormMethod.Post, new { @class = \"myclass\"}))\n\n[http://stackoverflow.com/questions/879266/\n    how-can-i-add-a-class-attribute-via-html-beginform]",
    "ItemText": null,
    "CreateDate": "2009-10-13T21:57:42.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-13T21:57:42.0000000",
    "DocumentId": "2076072309",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6029",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "VMware: “Turning off the PC speaker for all virtual machines”",
    "SortOrdinal": null,
    "ItemChar": "To disable the speaker emulation for virtual machines, add the following line to Workstation's global configuration file:\n\nmks.noBeep = \"TRUE\"\n\nThe global configuration file should exist in ~/.vmware/config on a Linux host, and \\Documents and Settings\\All Users\\Application Data\\VMware\\VMware Workstation\\config.ini on a Windows host.\n\nIf the file does not exist, create a new text file and add the mks.noBeep line to it. Also see \"Creating and Editing config.ini\" (for Windows hosts) at http://kb.vmware.com/kb/1754.\n\n[http://kb.vmware.com/selfservice/microsites/search.do?\n    language=en_US&cmd=displayKC&externalId=1664]",
    "ItemText": null,
    "CreateDate": "2009-10-13T22:06:31.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-13T22:06:31.0000000",
    "DocumentId": "2076072310",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6030",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Configuring explicit Run As on Windows Server 2008”; Rick Vanover",
    "SortOrdinal": null,
    "ItemChar": "Default installations of Windows Server 2008 provide the User Account Control (UAC) security component to manage contexts in which applications run. The default configuration is to Run As the logged in user or simply to Run As Administrator. The issues with the latter option are that it does not specify any username in particular, and it only refers to local administrative permission. Don’t bother pressing [Shift] and needlessly exploring various right-click menus. To get the explicit Run As functionality that you need for best practice permission assignment, you need to go to the SysInternals bag of tricks.\n\nShellRunas version 1.01 from Sysinternals (which is now part of TechNet) will get the job done. Downloading ShellRunas is straightforward and performing the following one-liner enables the tool:\n\nshellrunas /reg     \n\nThis command will install the Run As option on the Start Menu for use in the Windows Shell. Figure A shows a Windows Server 2008 server with the Sysinternals tool installed.\n\n…\n\nThe ShellRunas command can also work without being installed completely for special one-time iterations of the command. Further, it can be uninstalled with the unreg parameter if you want to remove it from certain configurations. Ironically, adding this tool does not modify the existence of the Windows Secondary Logon service, which provides the functionality to use alternate credentials.\n\nHaving the ability to pass explicit credentials is really a no-brainer in any good practice of administration. This is especially important for accounts that have domain administrator group membership. The ShellRunas command will allow organizations to keep much of their security practices intact as they transition to Windows Server 2008.\n\n[http://blogs.techrepublic.com.com/datacenter/?p=557]",
    "ItemText": null,
    "CreateDate": "2009-10-14T19:17:17.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-14T19:17:17.0000000",
    "DocumentId": "2076072311",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6031",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“When to use RenderAction vs RenderPartial with ASP.NET MVC”",
    "SortOrdinal": null,
    "ItemChar": "At first glance, RenderAction and RenderPartial both do a very similar thing – they load ‘some other content’ into the view being rendered at the place they are called. Personally, I think they should be used for different scenarios so these are my thoughts on where each one should be used and why.\n\nFirst though, a quick recap on what they do:\n\n    * RenderPartial renders a control with some model passed to it.\n    * RenderAction (or RenderSubAction which addresses some issues) calls a controller action and then renders whatever view that returns with whatever model that controller action passes through it.\n\nHmmn, they sound pretty similar don’t they! The thing to note though is that the model passed to RenderPartial is either the current model being rendered by the calling view or a subset of it. Anything that a RenderPartial view being called is going to need has to be passed into the Model of the calling view. The view rendered using RenderAction on the other hand could contain a completely different model with no need for this to be passed in to our parent view.\n\nBecause of this, I think RenderPartial is most appropriate when what it is going to output could be considered part of the calling view but separating it out into a user control makes sense to allow re-use and avoid repeating the same rendering code in multiple views.\n\n…\n\nSo that is where and how I think RenderPartial should be used. How about RenderAction?\n\nWell, I think this has it’s place when the thing that needs to be rendered isn’t the responsibility of the calling view or controller.\n\nFor example, I may have a PersonController responsible for CRUD operations on the Person class including a Display action and view but I do not want either of these to have any responsibility for anything to do with the display of Projects that the person is working on. If I want to display a list of assigned projects within the Person Display view then I would use RenderAction to add it but the responsibility and knowledge of how to do this resides with the ProjectController and it’s views.\n\n[http://blogs.intesoft.net/post/2009/02/\n    renderaction-versus-renderpartial-aspnet-mvc.aspx]",
    "ItemText": null,
    "CreateDate": "2009-10-14T19:21:40.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-14T19:21:40.0000000",
    "DocumentId": "2076072312",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6032",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Are Partial Methods Some Form Of AOP (Aspect Oriented Programming)?”; Scott Wisniewski",
    "SortOrdinal": null,
    "ItemChar": "Are Partial Methods Some Form Of AOP (Aspect Oriented Programming)?\n\nNo. Partial methods do share some things in common with Aspect Oriented Programming in that partial methods offer a way of associating \"hooks\" with custom code. However, unlike AOP systems partial methods require extension points to be explicitly defined by the customer. AOP systems allow developers to \"weave in\" functionality into code that hasn't had explicit hooks defined. Usually they do this by specifying some declarative search strings that describes the places where the hooks should be applied. The compiler is then responsible for finding all the appropriate \"extension points\" to apply the hooks to and injecting any necessary method calls. Partial methods in VB do not do this.\n\n[http://blogs.msdn.com/vbteam/archive/2007/03/27/partial-methods.aspx]",
    "ItemText": null,
    "CreateDate": "2009-10-14T19:56:39.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-14T19:56:39.0000000",
    "DocumentId": "2076072313",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6033",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CSS Child Selectors and Descendant Selectors; Microsoft Internet Explorer Limitations; webmasterworld.com",
    "SortOrdinal": null,
    "ItemChar": "selector[1] > selector[2]{\n[property]: value\n}\n\nThis is called the child selector. In browsers that support it (all but IE), it applies the styles to selector2 child elements of selector1.\n\nFor instance, if you had this code...\n\nhtml:\n<div id=\"box\">\n<p>Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet.</p>\n</div>\n\n…and you wanted all of the paragraphs in it to have blue text, you could use the child selector...\n\ncss:\n#box > p{\ncolor:blue;\n}\n\n…which applies it's styles to all the <p> children of #box. This is similar to the decendant selector...\n\ncss:\n#box p {\ncolor:blue;\n}\n\n…which in this situation would work identically, but it's a little different. The decendant selector will apply to ALL decendants (elements nested in any element that is nested in #box), whereas the child selector applies only to the direct children of the parent (elements nested in #box).\n\n…\n\nWe'll need slightly more complicated code to see this...\n\nhtml:\n<div id=\"box\">\n<p>Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet.</p>\n<div>\n<p>Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet.</p>\n</div>\n</div>\n\nApplying the same css to this, the child selector would color only the first two paragraphs blue, but would leave the other two, the one's inside of the non-IDed div, at the default text color. The descendant selector, however, would color all four paragraphs blue since they are all decendants (two children, two grandchildren) of the parent #box.\n\nGoing by this \"official\" application, the child selector's usefulness is limited to situations in which the order of nesting requires applying styles to child elements but not grand- (or great-grand) child elements.\n\nIt has another use, however, that stems from IE's conspicuous lack of support for it.\n\nSince no IE browser recognizes the child selector, it is often used as a way to feed other browsers style information that must be hidden from IE. There's a good chance that this is what it is doing in the code you've seen. \n\n[http://www.webmasterworld.com/forum83/5944.htm]",
    "ItemText": null,
    "CreateDate": "2009-10-16T12:54:23.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-16T12:54:23.0000000",
    "DocumentId": "2076072314",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6034",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CSS 2.1 Summary of Selectors; Pseudo Classes; w3.org",
    "SortOrdinal": null,
    "ItemChar": "Universal selector: *\nMatches any element.\n\nType selectors: E\nMatches any E element (i.e., an element of type E).\n\nDescendant selectors:E F\nMatches any F element that is a descendant of an E element.\n\nChild selectors: E > F\nMatches any F element that is a child of an element E.\n\nThe :first-child pseudo-class: E:first-child\nMatches element E when E is the first child of its parent.\n \t\nThe link pseudo-classes:\n    E:link\n    E:visited \nMatches element E if E is the source anchor of a hyperlink of which the target is not yet visited (:link) or already visited (:visited).\n\nThe dynamic pseudo-classes:\n    E:active\n    E:hover\n    E:focus\nMatches E during certain user actions. \t\n\nThe :lang() pseudo-class: E:lang(c)\nMatches element of type E if it is in (human) language c (the document language specifies how language is determined).\n\nAdjacent selectors: E + F\nMatches any F element immediately preceded by a sibling element E.\n\nAttribute selectors: E[foo]\nMatches any E element with the \"foo\" attribute set (whatever the value).\n\nAttribute selectors: E[foo=\"warning\"]\nMatches any E element whose \"foo\" attribute value is exactly equal to \"warning\".\n\nAttribute selectors: E[foo~=\"warning\"]\nMatches any E element whose \"foo\" attribute value is a list of space-separated values, one of which is exactly equal to \"warning\". \n\nAttribute selectors: E[lang|=\"en\"]\nMatches any E element whose \"lang\" attribute has a hyphen-separated list of values beginning (from the left) with \"en\".\n\nClass selectors: DIV.warning\nLanguage specific. (In HTML, the same as DIV[class~=\"warning\"].)\n\nID selectors: E#myid\nMatches any E element with ID equal to \"myid\".\n\n[http://www.w3.org/TR/CSS2/selector.html]",
    "ItemText": null,
    "CreateDate": "2009-10-16T20:27:11.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-16T20:27:11.0000000",
    "DocumentId": "2076072315",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6035",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CSS 2.1 Summary of Pseudo Elements; w3.org",
    "SortOrdinal": null,
    "ItemChar": "The :first-line pseudo-element\nThe :first-line pseudo-element applies special styles to the contents of the first formatted line of a paragraph.\n\nThe :first-letter pseudo-element\nThe :first-letter pseudo-element must select the first letter of the first line of a block, if it is not preceded by any other content (such as images or inline tables) on its line. The :first-letter pseudo-element may be used for \"initial caps\" and \"drop caps\", which are common typographical effects.\n\nThe :before and :after pseudo-elements\nThe ':before' and ':after' pseudo-elements can be used to insert generated content before or after an element's content.\n\n[http://www.w3.org/TR/CSS21/selector.html]\n[http://www.w3.org/TR/CSS21/generate.html]",
    "ItemText": null,
    "CreateDate": "2009-10-16T20:33:24.0000000",
    "EndDate": null,
    "ModificationDate": "2009-10-16T20:33:24.0000000",
    "DocumentId": "2076072316",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6036",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": " ",
    "SortOrdinal": null,
    "ItemChar": " ",
    "ItemText": null,
    "CreateDate": "2010-01-11T22:23:45.0000000",
    "EndDate": null,
    "ModificationDate": "2010-01-11T22:23:45.0000000",
    "DocumentId": "2076072317",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6037",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": " ",
    "SortOrdinal": null,
    "ItemChar": " ",
    "ItemText": null,
    "CreateDate": "2010-01-11T22:23:54.0000000",
    "EndDate": null,
    "ModificationDate": "2010-01-11T22:23:54.0000000",
    "DocumentId": "2076072318",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6038",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": " ",
    "SortOrdinal": null,
    "ItemChar": " ",
    "ItemText": null,
    "CreateDate": "2010-01-11T22:24:12.0000000",
    "EndDate": null,
    "ModificationDate": "2010-01-11T22:24:12.0000000",
    "DocumentId": "2076072319",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6039",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": " ",
    "SortOrdinal": null,
    "ItemChar": " ",
    "ItemText": null,
    "CreateDate": "2010-01-11T22:24:28.0000000",
    "EndDate": null,
    "ModificationDate": "2010-01-11T22:24:28.0000000",
    "DocumentId": "2076072320",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6040",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": " ",
    "SortOrdinal": null,
    "ItemChar": " ",
    "ItemText": null,
    "CreateDate": "2010-02-01T14:05:23.0000000",
    "EndDate": null,
    "ModificationDate": "2010-02-01T14:05:23.0000000",
    "DocumentId": "2076072321",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6041",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF Error: “The name 'InitializeComponent' does not exist in the current context”",
    "SortOrdinal": null,
    "ItemChar": "This error usually means that an x:Class declaration is missing from the XAML.",
    "ItemText": null,
    "CreateDate": "2010-02-15T10:38:31.0000000",
    "EndDate": null,
    "ModificationDate": "2010-02-15T10:38:31.0000000",
    "DocumentId": "2076072322",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6042",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF and WCF: The Decorator Pattern and Dispatcher.CurrentDispatcher",
    "SortOrdinal": null,
    "ItemChar": "/*\n    Push dispatching into the service layer with a decorator pattern.\n*/\n\npublic class MySvcDecorator : IMySvc\n{\n    private readonly IMySvc _mysvc;\n    private readonly Dispatcher _current = Dispatcher.CurrentDispatcher;\n\n    public MySvcDecorator(IMySvc mysvc){//set _mysvc here...;}\n    public Event Action<T> HeyGui;\n    void MySvcEventHandler(T mydata)\n    {\n        Action dispatch = () => { if(HeyGui != null) HeyGui(mydata); }\n        _current.BeginInvoke(DispatcherPriority.DataBind, dispatch);\n    }\n}",
    "ItemText": null,
    "CreateDate": "2010-02-15T11:18:20.0000000",
    "EndDate": null,
    "ModificationDate": "2010-02-15T11:18:20.0000000",
    "DocumentId": "2076072323",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6043",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "LINQ to Objects Code: A Running Total ",
    "SortOrdinal": null,
    "ItemChar": "class Item\n{\n    public int Number { get; set; }\n    public int Sum { get; set; }\n}\n\n[TestMethod]\npublic void TinyTest()\n{\n    var set = new List<Item>\n    {\n        new Item{Number=1},\n        new Item{Number=2},\n        new Item{Number=3},\n        new Item{Number=4},\n        new Item{Number=5},\n        new Item{Number=6},\n        new Item{Number=7},\n        new Item{Number=8},\n        new Item{Number=9},\n        new Item{Number=10},\n        new Item{Number=11},\n        new Item{Number=12},\n        new Item{Number=13},\n        new Item{Number=14},\n        new Item{Number=15}\n    };\n\n    set.ForEach(x => x.Sum = x.Number + (set.Where(x2 => x2.Number < x.Number).Sum(x3 => x3.Number)));\n    var sortedSet = set.OrderByDescending(x=>x.Number);\n\n    foreach(var item in sortedSet)\n    {\n        TestContext.WriteLine(\"{0},{1}\", item.Number, item.Sum);\n    }\n}\n\n/*\n\nTest Results:\n\n15,120\n14,105\n13,91\n12,78\n11,66\n10,55\n9,45\n8,36\n7,28\n6,21\n5,15\n4,10\n3,6\n2,3\n1,1\n\n*/\n\n[http://en.wikipedia.org/wiki/Running_total]",
    "ItemText": null,
    "CreateDate": "2010-02-19T13:29:52.0000000",
    "EndDate": null,
    "ModificationDate": "2010-02-19T13:29:52.0000000",
    "DocumentId": "2076072324",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6044",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": ".NET 2.x: Something Obvious about Nullables",
    "SortOrdinal": null,
    "ItemChar": "[TestMethod]\npublic void TinyTest()\n{\n    var i = new Int32?();\n    i = null;\n    Assert.IsFalse(i.HasValue);\n}\n/*\n    This test will pass because i.HasValue will *not* throw\n    a null reference exception; a “nullable” has the ability\n    to be null and *not* throw such exceptions.\n*/",
    "ItemText": null,
    "CreateDate": "2010-02-19T19:50:33.0000000",
    "EndDate": null,
    "ModificationDate": "2010-02-19T19:50:33.0000000",
    "DocumentId": "2076072325",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6045",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF: Box or Flow? Grid or DataGrid?",
    "SortOrdinal": null,
    "ItemChar": "Avoid using the DataGrid because it's customization story is not that compelling. The preference here is to use the Grid before resorting to the DataGrid (or the ListView with a DataGridView). The Grid allows the greatest degrees of freedom for customization; it has only one drawback: it has no declarative-syntax support for a flowing, variable number of rows.\n\nThe explicit requirement to have this kind of “flow” is the sole reason why a DataGrid (or a ListView) should be considered. When fixed number of rows are defined in a “box” then then a Grid can be used.\n\nAn experienced developer can use an ObservableCollection and declarative Binding to facilitate scrolling through a fixed number of rows without generating runtime binding errors.",
    "ItemText": null,
    "CreateDate": "2010-02-21T13:31:13.0000000",
    "EndDate": null,
    "ModificationDate": "2010-02-21T13:31:13.0000000",
    "DocumentId": "2076072326",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6046",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Sound Forge: The Importance of the Ctrl+C, Crtl+E Combination; Breaking Up Large Sound Files",
    "SortOrdinal": null,
    "ItemChar": "The Ctrl+E keyboard shortcut is the Paste to New command. This suggests that the Ctrl+C, Ctrl+E keys combination can be used to quickly break up a large sound file into smaller ones.\n\nWhen regions are defined in the large sound file the Regions List (Alt+2) can be used with the Ctrl+C, Ctrl+E keys combination for even faster keyboard-based editing.",
    "ItemText": null,
    "CreateDate": "2010-02-21T14:00:22.0000000",
    "EndDate": null,
    "ModificationDate": "2010-02-21T14:00:22.0000000",
    "DocumentId": "2076072327",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6047",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: An Example of Subtracting DateTime; Making the Future a Negative Number",
    "SortOrdinal": null,
    "ItemChar": "var countDown = new TimeSpan(DateTime.Now.Subtract(epsDate.Value).Ticks);\n\ndata.DaysInterval = countDown.Days;\ndata.IsDayOf = (countDown.Days == 0);\ndata.IsPastDue = (countDown.Ticks > 0);\ndata.IsWithinTwoWeeks = (countDown.Days <= -14);\n\nvar acronym = GetSymbolDuePrefix(symbolType);\nvar due = (data.IsPastDue && (data.DaysInterval > 1)) ? \"Past Due \".ToUpper() : \"Due \".ToUpper();\nvar interval = \"Today\";\nif (data.DaysInterval == 1) interval = \"1 Day\";\nif ((Math.Abs(data.DaysInterval) > 1) && data.IsPastDue) interval = string.Format(\"{0} Days\", Math.Abs(data.DaysInterval));\nif ((Math.Abs(data.DaysInterval) > 1) && !data.IsPastDue) interval = string.Format(\"in {0} Days\", Math.Abs(data.DaysInterval));\n\ndata.DisplayText = string.Concat(acronym, due, interval, \" (e)\"); ",
    "ItemText": null,
    "CreateDate": "2010-02-23T16:27:34.0000000",
    "EndDate": null,
    "ModificationDate": "2010-02-23T16:27:34.0000000",
    "DocumentId": "2076072328",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6048",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF and Visual Studio Design Time: “app.config isn't used in WPF designer”; Microsoft Connect",
    "SortOrdinal": null,
    "ItemChar": "app.config information isn't found by the wpf designer because wpf designer works with app.config of visual studio (devenv.exe.config) and not the app.config of the application…\n\n[http://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=390929]\n",
    "ItemText": null,
    "CreateDate": "2010-02-23T16:29:28.0000000",
    "EndDate": null,
    "ModificationDate": "2010-02-23T16:29:28.0000000",
    "DocumentId": "2076072329",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6049",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: “Object.GetHashCode Method (System)”; MSDN",
    "SortOrdinal": null,
    "ItemChar": "The default implementation of the GetHashCode method does not guarantee unique return values for different objects. Furthermore, the .NET Framework does not guarantee the default implementation of the GetHashCode method, and the value it returns will be the same between different versions of the .NET Framework. Consequently, the default implementation of this method must not be used as a unique object identifier for hashing purposes.\n\n[http://msdn.microsoft.com/en-us/library/system.object.gethashcode.aspx]",
    "ItemText": null,
    "CreateDate": "2010-02-23T16:31:08.0000000",
    "EndDate": null,
    "ModificationDate": "2010-02-23T16:31:08.0000000",
    "DocumentId": "2076072330",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6050",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF: WPF DispatcherUnhandledException Pattern",
    "SortOrdinal": null,
    "ItemChar": "/// <summary>\n/// Interaction logic for App.xaml\n/// </summary>\npublic partial class App : Application\n{\n    protected override void OnStartup(StartupEventArgs e)\n    {\n        base.OnStartup(e);\n\n        this.DispatcherUnhandledException +=\n             new DispatcherUnhandledExceptionEventHandler(\n                 (s, args) =>\n                 {\n                     MessageBox.Show(string.Format(\"An error occured: {0}\", \n                     args.Exception.Message), \"Error\");\n                     args.Handled = true;\n                 });\n    }\n}\n",
    "ItemText": null,
    "CreateDate": "2010-02-23T16:35:48.0000000",
    "EndDate": null,
    "ModificationDate": "2010-02-23T16:35:48.0000000",
    "DocumentId": "2076072331",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6051",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Firefox 3.x: Using the SQLite Databases to Get Bookmark Data",
    "SortOrdinal": null,
    "ItemChar": "This is a sample SQLite query to get all bookmark data in a folder with ID 69826:\n\n    select * from moz_places where id\n        in(select fk from moz_bookmarks where parent=69826);\n\nThese tables are in the places.sqlite file.\n",
    "ItemText": null,
    "CreateDate": "2010-02-25T21:08:42.0000000",
    "EndDate": null,
    "ModificationDate": "2010-02-25T21:08:42.0000000",
    "DocumentId": "2076072332",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6052",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript: “Why does instanceof return false for some literals?”; stackoverflow.com",
    "SortOrdinal": null,
    "ItemChar": "\"foo\" instanceof String //=> false\n\"foo\" instanceof Object //=> false\ntrue instanceof Boolean //=> false\ntrue instanceof Object //=> false\nfalse instanceof Boolean //=> false\nfalse instanceof Object //=> false\n[0,1] instanceof Array //=> true\n{0:1} instanceof Object //=> true\n12.21 instanceof Number //=> false\n/foo/ instanceof RegExp //=> true\n\n…\n\nThat’s because those things are primitives, and unless they need to be used as objects (when you are calling methods on them, for example) they remain so. The only time they “become” objects is when they need to be wrapped. If you are familiar with the concept of “boxing” in .NET, then think of it in that way.\n\n[http://stackoverflow.com/questions/203739/why-does-instanceof-return-false-for-some-literals]",
    "ItemText": null,
    "CreateDate": "2010-03-02T14:41:39.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-02T14:41:39.0000000",
    "DocumentId": "2076072333",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6053",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "JavaScript: “JavaScript OPERATORS: = (Assignment Operators)”; DevGuru.com",
    "SortOrdinal": null,
    "ItemChar": "OPERATORS: =\nThe basic assignment operator is the equal sign, which assigns the value (literal or variable) on its right to the variable on its left:\n\nCode:\nx = a;\n\nThe assignment operator can also be combined with a variety of other operators to provide shorthand versions of standard operations. It combines with the arithmetic operators +, -, *, / and % to give the following shorthand versions:\n\na += b instead of a = a + b\na -= b instead of a = a - b\na *= b instead of a = a * b\na /= b instead of a = a / b\na %= b instead of a = a % b\n\nIt also combines with the following bitwise operators:\n\na <<= b instead of a = a << b\na >>= b instead of a = a >> b\na >>>= b instead of a = a >>> b\na &= b instead of a = a & b\na ^= b instead of a = a ^ b\na |= b instead of a = a | b \n\n[http://www.devguru.com/Technologies/Ecmascript/Quickref/assignment_operators.html]",
    "ItemText": null,
    "CreateDate": "2010-03-02T14:44:36.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-02T14:44:36.0000000",
    "DocumentId": "2076072334",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6054",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "readonly keyword (C#)",
    "SortOrdinal": null,
    "ItemChar": "The readonly keyword is different from the const keyword. A const field can only be initialized at the declaration of the field. A readonly field can be initialized either at the declaration or in a constructor. Therefore, readonly fields can have different values depending on the constructor used. Also, while a const field is a compile-time constant, the readonly field can be used for runtime constants…\n\n[http://msdn.microsoft.com/en-us/library/acdd6hb7(VS.71).aspx]",
    "ItemText": null,
    "CreateDate": "2010-03-02T14:46:58.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-02T14:46:58.0000000",
    "DocumentId": "2076072335",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6055",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Expression Design 3.x: “How do you crop a picture in Design?”",
    "SortOrdinal": null,
    "ItemChar": "There isn’t a way to crop a picture in Design (not in the traditional sense, anyway), but you can get the effect by using a clipping path. In Design, version 2, you can use a slice to select only the portion of the image you want, save the slice and then import the results back into Design.\n\n[http://social.expression.microsoft.com/Forums/en-US/design/thread/76155c67-652a-405d-9b07-983d99c936cd]",
    "ItemText": null,
    "CreateDate": "2010-03-08T21:05:31.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-08T21:05:31.0000000",
    "DocumentId": "2076072336",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6056",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# Code: DatumStateEnum",
    "SortOrdinal": null,
    "ItemChar": "namespace AppXCommon.Enum\n{\n    /// <summary>\n    /// Defines client-side states for data display.\n    /// </summary>\n    public enum DatumStateEnum\n    {\n        /// <summary>\n        /// Data is null.\n        /// </summary>\n        Unknown,\n\n        /// <summary>\n        /// Data is available.\n        /// </summary>\n        Available,\n\n        /// <summary>\n        /// Data is available and indicates an downward trend.\n        /// </summary>\n        AvailableAndDown,\n\n        /// <summary>\n        /// Data is available and indicates an upward trend.\n        /// </summary>\n        AvailableAndUp,\n\n        /// <summary>\n        /// Data is not applicable for display.\n        /// </summary>\n        NotApplicable,\n\n        /// <summary>\n        /// Data is not available.\n        /// </summary>\n        NotAvailable\n    }\n}",
    "ItemText": null,
    "CreateDate": "2010-03-08T21:10:07.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-08T21:10:07.0000000",
    "DocumentId": "2076072337",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6057",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF: “Where is the main method in my WPF application?”; App.g.cs",
    "SortOrdinal": null,
    "ItemChar": "The main method in WPF application lies in the file App.g.cs located at obj\\debug.This is autogenerated and will not be visible until we press the ‘Show all files’ button in the solution explorer.\n\n[http://joyfulwpf.blogspot.com/2009/05/where-is-main-method-in-my-wpf.html]\n\nCode generation of App.g.cs will not occur in Visual Studio 2008 when App class is not defined with the partial keyword.\n",
    "ItemText": null,
    "CreateDate": "2010-03-08T21:16:12.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-08T21:16:12.0000000",
    "DocumentId": "2076072338",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6058",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Team Foundation Server 2008: Some Important Work Item Queries in Pseudo Code",
    "SortOrdinal": null,
    "ItemChar": "@Project Bugs Resolved by @Me, @Today\n\n@Project Bugs Resolved by @Me, @Today - 5\n\n@Project Proposed Fixes by @Me, @Today for Active Bugs",
    "ItemText": null,
    "CreateDate": "2010-03-11T12:52:14.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-11T12:52:14.0000000",
    "DocumentId": "2076072339",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6059",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "LINQ to XML: “…use XPathEvaluate() instead of XPathSelectElement[s]()”",
    "SortOrdinal": null,
    "ItemChar": "First, the documentation for all the XPath extension methods from LINQ to XML is already available online at http://msdn2.microsoft.com/en-us/library/system.xml.xpath.extensions_methods(VS.90).aspx\n\nRegarding the evaluation of XPath expressions returning XAttribute, you probably want to use XPathEvaluate() instead of XPathSelectElement[s](). XPathSelectElements() and XPathSelectElement() are specialized versions of XPathEvaluate() that return either a sequence of XElement or one XElement respectively. They are provided as properly typed convenience methods given that quering for elements is such a common task.\n\n[http://connect.microsoft.com/VisualStudio/feedback/details/289519/xpathselectelement-s-invalidoperationexception-query-other-node-types]",
    "ItemText": null,
    "CreateDate": "2010-03-13T18:12:37.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-13T18:12:37.0000000",
    "DocumentId": "2076072340",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6060",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "“Remote Desktop Dual Monitor Support tip…”",
    "SortOrdinal": null,
    "ItemChar": "You're probably wondering if there is dual monitor support for Remote Desktop Connection. There is indeed, but there are some caveats and issues you should be aware of, as well as some solutions to these issues.\n\n[http://blog.tmcnet.com/blog/tom-keating/microsoft/remote-desktop-dual-monitor-support-tip.asp]",
    "ItemText": null,
    "CreateDate": "2010-03-13T18:16:47.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-13T18:16:47.0000000",
    "DocumentId": "2076072341",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6061",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Presentation Foundation: “Text Clarity in WPF”",
    "SortOrdinal": null,
    "ItemChar": "Many, but not all, fonts that start with C and come installed with Windows Vista (Cambria, Calibri, Corbel, Candara, Consolas, etc...) have been designed to work well with WPF. In addition to these, fonts with robust outlines like Verdana, Georgia, etc… display well on computer screens. Ultimately the choice of font selection comes down to personal preference.\n\n[http://windowsclient.net/wpf/white-papers/wpftextclarity.aspx]",
    "ItemText": null,
    "CreateDate": "2010-03-13T18:19:42.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-13T18:19:42.0000000",
    "DocumentId": "2076072342",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6062",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF: “FrameworkElement.OverridesDefaultStyle Property (System.Windows)”",
    "SortOrdinal": null,
    "ItemChar": "If you set OverridesDefaultStyle to true on a control, you will be suppressing the default control template supplied by the theme styles. That control template typically includes the content presenter and other composited elements that provide basic UI functionality and visualization for the control. If you want the control to continue to support the same features as the default theme styles, you must supply an alternate style with a control template that replicates the same structure. For more information, see Control Authoring Overview.\n\n[http://msdn.microsoft.com/en-us/library/system.windows.frameworkelement.overridesdefaultstyle.aspx]",
    "ItemText": null,
    "CreateDate": "2010-03-13T18:29:32.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-13T18:29:32.0000000",
    "DocumentId": "2076072343",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6063",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Router MAC Address Filter; D-LINK SYSTEMS, INC. | WIRELESS ROUTER : Advanced / Network Filter",
    "SortOrdinal": null,
    "ItemChar": "The MAC (Media Access Controller) Address filter option is used to control network access based on the MAC Address of the network adapter. A MAC address is a unique ID assigned by the manufacturer of the network adapter. This feature can be configured to ALLOW or DENY network/Internet access.\n\n[./Advanced/MAC_Address_Filter.shtml]",
    "ItemText": null,
    "CreateDate": "2010-03-13T18:42:35.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-13T18:42:35.0000000",
    "DocumentId": "2076072344",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6064",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Ubuntu: “How to restart samba”; Ubuntu Forums",
    "SortOrdinal": null,
    "ItemChar": "from the terminal type:\n\n    sudo /etc/init.d/samba restart\n\n[http://ubuntuforums.org/archive/index.php/t-648661.html]",
    "ItemText": null,
    "CreateDate": "2010-03-16T21:10:11.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-16T21:10:11.0000000",
    "DocumentId": "2076072345",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6065",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# in .NET 3.5: “Explanation of Func”; StackOverflow.com; Jon Skeet",
    "SortOrdinal": null,
    "ItemChar": "Are you familiar with delegates in general? I have a page about delegates and events which may help if not, although it's more geared towards explaining the differences between the two.\n\nFunc<T, TResult> is just a generic delegate - work out what it means in any particular situation by replacing the type parameters (T and TResult) with the corresponding type arguments (int and string) in the declaration. I've also renamed it to avoid confusion:\n\nstring ExpandedFunc(int x)\n\nIn other words, Func<int, string> is a delegate which represents a function taking an int argument and returning a string.\n\nFunc<T, TResult> is often used in LINQ, both for projections and predicates (in the latter case, TResult is always bool). For example, you could use a Func<int, string> to project a sequence of integers into a sequence of strings. Lambda expressions are usually used in LINQ to create the relevant delegates:\n\nFunc<int, string> projection = x => \"Value=\" + x;\nint[] values = { 3, 7, 10 };\nvar strings = values.Select(projection);\n\nforeach (string s in strings)\n{\n    Console.WriteLine(s);\n}\n\nResult:\n\nValue=3\nValue=7\nValue=10\n\n[http://stackoverflow.com/questions/878650/explanation-of-func]",
    "ItemText": null,
    "CreateDate": "2010-03-16T21:18:35.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-16T21:18:35.0000000",
    "DocumentId": "2076072346",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6066",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "CSS: “Using the CSS @import Rule”",
    "SortOrdinal": null,
    "ItemChar": "Internet Explorer (you knew it’d come up eventually) doesn’t deal well with specifying media types – it chokes. Basically, IE (versions 4-7) try to read the media type like it were part of the file name, causing the whole thing to come crashing down. As such, if you don’t want your CSS to have a default media type of “all,” you’re probably better off using a combination of the <link> tag and imports – specifying a media type in your link, and then importing the appropriate CSS within the file you’re linking to. I haven’t yet heard if IE8 suffers from this same problem (if you happen to know, please enlighten me in the comments!).\n\n[http://www.cssnewbie.com/css-import-rule/]",
    "ItemText": null,
    "CreateDate": "2010-03-16T21:22:13.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-16T21:22:13.0000000",
    "DocumentId": "2076072347",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6067",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF: “How can I debug WPF bindings?”; Bea Stollnitz",
    "SortOrdinal": null,
    "ItemChar": "Data Binding can be tricky to debug. In this post, I will share the techniques I use to debug WPF bindings, including the new debugging improvements we implemented in the latest 3.5 release. I will discuss the following four techniques:\n\n    * Scanning Visual Studio’s Output window for errors.\n    * Using Trace Sources for maximum control.\n    * Using the new property introduced in WPF 3.5 PresentationTraceSources.TraceLevel.\n    * Adding a breakpoint to a Converter.\n\n…\n\nIf you want to learn more about this topic, I recommend Mike Hillberg’s blog. He wrote the best article I’ve read about Trace Sources, which I use frequently as a reference.\n\n[http://bea.stollnitz.com/blog/?p=52]\n[http://blogs.msdn.com/mikehillberg/archive/2006/09/14/WpfTraceSources.aspx]\n",
    "ItemText": null,
    "CreateDate": "2010-03-16T22:20:51.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-16T22:20:51.0000000",
    "DocumentId": "2076072348",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6068",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Windows Server 2008: “Activation fails when you try to activate Windows Vista or Windows Server 2008 over the Internet”",
    "SortOrdinal": null,
    "ItemChar": "run SLUI in elevated command prompt\n\nSLUI 2 - run activation in System Notification area\nSLUI 3 - change activation key\nSLUI 4 - use the automated telephone system (when disabled, the activation key is probably wrong)\n\n[http://support.microsoft.com/kb/921471]",
    "ItemText": null,
    "CreateDate": "2010-03-18T21:09:25.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-18T21:09:25.0000000",
    "DocumentId": "2076072349",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6069",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "LINQ to XML: “XML to IEnumerable<T>”; Andrew Hare; Using a Generic Method with an Interface Constraint",
    "SortOrdinal": null,
    "ItemChar": "Given the following types:\n\npublic interface IFruit\n{\n    String name { get; set; }\n    Int32 id { get; set; }\n}\n\npublic class Fruit : IFruit\n{\n    public String name { get; set; }\n    public Int32 id { get; set; }\n}\n\nI think that you could do something like this:\n\n    static IEnumerable<T> GetSomeFruit<T>(String xml)\n        where T : IFruit, new()\n    {\n        return XElement.Parse(xml)\n                .Elements(\"fruit\")\n                .Select(f => new T {\n                        name = f.Element(\"name\").Value,\n                        id = Int32.Parse(f.Element(\"id\").Value)\n                });\n    }\n\nWhich you would call like this:\n\nIEnumerable<Fruit> fruit = GetSomeFruit<Fruit>(yourXml);\n\n[http://stackoverflow.com/questions/1460567/xml-to-ienumerablet]",
    "ItemText": null,
    "CreateDate": "2010-03-18T21:21:12.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-18T21:21:12.0000000",
    "DocumentId": "2076072350",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6070",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF: ObservableCollection(T) Class (System.Collections.ObjectModel); MSDN",
    "SortOrdinal": null,
    "ItemChar": "In many cases the data that you work with is a collection of objects. For example, a common scenario in data binding is to use an ItemsControl  such as a ListBox, ListView, or TreeView  to display a collection of records.\n\nYou can enumerate over any collection that implements the IEnumerable interface. However, to set up dynamic bindings so that insertions or deletions in the collection update the UI automatically, the collection must implement the INotifyCollectionChanged interface. This interface exposes the CollectionChanged event, an event that should be raised whenever the underlying collection changes.\n\nWPF provides the ObservableCollection<T> class, which is a built-in implementation of a data collection that implements the INotifyCollectionChanged interface.\n\n[http://msdn.microsoft.com/en-us/library/ms668604.aspx]",
    "ItemText": null,
    "CreateDate": "2010-03-18T21:27:07.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-18T21:27:07.0000000",
    "DocumentId": "2076072351",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6071",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C#: Auto-Implemented Properties (C# Programming Guide); MSDN",
    "SortOrdinal": null,
    "ItemChar": "In C# 3.0 and later, auto-implemented properties make property-declaration more concise when no additional logic is required in the property accessors. They also enable client code to create objects When you declare a property as shown in the following example, the compiler creates a private, anonymous backing field can only be accessed through the property's get and set accessors.\n\n…\n\nContrary to what the documentation suggests, it is not possible to define an auto-implemented property that uses the same behavior as the C# readonly keyword (when applied to an explicit backing field). The link to the readonly topic should be removed, at the very least.\n\nUsing private set will define an auto-implemented property with a read-only public contract, although this leaves open the possibility for the value to change after the constructor has been invoked; behavior that is prevented by defining a property without a set accessor and applying the readonly keyword to the backing field.\n\n[http://msdn.microsoft.com/en-us/library/bb384054.aspx]",
    "ItemText": null,
    "CreateDate": "2010-03-18T21:34:01.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-18T21:34:01.0000000",
    "DocumentId": "2076072352",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6072",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Silverlight 2.x: “Silverlight Tips, Tricks, and Best Practices”",
    "SortOrdinal": null,
    "ItemChar": "Use CreateFromXaml to Reduce XAML Size\n\nAnother takeaway from the sample application is how it uses CreateFromXaml to create XAML Image objects dynamically rather than cluttering the XAML file with scores of nearly identical Image declarations. The XAML file you see in Figure 4, Scene.xaml, is nearly empty. It declares a couple of Canvases and Rectangles, a Storyboard, and a ScaleTransform, but it doesn't declare a single Image object. Instead, a for loop in Default.html.js creates 105 Image objects—one per image in the animation—and initializes them with image bits from the downloader (see Figure 5).\n\n…\n\nUse Storyboards for Manual Animations\n\nOne of the coolest features of Silverlight is its rich support for animations. You can make objects fade in and out, zoom across the page, and pop in and out of view with a few lines of XAML. But you can't animate just anything, at least not declaratively. You can easily animate numeric properties, Color properties, and Point properties. But if you want to, say, animate an image by varying its Source property over time (swapping one image for another on each tick), you'll have to write some code, and the way you structure that code will affect the quality of the animation.\n\nSilverlight 1.0 lacks an explicit timer object, and window.setTimeout is less than ideal for animations. That's why savvy Silverlight developers use Storyboard objects when they need programmable timers.\n\n[http://msdn.microsoft.com/en-us/magazine/cc164249.aspx]",
    "ItemText": null,
    "CreateDate": "2010-03-19T17:52:54.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-19T17:52:54.0000000",
    "DocumentId": "2076072353",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6073",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Explicit Join Syntax and Implicit Join Syntax",
    "SortOrdinal": null,
    "ItemChar": "SQL specifies two different syntactical ways to express joins. The first, called \"explicit join notation\", uses the keyword JOIN, whereas the second uses the \"implicit join notation\". The implicit join notation lists the tables for joining in the FROM clause of a SELECT statement, using commas to separate them. Thus, it specifies a cross-join, and the WHERE clause may apply additional filter-predicates. Those filter-predicates function comparably to join-predicates in the explicit notation.\n\n[http://en.wikipedia.org/wiki/Join_(SQL)]",
    "ItemText": null,
    "CreateDate": "2010-03-19T22:35:20.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-19T22:35:20.0000000",
    "DocumentId": "2076072354",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6074",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF: “How Do I Add a Splitter to my WPF Window?”; LearnWPF.com",
    "SortOrdinal": null,
    "ItemChar": "To allow the GridSplitter to resize cells vertically is somewhat non-intuitive as described by Charles Petzold here. The GridSplitter has a ResizeDirection which defaults to Columns but can be set to Rows to allow the splitter to change the height of a row in the grid. To enable the height of row to be resized correctly by the splitter you also need to set the HorizontalAlignment and VerticalAlignment for to align it to the bottom, and across the width of the containing cells. You can also set the Grid.ColumnSpan for the splitter to span across all the cells in the row that it resizes, otherwise the splitter will only fill a single cell.\n\n[http://learnwpf.com/Posts/Post.aspx?postId=fbd8e1ed-dbd4-45c1-9b9c-a8355679f196]",
    "ItemText": null,
    "CreateDate": "2010-03-19T22:39:11.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-19T22:39:11.0000000",
    "DocumentId": "2076072355",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6075",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C#: “What is the second meaning of a single ampersand in C#?”; StackOverflow.com",
    "SortOrdinal": null,
    "ItemChar": "As has been said, \"&\" is a bitwise AND. \"&&\" is a logical AND. & performs an AND operation on its operands bit by bit, and in general functions exactly like plus or times or any arithmetic operator. && is more complex. If compares each of its operands against zero. If the first operand is zero, it assumes the value FALSE and short-circuits the rest of the expression, i.e. it does not evaluate any remaining operands. If the first value is non-zero, it examines the second value. If this is zero it assumes the value of false, otherwise it assumes the value of true. In either case it continues to evaluate the expression.\n\nThat is, there are two crucial differences between & and &&:\n\n1. & operates bit by bit while && considers only zero and non-zero and always returns either 0 or 1. Thus 5 & 6 (binary 101 & 110) gives 4 (binary 100), while 5 && 6 gives 1 (true).\n\n2. && \"short circuits\". If the first value is zero, it does not evaluate the second value. & has no such rule. This is important in several ways. First, if the second value has any side effects, then with & those side effects always happen, while with && they do not. So \"x & (y++)\" will always increment y, while \"x && (y++)\" will only increment y if x is not zero. This gets more important -- and possibly more subtle -- if the second operand is a function call. Second, the first value may test something that determines that the second value is invalid. Like \"x!=NULL && x->foo==3\". With &, when x is null that could bomb with segment faults or the equivalent. And third, there may be important performance gains. Life, \"x!='A' && readTonsOfStuffFromDatabaseAndCalculateTotal(x)\". With &, the read would happen regardless, and perhaps be a total waste of time.\n\nThat's why we almost always use && for things that really are logical operations, and limit use of & to when we truly want a bit-wise operation. But there are times when you DON'T want the short-circuit to happen, and in that case & may be a good choice. But if you're using it to operate \"logically\", be very careful with operands that can have any values other than 0 or 1. 1 && 2 is true, but 1 & 2 is false.\n\n[http://stackoverflow.com/questions/1537713/what-is-the-second-meaning-of-a-single-ampersand-in-c]",
    "ItemText": null,
    "CreateDate": "2010-03-21T16:24:47.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-21T16:24:47.0000000",
    "DocumentId": "2076072356",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6076",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "jQuery: “jQuery loading remote/external javascript files using getScript()”; Stephen Gray",
    "SortOrdinal": null,
    "ItemChar": "The only issue is that it can take some time to load an external file so you can’t always run functions from within that file straight away. Thankfully there is a workaround for this using another jQuery method. You basically set all AJAX request to be synchronous before you run getScript() and then set AJAX requests to be asynchronous again after the script is loaded. If you end up loading like 20 files at the beginning of a page load this could take a while but hopefully you won’t be doing that :P\n\n$.ajaxSetup({async: false});\n$.getScript(MVCRoot+fileName+'.js');\n$.ajaxSetup({async: true});\n\n[http://colourgray.wordpress.com/2008/09/22/jquery-loading-external-javascript-files-using-getscript/]",
    "ItemText": null,
    "CreateDate": "2010-03-21T16:28:01.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-21T16:28:01.0000000",
    "DocumentId": "2076072357",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6077",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "LINQ: “LINQ To Entities and Lazy Loading”; Include()",
    "SortOrdinal": null,
    "ItemChar": "I've been playing with linq to entities also. It's got a long way to go before it catches up with linq to SQL. I've had to use linq to entities for the Table per Type Inheritance stuff. I found a good article recently which explains the whole 1 company 2 different ORM technologies thing here.\n\nHowever you can do lazy loading, in a way, by doing this:\n\n// Lazy Load Orders \nvar alice2 = data.Customers.First(c => c.Name == \"Alice\");\n\n// Should Load the Orders\nif (!alice2.Orders.IsLoaded)\n    alice2.Orders.Load();\n\nor you could just include the Orders in the original query:\n\n// Include Orders in original query\nvar alice = data.Customers.Include(\"Orders\").First(c => c.Name == \"Alice\");\n\n// Should already be loaded\nif (!alice.Orders.IsLoaded)\n    alice.Orders.Load();\n\n[http://stackoverflow.com/questions/338986/linq-to-entities-and-lazy-loading]",
    "ItemText": null,
    "CreateDate": "2010-03-21T16:30:49.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-21T16:30:49.0000000",
    "DocumentId": "2076072358",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6078",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF: “What is the difference between the ‘Resource’ and ‘Embedded Resource’ build actions?”",
    "SortOrdinal": null,
    "ItemChar": "What is the difference between the “Resource” and “Embedded Resource” build actions?\n\n“Resource” and “Content” build actions are to access the WPF resources using the Uris. However “Embedded Resource” is for prior technologies. However both options embeds the resource in assembly but “Resource” option to be used for WPF.\n\n[http://csharpsimplified.wordpress.com/2009/02/16/resources-in-wpf-i-binary-resources/]",
    "ItemText": null,
    "CreateDate": "2010-03-22T13:32:43.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-22T13:32:43.0000000",
    "DocumentId": "2076072359",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6079",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF: “Setting the Width (and Height) as a Percentage Value”",
    "SortOrdinal": null,
    "ItemChar": "Typically, you'd use a built-in layout control appropriate for your scenario (e.g. use a grid as a parent if you want scaling relative to the parent). If you want to do it with an arbitrary parent element, you can create a ValueConverter do it, but it probably won't be quite as clean as you'd like. However, if you absolutely need it, you could do something like this:\n\npublic class PercentageConverter : IValueConverter\n{\n    public object Convert(object value, \n        Type targetType, \n        object parameter, \n        System.Globalization.CultureInfo culture)\n    {\n        return System.Convert.ToDouble(value) * \n               System.Convert.ToDouble(parameter);\n    }\n\n    public object ConvertBack(object value, \n        Type targetType, \n        object parameter, \n        System.Globalization.CultureInfo culture)\n    {\n        throw new NotImplementedException();\n    }\n}\n\nWhich can be used like this, to get a child textbox 10% of the width of its parent canvas:\n\n<Window x:Class=\"WpfApplication1.Window1\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:local=\"clr-namespace:WpfApplication1\"\n    Title=\"Window1\" Height=\"300\" Width=\"300\">\n    <Window.Resources>\n        <local:PercentageConverter x:Key=\"PercentageConverter\"/>\n    </Window.Resources>\n    <Canvas x:Name=\"canvas\">\n        <TextBlock Text=\"Hello\"\n                   Background=\"Red\" \n                   Width=\"{Binding \n                       Converter={StaticResource PercentageConverter}, \n                       ElementName=canvas, \n                       Path=ActualWidth, \n                       ConverterParameter=0.1}\"/>\n    </Canvas>\n</Window>\n\n[http://stackoverflow.com/questions/717299/wpf-setting-the-width-and-height-as-a-percentage-value]",
    "ItemText": null,
    "CreateDate": "2010-03-22T13:35:14.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-22T13:35:14.0000000",
    "DocumentId": "2076072360",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6080",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF: “Object Lifetime Events”; MSDN",
    "SortOrdinal": null,
    "ItemChar": "All objects in Microsoft .NET Framework managed code go through a similar set of stages of life, creation, use, and destruction. Many objects also have a finalization stage of life that occurs as part of the destruction phase. WPF objects, more specifically the visual objects that WPF identifies as elements, also have a set of common stages of object life. The WPF programming and application models expose these stages as a series of events. There are four main types of objects in WPF with respect to lifetime events; elements in general, window elements, navigation hosts, and application objects. Windows and navigation hosts are also within the larger grouping of visual objects (elements).\n\n…\n\nAny WPF framework-level element (those objects deriving from either FrameworkElement  or FrameworkContentElement) has three common lifetime events: Initialized, Loaded, and Unloaded.\n\n…\n\nBuilding on the common lifetime events for elements are the following application model elements: Application, Window, Page, NavigationWindow, and Frame. These extend the common lifetime events with additional events that are relevant to their specific purpose.\n\n[http://msdn.microsoft.com/en-us/library/ms754221.aspx]",
    "ItemText": null,
    "CreateDate": "2010-03-22T13:41:39.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-22T13:41:39.0000000",
    "DocumentId": "2076072361",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6081",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WCF: “Data Contract Known Types”",
    "SortOrdinal": null,
    "ItemChar": "When data arrives at a receiving endpoint, the WCF runtime attempts to deserialize the data into an instance of a common language runtime (CLR) type. The type that is instantiated for deserialization is chosen by first inspecting the incoming message to determine the data contract to which the contents of the message conform. The deserialization engine then attempts to find a CLR type that implements a data contract compatible with the message contents. The set of candidate types that the deserialization engine allows for during this process is referred to as the deserializer's set of \"known types.\"\n\nOne way to let the deserialization engine know about a type is by using the KnownTypeAttribute. The attribute cannot be applied to individual data members, only to whole data contract types.\n\n…\n\nPrimitive types, as well as certain types treated as primitives (for example, DateTime  and XmlElement) are always \"known\" and never have to be added through this mechanism. However, arrays of primitive types have to be added explicitly. Most collections are considered equivalent to arrays.\n\n[http://msdn.microsoft.com/en-us/library/ms730167.aspx]",
    "ItemText": null,
    "CreateDate": "2010-03-23T10:22:24.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-23T10:22:24.0000000",
    "DocumentId": "2076072362",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6082",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF MVVM: “Rockford Lhotka—Initial thoughts on MVVM”",
    "SortOrdinal": null,
    "ItemChar": "It turns out that there are various ways of thinking about the role of a ViewModel. I think there are two broad approaches worth considering.\nViewModel as Sole Data Source\n\nYou can set up the ViewModel to be the sole data source for the View. In this case the ViewModel exposes all the properties and methods necessary to make the View function. This can work well with an anemic Model, where the Model is composed of a bunch of dumb data container objects (think DataTable, DTO and most entity objects).\n\nWith an anemic data-centric Model it is common to reshape the Model to fit the needs of the View. And since the Model is anemic, something needs to apply any business, validation and authorization rules and it surely won’t be the Model itself.\n\nCreating this type of ViewModel is non-trivial, because the ViewModel must use containment and delegation (a concept familiar to VB6 developers) to literally wrap, reshape and alter/enhance the behavior of the underlying Model. \n\n…\n\nWhat’s really sad about this approach, is that the end result will almost certainly require more code than if you’d just used code-behind. Arguably the result is more testable, but even that is debatable, since the ViewModel now implements all sorts of data binding goo and you’ll need to test that as well.\n\nViewModel as Action Repository\n\nAnother way to think about a ViewModel is to have it be a repository for actions/commands/verbs. Don’t have it reimplement all the properties from the Model, just have it augment the Model.\n\nThis works well if you already have a rich Model, such as one created using CSLA .NET. If the Model is composed of objects that already fully support data binding and have business, validation and authorization rules, it seems silly to reimplement large chunks of that functionality in a ViewModel.\n\nInstead, have the ViewModel expose the Model as a property, alongside any additional methods or properties exposed purely by the ViewModel itself.\n\nAgain, this presupposes the Model is powerful enough to support direct data binding to the View, which is the case with CSLA .NET business objects, but may not be the case with simpler DTO or entity objects (which probably don’t implement IEditableObject, etc).\n\n[http://www.lhotka.net/weblog/InitialThoughtsOnMVVM.aspx]",
    "ItemText": null,
    "CreateDate": "2010-03-24T19:49:37.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-24T19:49:37.0000000",
    "DocumentId": "2076072363",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6083",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF: “VirtualizingStackPanel Class (System.Windows.Controls)”; the IsVirtualizing Property; Performance; MSDN",
    "SortOrdinal": null,
    "ItemChar": "The word \"virtualize\" refers to a technique by which a subset of user interface (UI) elements are generated from a larger number of data items based on which items are visible on-screen. Generating many UI elements when only a few elements might be on the screen can adversely affect the performance of your application. The VirtualizingStackPanel calculates the number of visible items and works with the ItemContainerGenerator from an ItemsControl (such as ListBox or ListView) to create UI elements only for visible items. ...VirtualizingStackPanel is the default items host for the ListBox element. By default, the IsVirtualizing property is set to true.\n\n[http://msdn.microsoft.com/en-us/library/system.windows.controls.virtualizingstackpanel.aspx]",
    "ItemText": null,
    "CreateDate": "2010-03-24T19:55:21.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-24T19:55:21.0000000",
    "DocumentId": "2076072364",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6084",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF: “Introduction to WPF Layout”; wpftutorial.net",
    "SortOrdinal": null,
    "ItemChar": "Best Practices\n\n* Avoid fixed positions - use the Alignment properties in combination with Margin to position elements in a panel.\n\n* Avoid fixed sizes - set the Width and Height of elements to Auto whenever possible.\n\n* Don't abuse the canvas panel to layout elements. Use it only for vector graphics.\n\n* Use a StackPanel to layout buttons of a dialog.\n\n* Use a GridPanel to layout a static data entry form. Create a Auto sized column for the labels and a Star sized column for the TextBoxes.\n\n* Use an ItemControl with a grid panel in a DataTemplate to layout dynamic key value lists. Use the SharedSize feature to synchronize the label widths. \n\n[http://wpftutorial.net/LayoutProperties.html]",
    "ItemText": null,
    "CreateDate": "2010-03-24T19:57:10.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-24T19:57:10.0000000",
    "DocumentId": "2076072365",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6085",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Visual Studio 2008: Flippant Remarks about Test Run Configuration Files",
    "SortOrdinal": null,
    "ItemChar": "You can move *.testrunconfig (and *.vsmdi) files to a new Solution for reuse. Add these as existing items into a folder called “Solution Items,” sadly it must have this name. Do have any relevant Test projects loaded in the Solution before you do this.\n\nYou know you are doing something wrong when you get an error message after adding these files to the Solution.",
    "ItemText": null,
    "CreateDate": "2010-03-24T20:26:16.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-24T20:26:16.0000000",
    "DocumentId": "2076072366",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6086",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF XAML: “Binding to the Current Item in WPF”; Binding to the Current Item in in a Collection; ObservableCollection<T>",
    "SortOrdinal": null,
    "ItemChar": "You may be wondering what the weird '/' is for in the binding. We couldn't just use {Binding} here and specify no Path (the default property in a binding markup extension) as the binding wouldn't 'fallback' as we described above, it would just bind to the collection. No good, we want the current item.\n\nFortunately, there is this forward slash syntax which effectively takes the form <collection>/<current-item-property>.\n\n[http://www.thejoyofcode.com/Binding_to_the_Current_Item_in_WPF.aspx]",
    "ItemText": null,
    "CreateDate": "2010-03-25T10:24:26.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-25T10:24:26.0000000",
    "DocumentId": "2076072367",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6087",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF: “WPF Databinding: How do I access the ‘parent’ data context?”; StackOverflow.com; RelativeSource FindAncestor",
    "SortOrdinal": null,
    "ItemChar": "Binding=\"{Binding RelativeSource={RelativeSource FindAncestor,\nAncestorType={x:Type Window}}, Path=DataContext.AllowItemCommand}\"\n\n[http://stackoverflow.com/questions/1127933/wpf-databinding-how-do-i-access-the-parent-data-context]",
    "ItemText": null,
    "CreateDate": "2010-03-25T10:26:43.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-25T10:26:43.0000000",
    "DocumentId": "2076072368",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6088",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "C# StructureMap: Simple Dependency Injection Sample for WPF",
    "SortOrdinal": null,
    "ItemChar": "In App.OnStartup() have something like this:\n\n    ObjectFactory.Initialize(x =>\n        x\n        .ForRequestedType<ViewModel.IViewModelManager>()\n        .CacheBy(InstanceScope.Singleton)\n        .TheDefault.Is.OfConcreteType<ViewModel.ViewModelManager>()\n    );\n\nUse the requested type like this:\n\n    var manager = ObjectFactory.GetInstance<IViewModelManager>();\n    manager.Register(this);\n\nThis pattern is most quick and most dirty.",
    "ItemText": null,
    "CreateDate": "2010-03-26T09:35:58.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-26T09:35:58.0000000",
    "DocumentId": "2076072369",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6089",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Silverlight 3.0: “Silverlight 3.0 RTW: The CollectionViewSource”",
    "SortOrdinal": null,
    "ItemChar": "The new release of Silverlight 3.0 RTW comes with an implementation of this component that fill this hole but it has the same limitations of my CollectionViewSource. This limitations come from the same reason I cannot implement by myself: the missing grouping support in ItemsControls. However the native component has a some advantages on mine, first of all a very strict compatibility with the architecture of the WPF CollectionViewSource. In this post I will show you how to configure and use the component in a Silverlight application.\n\n[http://silverlightplayground.boschin.it/post/2009/07/10/Silverlight-30-RTW-The-CollectionViewSource.aspx]",
    "ItemText": null,
    "CreateDate": "2010-03-28T18:22:41.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-28T18:22:41.0000000",
    "DocumentId": "2076072370",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6090",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "WPF/Silverlight: “Layout with Absolute and Dynamic Positioning”",
    "SortOrdinal": null,
    "ItemChar": "Whenever possible, it is preferable to use a dynamic layout. Dynamic layouts are the most flexible, and allow the end user the most control over their environment. Dynamic layouts allow your content to adapt to localization and other content changes. Absolute layouts should be reserved for cases when precise and unchanging positioning of elements is important, or when there is only a single child element, such as an image or a graphic.\n\n[http://msdn.microsoft.com/en-us/library/bb514707.aspx]",
    "ItemText": null,
    "CreateDate": "2010-03-28T18:29:17.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-28T18:29:17.0000000",
    "DocumentId": "2076072371",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6091",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Unity C# Code: Static Service Locator Pattern for Unity; Richard Banks; StackOverflow.com",
    "SortOrdinal": null,
    "ItemChar": "using System.Configuration;\nusing Microsoft.Practices.Unity;\nusing Microsoft.Practices.Unity.Configuration;\n\nnamespace Utilities\n{\n    public static class ServiceLocator\n    {\n        private static IUnityContainer container = new UnityContainer();\n        private static bool isConfigured;\n\n        public static void Clear()\n        {\n                container = new UnityContainer();\n        }\n\n        private static IUnityContainer Container\n        {\n                get\n                {\n                        if (!isConfigured)\n                        {\n                                ConfigureContainer();\n                        }\n                        return container;\n                }\n        }\n\n        public static T Resolve<T>()\n        {\n                return Container.Resolve<T>();\n        }\n\n        public static T Resolve<T>(string name)\n        {\n                return Container.Resolve<T>(name);\n        }\n\n        public static void AddInstance<T>(object instance)\n        {\n                Container.RegisterInstance(typeof (T), instance);\n        }\n\n        private static void ConfigureContainer()\n        {\n                        UnityConfigurationSection section = (UnityConfigurationSection) ConfigurationManager.GetSection(\"unity\");\n                        section.Containers.Default.Configure(container);\n                        isConfigured = true;            \n        }\n    }\n}\n\n[http://stackoverflow.com/questions/557657/shoud-i-make-an-iunitycontainer-object-use-a-singleton-pattern]",
    "ItemText": null,
    "CreateDate": "2010-03-29T23:50:54.0000000",
    "EndDate": null,
    "ModificationDate": "2010-03-29T23:50:54.0000000",
    "DocumentId": "2076072372",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6092",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "OData C# Code: An Example of Getting Scalar Data Asynchronously",
    "SortOrdinal": null,
    "ItemChar": "var odataContext = new DataServiceContext(this._odataLink);\nodataContext.BeginExecute<long>(new Uri(\"./CustomerCount\", UriKind.Relative),\n    new AsyncCallback(\n    (result) =>\n    {\n        if(!result.IsCompleted) return;\n        this.ListCustomersCount =\n            odataContext.EndExecute<long>(result).FirstOrDefault();\n        this.ListCustomersQuery(pageNumber);\n    }),\n    null);\n",
    "ItemText": null,
    "CreateDate": "2010-04-30T16:09:24.0000000",
    "EndDate": null,
    "ModificationDate": "2010-04-30T16:09:24.0000000",
    "DocumentId": "2076072373",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6093",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Constraints on Type Parameters (C# Programming Guide)",
    "SortOrdinal": null,
    "ItemChar": "When you define a generic class, you can apply restrictions to the kinds of types that client code can use for type arguments when it instantiates your class. If client code tries to instantiate your class by using a type that is not allowed by a constraint, the result is a compile-time error. These restrictions are called constraints. Constraints are specified by using the where contextual keyword…:\n\nwhere T: struct\nThe type argument must be a value type. Any value type except Nullable can be specified. See Using Nullable Types (C# Programming Guide) for more information.\n\nwhere T : class\nThe type argument must be a reference type; this applies also to any class, interface, delegate, or array type.\n\nwhere T : new()\nThe type argument must have a public parameterless constructor. When used together with other constraints, the new() constraint must be specified last.\n\nwhere T : <base class name>\nThe type argument must be or derive from the specified base class.\n\nwhere T : <interface name>\nThe type argument must be or implement the specified interface. Multiple interface constraints can be specified. The constraining interface can also be generic.\n\nwhere T : U\nThe type argument supplied for T must be or derive from the argument supplied for U. This is called a naked type constraint.\nWhy Use Constraints\n\nIf you want to examine an item in a generic list to determine whether it is valid or to compare it to some other item, the compiler must have some guarantee that the operator or method it has to call will be supported by any type argument that might be specified by client code. This guarantee is obtained by applying one or more constraints to your generic class definition. For example, the base class constraint tells the compiler that only objects of this type or derived from this type will be used as type arguments. Once the compiler has this guarantee, it can allow methods of that type to be called in the generic class. Constraints are applied by using the contextual keyword where. The following code example demonstrates the functionality we can add to the GenericList<T> class (in Introduction to Generics (C# Programming Guide)) by applying a base class constraint.\n\n[http://msdn.microsoft.com/en-us/library/d5x73970.aspx]",
    "ItemText": null,
    "CreateDate": "2010-05-03T18:12:24.0000000",
    "EndDate": null,
    "ModificationDate": "2010-05-03T18:12:24.0000000",
    "DocumentId": "2076072374",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6094",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Silverlight 3.x Plug-In Parameters; Laurent Duveau",
    "SortOrdinal": null,
    "ItemChar": "allowHtmlPopupWindow [Boolean]\n\nSpecifies whether the HtmlPage.PopupWindow  method is allowed. Defaults to true for applications in the same domain, otherwise false.\n\n\nautoUpgrade [Boolean]\n\nSpecifies whether the plug-in should attempt to upgrade if minRuntimeVersion is newer than the current Silverlight version. Default is true.\n\n\nbackground [Color with or without alpha (RGB, ScRGB)]\n\nPlug-in background color. Default is null (white).\n\n\nenableAutoZoom [Boolean]\n\nIndicates whether the host (for certain platforms) can invoke zoom behavior that increases the DPI. Default is true.\n\n\nenableCacheVisualization [Boolean]\n\nIndicates whether to use a non-production analysis visualization mode, which shows areas of a page that are being GPU accelerated with a colored overlay. Default is false. Do not use in production code.\n\n\nenableFramerateCounter [Boolean]\n\nIndicates whether to display the current frame rate in the hosting browser's status bar (IE/Win only).\n\n\nenableGPUAcceleration [Boolean]\n\nIndicates whether to use graphics processor unit (GPU) hardware acceleration for cached compositions, which potentially results in graphics optimization. (false by default)\n\n\nenablehtmlaccess [Boolean]\n\nSpecifies whether the plug-in has full access to the browser DOM. Defaults to true for applications in the same domain, otherwise false.\n\n\nenableNavigation ['all' | 'none']\n\nIndicates whether the hosted content in the Silverlight plug-in can use a HyperlinkButton to navigate to external URIs. Default is all. \t\n\n    all: the hosted content can use HyperlinkButton to navigate to any URI.\n\n    none: the hosted content cannot use HyperlinkButton for navigation to an external URI. Relative URIs for internal navigation are still permitted.\n\n\nenableRedrawRegions [Boolean]\n\nDetermines whether to visually indicate the areas of the plug-in that are being redrawn with each frame. This property is for performance tuning and visualization during development only; do not specify it for any deployed Silverlight-based application. Default is false.\n\n\ninitParams \n\nUser-defined string of parameters. \tComma separated key=value pairs\n\n\nmaxframerate [Integer]\n\nSpecifies the maximum number of frames per second that the plug-in can render. The default is 60.\n\n\nminRuntimeVersion \n\nSpecifies the earliest version of the Silverlight plug-in required. \tVersion number\n\n\nonError [JavaScript function name]\n\nError handler for parse and native code run-time errors.\n\n\nonFullScreenChanged [JavaScript function name]\n\nFunction to call when the FullScreen property changes.\n\n\nonLoad [JavaScript function name]\n\nFunction to call when the plug-in has finished loading in the DOM.\n\n\nonResize [JavaScript function name]\n\nFunction to call when the plug-in size changes.\n\n\nonSourceDownloadComplete [JavaScript function name]\n\nFunction to call when the source download has completed.\n\n\nonSourceDownloadProgressChanged [JavaScript function name]\n\nFunction to call when the source download progress changes.\n\n\nonZoom [JavaScript function name]\n\nSpecifies the handler for a Zoomed event that occurs when the Silverlight plug-in content area receives a host-generated zoom event.\n\n\nsource  [URI]\n\nSpecifies the address or relative path of either an initial XAML file or XAP.\n\n\nsplashScreenSource [URI]\n\nSpecifies a XAML page to use as the splash screen.\n\n\nwindowless [Boolean]\n\nSpecifies the rendering mode for the plug-in for Windows versions of Silverlight. The default is false.\n\n[http://weblogs.asp.net/lduveau/archive/2009/07/22/silverlight-3-object-tag-param-list-aka-where-is-my-asp-silverlight-control.aspx]\n",
    "ItemText": null,
    "CreateDate": "2010-05-04T21:45:14.0000000",
    "EndDate": null,
    "ModificationDate": "2010-05-04T21:45:14.0000000",
    "DocumentId": "2076072375",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6095",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "E.A. Wallis Budge, The Gods of the Egyptians; Chapter VI: “Osiris as Water-God”; pp. 122–123",
    "SortOrdinal": null,
    "ItemChar": "We have no means of finding out what were the earliest conceptions about Osiris, but it seems that he was originally a water spirit, or the god of some arm of the Nile, or portion of the main body of the Nile, and that he developed later into a great water-god; Dr. Brugsch [*Religion,* pp.190, 197] and M. Maspero [Histoire Ancienne, tom. i., p.172] both regarded him as a water-god, and rightly consider that he represented the creative and nutritive powers of the Nile stream in general and of the Inundation in particular.\n\nThe natural opponent of Osiris was Set, who typified death and destruction, and who was the god par excellence of the desert; and in various forms and told in different ways we have the narrative of the contest between the powers of life and death, and light and darkness, and decay and regeneration, which appears in the religious texts of every period.\n",
    "ItemText": null,
    "CreateDate": "2010-05-08T20:32:36.0000000",
    "EndDate": null,
    "ModificationDate": "2010-05-08T20:32:36.0000000",
    "DocumentId": "2076072376",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6096",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Programming Microsoft Dynamics® CRM 4.0; Chapter 3: Communicating with Microsoft CRM APIs; .NET Framework 3.0 Support; p. 52",
    "SortOrdinal": null,
    "ItemChar": "Microsoft built Microsoft Dynamics CRM 4.0 against the Microsoft .NET Framework 3.0. Consequently, most developers will build their solutions with Visual Studio 2008 targeted at the .NET Framework 3.0. Technically, you could also build against the .NET Framework 3.5, but then you will need to make sure that the .NET 3.5 Framework is installed on the destination server. Note that the ASP.NET version configured in Internet Information Services (IIS) will probably be 2.0.50727, but this is the run-time version of .NET. The run-time versions of the .NET Framework 3.0 and 3.5 are identical to those of the .NET Framework 2.0, so any code developed with those versions of the .NET framework will run properly on the 2.0.50727 run-time engine.\n",
    "ItemText": null,
    "CreateDate": "2010-05-26T13:40:53.0000000",
    "EndDate": null,
    "ModificationDate": "2010-05-26T13:40:53.0000000",
    "DocumentId": "2076072377",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  },
  {
    "FragmentId": "6097",
    "FragmentName": "TheFunkyKnowledgebase",
    "FragmentDisplayName": "Programming Microsoft Dynamics® CRM 4.0; Chapter 3: Communicating with Microsoft CRM APIs; “CrmService Web Service”; GetCrmService(); p. 54",
    "SortOrdinal": null,
    "ItemChar": "The Web service is the core API mechanism for programmatically interacting with all entities in Microsoft Dynamics CRM. This service contains six common methods that work on all entities, and an Execute method that is available for all other needs. The service is strongly typed and WSDL compliant, and it can be updated with any changes to the schema directly through Visual Studio 2008.\n\n…\n\nThe CrmService Web service is located at http://<crmserver>/mscrmservices/2007/crmservice.asmx, where <crmserver> is the Microsoft Dynamics CRM Web server.\n\n…\n\npublic static CrmService GetCrmService(string orgName, string server)\n{\n     // Standard CRM Service Setup\n     CrmAuthenticationToken token = new CrmAuthenticationToken();\n     token.AuthenticationType = 0; //AD (On-premise)\n     token.OrganizationName = orgName;\n     CrmService service = new CrmService();\n     service.Credentials = System.Net.CredentialCache.DefaultCredentials;\n     // If you know you are using the default credentials,\n     // you can replace the service.Crendentials line with the following line\n     // service.UseDefaultCredentials = true;\n     service.CrmAuthenticationTokenValue = token;\n     service.Url = string.Format(\"http://{0}/mscrmservices/2007/crmservice.asmx\",server);\n     return service;\n}\n\n",
    "ItemText": null,
    "CreateDate": "2010-05-26T14:23:58.0000000",
    "EndDate": null,
    "ModificationDate": "2010-05-26T14:23:58.0000000",
    "DocumentId": "2076072378",
    "PrevFragmentId": null,
    "NextFragmentId": null,
    "IsPrevious": null,
    "IsNext": null,
    "IsWrapper": null,
    "ClientId": null,
    "IsActive": "True"
  }
]